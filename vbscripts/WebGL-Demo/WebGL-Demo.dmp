0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 09                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7c                                        ; f64
000000e: 7c                                        ; f64
000000f: 01                                        ; num results
0000010: 7c                                        ; f64
; type 1
0000011: 60                                        ; func
0000012: 01                                        ; num params
0000013: 7c                                        ; f64
0000014: 01                                        ; num results
0000015: 7c                                        ; f64
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 00                                        ; num results
; type 4
000001f: 60                                        ; func
0000020: 02                                        ; num params
0000021: 7f                                        ; i32
0000022: 7f                                        ; i32
0000023: 01                                        ; num results
0000024: 7f                                        ; i32
; type 5
0000025: 60                                        ; func
0000026: 00                                        ; num params
0000027: 01                                        ; num results
0000028: 7f                                        ; i32
; type 6
0000029: 60                                        ; func
000002a: 02                                        ; num params
000002b: 7d                                        ; f32
000002c: 7d                                        ; f32
000002d: 00                                        ; num results
; type 7
000002e: 60                                        ; func
000002f: 00                                        ; num params
0000030: 00                                        ; num results
; type 8
0000031: 60                                        ; func
0000032: 06                                        ; num params
0000033: 7d                                        ; f32
0000034: 7d                                        ; f32
0000035: 7d                                        ; f32
0000036: 7d                                        ; f32
0000037: 7d                                        ; f32
0000038: 7d                                        ; f32
0000039: 01                                        ; num results
000003a: 7f                                        ; i32
0000009: 31                                        ; FIXUP section size
; section "Import" (2)
000003b: 02                                        ; section code
000003c: 00                                        ; section size (guess)
000003d: 09                                        ; num imports
; import header 0
000003e: 04                                        ; string length
000003f: 4d61 7468                                Math  ; import module name
0000043: 03                                        ; string length
0000044: 706f 77                                  pow  ; import field name
0000047: 00                                        ; import kind
0000048: 00                                        ; import signature index
; import header 1
0000049: 04                                        ; string length
000004a: 4d61 7468                                Math  ; import module name
000004e: 04                                        ; string length
000004f: 7371 7274                                sqrt  ; import field name
0000053: 00                                        ; import kind
0000054: 01                                        ; import signature index
; import header 2
0000055: 04                                        ; string length
0000056: 4d61 7468                                Math  ; import module name
000005a: 03                                        ; string length
000005b: 6578 70                                  exp  ; import field name
000005e: 00                                        ; import kind
000005f: 01                                        ; import signature index
; import header 3
0000060: 04                                        ; string length
0000061: 4d61 7468                                Math  ; import module name
0000065: 03                                        ; string length
0000066: 636f 73                                  cos  ; import field name
0000069: 00                                        ; import kind
000006a: 01                                        ; import signature index
; import header 4
000006b: 04                                        ; string length
000006c: 4d61 7468                                Math  ; import module name
0000070: 06                                        ; string length
0000071: 7261 6e64 6f6d                           random  ; import field name
0000077: 00                                        ; import kind
0000078: 02                                        ; import signature index
; import header 5
0000079: 04                                        ; string length
000007a: 4d61 7468                                Math  ; import module name
000007e: 04                                        ; string length
000007f: 6365 696c                                ceil  ; import field name
0000083: 00                                        ; import kind
0000084: 01                                        ; import signature index
; import header 6
0000085: 04                                        ; string length
0000086: 4d61 7468                                Math  ; import module name
000008a: 05                                        ; string length
000008b: 666c 6f6f 72                             floor  ; import field name
0000090: 00                                        ; import kind
0000091: 01                                        ; import signature index
; import header 7
0000092: 02                                        ; string length
0000093: 4743                                     GC  ; import module name
0000095: 09                                        ; string length
0000096: 6164 644f 626a 6563 74                   addObject  ; import field name
000009f: 00                                        ; import kind
00000a0: 03                                        ; import signature index
; import header 8
00000a1: 03                                        ; string length
00000a2: 656e 76                                  env  ; import module name
00000a5: 0a                                        ; string length
00000a6: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000b0: 02                                        ; import kind
00000b1: 00                                        ; limits: flags
00000b2: 01                                        ; limits: initial
000003c: 76                                        ; FIXUP section size
; section "Function" (3)
00000b3: 03                                        ; section code
00000b4: 00                                        ; section size (guess)
00000b5: 17                                        ; num functions
00000b6: 04                                        ; function 0 signature index
00000b7: 05                                        ; function 1 signature index
00000b8: 05                                        ; function 2 signature index
00000b9: 06                                        ; function 3 signature index
00000ba: 07                                        ; function 4 signature index
00000bb: 06                                        ; function 5 signature index
00000bc: 07                                        ; function 6 signature index
00000bd: 06                                        ; function 7 signature index
00000be: 08                                        ; function 8 signature index
00000bf: 05                                        ; function 9 signature index
00000c0: 05                                        ; function 10 signature index
00000c1: 05                                        ; function 11 signature index
00000c2: 05                                        ; function 12 signature index
00000c3: 05                                        ; function 13 signature index
00000c4: 05                                        ; function 14 signature index
00000c5: 05                                        ; function 15 signature index
00000c6: 05                                        ; function 16 signature index
00000c7: 05                                        ; function 17 signature index
00000c8: 07                                        ; function 18 signature index
00000c9: 07                                        ; function 19 signature index
00000ca: 07                                        ; function 20 signature index
00000cb: 07                                        ; function 21 signature index
00000cc: 07                                        ; function 22 signature index
00000b4: 18                                        ; FIXUP section size
; section "Global" (6)
00000cd: 06                                        ; section code
00000ce: 00                                        ; section size (guess)
00000cf: 12                                        ; num globals
00000d0: 7f                                        ; i32
00000d1: 01                                        ; global mutability
00000d2: 41                                        ; i32.const
00000d3: b409                                      ; i32 literal
00000d5: 0b                                        ; end
00000d6: 7c                                        ; f64
00000d7: 01                                        ; global mutability
00000d8: 44                                        ; f64.const
00000d9: 6957 148b 0abf 0540                       ; f64 literal
00000e1: 0b                                        ; end
00000e2: 7c                                        ; f64
00000e3: 01                                        ; global mutability
00000e4: 44                                        ; f64.const
00000e5: 182d 4454 fb21 0940                       ; f64 literal
00000ed: 0b                                        ; end
00000ee: 7f                                        ; i32
00000ef: 01                                        ; global mutability
00000f0: 41                                        ; i32.const
00000f1: ffff ffff 07                              ; i32 literal
00000f6: 0b                                        ; end
00000f7: 7e                                        ; i64
00000f8: 01                                        ; global mutability
00000f9: 42                                        ; i64.const
00000fa: ffff ffff ffff ffff ff00                  ; i64 literal
0000104: 0b                                        ; end
0000105: 7d                                        ; f32
0000106: 01                                        ; global mutability
0000107: 43                                        ; f32.const
0000108: ffff 7f7f                                 ; f32 literal
000010c: 0b                                        ; end
000010d: 7c                                        ; f64
000010e: 01                                        ; global mutability
000010f: 44                                        ; f64.const
0000110: ffff ffff ffff ef7f                       ; f64 literal
0000118: 0b                                        ; end
0000119: 7f                                        ; i32
000011a: 01                                        ; global mutability
000011b: 41                                        ; i32.const
000011c: 8080 8080 78                              ; i32 literal
0000121: 0b                                        ; end
0000122: 7e                                        ; i64
0000123: 01                                        ; global mutability
0000124: 42                                        ; i64.const
0000125: 8080 8080 8080 8080 807f                  ; i64 literal
000012f: 0b                                        ; end
0000130: 7d                                        ; f32
0000131: 01                                        ; global mutability
0000132: 43                                        ; f32.const
0000133: ffff 7fff                                 ; f32 literal
0000137: 0b                                        ; end
0000138: 7c                                        ; f64
0000139: 01                                        ; global mutability
000013a: 44                                        ; f64.const
000013b: ffff ffff ffff efff                       ; f64 literal
0000143: 0b                                        ; end
0000144: 7f                                        ; i32
0000145: 01                                        ; global mutability
0000146: 41                                        ; i32.const
0000147: f800                                      ; i32 literal
0000149: 0b                                        ; end
000014a: 7f                                        ; i32
000014b: 01                                        ; global mutability
000014c: 41                                        ; i32.const
000014d: c600                                      ; i32 literal
000014f: 0b                                        ; end
0000150: 7f                                        ; i32
0000151: 01                                        ; global mutability
0000152: 41                                        ; i32.const
0000153: 90ce 00                                   ; i32 literal
0000156: 0b                                        ; end
0000157: 7f                                        ; i32
0000158: 01                                        ; global mutability
0000159: 41                                        ; i32.const
000015a: 00                                        ; i32 literal
000015b: 0b                                        ; end
000015c: 7f                                        ; i32
000015d: 01                                        ; global mutability
000015e: 41                                        ; i32.const
000015f: 00                                        ; i32 literal
0000160: 0b                                        ; end
0000161: 7f                                        ; i32
0000162: 01                                        ; global mutability
0000163: 41                                        ; i32.const
0000164: 00                                        ; i32 literal
0000165: 0b                                        ; end
0000166: 7f                                        ; i32
0000167: 01                                        ; global mutability
0000168: 41                                        ; i32.const
0000169: 00                                        ; i32 literal
000016a: 0b                                        ; end
; move data: [cf, 16b) -> [d0, 16c)
00000ce: 9c01                                      ; FIXUP section size
; section "Export" (7)
000016c: 07                                        ; section code
000016d: 00                                        ; section size (guess)
000016e: 0e                                        ; num exports
000016f: 18                                        ; string length
0000170: 416c 676f 7269 7468 6d2e 6765 7443 6972  Algorithm.getCir
0000180: 636c 6543 6f75 6e74                      cleCount  ; export name
0000188: 00                                        ; export kind
0000189: 09                                        ; export func index
000018a: 1d                                        ; string length
000018b: 416c 676f 7269 7468 6d2e 6765 7443 6972  Algorithm.getCir
000019b: 636c 6544 6174 614f 6666 7365 74         cleDataOffset  ; export name
00001a8: 00                                        ; export kind
00001a9: 0a                                        ; export func index
00001aa: 0e                                        ; string length
00001ab: 416c 676f 7269 7468 6d2e 696e 6974       Algorithm.init  ; export name
00001b9: 00                                        ; export kind
00001ba: 0b                                        ; export func index
00001bb: 12                                        ; string length
00001bc: 416c 676f 7269 7468 6d2e 7469 6d65 5374  Algorithm.timeSt
00001cc: 6570                                     ep  ; export name
00001ce: 00                                        ; export kind
00001cf: 0f                                        ; export func index
00001d0: 1a                                        ; string length
00001d1: 4d61 7468 2e64 6574 6563 7443 6972 636c  Math.detectCircl
00001e1: 6543 6f6c 6c69 7369 6f6e                 eCollision  ; export name
00001eb: 00                                        ; export kind
00001ec: 10                                        ; export func index
00001ed: 1a                                        ; string length
00001ee: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00001fe: 656d 626c 7954 6974 6c65                 emblyTitle  ; export name
0000208: 00                                        ; export kind
0000209: 11                                        ; export func index
000020a: 20                                        ; string length
000020b: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000021b: 656d 626c 7944 6573 6372 6970 7469 6f6e  emblyDescription  ; export name
000022b: 00                                        ; export kind
000022c: 12                                        ; export func index
000022d: 1c                                        ; string length
000022e: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000023e: 656d 626c 7943 6f6d 7061 6e79            emblyCompany  ; export name
000024a: 00                                        ; export kind
000024b: 13                                        ; export func index
000024c: 1c                                        ; string length
000024d: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000025d: 656d 626c 7950 726f 6475 6374            emblyProduct  ; export name
0000269: 00                                        ; export kind
000026a: 14                                        ; export func index
000026b: 1e                                        ; string length
000026c: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000027c: 656d 626c 7943 6f70 7972 6967 6874       emblyCopyright  ; export name
000028a: 00                                        ; export kind
000028b: 15                                        ; export func index
000028c: 1e                                        ; string length
000028d: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000029d: 656d 626c 7954 7261 6465 6d61 726b       emblyTrademark  ; export name
00002ab: 00                                        ; export kind
00002ac: 16                                        ; export func index
00002ad: 11                                        ; string length
00002ae: 4173 7365 6d62 6c79 496e 666f 2e47 7569  AssemblyInfo.Gui
00002be: 64                                       d  ; export name
00002bf: 00                                        ; export kind
00002c0: 17                                        ; export func index
00002c1: 1c                                        ; string length
00002c2: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002d2: 656d 626c 7956 6572 7369 6f6e            emblyVersion  ; export name
00002de: 00                                        ; export kind
00002df: 18                                        ; export func index
00002e0: 20                                        ; string length
00002e1: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002f1: 656d 626c 7946 696c 6556 6572 7369 6f6e  emblyFileVersion  ; export name
0000301: 00                                        ; export kind
0000302: 19                                        ; export func index
; move data: [16e, 303) -> [16f, 304)
000016d: 9503                                      ; FIXUP section size
; section "Start" (8)
0000304: 08                                        ; section code
0000305: 00                                        ; section size (guess)
0000306: 1a                                        ; start func index
0000305: 01                                        ; FIXUP section size
; section "Code" (10)
0000307: 0a                                        ; section code
0000308: 00                                        ; section size (guess)
0000309: 17                                        ; num functions
; function body 0
000030a: 00                                        ; func body size (guess)
000030b: 01                                        ; local decl count
000030c: 01                                        ; local type count
000030d: 7f                                        ; i32
000030e: 23                                        ; global.get
000030f: 00                                        ; global index
0000310: 21                                        ; local.set
0000311: 02                                        ; local index
0000312: 20                                        ; local.get
0000313: 02                                        ; local index
0000314: 20                                        ; local.get
0000315: 00                                        ; local index
0000316: 6a                                        ; i32.add
0000317: 24                                        ; global.set
0000318: 00                                        ; global index
0000319: 20                                        ; local.get
000031a: 02                                        ; local index
000031b: 20                                        ; local.get
000031c: 01                                        ; local index
000031d: 10                                        ; call
000031e: 07                                        ; function index
000031f: 20                                        ; local.get
0000320: 02                                        ; local index
0000321: 0f                                        ; return
0000322: 0b                                        ; end
000030a: 18                                        ; FIXUP func body size
; function body 1
0000323: 00                                        ; func body size (guess)
0000324: 01                                        ; local decl count
0000325: 04                                        ; local type count
0000326: 7f                                        ; i32
0000327: 23                                        ; global.get
0000328: 0d                                        ; global index
0000329: 0f                                        ; return
000032a: 0b                                        ; end
0000323: 07                                        ; FIXUP func body size
; function body 2
000032b: 00                                        ; func body size (guess)
000032c: 00                                        ; local decl count
000032d: 23                                        ; global.get
000032e: 0e                                        ; global index
000032f: 0f                                        ; return
0000330: 0b                                        ; end
000032b: 05                                        ; FIXUP func body size
; function body 3
0000331: 00                                        ; func body size (guess)
0000332: 03                                        ; local decl count
0000333: 02                                        ; local type count
0000334: 7f                                        ; i32
0000335: 03                                        ; local type count
0000336: 7d                                        ; f32
0000337: 01                                        ; local type count
0000338: 7f                                        ; i32
0000339: 41                                        ; i32.const
000033a: 00                                        ; i32 literal
000033b: 21                                        ; local.set
000033c: 02                                        ; local index
000033d: 02                                        ; block
000033e: 40                                        ; void
000033f: 03                                        ; loop
0000340: 40                                        ; void
0000341: 20                                        ; local.get
0000342: 02                                        ; local index
0000343: 23                                        ; global.get
0000344: 0d                                        ; global index
0000345: 41                                        ; i32.const
0000346: 01                                        ; i32 literal
0000347: 6b                                        ; i32.sub
0000348: 4a                                        ; i32.gt_s
0000349: 0d                                        ; br_if
000034a: 01                                        ; break depth
000034b: 41                                        ; i32.const
000034c: 00                                        ; i32 literal
000034d: 21                                        ; local.set
000034e: 03                                        ; local index
000034f: 43                                        ; f32.const
0000350: 0000 0000                                 ; f32 literal
0000354: 21                                        ; local.set
0000355: 04                                        ; local index
0000356: 43                                        ; f32.const
0000357: 0000 0000                                 ; f32 literal
000035b: 21                                        ; local.set
000035c: 05                                        ; local index
000035d: 43                                        ; f32.const
000035e: 0000 0000                                 ; f32 literal
0000362: 21                                        ; local.set
0000363: 06                                        ; local index
0000364: 02                                        ; block
0000365: 40                                        ; void
0000366: 03                                        ; loop
0000367: 40                                        ; void
0000368: 41                                        ; i32.const
0000369: 00                                        ; i32 literal
000036a: 21                                        ; local.set
000036b: 03                                        ; local index
000036c: 20                                        ; local.get
000036d: 00                                        ; local index
000036e: bb                                        ; f64.promote_f32
000036f: 10                                        ; call
0000370: 04                                        ; function index
0000371: a2                                        ; f64.mul
0000372: b6                                        ; f32.demote_f64
0000373: 21                                        ; local.set
0000374: 04                                        ; local index
0000375: 20                                        ; local.get
0000376: 01                                        ; local index
0000377: bb                                        ; f64.promote_f32
0000378: 10                                        ; call
0000379: 04                                        ; function index
000037a: a2                                        ; f64.mul
000037b: b6                                        ; f32.demote_f64
000037c: 21                                        ; local.set
000037d: 05                                        ; local index
000037e: 10                                        ; call
000037f: 04                                        ; function index
0000380: 41                                        ; i32.const
0000381: 08                                        ; i32 literal
0000382: b7                                        ; f64.convert_i32_s
0000383: a2                                        ; f64.mul
0000384: 10                                        ; call
0000385: 02                                        ; function index
0000386: 44                                        ; f64.const
0000387: ee5a 423e e849 3740                       ; f64 literal
000038f: a3                                        ; f64.div
0000390: 10                                        ; call
0000391: 05                                        ; function index
0000392: b6                                        ; f32.demote_f64
0000393: 21                                        ; local.set
0000394: 06                                        ; local index
0000395: 20                                        ; local.get
0000396: 00                                        ; local index
0000397: 20                                        ; local.get
0000398: 04                                        ; local index
0000399: 20                                        ; local.get
000039a: 06                                        ; local index
000039b: 92                                        ; f32.add
000039c: 93                                        ; f32.sub
000039d: 41                                        ; i32.const
000039e: 00                                        ; i32 literal
000039f: b2                                        ; f32.convert_i32_s
00003a0: 5d                                        ; f32.lt
00003a1: 20                                        ; local.get
00003a2: 04                                        ; local index
00003a3: 20                                        ; local.get
00003a4: 06                                        ; local index
00003a5: 93                                        ; f32.sub
00003a6: 41                                        ; i32.const
00003a7: 00                                        ; i32 literal
00003a8: b2                                        ; f32.convert_i32_s
00003a9: 5d                                        ; f32.lt
00003aa: 6a                                        ; i32.add
00003ab: 20                                        ; local.get
00003ac: 01                                        ; local index
00003ad: 20                                        ; local.get
00003ae: 05                                        ; local index
00003af: 20                                        ; local.get
00003b0: 06                                        ; local index
00003b1: 92                                        ; f32.add
00003b2: 93                                        ; f32.sub
00003b3: 41                                        ; i32.const
00003b4: 00                                        ; i32 literal
00003b5: b2                                        ; f32.convert_i32_s
00003b6: 5d                                        ; f32.lt
00003b7: 6a                                        ; i32.add
00003b8: 20                                        ; local.get
00003b9: 05                                        ; local index
00003ba: 20                                        ; local.get
00003bb: 06                                        ; local index
00003bc: 93                                        ; f32.sub
00003bd: 41                                        ; i32.const
00003be: 00                                        ; i32 literal
00003bf: b2                                        ; f32.convert_i32_s
00003c0: 5d                                        ; f32.lt
00003c1: 6a                                        ; i32.add
00003c2: 04                                        ; if
00003c3: 40                                        ; void
00003c4: 41                                        ; i32.const
00003c5: 01                                        ; i32 literal
00003c6: 21                                        ; local.set
00003c7: 03                                        ; local index
00003c8: 05                                        ; else
00003c9: 41                                        ; i32.const
00003ca: 00                                        ; i32 literal
00003cb: 21                                        ; local.set
00003cc: 07                                        ; local index
00003cd: 02                                        ; block
00003ce: 40                                        ; void
00003cf: 03                                        ; loop
00003d0: 40                                        ; void
00003d1: 20                                        ; local.get
00003d2: 07                                        ; local index
00003d3: 20                                        ; local.get
00003d4: 02                                        ; local index
00003d5: 41                                        ; i32.const
00003d6: 01                                        ; i32 literal
00003d7: 6b                                        ; i32.sub
00003d8: 4a                                        ; i32.gt_s
00003d9: 0d                                        ; br_if
00003da: 01                                        ; break depth
00003db: 20                                        ; local.get
00003dc: 04                                        ; local index
00003dd: 20                                        ; local.get
00003de: 05                                        ; local index
00003df: 20                                        ; local.get
00003e0: 06                                        ; local index
00003e1: 23                                        ; global.get
00003e2: 0e                                        ; global index
00003e3: 41                                        ; i32.const
00003e4: 08                                        ; i32 literal
00003e5: 6a                                        ; i32.add
00003e6: 20                                        ; local.get
00003e7: 07                                        ; local index
00003e8: 41                                        ; i32.const
00003e9: 04                                        ; i32 literal
00003ea: 6c                                        ; i32.mul
00003eb: 6a                                        ; i32.add
00003ec: 28                                        ; i32.load
00003ed: 02                                        ; alignment
00003ee: 00                                        ; load offset
00003ef: 41                                        ; i32.const
00003f0: 00                                        ; i32 literal
00003f1: 6a                                        ; i32.add
00003f2: 2a                                        ; f32.load
00003f3: 02                                        ; alignment
00003f4: 00                                        ; load offset
00003f5: 23                                        ; global.get
00003f6: 0e                                        ; global index
00003f7: 41                                        ; i32.const
00003f8: 08                                        ; i32 literal
00003f9: 6a                                        ; i32.add
00003fa: 20                                        ; local.get
00003fb: 07                                        ; local index
00003fc: 41                                        ; i32.const
00003fd: 04                                        ; i32 literal
00003fe: 6c                                        ; i32.mul
00003ff: 6a                                        ; i32.add
0000400: 28                                        ; i32.load
0000401: 02                                        ; alignment
0000402: 00                                        ; load offset
0000403: 41                                        ; i32.const
0000404: 04                                        ; i32 literal
0000405: 6a                                        ; i32.add
0000406: 2a                                        ; f32.load
0000407: 02                                        ; alignment
0000408: 00                                        ; load offset
0000409: 23                                        ; global.get
000040a: 0e                                        ; global index
000040b: 41                                        ; i32.const
000040c: 08                                        ; i32 literal
000040d: 6a                                        ; i32.add
000040e: 20                                        ; local.get
000040f: 07                                        ; local index
0000410: 41                                        ; i32.const
0000411: 04                                        ; i32 literal
0000412: 6c                                        ; i32.mul
0000413: 6a                                        ; i32.add
0000414: 28                                        ; i32.load
0000415: 02                                        ; alignment
0000416: 00                                        ; load offset
0000417: 41                                        ; i32.const
0000418: 08                                        ; i32 literal
0000419: 6a                                        ; i32.add
000041a: 2a                                        ; f32.load
000041b: 02                                        ; alignment
000041c: 00                                        ; load offset
000041d: 10                                        ; call
000041e: 10                                        ; function index
000041f: 04                                        ; if
0000420: 40                                        ; void
0000421: 41                                        ; i32.const
0000422: 01                                        ; i32 literal
0000423: 21                                        ; local.set
0000424: 03                                        ; local index
0000425: 41                                        ; i32.const
0000426: 01                                        ; i32 literal
0000427: 0d                                        ; br_if
0000428: 05                                        ; break depth
0000429: 0b                                        ; end
000042a: 20                                        ; local.get
000042b: 07                                        ; local index
000042c: 41                                        ; i32.const
000042d: 01                                        ; i32 literal
000042e: 6a                                        ; i32.add
000042f: 21                                        ; local.set
0000430: 07                                        ; local index
0000431: 0c                                        ; br
0000432: 00                                        ; break depth
0000433: 0b                                        ; end
0000434: 0b                                        ; end
0000435: 0b                                        ; end
0000436: 20                                        ; local.get
0000437: 03                                        ; local index
0000438: 45                                        ; i32.eqz
0000439: 0d                                        ; br_if
000043a: 01                                        ; break depth
000043b: 0c                                        ; br
000043c: 00                                        ; break depth
000043d: 0b                                        ; end
000043e: 0b                                        ; end
000043f: 23                                        ; global.get
0000440: 0e                                        ; global index
0000441: 41                                        ; i32.const
0000442: 08                                        ; i32 literal
0000443: 6a                                        ; i32.add
0000444: 20                                        ; local.get
0000445: 02                                        ; local index
0000446: 41                                        ; i32.const
0000447: 04                                        ; i32 literal
0000448: 6c                                        ; i32.mul
0000449: 6a                                        ; i32.add
000044a: 28                                        ; i32.load
000044b: 02                                        ; alignment
000044c: 00                                        ; load offset
000044d: 41                                        ; i32.const
000044e: 00                                        ; i32 literal
000044f: 6a                                        ; i32.add
0000450: 20                                        ; local.get
0000451: 04                                        ; local index
0000452: 38                                        ; f32.store
0000453: 02                                        ; alignment
0000454: 00                                        ; store offset
0000455: 23                                        ; global.get
0000456: 0e                                        ; global index
0000457: 41                                        ; i32.const
0000458: 08                                        ; i32 literal
0000459: 6a                                        ; i32.add
000045a: 20                                        ; local.get
000045b: 02                                        ; local index
000045c: 41                                        ; i32.const
000045d: 04                                        ; i32 literal
000045e: 6c                                        ; i32.mul
000045f: 6a                                        ; i32.add
0000460: 28                                        ; i32.load
0000461: 02                                        ; alignment
0000462: 00                                        ; load offset
0000463: 41                                        ; i32.const
0000464: 04                                        ; i32 literal
0000465: 6a                                        ; i32.add
0000466: 20                                        ; local.get
0000467: 05                                        ; local index
0000468: 38                                        ; f32.store
0000469: 02                                        ; alignment
000046a: 00                                        ; store offset
000046b: 23                                        ; global.get
000046c: 0e                                        ; global index
000046d: 41                                        ; i32.const
000046e: 08                                        ; i32 literal
000046f: 6a                                        ; i32.add
0000470: 20                                        ; local.get
0000471: 02                                        ; local index
0000472: 41                                        ; i32.const
0000473: 04                                        ; i32 literal
0000474: 6c                                        ; i32.mul
0000475: 6a                                        ; i32.add
0000476: 28                                        ; i32.load
0000477: 02                                        ; alignment
0000478: 00                                        ; load offset
0000479: 41                                        ; i32.const
000047a: 08                                        ; i32 literal
000047b: 6a                                        ; i32.add
000047c: 20                                        ; local.get
000047d: 06                                        ; local index
000047e: 38                                        ; f32.store
000047f: 02                                        ; alignment
0000480: 00                                        ; store offset
0000481: 23                                        ; global.get
0000482: 0f                                        ; global index
0000483: 41                                        ; i32.const
0000484: 08                                        ; i32 literal
0000485: 6a                                        ; i32.add
0000486: 20                                        ; local.get
0000487: 02                                        ; local index
0000488: 41                                        ; i32.const
0000489: 04                                        ; i32 literal
000048a: 6c                                        ; i32.mul
000048b: 6a                                        ; i32.add
000048c: 28                                        ; i32.load
000048d: 02                                        ; alignment
000048e: 00                                        ; load offset
000048f: 41                                        ; i32.const
0000490: 04                                        ; i32 literal
0000491: 6a                                        ; i32.add
0000492: 10                                        ; call
0000493: 04                                        ; function index
0000494: 44                                        ; f64.const
0000495: 0000 0000 0000 e03f                       ; f64 literal
000049d: a1                                        ; f64.sub
000049e: 44                                        ; f64.const
000049f: 9a99 9999 9999 b93f                       ; f64 literal
00004a7: a2                                        ; f64.mul
00004a8: b6                                        ; f32.demote_f64
00004a9: 38                                        ; f32.store
00004aa: 02                                        ; alignment
00004ab: 00                                        ; store offset
00004ac: 23                                        ; global.get
00004ad: 0f                                        ; global index
00004ae: 41                                        ; i32.const
00004af: 08                                        ; i32 literal
00004b0: 6a                                        ; i32.add
00004b1: 20                                        ; local.get
00004b2: 02                                        ; local index
00004b3: 41                                        ; i32.const
00004b4: 04                                        ; i32 literal
00004b5: 6c                                        ; i32.mul
00004b6: 6a                                        ; i32.add
00004b7: 28                                        ; i32.load
00004b8: 02                                        ; alignment
00004b9: 00                                        ; load offset
00004ba: 41                                        ; i32.const
00004bb: 00                                        ; i32 literal
00004bc: 6a                                        ; i32.add
00004bd: 10                                        ; call
00004be: 04                                        ; function index
00004bf: 44                                        ; f64.const
00004c0: 0000 0000 0000 e03f                       ; f64 literal
00004c8: a1                                        ; f64.sub
00004c9: 44                                        ; f64.const
00004ca: 9a99 9999 9999 b93f                       ; f64 literal
00004d2: a2                                        ; f64.mul
00004d3: b6                                        ; f32.demote_f64
00004d4: 38                                        ; f32.store
00004d5: 02                                        ; alignment
00004d6: 00                                        ; store offset
00004d7: 20                                        ; local.get
00004d8: 02                                        ; local index
00004d9: 41                                        ; i32.const
00004da: 01                                        ; i32 literal
00004db: 6a                                        ; i32.add
00004dc: 21                                        ; local.set
00004dd: 02                                        ; local index
00004de: 0c                                        ; br
00004df: 00                                        ; break depth
00004e0: 0b                                        ; end
00004e1: 0b                                        ; end
00004e2: 0b                                        ; end
; move data: [332, 4e3) -> [333, 4e4)
0000331: b103                                      ; FIXUP func body size
; function body 4
00004e4: 00                                        ; func body size (guess)
00004e5: 01                                        ; local decl count
00004e6: 03                                        ; local type count
00004e7: 7f                                        ; i32
00004e8: 41                                        ; i32.const
00004e9: 00                                        ; i32 literal
00004ea: 21                                        ; local.set
00004eb: 00                                        ; local index
00004ec: 02                                        ; block
00004ed: 40                                        ; void
00004ee: 03                                        ; loop
00004ef: 40                                        ; void
00004f0: 20                                        ; local.get
00004f1: 00                                        ; local index
00004f2: 23                                        ; global.get
00004f3: 0c                                        ; global index
00004f4: 41                                        ; i32.const
00004f5: 01                                        ; i32 literal
00004f6: 6b                                        ; i32.sub
00004f7: 4a                                        ; i32.gt_s
00004f8: 0d                                        ; br_if
00004f9: 01                                        ; break depth
00004fa: 23                                        ; global.get
00004fb: 11                                        ; global index
00004fc: 41                                        ; i32.const
00004fd: 08                                        ; i32 literal
00004fe: 6a                                        ; i32.add
00004ff: 20                                        ; local.get
0000500: 00                                        ; local index
0000501: 41                                        ; i32.const
0000502: 04                                        ; i32 literal
0000503: 6c                                        ; i32.mul
0000504: 6a                                        ; i32.add
0000505: 28                                        ; i32.load
0000506: 02                                        ; alignment
0000507: 00                                        ; load offset
0000508: 21                                        ; local.set
0000509: 01                                        ; local index
000050a: 41                                        ; i32.const
000050b: 00                                        ; i32 literal
000050c: 21                                        ; local.set
000050d: 02                                        ; local index
000050e: 02                                        ; block
000050f: 40                                        ; void
0000510: 03                                        ; loop
0000511: 40                                        ; void
0000512: 20                                        ; local.get
0000513: 02                                        ; local index
0000514: 23                                        ; global.get
0000515: 0b                                        ; global index
0000516: 41                                        ; i32.const
0000517: 01                                        ; i32 literal
0000518: 6b                                        ; i32.sub
0000519: 4a                                        ; i32.gt_s
000051a: 0d                                        ; br_if
000051b: 01                                        ; break depth
000051c: 20                                        ; local.get
000051d: 01                                        ; local index
000051e: 41                                        ; i32.const
000051f: 08                                        ; i32 literal
0000520: 6a                                        ; i32.add
0000521: 20                                        ; local.get
0000522: 02                                        ; local index
0000523: 41                                        ; i32.const
0000524: 04                                        ; i32 literal
0000525: 6c                                        ; i32.mul
0000526: 6a                                        ; i32.add
0000527: 41                                        ; i32.const
0000528: 00                                        ; i32 literal
0000529: 36                                        ; i32.store
000052a: 02                                        ; alignment
000052b: 00                                        ; store offset
000052c: 20                                        ; local.get
000052d: 02                                        ; local index
000052e: 41                                        ; i32.const
000052f: 01                                        ; i32 literal
0000530: 6a                                        ; i32.add
0000531: 21                                        ; local.set
0000532: 02                                        ; local index
0000533: 0c                                        ; br
0000534: 00                                        ; break depth
0000535: 0b                                        ; end
0000536: 0b                                        ; end
0000537: 20                                        ; local.get
0000538: 00                                        ; local index
0000539: 41                                        ; i32.const
000053a: 01                                        ; i32 literal
000053b: 6a                                        ; i32.add
000053c: 21                                        ; local.set
000053d: 00                                        ; local index
000053e: 0c                                        ; br
000053f: 00                                        ; break depth
0000540: 0b                                        ; end
0000541: 0b                                        ; end
0000542: 0b                                        ; end
00004e4: 5e                                        ; FIXUP func body size
; function body 5
0000543: 00                                        ; func body size (guess)
0000544: 03                                        ; local decl count
0000545: 02                                        ; local type count
0000546: 7f                                        ; i32
0000547: 05                                        ; local type count
0000548: 7d                                        ; f32
0000549: 08                                        ; local type count
000054a: 7f                                        ; i32
000054b: 41                                        ; i32.const
000054c: 00                                        ; i32 literal
000054d: 21                                        ; local.set
000054e: 02                                        ; local index
000054f: 41                                        ; i32.const
0000550: 00                                        ; i32 literal
0000551: 21                                        ; local.set
0000552: 03                                        ; local index
0000553: 02                                        ; block
0000554: 40                                        ; void
0000555: 03                                        ; loop
0000556: 40                                        ; void
0000557: 20                                        ; local.get
0000558: 03                                        ; local index
0000559: 23                                        ; global.get
000055a: 0d                                        ; global index
000055b: 41                                        ; i32.const
000055c: 01                                        ; i32 literal
000055d: 6b                                        ; i32.sub
000055e: 4a                                        ; i32.gt_s
000055f: 0d                                        ; br_if
0000560: 01                                        ; break depth
0000561: 23                                        ; global.get
0000562: 0e                                        ; global index
0000563: 41                                        ; i32.const
0000564: 08                                        ; i32 literal
0000565: 6a                                        ; i32.add
0000566: 20                                        ; local.get
0000567: 03                                        ; local index
0000568: 41                                        ; i32.const
0000569: 04                                        ; i32 literal
000056a: 6c                                        ; i32.mul
000056b: 6a                                        ; i32.add
000056c: 28                                        ; i32.load
000056d: 02                                        ; alignment
000056e: 00                                        ; load offset
000056f: 41                                        ; i32.const
0000570: 00                                        ; i32 literal
0000571: 6a                                        ; i32.add
0000572: 2a                                        ; f32.load
0000573: 02                                        ; alignment
0000574: 00                                        ; load offset
0000575: 21                                        ; local.set
0000576: 04                                        ; local index
0000577: 23                                        ; global.get
0000578: 0e                                        ; global index
0000579: 41                                        ; i32.const
000057a: 08                                        ; i32 literal
000057b: 6a                                        ; i32.add
000057c: 20                                        ; local.get
000057d: 03                                        ; local index
000057e: 41                                        ; i32.const
000057f: 04                                        ; i32 literal
0000580: 6c                                        ; i32.mul
0000581: 6a                                        ; i32.add
0000582: 28                                        ; i32.load
0000583: 02                                        ; alignment
0000584: 00                                        ; load offset
0000585: 41                                        ; i32.const
0000586: 04                                        ; i32 literal
0000587: 6a                                        ; i32.add
0000588: 2a                                        ; f32.load
0000589: 02                                        ; alignment
000058a: 00                                        ; load offset
000058b: 21                                        ; local.set
000058c: 05                                        ; local index
000058d: 23                                        ; global.get
000058e: 0e                                        ; global index
000058f: 41                                        ; i32.const
0000590: 08                                        ; i32 literal
0000591: 6a                                        ; i32.add
0000592: 20                                        ; local.get
0000593: 03                                        ; local index
0000594: 41                                        ; i32.const
0000595: 04                                        ; i32 literal
0000596: 6c                                        ; i32.mul
0000597: 6a                                        ; i32.add
0000598: 28                                        ; i32.load
0000599: 02                                        ; alignment
000059a: 00                                        ; load offset
000059b: 41                                        ; i32.const
000059c: 08                                        ; i32 literal
000059d: 6a                                        ; i32.add
000059e: 2a                                        ; f32.load
000059f: 02                                        ; alignment
00005a0: 00                                        ; load offset
00005a1: 21                                        ; local.set
00005a2: 06                                        ; local index
00005a3: 23                                        ; global.get
00005a4: 0f                                        ; global index
00005a5: 41                                        ; i32.const
00005a6: 08                                        ; i32 literal
00005a7: 6a                                        ; i32.add
00005a8: 20                                        ; local.get
00005a9: 03                                        ; local index
00005aa: 41                                        ; i32.const
00005ab: 04                                        ; i32 literal
00005ac: 6c                                        ; i32.mul
00005ad: 6a                                        ; i32.add
00005ae: 28                                        ; i32.load
00005af: 02                                        ; alignment
00005b0: 00                                        ; load offset
00005b1: 41                                        ; i32.const
00005b2: 04                                        ; i32 literal
00005b3: 6a                                        ; i32.add
00005b4: 2a                                        ; f32.load
00005b5: 02                                        ; alignment
00005b6: 00                                        ; load offset
00005b7: 21                                        ; local.set
00005b8: 07                                        ; local index
00005b9: 23                                        ; global.get
00005ba: 0f                                        ; global index
00005bb: 41                                        ; i32.const
00005bc: 08                                        ; i32 literal
00005bd: 6a                                        ; i32.add
00005be: 20                                        ; local.get
00005bf: 03                                        ; local index
00005c0: 41                                        ; i32.const
00005c1: 04                                        ; i32 literal
00005c2: 6c                                        ; i32.mul
00005c3: 6a                                        ; i32.add
00005c4: 28                                        ; i32.load
00005c5: 02                                        ; alignment
00005c6: 00                                        ; load offset
00005c7: 41                                        ; i32.const
00005c8: 00                                        ; i32 literal
00005c9: 6a                                        ; i32.add
00005ca: 2a                                        ; f32.load
00005cb: 02                                        ; alignment
00005cc: 00                                        ; load offset
00005cd: 21                                        ; local.set
00005ce: 08                                        ; local index
00005cf: 20                                        ; local.get
00005d0: 08                                        ; local index
00005d1: bb                                        ; f64.promote_f32
00005d2: 44                                        ; f64.const
00005d3: 2d43 1ceb e236 1a3f                       ; f64 literal
00005db: a0                                        ; f64.add
00005dc: b6                                        ; f32.demote_f64
00005dd: 21                                        ; local.set
00005de: 08                                        ; local index
00005df: 20                                        ; local.get
00005e0: 00                                        ; local index
00005e1: 20                                        ; local.get
00005e2: 04                                        ; local index
00005e3: 20                                        ; local.get
00005e4: 06                                        ; local index
00005e5: 92                                        ; f32.add
00005e6: 93                                        ; f32.sub
00005e7: 41                                        ; i32.const
00005e8: 00                                        ; i32 literal
00005e9: b2                                        ; f32.convert_i32_s
00005ea: 5d                                        ; f32.lt
00005eb: 20                                        ; local.get
00005ec: 07                                        ; local index
00005ed: 41                                        ; i32.const
00005ee: 00                                        ; i32 literal
00005ef: b2                                        ; f32.convert_i32_s
00005f0: 5e                                        ; f32.gt
00005f1: 6c                                        ; i32.mul
00005f2: 20                                        ; local.get
00005f3: 04                                        ; local index
00005f4: 20                                        ; local.get
00005f5: 06                                        ; local index
00005f6: 93                                        ; f32.sub
00005f7: 41                                        ; i32.const
00005f8: 00                                        ; i32 literal
00005f9: b2                                        ; f32.convert_i32_s
00005fa: 5d                                        ; f32.lt
00005fb: 20                                        ; local.get
00005fc: 07                                        ; local index
00005fd: 41                                        ; i32.const
00005fe: 00                                        ; i32 literal
00005ff: b2                                        ; f32.convert_i32_s
0000600: 5d                                        ; f32.lt
0000601: 6c                                        ; i32.mul
0000602: 6a                                        ; i32.add
0000603: 04                                        ; if
0000604: 40                                        ; void
0000605: 43                                        ; f32.const
0000606: 0000 0000                                 ; f32 literal
000060a: 20                                        ; local.get
000060b: 07                                        ; local index
000060c: 93                                        ; f32.sub
000060d: 21                                        ; local.set
000060e: 07                                        ; local index
000060f: 0b                                        ; end
0000610: 20                                        ; local.get
0000611: 01                                        ; local index
0000612: 20                                        ; local.get
0000613: 05                                        ; local index
0000614: 20                                        ; local.get
0000615: 06                                        ; local index
0000616: 92                                        ; f32.add
0000617: 93                                        ; f32.sub
0000618: 41                                        ; i32.const
0000619: 00                                        ; i32 literal
000061a: b2                                        ; f32.convert_i32_s
000061b: 5d                                        ; f32.lt
000061c: 20                                        ; local.get
000061d: 08                                        ; local index
000061e: 41                                        ; i32.const
000061f: 00                                        ; i32 literal
0000620: b2                                        ; f32.convert_i32_s
0000621: 5e                                        ; f32.gt
0000622: 6c                                        ; i32.mul
0000623: 20                                        ; local.get
0000624: 05                                        ; local index
0000625: 20                                        ; local.get
0000626: 06                                        ; local index
0000627: 93                                        ; f32.sub
0000628: 41                                        ; i32.const
0000629: 00                                        ; i32 literal
000062a: b2                                        ; f32.convert_i32_s
000062b: 5d                                        ; f32.lt
000062c: 20                                        ; local.get
000062d: 08                                        ; local index
000062e: 41                                        ; i32.const
000062f: 00                                        ; i32 literal
0000630: b2                                        ; f32.convert_i32_s
0000631: 5d                                        ; f32.lt
0000632: 6c                                        ; i32.mul
0000633: 6a                                        ; i32.add
0000634: 04                                        ; if
0000635: 40                                        ; void
0000636: 43                                        ; f32.const
0000637: 0000 0000                                 ; f32 literal
000063b: 20                                        ; local.get
000063c: 08                                        ; local index
000063d: 93                                        ; f32.sub
000063e: 21                                        ; local.set
000063f: 08                                        ; local index
0000640: 0b                                        ; end
0000641: 23                                        ; global.get
0000642: 0e                                        ; global index
0000643: 41                                        ; i32.const
0000644: 08                                        ; i32 literal
0000645: 6a                                        ; i32.add
0000646: 20                                        ; local.get
0000647: 03                                        ; local index
0000648: 41                                        ; i32.const
0000649: 04                                        ; i32 literal
000064a: 6c                                        ; i32.mul
000064b: 6a                                        ; i32.add
000064c: 28                                        ; i32.load
000064d: 02                                        ; alignment
000064e: 00                                        ; load offset
000064f: 41                                        ; i32.const
0000650: 00                                        ; i32 literal
0000651: 6a                                        ; i32.add
0000652: 20                                        ; local.get
0000653: 04                                        ; local index
0000654: 20                                        ; local.get
0000655: 07                                        ; local index
0000656: 92                                        ; f32.add
0000657: 38                                        ; f32.store
0000658: 02                                        ; alignment
0000659: 00                                        ; store offset
000065a: 23                                        ; global.get
000065b: 0e                                        ; global index
000065c: 41                                        ; i32.const
000065d: 08                                        ; i32 literal
000065e: 6a                                        ; i32.add
000065f: 20                                        ; local.get
0000660: 03                                        ; local index
0000661: 41                                        ; i32.const
0000662: 04                                        ; i32 literal
0000663: 6c                                        ; i32.mul
0000664: 6a                                        ; i32.add
0000665: 28                                        ; i32.load
0000666: 02                                        ; alignment
0000667: 00                                        ; load offset
0000668: 41                                        ; i32.const
0000669: 04                                        ; i32 literal
000066a: 6a                                        ; i32.add
000066b: 20                                        ; local.get
000066c: 05                                        ; local index
000066d: 20                                        ; local.get
000066e: 08                                        ; local index
000066f: 92                                        ; f32.add
0000670: 38                                        ; f32.store
0000671: 02                                        ; alignment
0000672: 00                                        ; store offset
0000673: 23                                        ; global.get
0000674: 0f                                        ; global index
0000675: 41                                        ; i32.const
0000676: 08                                        ; i32 literal
0000677: 6a                                        ; i32.add
0000678: 20                                        ; local.get
0000679: 03                                        ; local index
000067a: 41                                        ; i32.const
000067b: 04                                        ; i32 literal
000067c: 6c                                        ; i32.mul
000067d: 6a                                        ; i32.add
000067e: 28                                        ; i32.load
000067f: 02                                        ; alignment
0000680: 00                                        ; load offset
0000681: 41                                        ; i32.const
0000682: 04                                        ; i32 literal
0000683: 6a                                        ; i32.add
0000684: 20                                        ; local.get
0000685: 07                                        ; local index
0000686: 38                                        ; f32.store
0000687: 02                                        ; alignment
0000688: 00                                        ; store offset
0000689: 23                                        ; global.get
000068a: 0f                                        ; global index
000068b: 41                                        ; i32.const
000068c: 08                                        ; i32 literal
000068d: 6a                                        ; i32.add
000068e: 20                                        ; local.get
000068f: 03                                        ; local index
0000690: 41                                        ; i32.const
0000691: 04                                        ; i32 literal
0000692: 6c                                        ; i32.mul
0000693: 6a                                        ; i32.add
0000694: 28                                        ; i32.load
0000695: 02                                        ; alignment
0000696: 00                                        ; load offset
0000697: 41                                        ; i32.const
0000698: 00                                        ; i32 literal
0000699: 6a                                        ; i32.add
000069a: 20                                        ; local.get
000069b: 08                                        ; local index
000069c: 38                                        ; f32.store
000069d: 02                                        ; alignment
000069e: 00                                        ; store offset
000069f: 20                                        ; local.get
00006a0: 04                                        ; local index
00006a1: 20                                        ; local.get
00006a2: 06                                        ; local index
00006a3: 93                                        ; f32.sub
00006a4: bb                                        ; f64.promote_f32
00006a5: 20                                        ; local.get
00006a6: 00                                        ; local index
00006a7: bb                                        ; f64.promote_f32
00006a8: a3                                        ; f64.div
00006a9: 23                                        ; global.get
00006aa: 0c                                        ; global index
00006ab: b7                                        ; f64.convert_i32_s
00006ac: a2                                        ; f64.mul
00006ad: 10                                        ; call
00006ae: 06                                        ; function index
00006af: aa                                        ; i32.trunc_f64_s
00006b0: 21                                        ; local.set
00006b1: 09                                        ; local index
00006b2: 20                                        ; local.get
00006b3: 04                                        ; local index
00006b4: 20                                        ; local.get
00006b5: 06                                        ; local index
00006b6: 92                                        ; f32.add
00006b7: bb                                        ; f64.promote_f32
00006b8: 20                                        ; local.get
00006b9: 00                                        ; local index
00006ba: bb                                        ; f64.promote_f32
00006bb: a3                                        ; f64.div
00006bc: 23                                        ; global.get
00006bd: 0c                                        ; global index
00006be: b7                                        ; f64.convert_i32_s
00006bf: a2                                        ; f64.mul
00006c0: 10                                        ; call
00006c1: 06                                        ; function index
00006c2: aa                                        ; i32.trunc_f64_s
00006c3: 21                                        ; local.set
00006c4: 0a                                        ; local index
00006c5: 20                                        ; local.get
00006c6: 05                                        ; local index
00006c7: 20                                        ; local.get
00006c8: 06                                        ; local index
00006c9: 93                                        ; f32.sub
00006ca: bb                                        ; f64.promote_f32
00006cb: 20                                        ; local.get
00006cc: 01                                        ; local index
00006cd: bb                                        ; f64.promote_f32
00006ce: a3                                        ; f64.div
00006cf: 23                                        ; global.get
00006d0: 0b                                        ; global index
00006d1: b7                                        ; f64.convert_i32_s
00006d2: a2                                        ; f64.mul
00006d3: 10                                        ; call
00006d4: 06                                        ; function index
00006d5: aa                                        ; i32.trunc_f64_s
00006d6: 21                                        ; local.set
00006d7: 0b                                        ; local index
00006d8: 20                                        ; local.get
00006d9: 05                                        ; local index
00006da: 20                                        ; local.get
00006db: 06                                        ; local index
00006dc: 92                                        ; f32.add
00006dd: bb                                        ; f64.promote_f32
00006de: 20                                        ; local.get
00006df: 01                                        ; local index
00006e0: bb                                        ; f64.promote_f32
00006e1: a3                                        ; f64.div
00006e2: 23                                        ; global.get
00006e3: 0b                                        ; global index
00006e4: b7                                        ; f64.convert_i32_s
00006e5: a2                                        ; f64.mul
00006e6: 10                                        ; call
00006e7: 06                                        ; function index
00006e8: aa                                        ; i32.trunc_f64_s
00006e9: 21                                        ; local.set
00006ea: 0c                                        ; local index
00006eb: 20                                        ; local.get
00006ec: 09                                        ; local index
00006ed: 41                                        ; i32.const
00006ee: 00                                        ; i32 literal
00006ef: 48                                        ; i32.lt_s
00006f0: 04                                        ; if
00006f1: 40                                        ; void
00006f2: 41                                        ; i32.const
00006f3: 00                                        ; i32 literal
00006f4: 21                                        ; local.set
00006f5: 09                                        ; local index
00006f6: 0b                                        ; end
00006f7: 20                                        ; local.get
00006f8: 0a                                        ; local index
00006f9: 23                                        ; global.get
00006fa: 0c                                        ; global index
00006fb: 4e                                        ; i32.ge_s
00006fc: 04                                        ; if
00006fd: 40                                        ; void
00006fe: 23                                        ; global.get
00006ff: 0c                                        ; global index
0000700: 41                                        ; i32.const
0000701: 01                                        ; i32 literal
0000702: 6b                                        ; i32.sub
0000703: 21                                        ; local.set
0000704: 0a                                        ; local index
0000705: 0b                                        ; end
0000706: 20                                        ; local.get
0000707: 0b                                        ; local index
0000708: 41                                        ; i32.const
0000709: 00                                        ; i32 literal
000070a: 48                                        ; i32.lt_s
000070b: 04                                        ; if
000070c: 40                                        ; void
000070d: 41                                        ; i32.const
000070e: 00                                        ; i32 literal
000070f: 21                                        ; local.set
0000710: 0b                                        ; local index
0000711: 0b                                        ; end
0000712: 20                                        ; local.get
0000713: 0c                                        ; local index
0000714: 23                                        ; global.get
0000715: 0b                                        ; global index
0000716: 4e                                        ; i32.ge_s
0000717: 04                                        ; if
0000718: 40                                        ; void
0000719: 23                                        ; global.get
000071a: 0b                                        ; global index
000071b: 41                                        ; i32.const
000071c: 01                                        ; i32 literal
000071d: 6b                                        ; i32.sub
000071e: 21                                        ; local.set
000071f: 0c                                        ; local index
0000720: 0b                                        ; end
0000721: 20                                        ; local.get
0000722: 09                                        ; local index
0000723: 21                                        ; local.set
0000724: 0d                                        ; local index
0000725: 02                                        ; block
0000726: 40                                        ; void
0000727: 03                                        ; loop
0000728: 40                                        ; void
0000729: 20                                        ; local.get
000072a: 0d                                        ; local index
000072b: 20                                        ; local.get
000072c: 0a                                        ; local index
000072d: 4a                                        ; i32.gt_s
000072e: 0d                                        ; br_if
000072f: 01                                        ; break depth
0000730: 23                                        ; global.get
0000731: 11                                        ; global index
0000732: 41                                        ; i32.const
0000733: 08                                        ; i32 literal
0000734: 6a                                        ; i32.add
0000735: 20                                        ; local.get
0000736: 0d                                        ; local index
0000737: 41                                        ; i32.const
0000738: 04                                        ; i32 literal
0000739: 6c                                        ; i32.mul
000073a: 6a                                        ; i32.add
000073b: 28                                        ; i32.load
000073c: 02                                        ; alignment
000073d: 00                                        ; load offset
000073e: 21                                        ; local.set
000073f: 0e                                        ; local index
0000740: 20                                        ; local.get
0000741: 0b                                        ; local index
0000742: 21                                        ; local.set
0000743: 0f                                        ; local index
0000744: 02                                        ; block
0000745: 40                                        ; void
0000746: 03                                        ; loop
0000747: 40                                        ; void
0000748: 20                                        ; local.get
0000749: 0f                                        ; local index
000074a: 20                                        ; local.get
000074b: 0c                                        ; local index
000074c: 4a                                        ; i32.gt_s
000074d: 0d                                        ; br_if
000074e: 01                                        ; break depth
000074f: 23                                        ; global.get
0000750: 10                                        ; global index
0000751: 41                                        ; i32.const
0000752: 08                                        ; i32 literal
0000753: 6a                                        ; i32.add
0000754: 20                                        ; local.get
0000755: 02                                        ; local index
0000756: 41                                        ; i32.const
0000757: 04                                        ; i32 literal
0000758: 6c                                        ; i32.mul
0000759: 6a                                        ; i32.add
000075a: 28                                        ; i32.load
000075b: 02                                        ; alignment
000075c: 00                                        ; load offset
000075d: 21                                        ; local.set
000075e: 10                                        ; local index
000075f: 20                                        ; local.get
0000760: 02                                        ; local index
0000761: 41                                        ; i32.const
0000762: 01                                        ; i32 literal
0000763: 6a                                        ; i32.add
0000764: 21                                        ; local.set
0000765: 02                                        ; local index
0000766: 20                                        ; local.get
0000767: 10                                        ; local index
0000768: 41                                        ; i32.const
0000769: 04                                        ; i32 literal
000076a: 6a                                        ; i32.add
000076b: 20                                        ; local.get
000076c: 03                                        ; local index
000076d: 36                                        ; i32.store
000076e: 02                                        ; alignment
000076f: 00                                        ; store offset
0000770: 20                                        ; local.get
0000771: 10                                        ; local index
0000772: 41                                        ; i32.const
0000773: 00                                        ; i32 literal
0000774: 6a                                        ; i32.add
0000775: 20                                        ; local.get
0000776: 0e                                        ; local index
0000777: 41                                        ; i32.const
0000778: 08                                        ; i32 literal
0000779: 6a                                        ; i32.add
000077a: 20                                        ; local.get
000077b: 0f                                        ; local index
000077c: 41                                        ; i32.const
000077d: 04                                        ; i32 literal
000077e: 6c                                        ; i32.mul
000077f: 6a                                        ; i32.add
0000780: 28                                        ; i32.load
0000781: 02                                        ; alignment
0000782: 00                                        ; load offset
0000783: 36                                        ; i32.store
0000784: 02                                        ; alignment
0000785: 00                                        ; store offset
0000786: 20                                        ; local.get
0000787: 0e                                        ; local index
0000788: 41                                        ; i32.const
0000789: 08                                        ; i32 literal
000078a: 6a                                        ; i32.add
000078b: 20                                        ; local.get
000078c: 0f                                        ; local index
000078d: 41                                        ; i32.const
000078e: 04                                        ; i32 literal
000078f: 6c                                        ; i32.mul
0000790: 6a                                        ; i32.add
0000791: 20                                        ; local.get
0000792: 10                                        ; local index
0000793: 36                                        ; i32.store
0000794: 02                                        ; alignment
0000795: 00                                        ; store offset
0000796: 20                                        ; local.get
0000797: 0f                                        ; local index
0000798: 41                                        ; i32.const
0000799: 01                                        ; i32 literal
000079a: 6a                                        ; i32.add
000079b: 21                                        ; local.set
000079c: 0f                                        ; local index
000079d: 0c                                        ; br
000079e: 00                                        ; break depth
000079f: 0b                                        ; end
00007a0: 0b                                        ; end
00007a1: 20                                        ; local.get
00007a2: 0d                                        ; local index
00007a3: 41                                        ; i32.const
00007a4: 01                                        ; i32 literal
00007a5: 6a                                        ; i32.add
00007a6: 21                                        ; local.set
00007a7: 0d                                        ; local index
00007a8: 0c                                        ; br
00007a9: 00                                        ; break depth
00007aa: 0b                                        ; end
00007ab: 0b                                        ; end
00007ac: 20                                        ; local.get
00007ad: 03                                        ; local index
00007ae: 41                                        ; i32.const
00007af: 01                                        ; i32 literal
00007b0: 6a                                        ; i32.add
00007b1: 21                                        ; local.set
00007b2: 03                                        ; local index
00007b3: 0c                                        ; br
00007b4: 00                                        ; break depth
00007b5: 0b                                        ; end
00007b6: 0b                                        ; end
00007b7: 0b                                        ; end
; move data: [544, 7b8) -> [545, 7b9)
0000543: f404                                      ; FIXUP func body size
; function body 6
00007b9: 00                                        ; func body size (guess)
00007ba: 07                                        ; local decl count
00007bb: 05                                        ; local type count
00007bc: 7f                                        ; i32
00007bd: 05                                        ; local type count
00007be: 7d                                        ; f32
00007bf: 02                                        ; local type count
00007c0: 7f                                        ; i32
00007c1: 07                                        ; local type count
00007c2: 7d                                        ; f32
00007c3: 01                                        ; local type count
00007c4: 7c                                        ; f64
00007c5: 04                                        ; local type count
00007c6: 7d                                        ; f32
00007c7: 04                                        ; local type count
00007c8: 7c                                        ; f64
00007c9: 41                                        ; i32.const
00007ca: 00                                        ; i32 literal
00007cb: 21                                        ; local.set
00007cc: 00                                        ; local index
00007cd: 02                                        ; block
00007ce: 40                                        ; void
00007cf: 03                                        ; loop
00007d0: 40                                        ; void
00007d1: 20                                        ; local.get
00007d2: 00                                        ; local index
00007d3: 23                                        ; global.get
00007d4: 0c                                        ; global index
00007d5: 41                                        ; i32.const
00007d6: 01                                        ; i32 literal
00007d7: 6b                                        ; i32.sub
00007d8: 4a                                        ; i32.gt_s
00007d9: 0d                                        ; br_if
00007da: 01                                        ; break depth
00007db: 23                                        ; global.get
00007dc: 11                                        ; global index
00007dd: 41                                        ; i32.const
00007de: 08                                        ; i32 literal
00007df: 6a                                        ; i32.add
00007e0: 20                                        ; local.get
00007e1: 00                                        ; local index
00007e2: 41                                        ; i32.const
00007e3: 04                                        ; i32 literal
00007e4: 6c                                        ; i32.mul
00007e5: 6a                                        ; i32.add
00007e6: 28                                        ; i32.load
00007e7: 02                                        ; alignment
00007e8: 00                                        ; load offset
00007e9: 21                                        ; local.set
00007ea: 01                                        ; local index
00007eb: 41                                        ; i32.const
00007ec: 00                                        ; i32 literal
00007ed: 21                                        ; local.set
00007ee: 02                                        ; local index
00007ef: 02                                        ; block
00007f0: 40                                        ; void
00007f1: 03                                        ; loop
00007f2: 40                                        ; void
00007f3: 20                                        ; local.get
00007f4: 02                                        ; local index
00007f5: 23                                        ; global.get
00007f6: 0b                                        ; global index
00007f7: 41                                        ; i32.const
00007f8: 01                                        ; i32 literal
00007f9: 6b                                        ; i32.sub
00007fa: 4a                                        ; i32.gt_s
00007fb: 0d                                        ; br_if
00007fc: 01                                        ; break depth
00007fd: 20                                        ; local.get
00007fe: 01                                        ; local index
00007ff: 41                                        ; i32.const
0000800: 08                                        ; i32 literal
0000801: 6a                                        ; i32.add
0000802: 20                                        ; local.get
0000803: 02                                        ; local index
0000804: 41                                        ; i32.const
0000805: 04                                        ; i32 literal
0000806: 6c                                        ; i32.mul
0000807: 6a                                        ; i32.add
0000808: 28                                        ; i32.load
0000809: 02                                        ; alignment
000080a: 00                                        ; load offset
000080b: 21                                        ; local.set
000080c: 03                                        ; local index
000080d: 02                                        ; block
000080e: 40                                        ; void
000080f: 03                                        ; loop
0000810: 40                                        ; void
0000811: 20                                        ; local.get
0000812: 03                                        ; local index
0000813: 41                                        ; i32.const
0000814: 00                                        ; i32 literal
0000815: 46                                        ; i32.eq
0000816: 45                                        ; i32.eqz
0000817: 45                                        ; i32.eqz
0000818: 0d                                        ; br_if
0000819: 01                                        ; break depth
000081a: 20                                        ; local.get
000081b: 03                                        ; local index
000081c: 41                                        ; i32.const
000081d: 04                                        ; i32 literal
000081e: 6a                                        ; i32.add
000081f: 28                                        ; i32.load
0000820: 02                                        ; alignment
0000821: 00                                        ; load offset
0000822: 21                                        ; local.set
0000823: 04                                        ; local index
0000824: 23                                        ; global.get
0000825: 0e                                        ; global index
0000826: 41                                        ; i32.const
0000827: 08                                        ; i32 literal
0000828: 6a                                        ; i32.add
0000829: 20                                        ; local.get
000082a: 04                                        ; local index
000082b: 41                                        ; i32.const
000082c: 04                                        ; i32 literal
000082d: 6c                                        ; i32.mul
000082e: 6a                                        ; i32.add
000082f: 28                                        ; i32.load
0000830: 02                                        ; alignment
0000831: 00                                        ; load offset
0000832: 41                                        ; i32.const
0000833: 00                                        ; i32 literal
0000834: 6a                                        ; i32.add
0000835: 2a                                        ; f32.load
0000836: 02                                        ; alignment
0000837: 00                                        ; load offset
0000838: 21                                        ; local.set
0000839: 05                                        ; local index
000083a: 23                                        ; global.get
000083b: 0e                                        ; global index
000083c: 41                                        ; i32.const
000083d: 08                                        ; i32 literal
000083e: 6a                                        ; i32.add
000083f: 20                                        ; local.get
0000840: 04                                        ; local index
0000841: 41                                        ; i32.const
0000842: 04                                        ; i32 literal
0000843: 6c                                        ; i32.mul
0000844: 6a                                        ; i32.add
0000845: 28                                        ; i32.load
0000846: 02                                        ; alignment
0000847: 00                                        ; load offset
0000848: 41                                        ; i32.const
0000849: 04                                        ; i32 literal
000084a: 6a                                        ; i32.add
000084b: 2a                                        ; f32.load
000084c: 02                                        ; alignment
000084d: 00                                        ; load offset
000084e: 21                                        ; local.set
000084f: 06                                        ; local index
0000850: 23                                        ; global.get
0000851: 0e                                        ; global index
0000852: 41                                        ; i32.const
0000853: 08                                        ; i32 literal
0000854: 6a                                        ; i32.add
0000855: 20                                        ; local.get
0000856: 04                                        ; local index
0000857: 41                                        ; i32.const
0000858: 04                                        ; i32 literal
0000859: 6c                                        ; i32.mul
000085a: 6a                                        ; i32.add
000085b: 28                                        ; i32.load
000085c: 02                                        ; alignment
000085d: 00                                        ; load offset
000085e: 41                                        ; i32.const
000085f: 08                                        ; i32 literal
0000860: 6a                                        ; i32.add
0000861: 2a                                        ; f32.load
0000862: 02                                        ; alignment
0000863: 00                                        ; load offset
0000864: 21                                        ; local.set
0000865: 07                                        ; local index
0000866: 23                                        ; global.get
0000867: 0f                                        ; global index
0000868: 41                                        ; i32.const
0000869: 08                                        ; i32 literal
000086a: 6a                                        ; i32.add
000086b: 20                                        ; local.get
000086c: 04                                        ; local index
000086d: 41                                        ; i32.const
000086e: 04                                        ; i32 literal
000086f: 6c                                        ; i32.mul
0000870: 6a                                        ; i32.add
0000871: 28                                        ; i32.load
0000872: 02                                        ; alignment
0000873: 00                                        ; load offset
0000874: 41                                        ; i32.const
0000875: 04                                        ; i32 literal
0000876: 6a                                        ; i32.add
0000877: 2a                                        ; f32.load
0000878: 02                                        ; alignment
0000879: 00                                        ; load offset
000087a: 21                                        ; local.set
000087b: 08                                        ; local index
000087c: 23                                        ; global.get
000087d: 0f                                        ; global index
000087e: 41                                        ; i32.const
000087f: 08                                        ; i32 literal
0000880: 6a                                        ; i32.add
0000881: 20                                        ; local.get
0000882: 04                                        ; local index
0000883: 41                                        ; i32.const
0000884: 04                                        ; i32 literal
0000885: 6c                                        ; i32.mul
0000886: 6a                                        ; i32.add
0000887: 28                                        ; i32.load
0000888: 02                                        ; alignment
0000889: 00                                        ; load offset
000088a: 41                                        ; i32.const
000088b: 00                                        ; i32 literal
000088c: 6a                                        ; i32.add
000088d: 2a                                        ; f32.load
000088e: 02                                        ; alignment
000088f: 00                                        ; load offset
0000890: 21                                        ; local.set
0000891: 09                                        ; local index
0000892: 20                                        ; local.get
0000893: 03                                        ; local index
0000894: 21                                        ; local.set
0000895: 0a                                        ; local index
0000896: 20                                        ; local.get
0000897: 0a                                        ; local index
0000898: 41                                        ; i32.const
0000899: 00                                        ; i32 literal
000089a: 6a                                        ; i32.add
000089b: 28                                        ; i32.load
000089c: 02                                        ; alignment
000089d: 00                                        ; load offset
000089e: 21                                        ; local.set
000089f: 0a                                        ; local index
00008a0: 02                                        ; block
00008a1: 40                                        ; void
00008a2: 03                                        ; loop
00008a3: 40                                        ; void
00008a4: 20                                        ; local.get
00008a5: 0a                                        ; local index
00008a6: 41                                        ; i32.const
00008a7: 00                                        ; i32 literal
00008a8: 46                                        ; i32.eq
00008a9: 45                                        ; i32.eqz
00008aa: 45                                        ; i32.eqz
00008ab: 0d                                        ; br_if
00008ac: 01                                        ; break depth
00008ad: 20                                        ; local.get
00008ae: 0a                                        ; local index
00008af: 41                                        ; i32.const
00008b0: 04                                        ; i32 literal
00008b1: 6a                                        ; i32.add
00008b2: 28                                        ; i32.load
00008b3: 02                                        ; alignment
00008b4: 00                                        ; load offset
00008b5: 21                                        ; local.set
00008b6: 0b                                        ; local index
00008b7: 23                                        ; global.get
00008b8: 0e                                        ; global index
00008b9: 41                                        ; i32.const
00008ba: 08                                        ; i32 literal
00008bb: 6a                                        ; i32.add
00008bc: 20                                        ; local.get
00008bd: 0b                                        ; local index
00008be: 41                                        ; i32.const
00008bf: 04                                        ; i32 literal
00008c0: 6c                                        ; i32.mul
00008c1: 6a                                        ; i32.add
00008c2: 28                                        ; i32.load
00008c3: 02                                        ; alignment
00008c4: 00                                        ; load offset
00008c5: 41                                        ; i32.const
00008c6: 00                                        ; i32 literal
00008c7: 6a                                        ; i32.add
00008c8: 2a                                        ; f32.load
00008c9: 02                                        ; alignment
00008ca: 00                                        ; load offset
00008cb: 21                                        ; local.set
00008cc: 0c                                        ; local index
00008cd: 23                                        ; global.get
00008ce: 0e                                        ; global index
00008cf: 41                                        ; i32.const
00008d0: 08                                        ; i32 literal
00008d1: 6a                                        ; i32.add
00008d2: 20                                        ; local.get
00008d3: 0b                                        ; local index
00008d4: 41                                        ; i32.const
00008d5: 04                                        ; i32 literal
00008d6: 6c                                        ; i32.mul
00008d7: 6a                                        ; i32.add
00008d8: 28                                        ; i32.load
00008d9: 02                                        ; alignment
00008da: 00                                        ; load offset
00008db: 41                                        ; i32.const
00008dc: 04                                        ; i32 literal
00008dd: 6a                                        ; i32.add
00008de: 2a                                        ; f32.load
00008df: 02                                        ; alignment
00008e0: 00                                        ; load offset
00008e1: 21                                        ; local.set
00008e2: 0d                                        ; local index
00008e3: 23                                        ; global.get
00008e4: 0e                                        ; global index
00008e5: 41                                        ; i32.const
00008e6: 08                                        ; i32 literal
00008e7: 6a                                        ; i32.add
00008e8: 20                                        ; local.get
00008e9: 0b                                        ; local index
00008ea: 41                                        ; i32.const
00008eb: 04                                        ; i32 literal
00008ec: 6c                                        ; i32.mul
00008ed: 6a                                        ; i32.add
00008ee: 28                                        ; i32.load
00008ef: 02                                        ; alignment
00008f0: 00                                        ; load offset
00008f1: 41                                        ; i32.const
00008f2: 08                                        ; i32 literal
00008f3: 6a                                        ; i32.add
00008f4: 2a                                        ; f32.load
00008f5: 02                                        ; alignment
00008f6: 00                                        ; load offset
00008f7: 21                                        ; local.set
00008f8: 0e                                        ; local index
00008f9: 20                                        ; local.get
00008fa: 05                                        ; local index
00008fb: 20                                        ; local.get
00008fc: 06                                        ; local index
00008fd: 20                                        ; local.get
00008fe: 07                                        ; local index
00008ff: 20                                        ; local.get
0000900: 0c                                        ; local index
0000901: 20                                        ; local.get
0000902: 0d                                        ; local index
0000903: 20                                        ; local.get
0000904: 0e                                        ; local index
0000905: 10                                        ; call
0000906: 10                                        ; function index
0000907: 04                                        ; if
0000908: 40                                        ; void
0000909: 23                                        ; global.get
000090a: 0f                                        ; global index
000090b: 41                                        ; i32.const
000090c: 08                                        ; i32 literal
000090d: 6a                                        ; i32.add
000090e: 20                                        ; local.get
000090f: 0b                                        ; local index
0000910: 41                                        ; i32.const
0000911: 04                                        ; i32 literal
0000912: 6c                                        ; i32.mul
0000913: 6a                                        ; i32.add
0000914: 28                                        ; i32.load
0000915: 02                                        ; alignment
0000916: 00                                        ; load offset
0000917: 41                                        ; i32.const
0000918: 04                                        ; i32 literal
0000919: 6a                                        ; i32.add
000091a: 2a                                        ; f32.load
000091b: 02                                        ; alignment
000091c: 00                                        ; load offset
000091d: 21                                        ; local.set
000091e: 0f                                        ; local index
000091f: 23                                        ; global.get
0000920: 0f                                        ; global index
0000921: 41                                        ; i32.const
0000922: 08                                        ; i32 literal
0000923: 6a                                        ; i32.add
0000924: 20                                        ; local.get
0000925: 0b                                        ; local index
0000926: 41                                        ; i32.const
0000927: 04                                        ; i32 literal
0000928: 6c                                        ; i32.mul
0000929: 6a                                        ; i32.add
000092a: 28                                        ; i32.load
000092b: 02                                        ; alignment
000092c: 00                                        ; load offset
000092d: 41                                        ; i32.const
000092e: 00                                        ; i32 literal
000092f: 6a                                        ; i32.add
0000930: 2a                                        ; f32.load
0000931: 02                                        ; alignment
0000932: 00                                        ; load offset
0000933: 21                                        ; local.set
0000934: 10                                        ; local index
0000935: 20                                        ; local.get
0000936: 0c                                        ; local index
0000937: 20                                        ; local.get
0000938: 05                                        ; local index
0000939: 93                                        ; f32.sub
000093a: 21                                        ; local.set
000093b: 11                                        ; local index
000093c: 20                                        ; local.get
000093d: 0d                                        ; local index
000093e: 20                                        ; local.get
000093f: 06                                        ; local index
0000940: 93                                        ; f32.sub
0000941: 21                                        ; local.set
0000942: 12                                        ; local index
0000943: 20                                        ; local.get
0000944: 11                                        ; local index
0000945: 20                                        ; local.get
0000946: 11                                        ; local index
0000947: 94                                        ; f32.mul
0000948: 20                                        ; local.get
0000949: 12                                        ; local index
000094a: 20                                        ; local.get
000094b: 12                                        ; local index
000094c: 94                                        ; f32.mul
000094d: 92                                        ; f32.add
000094e: bb                                        ; f64.promote_f32
000094f: 10                                        ; call
0000950: 01                                        ; function index
0000951: 21                                        ; local.set
0000952: 13                                        ; local index
0000953: 20                                        ; local.get
0000954: 11                                        ; local index
0000955: bb                                        ; f64.promote_f32
0000956: 20                                        ; local.get
0000957: 13                                        ; local index
0000958: a3                                        ; f64.div
0000959: b6                                        ; f32.demote_f64
000095a: 21                                        ; local.set
000095b: 11                                        ; local index
000095c: 20                                        ; local.get
000095d: 12                                        ; local index
000095e: bb                                        ; f64.promote_f32
000095f: 20                                        ; local.get
0000960: 13                                        ; local index
0000961: a3                                        ; f64.div
0000962: b6                                        ; f32.demote_f64
0000963: 21                                        ; local.set
0000964: 12                                        ; local index
0000965: 20                                        ; local.get
0000966: 11                                        ; local index
0000967: 20                                        ; local.get
0000968: 08                                        ; local index
0000969: 94                                        ; f32.mul
000096a: 20                                        ; local.get
000096b: 12                                        ; local index
000096c: 20                                        ; local.get
000096d: 09                                        ; local index
000096e: 94                                        ; f32.mul
000096f: 92                                        ; f32.add
0000970: 21                                        ; local.set
0000971: 14                                        ; local index
0000972: 20                                        ; local.get
0000973: 11                                        ; local index
0000974: 20                                        ; local.get
0000975: 0f                                        ; local index
0000976: 94                                        ; f32.mul
0000977: 20                                        ; local.get
0000978: 12                                        ; local index
0000979: 20                                        ; local.get
000097a: 10                                        ; local index
000097b: 94                                        ; f32.mul
000097c: 92                                        ; f32.add
000097d: 21                                        ; local.set
000097e: 15                                        ; local index
000097f: 20                                        ; local.get
0000980: 14                                        ; local index
0000981: 20                                        ; local.get
0000982: 15                                        ; local index
0000983: 93                                        ; f32.sub
0000984: 41                                        ; i32.const
0000985: 00                                        ; i32 literal
0000986: b2                                        ; f32.convert_i32_s
0000987: 5f                                        ; f32.le
0000988: 45                                        ; i32.eqz
0000989: 04                                        ; if
000098a: 40                                        ; void
000098b: 20                                        ; local.get
000098c: 07                                        ; local index
000098d: 20                                        ; local.get
000098e: 0e                                        ; local index
000098f: 92                                        ; f32.add
0000990: 21                                        ; local.set
0000991: 16                                        ; local index
0000992: 20                                        ; local.get
0000993: 07                                        ; local index
0000994: 20                                        ; local.get
0000995: 0e                                        ; local index
0000996: 93                                        ; f32.sub
0000997: 21                                        ; local.set
0000998: 17                                        ; local index
0000999: 20                                        ; local.get
000099a: 14                                        ; local index
000099b: 20                                        ; local.get
000099c: 17                                        ; local index
000099d: 94                                        ; f32.mul
000099e: 41                                        ; i32.const
000099f: 02                                        ; i32 literal
00009a0: b2                                        ; f32.convert_i32_s
00009a1: 20                                        ; local.get
00009a2: 0e                                        ; local index
00009a3: 94                                        ; f32.mul
00009a4: 20                                        ; local.get
00009a5: 15                                        ; local index
00009a6: 94                                        ; f32.mul
00009a7: 92                                        ; f32.add
00009a8: bb                                        ; f64.promote_f32
00009a9: 20                                        ; local.get
00009aa: 16                                        ; local index
00009ab: bb                                        ; f64.promote_f32
00009ac: a3                                        ; f64.div
00009ad: 21                                        ; local.set
00009ae: 18                                        ; local index
00009af: 41                                        ; i32.const
00009b0: 02                                        ; i32 literal
00009b1: b2                                        ; f32.convert_i32_s
00009b2: 20                                        ; local.get
00009b3: 07                                        ; local index
00009b4: 94                                        ; f32.mul
00009b5: 20                                        ; local.get
00009b6: 14                                        ; local index
00009b7: 94                                        ; f32.mul
00009b8: 20                                        ; local.get
00009b9: 15                                        ; local index
00009ba: 20                                        ; local.get
00009bb: 17                                        ; local index
00009bc: 94                                        ; f32.mul
00009bd: 93                                        ; f32.sub
00009be: bb                                        ; f64.promote_f32
00009bf: 20                                        ; local.get
00009c0: 16                                        ; local index
00009c1: bb                                        ; f64.promote_f32
00009c2: a3                                        ; f64.div
00009c3: 21                                        ; local.set
00009c4: 19                                        ; local index
00009c5: 20                                        ; local.get
00009c6: 18                                        ; local index
00009c7: 20                                        ; local.get
00009c8: 14                                        ; local index
00009c9: bb                                        ; f64.promote_f32
00009ca: a1                                        ; f64.sub
00009cb: 21                                        ; local.set
00009cc: 1a                                        ; local index
00009cd: 20                                        ; local.get
00009ce: 19                                        ; local index
00009cf: 20                                        ; local.get
00009d0: 15                                        ; local index
00009d1: bb                                        ; f64.promote_f32
00009d2: a1                                        ; f64.sub
00009d3: 21                                        ; local.set
00009d4: 1b                                        ; local index
00009d5: 23                                        ; global.get
00009d6: 0f                                        ; global index
00009d7: 41                                        ; i32.const
00009d8: 08                                        ; i32 literal
00009d9: 6a                                        ; i32.add
00009da: 20                                        ; local.get
00009db: 04                                        ; local index
00009dc: 41                                        ; i32.const
00009dd: 04                                        ; i32 literal
00009de: 6c                                        ; i32.mul
00009df: 6a                                        ; i32.add
00009e0: 28                                        ; i32.load
00009e1: 02                                        ; alignment
00009e2: 00                                        ; load offset
00009e3: 41                                        ; i32.const
00009e4: 04                                        ; i32 literal
00009e5: 6a                                        ; i32.add
00009e6: 20                                        ; local.get
00009e7: 08                                        ; local index
00009e8: bb                                        ; f64.promote_f32
00009e9: 20                                        ; local.get
00009ea: 11                                        ; local index
00009eb: bb                                        ; f64.promote_f32
00009ec: 20                                        ; local.get
00009ed: 1a                                        ; local index
00009ee: a2                                        ; f64.mul
00009ef: a0                                        ; f64.add
00009f0: b6                                        ; f32.demote_f64
00009f1: 38                                        ; f32.store
00009f2: 02                                        ; alignment
00009f3: 00                                        ; store offset
00009f4: 23                                        ; global.get
00009f5: 0f                                        ; global index
00009f6: 41                                        ; i32.const
00009f7: 08                                        ; i32 literal
00009f8: 6a                                        ; i32.add
00009f9: 20                                        ; local.get
00009fa: 04                                        ; local index
00009fb: 41                                        ; i32.const
00009fc: 04                                        ; i32 literal
00009fd: 6c                                        ; i32.mul
00009fe: 6a                                        ; i32.add
00009ff: 28                                        ; i32.load
0000a00: 02                                        ; alignment
0000a01: 00                                        ; load offset
0000a02: 41                                        ; i32.const
0000a03: 00                                        ; i32 literal
0000a04: 6a                                        ; i32.add
0000a05: 20                                        ; local.get
0000a06: 09                                        ; local index
0000a07: bb                                        ; f64.promote_f32
0000a08: 20                                        ; local.get
0000a09: 12                                        ; local index
0000a0a: bb                                        ; f64.promote_f32
0000a0b: 20                                        ; local.get
0000a0c: 1a                                        ; local index
0000a0d: a2                                        ; f64.mul
0000a0e: a0                                        ; f64.add
0000a0f: b6                                        ; f32.demote_f64
0000a10: 38                                        ; f32.store
0000a11: 02                                        ; alignment
0000a12: 00                                        ; store offset
0000a13: 23                                        ; global.get
0000a14: 0f                                        ; global index
0000a15: 41                                        ; i32.const
0000a16: 08                                        ; i32 literal
0000a17: 6a                                        ; i32.add
0000a18: 20                                        ; local.get
0000a19: 0b                                        ; local index
0000a1a: 41                                        ; i32.const
0000a1b: 04                                        ; i32 literal
0000a1c: 6c                                        ; i32.mul
0000a1d: 6a                                        ; i32.add
0000a1e: 28                                        ; i32.load
0000a1f: 02                                        ; alignment
0000a20: 00                                        ; load offset
0000a21: 41                                        ; i32.const
0000a22: 04                                        ; i32 literal
0000a23: 6a                                        ; i32.add
0000a24: 20                                        ; local.get
0000a25: 0f                                        ; local index
0000a26: bb                                        ; f64.promote_f32
0000a27: 20                                        ; local.get
0000a28: 11                                        ; local index
0000a29: bb                                        ; f64.promote_f32
0000a2a: 20                                        ; local.get
0000a2b: 1b                                        ; local index
0000a2c: a2                                        ; f64.mul
0000a2d: a0                                        ; f64.add
0000a2e: b6                                        ; f32.demote_f64
0000a2f: 38                                        ; f32.store
0000a30: 02                                        ; alignment
0000a31: 00                                        ; store offset
0000a32: 23                                        ; global.get
0000a33: 0f                                        ; global index
0000a34: 41                                        ; i32.const
0000a35: 08                                        ; i32 literal
0000a36: 6a                                        ; i32.add
0000a37: 20                                        ; local.get
0000a38: 0b                                        ; local index
0000a39: 41                                        ; i32.const
0000a3a: 04                                        ; i32 literal
0000a3b: 6c                                        ; i32.mul
0000a3c: 6a                                        ; i32.add
0000a3d: 28                                        ; i32.load
0000a3e: 02                                        ; alignment
0000a3f: 00                                        ; load offset
0000a40: 41                                        ; i32.const
0000a41: 00                                        ; i32 literal
0000a42: 6a                                        ; i32.add
0000a43: 20                                        ; local.get
0000a44: 10                                        ; local index
0000a45: bb                                        ; f64.promote_f32
0000a46: 20                                        ; local.get
0000a47: 12                                        ; local index
0000a48: bb                                        ; f64.promote_f32
0000a49: 20                                        ; local.get
0000a4a: 1b                                        ; local index
0000a4b: a2                                        ; f64.mul
0000a4c: a0                                        ; f64.add
0000a4d: b6                                        ; f32.demote_f64
0000a4e: 38                                        ; f32.store
0000a4f: 02                                        ; alignment
0000a50: 00                                        ; store offset
0000a51: 20                                        ; local.get
0000a52: 0a                                        ; local index
0000a53: 41                                        ; i32.const
0000a54: 00                                        ; i32 literal
0000a55: 6a                                        ; i32.add
0000a56: 28                                        ; i32.load
0000a57: 02                                        ; alignment
0000a58: 00                                        ; load offset
0000a59: 21                                        ; local.set
0000a5a: 0a                                        ; local index
0000a5b: 0b                                        ; end
0000a5c: 05                                        ; else
0000a5d: 20                                        ; local.get
0000a5e: 0a                                        ; local index
0000a5f: 41                                        ; i32.const
0000a60: 00                                        ; i32 literal
0000a61: 6a                                        ; i32.add
0000a62: 28                                        ; i32.load
0000a63: 02                                        ; alignment
0000a64: 00                                        ; load offset
0000a65: 21                                        ; local.set
0000a66: 0a                                        ; local index
0000a67: 0b                                        ; end
0000a68: 0c                                        ; br
0000a69: 00                                        ; break depth
0000a6a: 0b                                        ; end
0000a6b: 0b                                        ; end
0000a6c: 20                                        ; local.get
0000a6d: 03                                        ; local index
0000a6e: 41                                        ; i32.const
0000a6f: 00                                        ; i32 literal
0000a70: 6a                                        ; i32.add
0000a71: 28                                        ; i32.load
0000a72: 02                                        ; alignment
0000a73: 00                                        ; load offset
0000a74: 21                                        ; local.set
0000a75: 03                                        ; local index
0000a76: 0c                                        ; br
0000a77: 00                                        ; break depth
0000a78: 0b                                        ; end
0000a79: 0b                                        ; end
0000a7a: 20                                        ; local.get
0000a7b: 02                                        ; local index
0000a7c: 41                                        ; i32.const
0000a7d: 01                                        ; i32 literal
0000a7e: 6a                                        ; i32.add
0000a7f: 21                                        ; local.set
0000a80: 02                                        ; local index
0000a81: 0c                                        ; br
0000a82: 00                                        ; break depth
0000a83: 0b                                        ; end
0000a84: 0b                                        ; end
0000a85: 20                                        ; local.get
0000a86: 00                                        ; local index
0000a87: 41                                        ; i32.const
0000a88: 01                                        ; i32 literal
0000a89: 6a                                        ; i32.add
0000a8a: 21                                        ; local.set
0000a8b: 00                                        ; local index
0000a8c: 0c                                        ; br
0000a8d: 00                                        ; break depth
0000a8e: 0b                                        ; end
0000a8f: 0b                                        ; end
0000a90: 0b                                        ; end
; move data: [7ba, a91) -> [7bb, a92)
00007b9: d705                                      ; FIXUP func body size
; function body 7
0000a92: 00                                        ; func body size (guess)
0000a93: 00                                        ; local decl count
0000a94: 10                                        ; call
0000a95: 0c                                        ; function index
0000a96: 20                                        ; local.get
0000a97: 00                                        ; local index
0000a98: 20                                        ; local.get
0000a99: 01                                        ; local index
0000a9a: 10                                        ; call
0000a9b: 0d                                        ; function index
0000a9c: 10                                        ; call
0000a9d: 0e                                        ; function index
0000a9e: 0b                                        ; end
0000a92: 0c                                        ; FIXUP func body size
; function body 8
0000a9f: 00                                        ; func body size (guess)
0000aa0: 01                                        ; local decl count
0000aa1: 02                                        ; local type count
0000aa2: 7f                                        ; i32
0000aa3: 20                                        ; local.get
0000aa4: 00                                        ; local index
0000aa5: 20                                        ; local.get
0000aa6: 02                                        ; local index
0000aa7: 92                                        ; f32.add
0000aa8: 20                                        ; local.get
0000aa9: 03                                        ; local index
0000aaa: 20                                        ; local.get
0000aab: 05                                        ; local index
0000aac: 93                                        ; f32.sub
0000aad: 5d                                        ; f32.lt
0000aae: 20                                        ; local.get
0000aaf: 00                                        ; local index
0000ab0: 20                                        ; local.get
0000ab1: 02                                        ; local index
0000ab2: 93                                        ; f32.sub
0000ab3: 20                                        ; local.get
0000ab4: 03                                        ; local index
0000ab5: 20                                        ; local.get
0000ab6: 05                                        ; local index
0000ab7: 92                                        ; f32.add
0000ab8: 5e                                        ; f32.gt
0000ab9: 6a                                        ; i32.add
0000aba: 20                                        ; local.get
0000abb: 01                                        ; local index
0000abc: 20                                        ; local.get
0000abd: 02                                        ; local index
0000abe: 92                                        ; f32.add
0000abf: 20                                        ; local.get
0000ac0: 04                                        ; local index
0000ac1: 20                                        ; local.get
0000ac2: 05                                        ; local index
0000ac3: 93                                        ; f32.sub
0000ac4: 5d                                        ; f32.lt
0000ac5: 6a                                        ; i32.add
0000ac6: 20                                        ; local.get
0000ac7: 01                                        ; local index
0000ac8: 20                                        ; local.get
0000ac9: 02                                        ; local index
0000aca: 93                                        ; f32.sub
0000acb: 20                                        ; local.get
0000acc: 04                                        ; local index
0000acd: 20                                        ; local.get
0000ace: 05                                        ; local index
0000acf: 92                                        ; f32.add
0000ad0: 5e                                        ; f32.gt
0000ad1: 6a                                        ; i32.add
0000ad2: 04                                        ; if
0000ad3: 40                                        ; void
0000ad4: 41                                        ; i32.const
0000ad5: 00                                        ; i32 literal
0000ad6: 0f                                        ; return
0000ad7: 0b                                        ; end
0000ad8: 20                                        ; local.get
0000ad9: 03                                        ; local index
0000ada: 20                                        ; local.get
0000adb: 00                                        ; local index
0000adc: 93                                        ; f32.sub
0000add: bb                                        ; f64.promote_f32
0000ade: 41                                        ; i32.const
0000adf: 02                                        ; i32 literal
0000ae0: b2                                        ; f32.convert_i32_s
0000ae1: bb                                        ; f64.promote_f32
0000ae2: 10                                        ; call
0000ae3: 00                                        ; function index
0000ae4: 20                                        ; local.get
0000ae5: 04                                        ; local index
0000ae6: 20                                        ; local.get
0000ae7: 01                                        ; local index
0000ae8: 93                                        ; f32.sub
0000ae9: bb                                        ; f64.promote_f32
0000aea: 41                                        ; i32.const
0000aeb: 02                                        ; i32 literal
0000aec: b2                                        ; f32.convert_i32_s
0000aed: bb                                        ; f64.promote_f32
0000aee: 10                                        ; call
0000aef: 00                                        ; function index
0000af0: a0                                        ; f64.add
0000af1: 10                                        ; call
0000af2: 01                                        ; function index
0000af3: 20                                        ; local.get
0000af4: 02                                        ; local index
0000af5: 20                                        ; local.get
0000af6: 05                                        ; local index
0000af7: 92                                        ; f32.add
0000af8: bb                                        ; f64.promote_f32
0000af9: 65                                        ; f64.le
0000afa: 0f                                        ; return
0000afb: 0b                                        ; end
0000a9f: 5c                                        ; FIXUP func body size
; function body 9
0000afc: 00                                        ; func body size (guess)
0000afd: 00                                        ; local decl count
0000afe: 41                                        ; i32.const
0000aff: c007                                      ; i32 literal
0000b01: 0f                                        ; return
0000b02: 0b                                        ; end
0000afc: 06                                        ; FIXUP func body size
; function body 10
0000b03: 00                                        ; func body size (guess)
0000b04: 00                                        ; local decl count
0000b05: 41                                        ; i32.const
0000b06: cb07                                      ; i32 literal
0000b08: 0f                                        ; return
0000b09: 0b                                        ; end
0000b03: 06                                        ; FIXUP func body size
; function body 11
0000b0a: 00                                        ; func body size (guess)
0000b0b: 00                                        ; local decl count
0000b0c: 41                                        ; i32.const
0000b0d: 9c08                                      ; i32 literal
0000b0f: 0f                                        ; return
0000b10: 0b                                        ; end
0000b0a: 06                                        ; FIXUP func body size
; function body 12
0000b11: 00                                        ; func body size (guess)
0000b12: 00                                        ; local decl count
0000b13: 41                                        ; i32.const
0000b14: a008                                      ; i32 literal
0000b16: 0f                                        ; return
0000b17: 0b                                        ; end
0000b11: 06                                        ; FIXUP func body size
; function body 13
0000b18: 00                                        ; func body size (guess)
0000b19: 00                                        ; local decl count
0000b1a: 41                                        ; i32.const
0000b1b: ab08                                      ; i32 literal
0000b1d: 0f                                        ; return
0000b1e: 0b                                        ; end
0000b18: 06                                        ; FIXUP func body size
; function body 14
0000b1f: 00                                        ; func body size (guess)
0000b20: 00                                        ; local decl count
0000b21: 41                                        ; i32.const
0000b22: f108                                      ; i32 literal
0000b24: 0f                                        ; return
0000b25: 0b                                        ; end
0000b1f: 06                                        ; FIXUP func body size
; function body 15
0000b26: 00                                        ; func body size (guess)
0000b27: 00                                        ; local decl count
0000b28: 41                                        ; i32.const
0000b29: ff08                                      ; i32 literal
0000b2b: 0f                                        ; return
0000b2c: 0b                                        ; end
0000b26: 06                                        ; FIXUP func body size
; function body 16
0000b2d: 00                                        ; func body size (guess)
0000b2e: 00                                        ; local decl count
0000b2f: 41                                        ; i32.const
0000b30: a409                                      ; i32 literal
0000b32: 0f                                        ; return
0000b33: 0b                                        ; end
0000b2d: 06                                        ; FIXUP func body size
; function body 17
0000b34: 00                                        ; func body size (guess)
0000b35: 00                                        ; local decl count
0000b36: 41                                        ; i32.const
0000b37: ac09                                      ; i32 literal
0000b39: 0f                                        ; return
0000b3a: 0b                                        ; end
0000b34: 06                                        ; FIXUP func body size
; function body 18
0000b3b: 00                                        ; func body size (guess)
0000b3c: 00                                        ; local decl count
0000b3d: 10                                        ; call
0000b3e: 1b                                        ; function index
0000b3f: 10                                        ; call
0000b40: 1c                                        ; function index
0000b41: 10                                        ; call
0000b42: 1d                                        ; function index
0000b43: 10                                        ; call
0000b44: 1e                                        ; function index
0000b45: 0b                                        ; end
0000b3b: 0a                                        ; FIXUP func body size
; function body 19
0000b46: 00                                        ; func body size (guess)
0000b47: 01                                        ; local decl count
0000b48: 04                                        ; local type count
0000b49: 7f                                        ; i32
0000b4a: 23                                        ; global.get
0000b4b: 00                                        ; global index
0000b4c: 41                                        ; i32.const
0000b4d: 0d                                        ; i32 literal
0000b4e: 36                                        ; i32.store
0000b4f: 02                                        ; alignment
0000b50: 00                                        ; store offset
0000b51: 23                                        ; global.get
0000b52: 00                                        ; global index
0000b53: 41                                        ; i32.const
0000b54: 04                                        ; i32 literal
0000b55: 6a                                        ; i32.add
0000b56: 23                                        ; global.get
0000b57: 0d                                        ; global index
0000b58: 41                                        ; i32.const
0000b59: 01                                        ; i32 literal
0000b5a: 6b                                        ; i32.sub
0000b5b: 36                                        ; i32.store
0000b5c: 02                                        ; alignment
0000b5d: 00                                        ; store offset
0000b5e: 23                                        ; global.get
0000b5f: 00                                        ; global index
0000b60: 41                                        ; i32.const
0000b61: 08                                        ; i32 literal
0000b62: 6a                                        ; i32.add
0000b63: 21                                        ; local.set
0000b64: 00                                        ; local index
0000b65: 20                                        ; local.get
0000b66: 00                                        ; local index
0000b67: 41                                        ; i32.const
0000b68: 78                                        ; i32 literal
0000b69: 6a                                        ; i32.add
0000b6a: 41                                        ; i32.const
0000b6b: 08                                        ; i32 literal
0000b6c: 23                                        ; global.get
0000b6d: 0d                                        ; global index
0000b6e: 41                                        ; i32.const
0000b6f: 01                                        ; i32 literal
0000b70: 6b                                        ; i32.sub
0000b71: 41                                        ; i32.const
0000b72: 04                                        ; i32 literal
0000b73: 6c                                        ; i32.mul
0000b74: 6a                                        ; i32.add
0000b75: 6a                                        ; i32.add
0000b76: 24                                        ; global.set
0000b77: 00                                        ; global index
0000b78: 20                                        ; local.get
0000b79: 00                                        ; local index
0000b7a: 41                                        ; i32.const
0000b7b: 78                                        ; i32 literal
0000b7c: 6a                                        ; i32.add
0000b7d: 24                                        ; global.set
0000b7e: 0e                                        ; global index
0000b7f: 23                                        ; global.get
0000b80: 00                                        ; global index
0000b81: 41                                        ; i32.const
0000b82: de02                                      ; i32 literal
0000b84: 36                                        ; i32.store
0000b85: 02                                        ; alignment
0000b86: 00                                        ; store offset
0000b87: 23                                        ; global.get
0000b88: 00                                        ; global index
0000b89: 41                                        ; i32.const
0000b8a: 04                                        ; i32 literal
0000b8b: 6a                                        ; i32.add
0000b8c: 23                                        ; global.get
0000b8d: 0d                                        ; global index
0000b8e: 41                                        ; i32.const
0000b8f: 01                                        ; i32 literal
0000b90: 6b                                        ; i32.sub
0000b91: 36                                        ; i32.store
0000b92: 02                                        ; alignment
0000b93: 00                                        ; store offset
0000b94: 23                                        ; global.get
0000b95: 00                                        ; global index
0000b96: 41                                        ; i32.const
0000b97: 08                                        ; i32 literal
0000b98: 6a                                        ; i32.add
0000b99: 21                                        ; local.set
0000b9a: 01                                        ; local index
0000b9b: 20                                        ; local.get
0000b9c: 01                                        ; local index
0000b9d: 41                                        ; i32.const
0000b9e: 78                                        ; i32 literal
0000b9f: 6a                                        ; i32.add
0000ba0: 41                                        ; i32.const
0000ba1: 08                                        ; i32 literal
0000ba2: 23                                        ; global.get
0000ba3: 0d                                        ; global index
0000ba4: 41                                        ; i32.const
0000ba5: 01                                        ; i32 literal
0000ba6: 6b                                        ; i32.sub
0000ba7: 41                                        ; i32.const
0000ba8: 04                                        ; i32 literal
0000ba9: 6c                                        ; i32.mul
0000baa: 6a                                        ; i32.add
0000bab: 6a                                        ; i32.add
0000bac: 24                                        ; global.set
0000bad: 00                                        ; global index
0000bae: 20                                        ; local.get
0000baf: 01                                        ; local index
0000bb0: 41                                        ; i32.const
0000bb1: 78                                        ; i32 literal
0000bb2: 6a                                        ; i32.add
0000bb3: 24                                        ; global.set
0000bb4: 0f                                        ; global index
0000bb5: 23                                        ; global.get
0000bb6: 00                                        ; global index
0000bb7: 41                                        ; i32.const
0000bb8: ff04                                      ; i32 literal
0000bba: 36                                        ; i32.store
0000bbb: 02                                        ; alignment
0000bbc: 00                                        ; store offset
0000bbd: 23                                        ; global.get
0000bbe: 00                                        ; global index
0000bbf: 41                                        ; i32.const
0000bc0: 04                                        ; i32 literal
0000bc1: 6a                                        ; i32.add
0000bc2: 23                                        ; global.get
0000bc3: 0d                                        ; global index
0000bc4: 41                                        ; i32.const
0000bc5: 04                                        ; i32 literal
0000bc6: 6c                                        ; i32.mul
0000bc7: 41                                        ; i32.const
0000bc8: 01                                        ; i32 literal
0000bc9: 6b                                        ; i32.sub
0000bca: 36                                        ; i32.store
0000bcb: 02                                        ; alignment
0000bcc: 00                                        ; store offset
0000bcd: 23                                        ; global.get
0000bce: 00                                        ; global index
0000bcf: 41                                        ; i32.const
0000bd0: 08                                        ; i32 literal
0000bd1: 6a                                        ; i32.add
0000bd2: 21                                        ; local.set
0000bd3: 02                                        ; local index
0000bd4: 20                                        ; local.get
0000bd5: 02                                        ; local index
0000bd6: 41                                        ; i32.const
0000bd7: 78                                        ; i32 literal
0000bd8: 6a                                        ; i32.add
0000bd9: 41                                        ; i32.const
0000bda: 08                                        ; i32 literal
0000bdb: 23                                        ; global.get
0000bdc: 0d                                        ; global index
0000bdd: 41                                        ; i32.const
0000bde: 04                                        ; i32 literal
0000bdf: 6c                                        ; i32.mul
0000be0: 41                                        ; i32.const
0000be1: 01                                        ; i32 literal
0000be2: 6b                                        ; i32.sub
0000be3: 41                                        ; i32.const
0000be4: 04                                        ; i32 literal
0000be5: 6c                                        ; i32.mul
0000be6: 6a                                        ; i32.add
0000be7: 6a                                        ; i32.add
0000be8: 24                                        ; global.set
0000be9: 00                                        ; global index
0000bea: 20                                        ; local.get
0000beb: 02                                        ; local index
0000bec: 41                                        ; i32.const
0000bed: 78                                        ; i32 literal
0000bee: 6a                                        ; i32.add
0000bef: 24                                        ; global.set
0000bf0: 10                                        ; global index
0000bf1: 23                                        ; global.get
0000bf2: 00                                        ; global index
0000bf3: 41                                        ; i32.const
0000bf4: ff04                                      ; i32 literal
0000bf6: 36                                        ; i32.store
0000bf7: 02                                        ; alignment
0000bf8: 00                                        ; store offset
0000bf9: 23                                        ; global.get
0000bfa: 00                                        ; global index
0000bfb: 41                                        ; i32.const
0000bfc: 04                                        ; i32 literal
0000bfd: 6a                                        ; i32.add
0000bfe: 23                                        ; global.get
0000bff: 0c                                        ; global index
0000c00: 41                                        ; i32.const
0000c01: 01                                        ; i32 literal
0000c02: 6b                                        ; i32.sub
0000c03: 36                                        ; i32.store
0000c04: 02                                        ; alignment
0000c05: 00                                        ; store offset
0000c06: 23                                        ; global.get
0000c07: 00                                        ; global index
0000c08: 41                                        ; i32.const
0000c09: 08                                        ; i32 literal
0000c0a: 6a                                        ; i32.add
0000c0b: 21                                        ; local.set
0000c0c: 03                                        ; local index
0000c0d: 20                                        ; local.get
0000c0e: 03                                        ; local index
0000c0f: 41                                        ; i32.const
0000c10: 78                                        ; i32 literal
0000c11: 6a                                        ; i32.add
0000c12: 41                                        ; i32.const
0000c13: 08                                        ; i32 literal
0000c14: 23                                        ; global.get
0000c15: 0c                                        ; global index
0000c16: 41                                        ; i32.const
0000c17: 01                                        ; i32 literal
0000c18: 6b                                        ; i32.sub
0000c19: 41                                        ; i32.const
0000c1a: 04                                        ; i32 literal
0000c1b: 6c                                        ; i32.mul
0000c1c: 6a                                        ; i32.add
0000c1d: 6a                                        ; i32.add
0000c1e: 24                                        ; global.set
0000c1f: 00                                        ; global index
0000c20: 20                                        ; local.get
0000c21: 03                                        ; local index
0000c22: 41                                        ; i32.const
0000c23: 78                                        ; i32 literal
0000c24: 6a                                        ; i32.add
0000c25: 24                                        ; global.set
0000c26: 11                                        ; global index
0000c27: 0b                                        ; end
; move data: [b47, c28) -> [b48, c29)
0000b46: e101                                      ; FIXUP func body size
; function body 20
0000c29: 00                                        ; func body size (guess)
0000c2a: 00                                        ; local decl count
0000c2b: 0b                                        ; end
0000c29: 02                                        ; FIXUP func body size
; function body 21
0000c2c: 00                                        ; func body size (guess)
0000c2d: 01                                        ; local decl count
0000c2e: 02                                        ; local type count
0000c2f: 7f                                        ; i32
0000c30: 41                                        ; i32.const
0000c31: 00                                        ; i32 literal
0000c32: 21                                        ; local.set
0000c33: 00                                        ; local index
0000c34: 02                                        ; block
0000c35: 40                                        ; void
0000c36: 03                                        ; loop
0000c37: 40                                        ; void
0000c38: 20                                        ; local.get
0000c39: 00                                        ; local index
0000c3a: 23                                        ; global.get
0000c3b: 11                                        ; global index
0000c3c: 41                                        ; i32.const
0000c3d: 04                                        ; i32 literal
0000c3e: 6a                                        ; i32.add
0000c3f: 28                                        ; i32.load
0000c40: 02                                        ; alignment
0000c41: 00                                        ; load offset
0000c42: 41                                        ; i32.const
0000c43: 01                                        ; i32 literal
0000c44: 6b                                        ; i32.sub
0000c45: 4a                                        ; i32.gt_s
0000c46: 0d                                        ; br_if
0000c47: 01                                        ; break depth
0000c48: 23                                        ; global.get
0000c49: 11                                        ; global index
0000c4a: 41                                        ; i32.const
0000c4b: 08                                        ; i32 literal
0000c4c: 6a                                        ; i32.add
0000c4d: 20                                        ; local.get
0000c4e: 00                                        ; local index
0000c4f: 41                                        ; i32.const
0000c50: 04                                        ; i32 literal
0000c51: 6c                                        ; i32.mul
0000c52: 6a                                        ; i32.add
0000c53: 20                                        ; local.get
0000c54: 01                                        ; local index
0000c55: 41                                        ; i32.const
0000c56: 78                                        ; i32 literal
0000c57: 6a                                        ; i32.add
0000c58: 36                                        ; i32.store
0000c59: 02                                        ; alignment
0000c5a: 00                                        ; store offset
0000c5b: 20                                        ; local.get
0000c5c: 00                                        ; local index
0000c5d: 41                                        ; i32.const
0000c5e: 01                                        ; i32 literal
0000c5f: 6a                                        ; i32.add
0000c60: 21                                        ; local.set
0000c61: 00                                        ; local index
0000c62: 0c                                        ; br
0000c63: 00                                        ; break depth
0000c64: 0b                                        ; end
0000c65: 0b                                        ; end
0000c66: 0b                                        ; end
0000c2c: 3a                                        ; FIXUP func body size
; function body 22
0000c67: 00                                        ; func body size (guess)
0000c68: 00                                        ; local decl count
0000c69: 0b                                        ; end
0000c67: 02                                        ; FIXUP func body size
; move data: [309, c6a) -> [30a, c6b)
0000308: e112                                      ; FIXUP section size
; section "Data" (11)
0000c6b: 0b                                        ; section code
0000c6c: 00                                        ; section size (guess)
0000c6d: 0c                                        ; num data segments
; data segment header 0
0000c6e: 00                                      
0000c6f: 41                                        ; i32.const
0000c70: c007                                      ; i32 literal
0000c72: 0b                                        ; end
0000c73: 0b                                        ; data segment size
; data segment data 0
0000c74: 5765 6247 4c2d 4465 6d6f 00               ; data segment data
; data segment header 1
0000c7f: 00                                      
0000c80: 41                                        ; i32.const
0000c81: cb07                                      ; i32 literal
0000c83: 0b                                        ; end
0000c84: 51                                        ; data segment size
; data segment data 1
0000c85: 5765 6241 7373 656d 626c 7920 636f 6e76 
0000c95: 6572 7369 6f6e 2064 656d 6f6e 7374 7261 
0000ca5: 7469 6e67 2074 6865 2066 6173 7465 722d 
0000cb5: 7065 7266 6f72 6d69 6e67 2067 7269 6420 
0000cc5: 6f66 206c 696e 6b65 642d 6c69 7374 732e 
0000cd5: 00                                        ; data segment data
; data segment header 2
0000cd6: 00                                      
0000cd7: 41                                        ; i32.const
0000cd8: 9c08                                      ; i32 literal
0000cda: 0b                                        ; end
0000cdb: 04                                        ; data segment size
; data segment data 2
0000cdc: 4d49 5400                                 ; data segment data
; data segment header 3
0000ce0: 00                                      
0000ce1: 41                                        ; i32.const
0000ce2: a008                                      ; i32 literal
0000ce4: 0b                                        ; end
0000ce5: 0b                                        ; data segment size
; data segment data 3
0000ce6: 5765 6247 4c2d 4465 6d6f 00               ; data segment data
; data segment header 4
0000cf1: 00                                      
0000cf2: 41                                        ; i32.const
0000cf3: ab08                                      ; i32 literal
0000cf5: 0b                                        ; end
0000cf6: 46                                        ; data segment size
; data segment data 4
0000cf7: 6874 7470 733a 2f2f 6769 7468 7562 2e63 
0000d07: 6f6d 2f67 7579 6265 6466 6f72 642f 7761 
0000d17: 736d 2d64 656d 6f2f 626c 6f62 2f6d 6173 
0000d27: 7465 722f 6e61 7469 7665 2f64 656d 6f2d 
0000d37: 6f70 742e 6300                            ; data segment data
; data segment header 5
0000d3d: 00                                      
0000d3e: 41                                        ; i32.const
0000d3f: f108                                      ; i32 literal
0000d41: 0b                                        ; end
0000d42: 0e                                        ; data segment size
; data segment data 5
0000d43: 7661 6e69 6c6c 6176 622e 6170 7000        ; data segment data
; data segment header 6
0000d51: 00                                      
0000d52: 41                                        ; i32.const
0000d53: ff08                                      ; i32 literal
0000d55: 0b                                        ; end
0000d56: 25                                        ; data segment size
; data segment data 6
0000d57: 3833 6361 3262 3933 2d34 6535 372d 3464 
0000d67: 3434 2d62 3262 632d 3136 3332 3532 6139 
0000d77: 3330 3564 00                              ; data segment data
; data segment header 7
0000d7c: 00                                      
0000d7d: 41                                        ; i32.const
0000d7e: a409                                      ; i32 literal
0000d80: 0b                                        ; end
0000d81: 08                                        ; data segment size
; data segment data 7
0000d82: 312e 302e 302e 3000                       ; data segment data
; data segment header 8
0000d8a: 00                                      
0000d8b: 41                                        ; i32.const
0000d8c: ac09                                      ; i32 literal
0000d8e: 0b                                        ; end
0000d8f: 08                                        ; data segment size
; data segment data 8
0000d90: 312e 302e 302e 3000                       ; data segment data
; data segment header 9
0000d98: 00                                      
0000d99: 41                                        ; i32.const
0000d9a: 0d                                        ; i32 literal
0000d9b: 0b                                        ; end
0000d9c: d102                                      ; data segment size
; data segment data 9
0000d9e: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000dae: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
0000dbe: 6448 4969 4f6e 7369 566d 4673 6457 5569 
0000dce: 4f6a 457a 6653 7769 5932 7868 6333 4d69 
0000dde: 4f69 4a44 6158 4a6a 6247 5569 4c43 4a6a 
0000dee: 6247 467a 6331 3970 5a43 4936 4d54 4d73 
0000dfe: 496d 5a70 5a57 786b 6379 4936 6579 4a34 
0000e0e: 496a 7037 496d 646c 626d 5679 6157 4d69 
0000e1e: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a6d 
0000e2e: 4d7a 4969 4c43 4a30 6558 426c 496a 6f7a 
0000e3e: 6653 7769 6553 4936 6579 4a6e 5a57 356c 
0000e4e: 636d 6c6a 496a 7062 5853 7769 636d 4633 
0000e5e: 496a 6f69 5a6a 4d79 4969 7769 6448 6c77 
0000e6e: 5a53 4936 4d33 3073 496e 4969 4f6e 7369 
0000e7e: 5a32 5675 5a58 4a70 5979 4936 5731 3073 
0000e8e: 496e 4a68 6479 4936 496d 597a 4d69 4973 
0000e9e: 496e 5235 6347 5569 4f6a 4e39 6653 7769 
0000eae: 6158 4e54 6448 4a31 5933 5169 4f6d 5a68 
0000ebe: 6248 4e6c 4c43 4a74 5a58 526f 6232 527a 
0000ece: 496a 7037 6653 7769 626d 4674 5a58 4e77 
0000ede: 5957 4e6c 496a 7075 6457 7873 6651 3d3d 
0000eee: 00                                        ; data segment data
; data segment header 10
0000eef: 00                                      
0000ef0: 41                                        ; i32.const
0000ef1: de02                                      ; i32 literal
0000ef3: 0b                                        ; end
0000ef4: a102                                      ; data segment size
; data segment data 10
0000ef6: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000f06: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
0000f16: 6448 4969 4f6e 7369 566d 4673 6457 5569 
0000f26: 4f6a 4d31 4d48 3073 496d 4e73 5958 4e7a 
0000f36: 496a 6f69 5132 6c79 5932 786c 5669 4973 
0000f46: 496d 4e73 5958 4e7a 5832 6c6b 496a 6f7a 
0000f56: 4e54 4173 496d 5a70 5a57 786b 6379 4936 
0000f66: 6579 4a32 6553 4936 6579 4a6e 5a57 356c 
0000f76: 636d 6c6a 496a 7062 5853 7769 636d 4633 
0000f86: 496a 6f69 5a6a 4d79 4969 7769 6448 6c77 
0000f96: 5a53 4936 4d33 3073 496e 5a34 496a 7037 
0000fa6: 496d 646c 626d 5679 6157 4d69 4f6c 7464 
0000fb6: 4c43 4a79 5958 6369 4f69 4a6d 4d7a 4969 
0000fc6: 4c43 4a30 6558 426c 496a 6f7a 6658 3073 
0000fd6: 496d 6c7a 5533 5279 6457 4e30 496a 706d 
0000fe6: 5957 787a 5a53 7769 6257 5630 6147 396b 
0000ff6: 6379 4936 6533 3073 496d 3568 6257 567a 
0001006: 6347 466a 5a53 4936 626e 5673 6248 303d 
0001016: 00                                        ; data segment data
; data segment header 11
0001017: 00                                      
0001018: 41                                        ; i32.const
0001019: ff04                                      ; i32 literal
000101b: 0b                                        ; end
000101c: c502                                      ; data segment size
; data segment data 11
000101e: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
000102e: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
000103e: 6448 4969 4f6e 7369 566d 4673 6457 5569 
000104e: 4f6a 597a 4f58 3073 496d 4e73 5958 4e7a 
000105e: 496a 6f69 5132 5673 6245 4e70 636d 4e73 
000106e: 5a53 4973 496d 4e73 5958 4e7a 5832 6c6b 
000107e: 496a 6f32 4d7a 6b73 496d 5a70 5a57 786b 
000108e: 6379 4936 6579 4a75 5a58 6830 496a 7037 
000109e: 496d 646c 626d 5679 6157 4d69 4f6c 7464 
00010ae: 4c43 4a79 5958 6369 4f69 4a62 4e6a 4d35 
00010be: 5855 4e6c 6247 7844 6158 4a6a 6247 5569 
00010ce: 4c43 4a30 6558 426c 496a 6f78 4d48 3073 
00010de: 496d 4e70 636d 4e73 5a55 6c75 5a47 5634 
00010ee: 496a 7037 496d 646c 626d 5679 6157 4d69 
00010fe: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a70 
000110e: 4d7a 4969 4c43 4a30 6558 426c 496a 6f78 
000111e: 6658 3073 496d 6c7a 5533 5279 6457 4e30 
000112e: 496a 706d 5957 787a 5a53 7769 6257 5630 
000113e: 6147 396b 6379 4936 6533 3073 496d 3568 
000114e: 6257 567a 6347 466a 5a53 4936 626e 5673 
000115e: 6248 303d 00                              ; data segment data
; move data: [c6d, 1163) -> [c6e, 1164)
0000c6c: f609                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0131 0960 027c 7c01 
0000010: 7c60 017c 017c 6000 017c 6002 7f7f 0060 
0000020: 027f 7f01 7f60 0001 7f60 027d 7d00 6000 
0000030: 0060 067d 7d7d 7d7d 7d01 7f02 7609 044d 
0000040: 6174 6803 706f 7700 0004 4d61 7468 0473 
0000050: 7172 7400 0104 4d61 7468 0365 7870 0001 
0000060: 044d 6174 6803 636f 7300 0104 4d61 7468 
0000070: 0672 616e 646f 6d00 0204 4d61 7468 0463 
0000080: 6569 6c00 0104 4d61 7468 0566 6c6f 6f72 
0000090: 0001 0247 4309 6164 644f 626a 6563 7400 
00000a0: 0303 656e 760a 6279 7465 6368 756e 6b73 
00000b0: 0200 0103 1817 0405 0506 0706 0706 0805 
00000c0: 0505 0505 0505 0505 0707 0707 0706 9c01 
00000d0: 127f 0141 b409 0b7c 0144 6957 148b 0abf 
00000e0: 0540 0b7c 0144 182d 4454 fb21 0940 0b7f 
00000f0: 0141 ffff ffff 070b 7e01 42ff ffff ffff 
0000100: ffff ffff 000b 7d01 43ff ff7f 7f0b 7c01 
0000110: 44ff ffff ffff ffef 7f0b 7f01 4180 8080 
0000120: 8078 0b7e 0142 8080 8080 8080 8080 807f 
0000130: 0b7d 0143 ffff 7fff 0b7c 0144 ffff ffff 
0000140: ffff efff 0b7f 0141 f800 0b7f 0141 c600 
0000150: 0b7f 0141 90ce 000b 7f01 4100 0b7f 0141 
0000160: 000b 7f01 4100 0b7f 0141 000b 0795 030e 
0000170: 1841 6c67 6f72 6974 686d 2e67 6574 4369 
0000180: 7263 6c65 436f 756e 7400 091d 416c 676f 
0000190: 7269 7468 6d2e 6765 7443 6972 636c 6544 
00001a0: 6174 614f 6666 7365 7400 0a0e 416c 676f 
00001b0: 7269 7468 6d2e 696e 6974 000b 1241 6c67 
00001c0: 6f72 6974 686d 2e74 696d 6553 7465 7000 
00001d0: 0f1a 4d61 7468 2e64 6574 6563 7443 6972 
00001e0: 636c 6543 6f6c 6c69 7369 6f6e 0010 1a41 
00001f0: 7373 656d 626c 7949 6e66 6f2e 4173 7365 
0000200: 6d62 6c79 5469 746c 6500 1120 4173 7365 
0000210: 6d62 6c79 496e 666f 2e41 7373 656d 626c 
0000220: 7944 6573 6372 6970 7469 6f6e 0012 1c41 
0000230: 7373 656d 626c 7949 6e66 6f2e 4173 7365 
0000240: 6d62 6c79 436f 6d70 616e 7900 131c 4173 
0000250: 7365 6d62 6c79 496e 666f 2e41 7373 656d 
0000260: 626c 7950 726f 6475 6374 0014 1e41 7373 
0000270: 656d 626c 7949 6e66 6f2e 4173 7365 6d62 
0000280: 6c79 436f 7079 7269 6768 7400 151e 4173 
0000290: 7365 6d62 6c79 496e 666f 2e41 7373 656d 
00002a0: 626c 7954 7261 6465 6d61 726b 0016 1141 
00002b0: 7373 656d 626c 7949 6e66 6f2e 4775 6964 
00002c0: 0017 1c41 7373 656d 626c 7949 6e66 6f2e 
00002d0: 4173 7365 6d62 6c79 5665 7273 696f 6e00 
00002e0: 1820 4173 7365 6d62 6c79 496e 666f 2e41 
00002f0: 7373 656d 626c 7946 696c 6556 6572 7369 
0000300: 6f6e 0019 0801 1a0a e112 1718 0101 7f23 
0000310: 0021 0220 0220 006a 2400 2002 2001 1007 
0000320: 2002 0f0b 0701 047f 230d 0f0b 0500 230e 
0000330: 0f0b b103 0302 7f03 7d01 7f41 0021 0202 
0000340: 4003 4020 0223 0d41 016b 4a0d 0141 0021 
0000350: 0343 0000 0000 2104 4300 0000 0021 0543 
0000360: 0000 0000 2106 0240 0340 4100 2103 2000 
0000370: bb10 04a2 b621 0420 01bb 1004 a2b6 2105 
0000380: 1004 4108 b7a2 1002 44ee 5a42 3ee8 4937 
0000390: 40a3 1005 b621 0620 0020 0420 0692 9341 
00003a0: 00b2 5d20 0420 0693 4100 b25d 6a20 0120 
00003b0: 0520 0692 9341 00b2 5d6a 2005 2006 9341 
00003c0: 00b2 5d6a 0440 4101 2103 0541 0021 0702 
00003d0: 4003 4020 0720 0241 016b 4a0d 0120 0420 
00003e0: 0520 0623 0e41 086a 2007 4104 6c6a 2802 
00003f0: 0041 006a 2a02 0023 0e41 086a 2007 4104 
0000400: 6c6a 2802 0041 046a 2a02 0023 0e41 086a 
0000410: 2007 4104 6c6a 2802 0041 086a 2a02 0010 
0000420: 1004 4041 0121 0341 010d 050b 2007 4101 
0000430: 6a21 070c 000b 0b0b 2003 450d 010c 000b 
0000440: 0b23 0e41 086a 2002 4104 6c6a 2802 0041 
0000450: 006a 2004 3802 0023 0e41 086a 2002 4104 
0000460: 6c6a 2802 0041 046a 2005 3802 0023 0e41 
0000470: 086a 2002 4104 6c6a 2802 0041 086a 2006 
0000480: 3802 0023 0f41 086a 2002 4104 6c6a 2802 
0000490: 0041 046a 1004 4400 0000 0000 00e0 3fa1 
00004a0: 449a 9999 9999 99b9 3fa2 b638 0200 230f 
00004b0: 4108 6a20 0241 046c 6a28 0200 4100 6a10 
00004c0: 0444 0000 0000 0000 e03f a144 9a99 9999 
00004d0: 9999 b93f a2b6 3802 0020 0241 016a 2102 
00004e0: 0c00 0b0b 0b5e 0103 7f41 0021 0002 4003 
00004f0: 4020 0023 0c41 016b 4a0d 0123 1141 086a 
0000500: 2000 4104 6c6a 2802 0021 0141 0021 0202 
0000510: 4003 4020 0223 0b41 016b 4a0d 0120 0141 
0000520: 086a 2002 4104 6c6a 4100 3602 0020 0241 
0000530: 016a 2102 0c00 0b0b 2000 4101 6a21 000c 
0000540: 000b 0b0b f404 0302 7f05 7d08 7f41 0021 
0000550: 0241 0021 0302 4003 4020 0323 0d41 016b 
0000560: 4a0d 0123 0e41 086a 2003 4104 6c6a 2802 
0000570: 0041 006a 2a02 0021 0423 0e41 086a 2003 
0000580: 4104 6c6a 2802 0041 046a 2a02 0021 0523 
0000590: 0e41 086a 2003 4104 6c6a 2802 0041 086a 
00005a0: 2a02 0021 0623 0f41 086a 2003 4104 6c6a 
00005b0: 2802 0041 046a 2a02 0021 0723 0f41 086a 
00005c0: 2003 4104 6c6a 2802 0041 006a 2a02 0021 
00005d0: 0820 08bb 442d 431c ebe2 361a 3fa0 b621 
00005e0: 0820 0020 0420 0692 9341 00b2 5d20 0741 
00005f0: 00b2 5e6c 2004 2006 9341 00b2 5d20 0741 
0000600: 00b2 5d6c 6a04 4043 0000 0000 2007 9321 
0000610: 070b 2001 2005 2006 9293 4100 b25d 2008 
0000620: 4100 b25e 6c20 0520 0693 4100 b25d 2008 
0000630: 4100 b25d 6c6a 0440 4300 0000 0020 0893 
0000640: 2108 0b23 0e41 086a 2003 4104 6c6a 2802 
0000650: 0041 006a 2004 2007 9238 0200 230e 4108 
0000660: 6a20 0341 046c 6a28 0200 4104 6a20 0520 
0000670: 0892 3802 0023 0f41 086a 2003 4104 6c6a 
0000680: 2802 0041 046a 2007 3802 0023 0f41 086a 
0000690: 2003 4104 6c6a 2802 0041 006a 2008 3802 
00006a0: 0020 0420 0693 bb20 00bb a323 0cb7 a210 
00006b0: 06aa 2109 2004 2006 92bb 2000 bba3 230c 
00006c0: b7a2 1006 aa21 0a20 0520 0693 bb20 01bb 
00006d0: a323 0bb7 a210 06aa 210b 2005 2006 92bb 
00006e0: 2001 bba3 230b b7a2 1006 aa21 0c20 0941 
00006f0: 0048 0440 4100 2109 0b20 0a23 0c4e 0440 
0000700: 230c 4101 6b21 0a0b 200b 4100 4804 4041 
0000710: 0021 0b0b 200c 230b 4e04 4023 0b41 016b 
0000720: 210c 0b20 0921 0d02 4003 4020 0d20 0a4a 
0000730: 0d01 2311 4108 6a20 0d41 046c 6a28 0200 
0000740: 210e 200b 210f 0240 0340 200f 200c 4a0d 
0000750: 0123 1041 086a 2002 4104 6c6a 2802 0021 
0000760: 1020 0241 016a 2102 2010 4104 6a20 0336 
0000770: 0200 2010 4100 6a20 0e41 086a 200f 4104 
0000780: 6c6a 2802 0036 0200 200e 4108 6a20 0f41 
0000790: 046c 6a20 1036 0200 200f 4101 6a21 0f0c 
00007a0: 000b 0b20 0d41 016a 210d 0c00 0b0b 2003 
00007b0: 4101 6a21 030c 000b 0b0b d705 0705 7f05 
00007c0: 7d02 7f07 7d01 7c04 7d04 7c41 0021 0002 
00007d0: 4003 4020 0023 0c41 016b 4a0d 0123 1141 
00007e0: 086a 2000 4104 6c6a 2802 0021 0141 0021 
00007f0: 0202 4003 4020 0223 0b41 016b 4a0d 0120 
0000800: 0141 086a 2002 4104 6c6a 2802 0021 0302 
0000810: 4003 4020 0341 0046 4545 0d01 2003 4104 
0000820: 6a28 0200 2104 230e 4108 6a20 0441 046c 
0000830: 6a28 0200 4100 6a2a 0200 2105 230e 4108 
0000840: 6a20 0441 046c 6a28 0200 4104 6a2a 0200 
0000850: 2106 230e 4108 6a20 0441 046c 6a28 0200 
0000860: 4108 6a2a 0200 2107 230f 4108 6a20 0441 
0000870: 046c 6a28 0200 4104 6a2a 0200 2108 230f 
0000880: 4108 6a20 0441 046c 6a28 0200 4100 6a2a 
0000890: 0200 2109 2003 210a 200a 4100 6a28 0200 
00008a0: 210a 0240 0340 200a 4100 4645 450d 0120 
00008b0: 0a41 046a 2802 0021 0b23 0e41 086a 200b 
00008c0: 4104 6c6a 2802 0041 006a 2a02 0021 0c23 
00008d0: 0e41 086a 200b 4104 6c6a 2802 0041 046a 
00008e0: 2a02 0021 0d23 0e41 086a 200b 4104 6c6a 
00008f0: 2802 0041 086a 2a02 0021 0e20 0520 0620 
0000900: 0720 0c20 0d20 0e10 1004 4023 0f41 086a 
0000910: 200b 4104 6c6a 2802 0041 046a 2a02 0021 
0000920: 0f23 0f41 086a 200b 4104 6c6a 2802 0041 
0000930: 006a 2a02 0021 1020 0c20 0593 2111 200d 
0000940: 2006 9321 1220 1120 1194 2012 2012 9492 
0000950: bb10 0121 1320 11bb 2013 a3b6 2111 2012 
0000960: bb20 13a3 b621 1220 1120 0894 2012 2009 
0000970: 9492 2114 2011 200f 9420 1220 1094 9221 
0000980: 1520 1420 1593 4100 b25f 4504 4020 0720 
0000990: 0e92 2116 2007 200e 9321 1720 1420 1794 
00009a0: 4102 b220 0e94 2015 9492 bb20 16bb a321 
00009b0: 1841 02b2 2007 9420 1494 2015 2017 9493 
00009c0: bb20 16bb a321 1920 1820 14bb a121 1a20 
00009d0: 1920 15bb a121 1b23 0f41 086a 2004 4104 
00009e0: 6c6a 2802 0041 046a 2008 bb20 11bb 201a 
00009f0: a2a0 b638 0200 230f 4108 6a20 0441 046c 
0000a00: 6a28 0200 4100 6a20 09bb 2012 bb20 1aa2 
0000a10: a0b6 3802 0023 0f41 086a 200b 4104 6c6a 
0000a20: 2802 0041 046a 200f bb20 11bb 201b a2a0 
0000a30: b638 0200 230f 4108 6a20 0b41 046c 6a28 
0000a40: 0200 4100 6a20 10bb 2012 bb20 1ba2 a0b6 
0000a50: 3802 0020 0a41 006a 2802 0021 0a0b 0520 
0000a60: 0a41 006a 2802 0021 0a0b 0c00 0b0b 2003 
0000a70: 4100 6a28 0200 2103 0c00 0b0b 2002 4101 
0000a80: 6a21 020c 000b 0b20 0041 016a 2100 0c00 
0000a90: 0b0b 0b0c 0010 0c20 0020 0110 0d10 0e0b 
0000aa0: 5c01 027f 2000 2002 9220 0320 0593 5d20 
0000ab0: 0020 0293 2003 2005 925e 6a20 0120 0292 
0000ac0: 2004 2005 935d 6a20 0120 0293 2004 2005 
0000ad0: 925e 6a04 4041 000f 0b20 0320 0093 bb41 
0000ae0: 02b2 bb10 0020 0420 0193 bb41 02b2 bb10 
0000af0: 00a0 1001 2002 2005 92bb 650f 0b06 0041 
0000b00: c007 0f0b 0600 41cb 070f 0b06 0041 9c08 
0000b10: 0f0b 0600 41a0 080f 0b06 0041 ab08 0f0b 
0000b20: 0600 41f1 080f 0b06 0041 ff08 0f0b 0600 
0000b30: 41a4 090f 0b06 0041 ac09 0f0b 0a00 101b 
0000b40: 101c 101d 101e 0be1 0101 047f 2300 410d 
0000b50: 3602 0023 0041 046a 230d 4101 6b36 0200 
0000b60: 2300 4108 6a21 0020 0041 786a 4108 230d 
0000b70: 4101 6b41 046c 6a6a 2400 2000 4178 6a24 
0000b80: 0e23 0041 de02 3602 0023 0041 046a 230d 
0000b90: 4101 6b36 0200 2300 4108 6a21 0120 0141 
0000ba0: 786a 4108 230d 4101 6b41 046c 6a6a 2400 
0000bb0: 2001 4178 6a24 0f23 0041 ff04 3602 0023 
0000bc0: 0041 046a 230d 4104 6c41 016b 3602 0023 
0000bd0: 0041 086a 2102 2002 4178 6a41 0823 0d41 
0000be0: 046c 4101 6b41 046c 6a6a 2400 2002 4178 
0000bf0: 6a24 1023 0041 ff04 3602 0023 0041 046a 
0000c00: 230c 4101 6b36 0200 2300 4108 6a21 0320 
0000c10: 0341 786a 4108 230c 4101 6b41 046c 6a6a 
0000c20: 2400 2003 4178 6a24 110b 0200 0b3a 0102 
0000c30: 7f41 0021 0002 4003 4020 0023 1141 046a 
0000c40: 2802 0041 016b 4a0d 0123 1141 086a 2000 
0000c50: 4104 6c6a 2001 4178 6a36 0200 2000 4101 
0000c60: 6a21 000c 000b 0b0b 0200 0b0b f609 0c00 
0000c70: 41c0 070b 0b57 6562 474c 2d44 656d 6f00 
0000c80: 0041 cb07 0b51 5765 6241 7373 656d 626c 
0000c90: 7920 636f 6e76 6572 7369 6f6e 2064 656d 
0000ca0: 6f6e 7374 7261 7469 6e67 2074 6865 2066 
0000cb0: 6173 7465 722d 7065 7266 6f72 6d69 6e67 
0000cc0: 2067 7269 6420 6f66 206c 696e 6b65 642d 
0000cd0: 6c69 7374 732e 0000 419c 080b 044d 4954 
0000ce0: 0000 41a0 080b 0b57 6562 474c 2d44 656d 
0000cf0: 6f00 0041 ab08 0b46 6874 7470 733a 2f2f 
0000d00: 6769 7468 7562 2e63 6f6d 2f67 7579 6265 
0000d10: 6466 6f72 642f 7761 736d 2d64 656d 6f2f 
0000d20: 626c 6f62 2f6d 6173 7465 722f 6e61 7469 
0000d30: 7665 2f64 656d 6f2d 6f70 742e 6300 0041 
0000d40: f108 0b0e 7661 6e69 6c6c 6176 622e 6170 
0000d50: 7000 0041 ff08 0b25 3833 6361 3262 3933 
0000d60: 2d34 6535 372d 3464 3434 2d62 3262 632d 
0000d70: 3136 3332 3532 6139 3330 3564 0000 41a4 
0000d80: 090b 0831 2e30 2e30 2e30 0000 41ac 090b 
0000d90: 0831 2e30 2e30 2e30 0000 410d 0bd1 0265 
0000da0: 794a 6a62 3231 745a 5735 3049 6a70 7564 
0000db0: 5778 734c 434a 745a 5731 7663 6e6c 5164 
0000dc0: 4849 694f 6e73 6956 6d46 7364 5755 694f 
0000dd0: 6a45 7a66 5377 6959 3278 6863 334d 694f 
0000de0: 694a 4461 584a 6a62 4755 694c 434a 6a62 
0000df0: 4746 7a63 3139 705a 4349 364d 544d 7349 
0000e00: 6d5a 705a 5778 6b63 7949 3665 794a 3449 
0000e10: 6a70 3749 6d64 6c62 6d56 7961 574d 694f 
0000e20: 6c74 644c 434a 7959 5863 694f 694a 6d4d 
0000e30: 7a49 694c 434a 3065 5842 6c49 6a6f 7a66 
0000e40: 5377 6965 5349 3665 794a 6e5a 5735 6c63 
0000e50: 6d6c 6a49 6a70 6258 5377 6963 6d46 3349 
0000e60: 6a6f 695a 6a4d 7949 6977 6964 486c 775a 
0000e70: 5349 364d 3330 7349 6e49 694f 6e73 695a 
0000e80: 3256 755a 584a 7059 7949 3657 3130 7349 
0000e90: 6e4a 6864 7949 3649 6d59 7a4d 6949 7349 
0000ea0: 6e52 3563 4755 694f 6a4e 3966 5377 6961 
0000eb0: 584e 5464 484a 3159 3351 694f 6d5a 6862 
0000ec0: 484e 6c4c 434a 745a 5852 6f62 3252 7a49 
0000ed0: 6a70 3766 5377 6962 6d46 745a 584e 7759 
0000ee0: 574e 6c49 6a70 7564 5778 7366 513d 3d00 
0000ef0: 0041 de02 0ba1 0265 794a 6a62 3231 745a 
0000f00: 5735 3049 6a70 7564 5778 734c 434a 745a 
0000f10: 5731 7663 6e6c 5164 4849 694f 6e73 6956 
0000f20: 6d46 7364 5755 694f 6a4d 314d 4830 7349 
0000f30: 6d4e 7359 584e 7a49 6a6f 6951 326c 7959 
0000f40: 3278 6c56 6949 7349 6d4e 7359 584e 7a58 
0000f50: 326c 6b49 6a6f 7a4e 5441 7349 6d5a 705a 
0000f60: 5778 6b63 7949 3665 794a 3265 5349 3665 
0000f70: 794a 6e5a 5735 6c63 6d6c 6a49 6a70 6258 
0000f80: 5377 6963 6d46 3349 6a6f 695a 6a4d 7949 
0000f90: 6977 6964 486c 775a 5349 364d 3330 7349 
0000fa0: 6e5a 3449 6a70 3749 6d64 6c62 6d56 7961 
0000fb0: 574d 694f 6c74 644c 434a 7959 5863 694f 
0000fc0: 694a 6d4d 7a49 694c 434a 3065 5842 6c49 
0000fd0: 6a6f 7a66 5830 7349 6d6c 7a55 3352 7964 
0000fe0: 574e 3049 6a70 6d59 5778 7a5a 5377 6962 
0000ff0: 5756 3061 4739 6b63 7949 3665 3330 7349 
0001000: 6d35 6862 5756 7a63 4746 6a5a 5349 3662 
0001010: 6e56 7362 4830 3d00 0041 ff04 0bc5 0265 
0001020: 794a 6a62 3231 745a 5735 3049 6a70 7564 
0001030: 5778 734c 434a 745a 5731 7663 6e6c 5164 
0001040: 4849 694f 6e73 6956 6d46 7364 5755 694f 
0001050: 6a59 7a4f 5830 7349 6d4e 7359 584e 7a49 
0001060: 6a6f 6951 3256 7362 454e 7063 6d4e 735a 
0001070: 5349 7349 6d4e 7359 584e 7a58 326c 6b49 
0001080: 6a6f 324d 7a6b 7349 6d5a 705a 5778 6b63 
0001090: 7949 3665 794a 755a 5868 3049 6a70 3749 
00010a0: 6d64 6c62 6d56 7961 574d 694f 6c74 644c 
00010b0: 434a 7959 5863 694f 694a 624e 6a4d 3558 
00010c0: 554e 6c62 4778 4461 584a 6a62 4755 694c 
00010d0: 434a 3065 5842 6c49 6a6f 784d 4830 7349 
00010e0: 6d4e 7063 6d4e 735a 556c 755a 4756 3449 
00010f0: 6a70 3749 6d64 6c62 6d56 7961 574d 694f 
0001100: 6c74 644c 434a 7959 5863 694f 694a 704d 
0001110: 7a49 694c 434a 3065 5842 6c49 6a6f 7866 
0001120: 5830 7349 6d6c 7a55 3352 7964 574e 3049 
0001130: 6a70 6d59 5778 7a5a 5377 6962 5756 3061 
0001140: 4739 6b63 7949 3665 3330 7349 6d35 6862 
0001150: 5756 7a63 4746 6a5a 5349 3662 6e56 7362 
0001160: 4830 3d00                               
