0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 09                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7c                                        ; f64
000000e: 7c                                        ; f64
000000f: 01                                        ; num results
0000010: 7c                                        ; f64
; type 1
0000011: 60                                        ; func
0000012: 01                                        ; num params
0000013: 7c                                        ; f64
0000014: 01                                        ; num results
0000015: 7c                                        ; f64
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 00                                        ; num results
; type 4
000001f: 60                                        ; func
0000020: 02                                        ; num params
0000021: 7f                                        ; i32
0000022: 7f                                        ; i32
0000023: 01                                        ; num results
0000024: 7f                                        ; i32
; type 5
0000025: 60                                        ; func
0000026: 00                                        ; num params
0000027: 01                                        ; num results
0000028: 7f                                        ; i32
; type 6
0000029: 60                                        ; func
000002a: 02                                        ; num params
000002b: 7d                                        ; f32
000002c: 7d                                        ; f32
000002d: 00                                        ; num results
; type 7
000002e: 60                                        ; func
000002f: 00                                        ; num params
0000030: 00                                        ; num results
; type 8
0000031: 60                                        ; func
0000032: 06                                        ; num params
0000033: 7d                                        ; f32
0000034: 7d                                        ; f32
0000035: 7d                                        ; f32
0000036: 7d                                        ; f32
0000037: 7d                                        ; f32
0000038: 7d                                        ; f32
0000039: 01                                        ; num results
000003a: 7f                                        ; i32
0000009: 31                                        ; FIXUP section size
; section "Import" (2)
000003b: 02                                        ; section code
000003c: 00                                        ; section size (guess)
000003d: 09                                        ; num imports
; import header 0
000003e: 04                                        ; string length
000003f: 4d61 7468                                Math  ; import module name
0000043: 03                                        ; string length
0000044: 706f 77                                  pow  ; import field name
0000047: 00                                        ; import kind
0000048: 00                                        ; import signature index
; import header 1
0000049: 04                                        ; string length
000004a: 4d61 7468                                Math  ; import module name
000004e: 04                                        ; string length
000004f: 7371 7274                                sqrt  ; import field name
0000053: 00                                        ; import kind
0000054: 01                                        ; import signature index
; import header 2
0000055: 04                                        ; string length
0000056: 4d61 7468                                Math  ; import module name
000005a: 03                                        ; string length
000005b: 6578 70                                  exp  ; import field name
000005e: 00                                        ; import kind
000005f: 01                                        ; import signature index
; import header 3
0000060: 04                                        ; string length
0000061: 4d61 7468                                Math  ; import module name
0000065: 03                                        ; string length
0000066: 636f 73                                  cos  ; import field name
0000069: 00                                        ; import kind
000006a: 01                                        ; import signature index
; import header 4
000006b: 04                                        ; string length
000006c: 4d61 7468                                Math  ; import module name
0000070: 06                                        ; string length
0000071: 7261 6e64 6f6d                           random  ; import field name
0000077: 00                                        ; import kind
0000078: 02                                        ; import signature index
; import header 5
0000079: 04                                        ; string length
000007a: 4d61 7468                                Math  ; import module name
000007e: 04                                        ; string length
000007f: 6365 696c                                ceil  ; import field name
0000083: 00                                        ; import kind
0000084: 01                                        ; import signature index
; import header 6
0000085: 04                                        ; string length
0000086: 4d61 7468                                Math  ; import module name
000008a: 05                                        ; string length
000008b: 666c 6f6f 72                             floor  ; import field name
0000090: 00                                        ; import kind
0000091: 01                                        ; import signature index
; import header 7
0000092: 02                                        ; string length
0000093: 4743                                     GC  ; import module name
0000095: 09                                        ; string length
0000096: 6164 644f 626a 6563 74                   addObject  ; import field name
000009f: 00                                        ; import kind
00000a0: 03                                        ; import signature index
; import header 8
00000a1: 03                                        ; string length
00000a2: 656e 76                                  env  ; import module name
00000a5: 0a                                        ; string length
00000a6: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000b0: 02                                        ; import kind
00000b1: 00                                        ; limits: flags
00000b2: 01                                        ; limits: initial
000003c: 76                                        ; FIXUP section size
; section "Function" (3)
00000b3: 03                                        ; section code
00000b4: 00                                        ; section size (guess)
00000b5: 18                                        ; num functions
00000b6: 04                                        ; function 0 signature index
00000b7: 05                                        ; function 1 signature index
00000b8: 05                                        ; function 2 signature index
00000b9: 05                                        ; function 3 signature index
00000ba: 06                                        ; function 4 signature index
00000bb: 07                                        ; function 5 signature index
00000bc: 06                                        ; function 6 signature index
00000bd: 07                                        ; function 7 signature index
00000be: 06                                        ; function 8 signature index
00000bf: 08                                        ; function 9 signature index
00000c0: 05                                        ; function 10 signature index
00000c1: 05                                        ; function 11 signature index
00000c2: 05                                        ; function 12 signature index
00000c3: 05                                        ; function 13 signature index
00000c4: 05                                        ; function 14 signature index
00000c5: 05                                        ; function 15 signature index
00000c6: 05                                        ; function 16 signature index
00000c7: 05                                        ; function 17 signature index
00000c8: 05                                        ; function 18 signature index
00000c9: 07                                        ; function 19 signature index
00000ca: 07                                        ; function 20 signature index
00000cb: 07                                        ; function 21 signature index
00000cc: 07                                        ; function 22 signature index
00000cd: 07                                        ; function 23 signature index
00000b4: 19                                        ; FIXUP section size
; section "Global" (6)
00000ce: 06                                        ; section code
00000cf: 00                                        ; section size (guess)
00000d0: 12                                        ; num globals
00000d1: 7f                                        ; i32
00000d2: 01                                        ; global mutability
00000d3: 41                                        ; i32.const
00000d4: 9809                                      ; i32 literal
00000d6: 0b                                        ; end
00000d7: 7c                                        ; f64
00000d8: 01                                        ; global mutability
00000d9: 44                                        ; f64.const
00000da: 6957 148b 0abf 0540                       ; f64 literal
00000e2: 0b                                        ; end
00000e3: 7c                                        ; f64
00000e4: 01                                        ; global mutability
00000e5: 44                                        ; f64.const
00000e6: 182d 4454 fb21 0940                       ; f64 literal
00000ee: 0b                                        ; end
00000ef: 7f                                        ; i32
00000f0: 01                                        ; global mutability
00000f1: 41                                        ; i32.const
00000f2: ffff ffff 07                              ; i32 literal
00000f7: 0b                                        ; end
00000f8: 7e                                        ; i64
00000f9: 01                                        ; global mutability
00000fa: 42                                        ; i64.const
00000fb: ffff ffff ffff ffff ff00                  ; i64 literal
0000105: 0b                                        ; end
0000106: 7d                                        ; f32
0000107: 01                                        ; global mutability
0000108: 43                                        ; f32.const
0000109: ffff 7f7f                                 ; f32 literal
000010d: 0b                                        ; end
000010e: 7c                                        ; f64
000010f: 01                                        ; global mutability
0000110: 44                                        ; f64.const
0000111: ffff ffff ffff ef7f                       ; f64 literal
0000119: 0b                                        ; end
000011a: 7f                                        ; i32
000011b: 01                                        ; global mutability
000011c: 41                                        ; i32.const
000011d: 8080 8080 78                              ; i32 literal
0000122: 0b                                        ; end
0000123: 7e                                        ; i64
0000124: 01                                        ; global mutability
0000125: 42                                        ; i64.const
0000126: 8080 8080 8080 8080 807f                  ; i64 literal
0000130: 0b                                        ; end
0000131: 7d                                        ; f32
0000132: 01                                        ; global mutability
0000133: 43                                        ; f32.const
0000134: ffff 7fff                                 ; f32 literal
0000138: 0b                                        ; end
0000139: 7c                                        ; f64
000013a: 01                                        ; global mutability
000013b: 44                                        ; f64.const
000013c: ffff ffff ffff efff                       ; f64 literal
0000144: 0b                                        ; end
0000145: 7f                                        ; i32
0000146: 01                                        ; global mutability
0000147: 41                                        ; i32.const
0000148: f800                                      ; i32 literal
000014a: 0b                                        ; end
000014b: 7f                                        ; i32
000014c: 01                                        ; global mutability
000014d: 41                                        ; i32.const
000014e: c600                                      ; i32 literal
0000150: 0b                                        ; end
0000151: 7f                                        ; i32
0000152: 01                                        ; global mutability
0000153: 41                                        ; i32.const
0000154: 90ce 00                                   ; i32 literal
0000157: 0b                                        ; end
0000158: 7f                                        ; i32
0000159: 01                                        ; global mutability
000015a: 41                                        ; i32.const
000015b: 00                                        ; i32 literal
000015c: 0b                                        ; end
000015d: 7f                                        ; i32
000015e: 01                                        ; global mutability
000015f: 41                                        ; i32.const
0000160: 00                                        ; i32 literal
0000161: 0b                                        ; end
0000162: 7f                                        ; i32
0000163: 01                                        ; global mutability
0000164: 41                                        ; i32.const
0000165: 00                                        ; i32 literal
0000166: 0b                                        ; end
0000167: 7f                                        ; i32
0000168: 01                                        ; global mutability
0000169: 41                                        ; i32.const
000016a: 00                                        ; i32 literal
000016b: 0b                                        ; end
; move data: [d0, 16c) -> [d1, 16d)
00000cf: 9c01                                      ; FIXUP section size
; section "Export" (7)
000016d: 07                                        ; section code
000016e: 00                                        ; section size (guess)
000016f: 0f                                        ; num exports
0000170: 14                                        ; string length
0000171: 676c 6f62 616c 2e47 6574 4d65 6d6f 7279  global.GetMemory
0000181: 5369 7a65                                Size  ; export name
0000185: 00                                        ; export kind
0000186: 09                                        ; export func index
0000187: 18                                        ; string length
0000188: 416c 676f 7269 7468 6d2e 6765 7443 6972  Algorithm.getCir
0000198: 636c 6543 6f75 6e74                      cleCount  ; export name
00001a0: 00                                        ; export kind
00001a1: 0a                                        ; export func index
00001a2: 1d                                        ; string length
00001a3: 416c 676f 7269 7468 6d2e 6765 7443 6972  Algorithm.getCir
00001b3: 636c 6544 6174 614f 6666 7365 74         cleDataOffset  ; export name
00001c0: 00                                        ; export kind
00001c1: 0b                                        ; export func index
00001c2: 0e                                        ; string length
00001c3: 416c 676f 7269 7468 6d2e 696e 6974       Algorithm.init  ; export name
00001d1: 00                                        ; export kind
00001d2: 0c                                        ; export func index
00001d3: 12                                        ; string length
00001d4: 416c 676f 7269 7468 6d2e 7469 6d65 5374  Algorithm.timeSt
00001e4: 6570                                     ep  ; export name
00001e6: 00                                        ; export kind
00001e7: 10                                        ; export func index
00001e8: 1a                                        ; string length
00001e9: 4d61 7468 2e64 6574 6563 7443 6972 636c  Math.detectCircl
00001f9: 6543 6f6c 6c69 7369 6f6e                 eCollision  ; export name
0000203: 00                                        ; export kind
0000204: 11                                        ; export func index
0000205: 1a                                        ; string length
0000206: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000216: 656d 626c 7954 6974 6c65                 emblyTitle  ; export name
0000220: 00                                        ; export kind
0000221: 12                                        ; export func index
0000222: 20                                        ; string length
0000223: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000233: 656d 626c 7944 6573 6372 6970 7469 6f6e  emblyDescription  ; export name
0000243: 00                                        ; export kind
0000244: 13                                        ; export func index
0000245: 1c                                        ; string length
0000246: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000256: 656d 626c 7943 6f6d 7061 6e79            emblyCompany  ; export name
0000262: 00                                        ; export kind
0000263: 14                                        ; export func index
0000264: 1c                                        ; string length
0000265: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000275: 656d 626c 7950 726f 6475 6374            emblyProduct  ; export name
0000281: 00                                        ; export kind
0000282: 15                                        ; export func index
0000283: 1e                                        ; string length
0000284: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000294: 656d 626c 7943 6f70 7972 6967 6874       emblyCopyright  ; export name
00002a2: 00                                        ; export kind
00002a3: 16                                        ; export func index
00002a4: 1e                                        ; string length
00002a5: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002b5: 656d 626c 7954 7261 6465 6d61 726b       emblyTrademark  ; export name
00002c3: 00                                        ; export kind
00002c4: 17                                        ; export func index
00002c5: 11                                        ; string length
00002c6: 4173 7365 6d62 6c79 496e 666f 2e47 7569  AssemblyInfo.Gui
00002d6: 64                                       d  ; export name
00002d7: 00                                        ; export kind
00002d8: 18                                        ; export func index
00002d9: 1c                                        ; string length
00002da: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002ea: 656d 626c 7956 6572 7369 6f6e            emblyVersion  ; export name
00002f6: 00                                        ; export kind
00002f7: 19                                        ; export func index
00002f8: 20                                        ; string length
00002f9: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000309: 656d 626c 7946 696c 6556 6572 7369 6f6e  emblyFileVersion  ; export name
0000319: 00                                        ; export kind
000031a: 1a                                        ; export func index
; move data: [16f, 31b) -> [170, 31c)
000016e: ac03                                      ; FIXUP section size
; section "Start" (8)
000031c: 08                                        ; section code
000031d: 00                                        ; section size (guess)
000031e: 1b                                        ; start func index
000031d: 01                                        ; FIXUP section size
; section "Code" (10)
000031f: 0a                                        ; section code
0000320: 00                                        ; section size (guess)
0000321: 18                                        ; num functions
; function body 0
0000322: 00                                        ; func body size (guess)
0000323: 01                                        ; local decl count
0000324: 01                                        ; local type count
0000325: 7f                                        ; i32
0000326: 23                                        ; global.get
0000327: 00                                        ; global index
0000328: 21                                        ; local.set
0000329: 02                                        ; local index
000032a: 20                                        ; local.get
000032b: 02                                        ; local index
000032c: 20                                        ; local.get
000032d: 00                                        ; local index
000032e: 6a                                        ; i32.add
000032f: 24                                        ; global.set
0000330: 00                                        ; global index
0000331: 20                                        ; local.get
0000332: 02                                        ; local index
0000333: 20                                        ; local.get
0000334: 01                                        ; local index
0000335: 10                                        ; call
0000336: 07                                        ; function index
0000337: 20                                        ; local.get
0000338: 02                                        ; local index
0000339: 0f                                        ; return
000033a: 0b                                        ; end
0000322: 18                                        ; FIXUP func body size
; function body 1
000033b: 00                                        ; func body size (guess)
000033c: 00                                        ; local decl count
000033d: 23                                        ; global.get
000033e: 00                                        ; global index
000033f: 0f                                        ; return
0000340: 0b                                        ; end
000033b: 05                                        ; FIXUP func body size
; function body 2
0000341: 00                                        ; func body size (guess)
0000342: 01                                        ; local decl count
0000343: 04                                        ; local type count
0000344: 7f                                        ; i32
0000345: 23                                        ; global.get
0000346: 0d                                        ; global index
0000347: 0f                                        ; return
0000348: 0b                                        ; end
0000341: 07                                        ; FIXUP func body size
; function body 3
0000349: 00                                        ; func body size (guess)
000034a: 00                                        ; local decl count
000034b: 23                                        ; global.get
000034c: 0e                                        ; global index
000034d: 0f                                        ; return
000034e: 0b                                        ; end
0000349: 05                                        ; FIXUP func body size
; function body 4
000034f: 00                                        ; func body size (guess)
0000350: 03                                        ; local decl count
0000351: 02                                        ; local type count
0000352: 7f                                        ; i32
0000353: 03                                        ; local type count
0000354: 7d                                        ; f32
0000355: 01                                        ; local type count
0000356: 7f                                        ; i32
0000357: 41                                        ; i32.const
0000358: 00                                        ; i32 literal
0000359: 21                                        ; local.set
000035a: 02                                        ; local index
000035b: 02                                        ; block
000035c: 40                                        ; void
000035d: 03                                        ; loop
000035e: 40                                        ; void
000035f: 20                                        ; local.get
0000360: 02                                        ; local index
0000361: 23                                        ; global.get
0000362: 0d                                        ; global index
0000363: 41                                        ; i32.const
0000364: 01                                        ; i32 literal
0000365: 6b                                        ; i32.sub
0000366: 4a                                        ; i32.gt_s
0000367: 0d                                        ; br_if
0000368: 01                                        ; break depth
0000369: 41                                        ; i32.const
000036a: 00                                        ; i32 literal
000036b: 21                                        ; local.set
000036c: 03                                        ; local index
000036d: 43                                        ; f32.const
000036e: 0000 0000                                 ; f32 literal
0000372: 21                                        ; local.set
0000373: 04                                        ; local index
0000374: 43                                        ; f32.const
0000375: 0000 0000                                 ; f32 literal
0000379: 21                                        ; local.set
000037a: 05                                        ; local index
000037b: 43                                        ; f32.const
000037c: 0000 0000                                 ; f32 literal
0000380: 21                                        ; local.set
0000381: 06                                        ; local index
0000382: 02                                        ; block
0000383: 40                                        ; void
0000384: 03                                        ; loop
0000385: 40                                        ; void
0000386: 41                                        ; i32.const
0000387: 00                                        ; i32 literal
0000388: 21                                        ; local.set
0000389: 03                                        ; local index
000038a: 20                                        ; local.get
000038b: 00                                        ; local index
000038c: bb                                        ; f64.promote_f32
000038d: 10                                        ; call
000038e: 04                                        ; function index
000038f: a2                                        ; f64.mul
0000390: b6                                        ; f32.demote_f64
0000391: 21                                        ; local.set
0000392: 04                                        ; local index
0000393: 20                                        ; local.get
0000394: 01                                        ; local index
0000395: bb                                        ; f64.promote_f32
0000396: 10                                        ; call
0000397: 04                                        ; function index
0000398: a2                                        ; f64.mul
0000399: b6                                        ; f32.demote_f64
000039a: 21                                        ; local.set
000039b: 05                                        ; local index
000039c: 10                                        ; call
000039d: 04                                        ; function index
000039e: 41                                        ; i32.const
000039f: 08                                        ; i32 literal
00003a0: b7                                        ; f64.convert_i32_s
00003a1: a2                                        ; f64.mul
00003a2: 10                                        ; call
00003a3: 02                                        ; function index
00003a4: 44                                        ; f64.const
00003a5: ee5a 423e e849 3740                       ; f64 literal
00003ad: a3                                        ; f64.div
00003ae: 10                                        ; call
00003af: 05                                        ; function index
00003b0: b6                                        ; f32.demote_f64
00003b1: 21                                        ; local.set
00003b2: 06                                        ; local index
00003b3: 20                                        ; local.get
00003b4: 00                                        ; local index
00003b5: 20                                        ; local.get
00003b6: 04                                        ; local index
00003b7: 20                                        ; local.get
00003b8: 06                                        ; local index
00003b9: 92                                        ; f32.add
00003ba: 93                                        ; f32.sub
00003bb: 41                                        ; i32.const
00003bc: 00                                        ; i32 literal
00003bd: b2                                        ; f32.convert_i32_s
00003be: 5d                                        ; f32.lt
00003bf: 20                                        ; local.get
00003c0: 04                                        ; local index
00003c1: 20                                        ; local.get
00003c2: 06                                        ; local index
00003c3: 93                                        ; f32.sub
00003c4: 41                                        ; i32.const
00003c5: 00                                        ; i32 literal
00003c6: b2                                        ; f32.convert_i32_s
00003c7: 5d                                        ; f32.lt
00003c8: 6a                                        ; i32.add
00003c9: 20                                        ; local.get
00003ca: 01                                        ; local index
00003cb: 20                                        ; local.get
00003cc: 05                                        ; local index
00003cd: 20                                        ; local.get
00003ce: 06                                        ; local index
00003cf: 92                                        ; f32.add
00003d0: 93                                        ; f32.sub
00003d1: 41                                        ; i32.const
00003d2: 00                                        ; i32 literal
00003d3: b2                                        ; f32.convert_i32_s
00003d4: 5d                                        ; f32.lt
00003d5: 6a                                        ; i32.add
00003d6: 20                                        ; local.get
00003d7: 05                                        ; local index
00003d8: 20                                        ; local.get
00003d9: 06                                        ; local index
00003da: 93                                        ; f32.sub
00003db: 41                                        ; i32.const
00003dc: 00                                        ; i32 literal
00003dd: b2                                        ; f32.convert_i32_s
00003de: 5d                                        ; f32.lt
00003df: 6a                                        ; i32.add
00003e0: 04                                        ; if
00003e1: 40                                        ; void
00003e2: 41                                        ; i32.const
00003e3: 01                                        ; i32 literal
00003e4: 21                                        ; local.set
00003e5: 03                                        ; local index
00003e6: 05                                        ; else
00003e7: 41                                        ; i32.const
00003e8: 00                                        ; i32 literal
00003e9: 21                                        ; local.set
00003ea: 07                                        ; local index
00003eb: 02                                        ; block
00003ec: 40                                        ; void
00003ed: 03                                        ; loop
00003ee: 40                                        ; void
00003ef: 20                                        ; local.get
00003f0: 07                                        ; local index
00003f1: 20                                        ; local.get
00003f2: 02                                        ; local index
00003f3: 41                                        ; i32.const
00003f4: 01                                        ; i32 literal
00003f5: 6b                                        ; i32.sub
00003f6: 4a                                        ; i32.gt_s
00003f7: 0d                                        ; br_if
00003f8: 01                                        ; break depth
00003f9: 20                                        ; local.get
00003fa: 04                                        ; local index
00003fb: 20                                        ; local.get
00003fc: 05                                        ; local index
00003fd: 20                                        ; local.get
00003fe: 06                                        ; local index
00003ff: 23                                        ; global.get
0000400: 0e                                        ; global index
0000401: 41                                        ; i32.const
0000402: 08                                        ; i32 literal
0000403: 6a                                        ; i32.add
0000404: 20                                        ; local.get
0000405: 07                                        ; local index
0000406: 41                                        ; i32.const
0000407: 04                                        ; i32 literal
0000408: 6c                                        ; i32.mul
0000409: 6a                                        ; i32.add
000040a: 28                                        ; i32.load
000040b: 02                                        ; alignment
000040c: 00                                        ; load offset
000040d: 41                                        ; i32.const
000040e: 00                                        ; i32 literal
000040f: 6a                                        ; i32.add
0000410: 2a                                        ; f32.load
0000411: 02                                        ; alignment
0000412: 00                                        ; load offset
0000413: 23                                        ; global.get
0000414: 0e                                        ; global index
0000415: 41                                        ; i32.const
0000416: 08                                        ; i32 literal
0000417: 6a                                        ; i32.add
0000418: 20                                        ; local.get
0000419: 07                                        ; local index
000041a: 41                                        ; i32.const
000041b: 04                                        ; i32 literal
000041c: 6c                                        ; i32.mul
000041d: 6a                                        ; i32.add
000041e: 28                                        ; i32.load
000041f: 02                                        ; alignment
0000420: 00                                        ; load offset
0000421: 41                                        ; i32.const
0000422: 04                                        ; i32 literal
0000423: 6a                                        ; i32.add
0000424: 2a                                        ; f32.load
0000425: 02                                        ; alignment
0000426: 00                                        ; load offset
0000427: 23                                        ; global.get
0000428: 0e                                        ; global index
0000429: 41                                        ; i32.const
000042a: 08                                        ; i32 literal
000042b: 6a                                        ; i32.add
000042c: 20                                        ; local.get
000042d: 07                                        ; local index
000042e: 41                                        ; i32.const
000042f: 04                                        ; i32 literal
0000430: 6c                                        ; i32.mul
0000431: 6a                                        ; i32.add
0000432: 28                                        ; i32.load
0000433: 02                                        ; alignment
0000434: 00                                        ; load offset
0000435: 41                                        ; i32.const
0000436: 08                                        ; i32 literal
0000437: 6a                                        ; i32.add
0000438: 2a                                        ; f32.load
0000439: 02                                        ; alignment
000043a: 00                                        ; load offset
000043b: 10                                        ; call
000043c: 11                                        ; function index
000043d: 04                                        ; if
000043e: 40                                        ; void
000043f: 41                                        ; i32.const
0000440: 01                                        ; i32 literal
0000441: 21                                        ; local.set
0000442: 03                                        ; local index
0000443: 41                                        ; i32.const
0000444: 01                                        ; i32 literal
0000445: 0d                                        ; br_if
0000446: 05                                        ; break depth
0000447: 0b                                        ; end
0000448: 20                                        ; local.get
0000449: 07                                        ; local index
000044a: 41                                        ; i32.const
000044b: 01                                        ; i32 literal
000044c: 6a                                        ; i32.add
000044d: 21                                        ; local.set
000044e: 07                                        ; local index
000044f: 0c                                        ; br
0000450: 00                                        ; break depth
0000451: 0b                                        ; end
0000452: 0b                                        ; end
0000453: 0b                                        ; end
0000454: 20                                        ; local.get
0000455: 03                                        ; local index
0000456: 45                                        ; i32.eqz
0000457: 0d                                        ; br_if
0000458: 01                                        ; break depth
0000459: 0c                                        ; br
000045a: 00                                        ; break depth
000045b: 0b                                        ; end
000045c: 0b                                        ; end
000045d: 23                                        ; global.get
000045e: 0e                                        ; global index
000045f: 41                                        ; i32.const
0000460: 08                                        ; i32 literal
0000461: 6a                                        ; i32.add
0000462: 20                                        ; local.get
0000463: 02                                        ; local index
0000464: 41                                        ; i32.const
0000465: 04                                        ; i32 literal
0000466: 6c                                        ; i32.mul
0000467: 6a                                        ; i32.add
0000468: 28                                        ; i32.load
0000469: 02                                        ; alignment
000046a: 00                                        ; load offset
000046b: 41                                        ; i32.const
000046c: 00                                        ; i32 literal
000046d: 6a                                        ; i32.add
000046e: 20                                        ; local.get
000046f: 04                                        ; local index
0000470: 38                                        ; f32.store
0000471: 02                                        ; alignment
0000472: 00                                        ; store offset
0000473: 23                                        ; global.get
0000474: 0e                                        ; global index
0000475: 41                                        ; i32.const
0000476: 08                                        ; i32 literal
0000477: 6a                                        ; i32.add
0000478: 20                                        ; local.get
0000479: 02                                        ; local index
000047a: 41                                        ; i32.const
000047b: 04                                        ; i32 literal
000047c: 6c                                        ; i32.mul
000047d: 6a                                        ; i32.add
000047e: 28                                        ; i32.load
000047f: 02                                        ; alignment
0000480: 00                                        ; load offset
0000481: 41                                        ; i32.const
0000482: 04                                        ; i32 literal
0000483: 6a                                        ; i32.add
0000484: 20                                        ; local.get
0000485: 05                                        ; local index
0000486: 38                                        ; f32.store
0000487: 02                                        ; alignment
0000488: 00                                        ; store offset
0000489: 23                                        ; global.get
000048a: 0e                                        ; global index
000048b: 41                                        ; i32.const
000048c: 08                                        ; i32 literal
000048d: 6a                                        ; i32.add
000048e: 20                                        ; local.get
000048f: 02                                        ; local index
0000490: 41                                        ; i32.const
0000491: 04                                        ; i32 literal
0000492: 6c                                        ; i32.mul
0000493: 6a                                        ; i32.add
0000494: 28                                        ; i32.load
0000495: 02                                        ; alignment
0000496: 00                                        ; load offset
0000497: 41                                        ; i32.const
0000498: 08                                        ; i32 literal
0000499: 6a                                        ; i32.add
000049a: 20                                        ; local.get
000049b: 06                                        ; local index
000049c: 38                                        ; f32.store
000049d: 02                                        ; alignment
000049e: 00                                        ; store offset
000049f: 23                                        ; global.get
00004a0: 0f                                        ; global index
00004a1: 41                                        ; i32.const
00004a2: 08                                        ; i32 literal
00004a3: 6a                                        ; i32.add
00004a4: 20                                        ; local.get
00004a5: 02                                        ; local index
00004a6: 41                                        ; i32.const
00004a7: 04                                        ; i32 literal
00004a8: 6c                                        ; i32.mul
00004a9: 6a                                        ; i32.add
00004aa: 28                                        ; i32.load
00004ab: 02                                        ; alignment
00004ac: 00                                        ; load offset
00004ad: 41                                        ; i32.const
00004ae: 04                                        ; i32 literal
00004af: 6a                                        ; i32.add
00004b0: 10                                        ; call
00004b1: 04                                        ; function index
00004b2: 44                                        ; f64.const
00004b3: 0000 0000 0000 e03f                       ; f64 literal
00004bb: a1                                        ; f64.sub
00004bc: 44                                        ; f64.const
00004bd: 9a99 9999 9999 b93f                       ; f64 literal
00004c5: a2                                        ; f64.mul
00004c6: b6                                        ; f32.demote_f64
00004c7: 38                                        ; f32.store
00004c8: 02                                        ; alignment
00004c9: 00                                        ; store offset
00004ca: 23                                        ; global.get
00004cb: 0f                                        ; global index
00004cc: 41                                        ; i32.const
00004cd: 08                                        ; i32 literal
00004ce: 6a                                        ; i32.add
00004cf: 20                                        ; local.get
00004d0: 02                                        ; local index
00004d1: 41                                        ; i32.const
00004d2: 04                                        ; i32 literal
00004d3: 6c                                        ; i32.mul
00004d4: 6a                                        ; i32.add
00004d5: 28                                        ; i32.load
00004d6: 02                                        ; alignment
00004d7: 00                                        ; load offset
00004d8: 41                                        ; i32.const
00004d9: 00                                        ; i32 literal
00004da: 6a                                        ; i32.add
00004db: 10                                        ; call
00004dc: 04                                        ; function index
00004dd: 44                                        ; f64.const
00004de: 0000 0000 0000 e03f                       ; f64 literal
00004e6: a1                                        ; f64.sub
00004e7: 44                                        ; f64.const
00004e8: 9a99 9999 9999 b93f                       ; f64 literal
00004f0: a2                                        ; f64.mul
00004f1: b6                                        ; f32.demote_f64
00004f2: 38                                        ; f32.store
00004f3: 02                                        ; alignment
00004f4: 00                                        ; store offset
00004f5: 20                                        ; local.get
00004f6: 02                                        ; local index
00004f7: 41                                        ; i32.const
00004f8: 01                                        ; i32 literal
00004f9: 6a                                        ; i32.add
00004fa: 21                                        ; local.set
00004fb: 02                                        ; local index
00004fc: 0c                                        ; br
00004fd: 00                                        ; break depth
00004fe: 0b                                        ; end
00004ff: 0b                                        ; end
0000500: 0b                                        ; end
; move data: [350, 501) -> [351, 502)
000034f: b103                                      ; FIXUP func body size
; function body 5
0000502: 00                                        ; func body size (guess)
0000503: 01                                        ; local decl count
0000504: 03                                        ; local type count
0000505: 7f                                        ; i32
0000506: 41                                        ; i32.const
0000507: 00                                        ; i32 literal
0000508: 21                                        ; local.set
0000509: 00                                        ; local index
000050a: 02                                        ; block
000050b: 40                                        ; void
000050c: 03                                        ; loop
000050d: 40                                        ; void
000050e: 20                                        ; local.get
000050f: 00                                        ; local index
0000510: 23                                        ; global.get
0000511: 0c                                        ; global index
0000512: 41                                        ; i32.const
0000513: 01                                        ; i32 literal
0000514: 6b                                        ; i32.sub
0000515: 4a                                        ; i32.gt_s
0000516: 0d                                        ; br_if
0000517: 01                                        ; break depth
0000518: 23                                        ; global.get
0000519: 11                                        ; global index
000051a: 41                                        ; i32.const
000051b: 08                                        ; i32 literal
000051c: 6a                                        ; i32.add
000051d: 20                                        ; local.get
000051e: 00                                        ; local index
000051f: 41                                        ; i32.const
0000520: 04                                        ; i32 literal
0000521: 6c                                        ; i32.mul
0000522: 6a                                        ; i32.add
0000523: 28                                        ; i32.load
0000524: 02                                        ; alignment
0000525: 00                                        ; load offset
0000526: 21                                        ; local.set
0000527: 01                                        ; local index
0000528: 41                                        ; i32.const
0000529: 00                                        ; i32 literal
000052a: 21                                        ; local.set
000052b: 02                                        ; local index
000052c: 02                                        ; block
000052d: 40                                        ; void
000052e: 03                                        ; loop
000052f: 40                                        ; void
0000530: 20                                        ; local.get
0000531: 02                                        ; local index
0000532: 23                                        ; global.get
0000533: 0b                                        ; global index
0000534: 41                                        ; i32.const
0000535: 01                                        ; i32 literal
0000536: 6b                                        ; i32.sub
0000537: 4a                                        ; i32.gt_s
0000538: 0d                                        ; br_if
0000539: 01                                        ; break depth
000053a: 20                                        ; local.get
000053b: 01                                        ; local index
000053c: 41                                        ; i32.const
000053d: 08                                        ; i32 literal
000053e: 6a                                        ; i32.add
000053f: 20                                        ; local.get
0000540: 02                                        ; local index
0000541: 41                                        ; i32.const
0000542: 04                                        ; i32 literal
0000543: 6c                                        ; i32.mul
0000544: 6a                                        ; i32.add
0000545: 41                                        ; i32.const
0000546: 00                                        ; i32 literal
0000547: 36                                        ; i32.store
0000548: 02                                        ; alignment
0000549: 00                                        ; store offset
000054a: 20                                        ; local.get
000054b: 02                                        ; local index
000054c: 41                                        ; i32.const
000054d: 01                                        ; i32 literal
000054e: 6a                                        ; i32.add
000054f: 21                                        ; local.set
0000550: 02                                        ; local index
0000551: 0c                                        ; br
0000552: 00                                        ; break depth
0000553: 0b                                        ; end
0000554: 0b                                        ; end
0000555: 20                                        ; local.get
0000556: 00                                        ; local index
0000557: 41                                        ; i32.const
0000558: 01                                        ; i32 literal
0000559: 6a                                        ; i32.add
000055a: 21                                        ; local.set
000055b: 00                                        ; local index
000055c: 0c                                        ; br
000055d: 00                                        ; break depth
000055e: 0b                                        ; end
000055f: 0b                                        ; end
0000560: 0b                                        ; end
0000502: 5e                                        ; FIXUP func body size
; function body 6
0000561: 00                                        ; func body size (guess)
0000562: 03                                        ; local decl count
0000563: 02                                        ; local type count
0000564: 7f                                        ; i32
0000565: 05                                        ; local type count
0000566: 7d                                        ; f32
0000567: 08                                        ; local type count
0000568: 7f                                        ; i32
0000569: 41                                        ; i32.const
000056a: 00                                        ; i32 literal
000056b: 21                                        ; local.set
000056c: 02                                        ; local index
000056d: 41                                        ; i32.const
000056e: 00                                        ; i32 literal
000056f: 21                                        ; local.set
0000570: 03                                        ; local index
0000571: 02                                        ; block
0000572: 40                                        ; void
0000573: 03                                        ; loop
0000574: 40                                        ; void
0000575: 20                                        ; local.get
0000576: 03                                        ; local index
0000577: 23                                        ; global.get
0000578: 0d                                        ; global index
0000579: 41                                        ; i32.const
000057a: 01                                        ; i32 literal
000057b: 6b                                        ; i32.sub
000057c: 4a                                        ; i32.gt_s
000057d: 0d                                        ; br_if
000057e: 01                                        ; break depth
000057f: 23                                        ; global.get
0000580: 0e                                        ; global index
0000581: 41                                        ; i32.const
0000582: 08                                        ; i32 literal
0000583: 6a                                        ; i32.add
0000584: 20                                        ; local.get
0000585: 03                                        ; local index
0000586: 41                                        ; i32.const
0000587: 04                                        ; i32 literal
0000588: 6c                                        ; i32.mul
0000589: 6a                                        ; i32.add
000058a: 28                                        ; i32.load
000058b: 02                                        ; alignment
000058c: 00                                        ; load offset
000058d: 41                                        ; i32.const
000058e: 00                                        ; i32 literal
000058f: 6a                                        ; i32.add
0000590: 2a                                        ; f32.load
0000591: 02                                        ; alignment
0000592: 00                                        ; load offset
0000593: 21                                        ; local.set
0000594: 04                                        ; local index
0000595: 23                                        ; global.get
0000596: 0e                                        ; global index
0000597: 41                                        ; i32.const
0000598: 08                                        ; i32 literal
0000599: 6a                                        ; i32.add
000059a: 20                                        ; local.get
000059b: 03                                        ; local index
000059c: 41                                        ; i32.const
000059d: 04                                        ; i32 literal
000059e: 6c                                        ; i32.mul
000059f: 6a                                        ; i32.add
00005a0: 28                                        ; i32.load
00005a1: 02                                        ; alignment
00005a2: 00                                        ; load offset
00005a3: 41                                        ; i32.const
00005a4: 04                                        ; i32 literal
00005a5: 6a                                        ; i32.add
00005a6: 2a                                        ; f32.load
00005a7: 02                                        ; alignment
00005a8: 00                                        ; load offset
00005a9: 21                                        ; local.set
00005aa: 05                                        ; local index
00005ab: 23                                        ; global.get
00005ac: 0e                                        ; global index
00005ad: 41                                        ; i32.const
00005ae: 08                                        ; i32 literal
00005af: 6a                                        ; i32.add
00005b0: 20                                        ; local.get
00005b1: 03                                        ; local index
00005b2: 41                                        ; i32.const
00005b3: 04                                        ; i32 literal
00005b4: 6c                                        ; i32.mul
00005b5: 6a                                        ; i32.add
00005b6: 28                                        ; i32.load
00005b7: 02                                        ; alignment
00005b8: 00                                        ; load offset
00005b9: 41                                        ; i32.const
00005ba: 08                                        ; i32 literal
00005bb: 6a                                        ; i32.add
00005bc: 2a                                        ; f32.load
00005bd: 02                                        ; alignment
00005be: 00                                        ; load offset
00005bf: 21                                        ; local.set
00005c0: 06                                        ; local index
00005c1: 23                                        ; global.get
00005c2: 0f                                        ; global index
00005c3: 41                                        ; i32.const
00005c4: 08                                        ; i32 literal
00005c5: 6a                                        ; i32.add
00005c6: 20                                        ; local.get
00005c7: 03                                        ; local index
00005c8: 41                                        ; i32.const
00005c9: 04                                        ; i32 literal
00005ca: 6c                                        ; i32.mul
00005cb: 6a                                        ; i32.add
00005cc: 28                                        ; i32.load
00005cd: 02                                        ; alignment
00005ce: 00                                        ; load offset
00005cf: 41                                        ; i32.const
00005d0: 04                                        ; i32 literal
00005d1: 6a                                        ; i32.add
00005d2: 2a                                        ; f32.load
00005d3: 02                                        ; alignment
00005d4: 00                                        ; load offset
00005d5: 21                                        ; local.set
00005d6: 07                                        ; local index
00005d7: 23                                        ; global.get
00005d8: 0f                                        ; global index
00005d9: 41                                        ; i32.const
00005da: 08                                        ; i32 literal
00005db: 6a                                        ; i32.add
00005dc: 20                                        ; local.get
00005dd: 03                                        ; local index
00005de: 41                                        ; i32.const
00005df: 04                                        ; i32 literal
00005e0: 6c                                        ; i32.mul
00005e1: 6a                                        ; i32.add
00005e2: 28                                        ; i32.load
00005e3: 02                                        ; alignment
00005e4: 00                                        ; load offset
00005e5: 41                                        ; i32.const
00005e6: 00                                        ; i32 literal
00005e7: 6a                                        ; i32.add
00005e8: 2a                                        ; f32.load
00005e9: 02                                        ; alignment
00005ea: 00                                        ; load offset
00005eb: 21                                        ; local.set
00005ec: 08                                        ; local index
00005ed: 20                                        ; local.get
00005ee: 08                                        ; local index
00005ef: bb                                        ; f64.promote_f32
00005f0: 44                                        ; f64.const
00005f1: 2d43 1ceb e236 1a3f                       ; f64 literal
00005f9: a0                                        ; f64.add
00005fa: b6                                        ; f32.demote_f64
00005fb: 21                                        ; local.set
00005fc: 08                                        ; local index
00005fd: 20                                        ; local.get
00005fe: 00                                        ; local index
00005ff: 20                                        ; local.get
0000600: 04                                        ; local index
0000601: 20                                        ; local.get
0000602: 06                                        ; local index
0000603: 92                                        ; f32.add
0000604: 93                                        ; f32.sub
0000605: 41                                        ; i32.const
0000606: 00                                        ; i32 literal
0000607: b2                                        ; f32.convert_i32_s
0000608: 5d                                        ; f32.lt
0000609: 20                                        ; local.get
000060a: 07                                        ; local index
000060b: 41                                        ; i32.const
000060c: 00                                        ; i32 literal
000060d: b2                                        ; f32.convert_i32_s
000060e: 5e                                        ; f32.gt
000060f: 6c                                        ; i32.mul
0000610: 20                                        ; local.get
0000611: 04                                        ; local index
0000612: 20                                        ; local.get
0000613: 06                                        ; local index
0000614: 93                                        ; f32.sub
0000615: 41                                        ; i32.const
0000616: 00                                        ; i32 literal
0000617: b2                                        ; f32.convert_i32_s
0000618: 5d                                        ; f32.lt
0000619: 20                                        ; local.get
000061a: 07                                        ; local index
000061b: 41                                        ; i32.const
000061c: 00                                        ; i32 literal
000061d: b2                                        ; f32.convert_i32_s
000061e: 5d                                        ; f32.lt
000061f: 6c                                        ; i32.mul
0000620: 6a                                        ; i32.add
0000621: 04                                        ; if
0000622: 40                                        ; void
0000623: 43                                        ; f32.const
0000624: 0000 0000                                 ; f32 literal
0000628: 20                                        ; local.get
0000629: 07                                        ; local index
000062a: 93                                        ; f32.sub
000062b: 21                                        ; local.set
000062c: 07                                        ; local index
000062d: 0b                                        ; end
000062e: 20                                        ; local.get
000062f: 01                                        ; local index
0000630: 20                                        ; local.get
0000631: 05                                        ; local index
0000632: 20                                        ; local.get
0000633: 06                                        ; local index
0000634: 92                                        ; f32.add
0000635: 93                                        ; f32.sub
0000636: 41                                        ; i32.const
0000637: 00                                        ; i32 literal
0000638: b2                                        ; f32.convert_i32_s
0000639: 5d                                        ; f32.lt
000063a: 20                                        ; local.get
000063b: 08                                        ; local index
000063c: 41                                        ; i32.const
000063d: 00                                        ; i32 literal
000063e: b2                                        ; f32.convert_i32_s
000063f: 5e                                        ; f32.gt
0000640: 6c                                        ; i32.mul
0000641: 20                                        ; local.get
0000642: 05                                        ; local index
0000643: 20                                        ; local.get
0000644: 06                                        ; local index
0000645: 93                                        ; f32.sub
0000646: 41                                        ; i32.const
0000647: 00                                        ; i32 literal
0000648: b2                                        ; f32.convert_i32_s
0000649: 5d                                        ; f32.lt
000064a: 20                                        ; local.get
000064b: 08                                        ; local index
000064c: 41                                        ; i32.const
000064d: 00                                        ; i32 literal
000064e: b2                                        ; f32.convert_i32_s
000064f: 5d                                        ; f32.lt
0000650: 6c                                        ; i32.mul
0000651: 6a                                        ; i32.add
0000652: 04                                        ; if
0000653: 40                                        ; void
0000654: 43                                        ; f32.const
0000655: 0000 0000                                 ; f32 literal
0000659: 20                                        ; local.get
000065a: 08                                        ; local index
000065b: 93                                        ; f32.sub
000065c: 21                                        ; local.set
000065d: 08                                        ; local index
000065e: 0b                                        ; end
000065f: 23                                        ; global.get
0000660: 0e                                        ; global index
0000661: 41                                        ; i32.const
0000662: 08                                        ; i32 literal
0000663: 6a                                        ; i32.add
0000664: 20                                        ; local.get
0000665: 03                                        ; local index
0000666: 41                                        ; i32.const
0000667: 04                                        ; i32 literal
0000668: 6c                                        ; i32.mul
0000669: 6a                                        ; i32.add
000066a: 28                                        ; i32.load
000066b: 02                                        ; alignment
000066c: 00                                        ; load offset
000066d: 41                                        ; i32.const
000066e: 00                                        ; i32 literal
000066f: 6a                                        ; i32.add
0000670: 20                                        ; local.get
0000671: 04                                        ; local index
0000672: 20                                        ; local.get
0000673: 07                                        ; local index
0000674: 92                                        ; f32.add
0000675: 38                                        ; f32.store
0000676: 02                                        ; alignment
0000677: 00                                        ; store offset
0000678: 23                                        ; global.get
0000679: 0e                                        ; global index
000067a: 41                                        ; i32.const
000067b: 08                                        ; i32 literal
000067c: 6a                                        ; i32.add
000067d: 20                                        ; local.get
000067e: 03                                        ; local index
000067f: 41                                        ; i32.const
0000680: 04                                        ; i32 literal
0000681: 6c                                        ; i32.mul
0000682: 6a                                        ; i32.add
0000683: 28                                        ; i32.load
0000684: 02                                        ; alignment
0000685: 00                                        ; load offset
0000686: 41                                        ; i32.const
0000687: 04                                        ; i32 literal
0000688: 6a                                        ; i32.add
0000689: 20                                        ; local.get
000068a: 05                                        ; local index
000068b: 20                                        ; local.get
000068c: 08                                        ; local index
000068d: 92                                        ; f32.add
000068e: 38                                        ; f32.store
000068f: 02                                        ; alignment
0000690: 00                                        ; store offset
0000691: 23                                        ; global.get
0000692: 0f                                        ; global index
0000693: 41                                        ; i32.const
0000694: 08                                        ; i32 literal
0000695: 6a                                        ; i32.add
0000696: 20                                        ; local.get
0000697: 03                                        ; local index
0000698: 41                                        ; i32.const
0000699: 04                                        ; i32 literal
000069a: 6c                                        ; i32.mul
000069b: 6a                                        ; i32.add
000069c: 28                                        ; i32.load
000069d: 02                                        ; alignment
000069e: 00                                        ; load offset
000069f: 41                                        ; i32.const
00006a0: 04                                        ; i32 literal
00006a1: 6a                                        ; i32.add
00006a2: 20                                        ; local.get
00006a3: 07                                        ; local index
00006a4: 38                                        ; f32.store
00006a5: 02                                        ; alignment
00006a6: 00                                        ; store offset
00006a7: 23                                        ; global.get
00006a8: 0f                                        ; global index
00006a9: 41                                        ; i32.const
00006aa: 08                                        ; i32 literal
00006ab: 6a                                        ; i32.add
00006ac: 20                                        ; local.get
00006ad: 03                                        ; local index
00006ae: 41                                        ; i32.const
00006af: 04                                        ; i32 literal
00006b0: 6c                                        ; i32.mul
00006b1: 6a                                        ; i32.add
00006b2: 28                                        ; i32.load
00006b3: 02                                        ; alignment
00006b4: 00                                        ; load offset
00006b5: 41                                        ; i32.const
00006b6: 00                                        ; i32 literal
00006b7: 6a                                        ; i32.add
00006b8: 20                                        ; local.get
00006b9: 08                                        ; local index
00006ba: 38                                        ; f32.store
00006bb: 02                                        ; alignment
00006bc: 00                                        ; store offset
00006bd: 20                                        ; local.get
00006be: 04                                        ; local index
00006bf: 20                                        ; local.get
00006c0: 06                                        ; local index
00006c1: 93                                        ; f32.sub
00006c2: bb                                        ; f64.promote_f32
00006c3: 20                                        ; local.get
00006c4: 00                                        ; local index
00006c5: bb                                        ; f64.promote_f32
00006c6: a3                                        ; f64.div
00006c7: 23                                        ; global.get
00006c8: 0c                                        ; global index
00006c9: b7                                        ; f64.convert_i32_s
00006ca: a2                                        ; f64.mul
00006cb: 10                                        ; call
00006cc: 06                                        ; function index
00006cd: aa                                        ; i32.trunc_f64_s
00006ce: 21                                        ; local.set
00006cf: 09                                        ; local index
00006d0: 20                                        ; local.get
00006d1: 04                                        ; local index
00006d2: 20                                        ; local.get
00006d3: 06                                        ; local index
00006d4: 92                                        ; f32.add
00006d5: bb                                        ; f64.promote_f32
00006d6: 20                                        ; local.get
00006d7: 00                                        ; local index
00006d8: bb                                        ; f64.promote_f32
00006d9: a3                                        ; f64.div
00006da: 23                                        ; global.get
00006db: 0c                                        ; global index
00006dc: b7                                        ; f64.convert_i32_s
00006dd: a2                                        ; f64.mul
00006de: 10                                        ; call
00006df: 06                                        ; function index
00006e0: aa                                        ; i32.trunc_f64_s
00006e1: 21                                        ; local.set
00006e2: 0a                                        ; local index
00006e3: 20                                        ; local.get
00006e4: 05                                        ; local index
00006e5: 20                                        ; local.get
00006e6: 06                                        ; local index
00006e7: 93                                        ; f32.sub
00006e8: bb                                        ; f64.promote_f32
00006e9: 20                                        ; local.get
00006ea: 01                                        ; local index
00006eb: bb                                        ; f64.promote_f32
00006ec: a3                                        ; f64.div
00006ed: 23                                        ; global.get
00006ee: 0b                                        ; global index
00006ef: b7                                        ; f64.convert_i32_s
00006f0: a2                                        ; f64.mul
00006f1: 10                                        ; call
00006f2: 06                                        ; function index
00006f3: aa                                        ; i32.trunc_f64_s
00006f4: 21                                        ; local.set
00006f5: 0b                                        ; local index
00006f6: 20                                        ; local.get
00006f7: 05                                        ; local index
00006f8: 20                                        ; local.get
00006f9: 06                                        ; local index
00006fa: 92                                        ; f32.add
00006fb: bb                                        ; f64.promote_f32
00006fc: 20                                        ; local.get
00006fd: 01                                        ; local index
00006fe: bb                                        ; f64.promote_f32
00006ff: a3                                        ; f64.div
0000700: 23                                        ; global.get
0000701: 0b                                        ; global index
0000702: b7                                        ; f64.convert_i32_s
0000703: a2                                        ; f64.mul
0000704: 10                                        ; call
0000705: 06                                        ; function index
0000706: aa                                        ; i32.trunc_f64_s
0000707: 21                                        ; local.set
0000708: 0c                                        ; local index
0000709: 20                                        ; local.get
000070a: 09                                        ; local index
000070b: 41                                        ; i32.const
000070c: 00                                        ; i32 literal
000070d: 48                                        ; i32.lt_s
000070e: 04                                        ; if
000070f: 40                                        ; void
0000710: 41                                        ; i32.const
0000711: 00                                        ; i32 literal
0000712: 21                                        ; local.set
0000713: 09                                        ; local index
0000714: 0b                                        ; end
0000715: 20                                        ; local.get
0000716: 0a                                        ; local index
0000717: 23                                        ; global.get
0000718: 0c                                        ; global index
0000719: 4e                                        ; i32.ge_s
000071a: 04                                        ; if
000071b: 40                                        ; void
000071c: 23                                        ; global.get
000071d: 0c                                        ; global index
000071e: 41                                        ; i32.const
000071f: 01                                        ; i32 literal
0000720: 6b                                        ; i32.sub
0000721: 21                                        ; local.set
0000722: 0a                                        ; local index
0000723: 0b                                        ; end
0000724: 20                                        ; local.get
0000725: 0b                                        ; local index
0000726: 41                                        ; i32.const
0000727: 00                                        ; i32 literal
0000728: 48                                        ; i32.lt_s
0000729: 04                                        ; if
000072a: 40                                        ; void
000072b: 41                                        ; i32.const
000072c: 00                                        ; i32 literal
000072d: 21                                        ; local.set
000072e: 0b                                        ; local index
000072f: 0b                                        ; end
0000730: 20                                        ; local.get
0000731: 0c                                        ; local index
0000732: 23                                        ; global.get
0000733: 0b                                        ; global index
0000734: 4e                                        ; i32.ge_s
0000735: 04                                        ; if
0000736: 40                                        ; void
0000737: 23                                        ; global.get
0000738: 0b                                        ; global index
0000739: 41                                        ; i32.const
000073a: 01                                        ; i32 literal
000073b: 6b                                        ; i32.sub
000073c: 21                                        ; local.set
000073d: 0c                                        ; local index
000073e: 0b                                        ; end
000073f: 20                                        ; local.get
0000740: 09                                        ; local index
0000741: 21                                        ; local.set
0000742: 0d                                        ; local index
0000743: 02                                        ; block
0000744: 40                                        ; void
0000745: 03                                        ; loop
0000746: 40                                        ; void
0000747: 20                                        ; local.get
0000748: 0d                                        ; local index
0000749: 20                                        ; local.get
000074a: 0a                                        ; local index
000074b: 4a                                        ; i32.gt_s
000074c: 0d                                        ; br_if
000074d: 01                                        ; break depth
000074e: 23                                        ; global.get
000074f: 11                                        ; global index
0000750: 41                                        ; i32.const
0000751: 08                                        ; i32 literal
0000752: 6a                                        ; i32.add
0000753: 20                                        ; local.get
0000754: 0d                                        ; local index
0000755: 41                                        ; i32.const
0000756: 04                                        ; i32 literal
0000757: 6c                                        ; i32.mul
0000758: 6a                                        ; i32.add
0000759: 28                                        ; i32.load
000075a: 02                                        ; alignment
000075b: 00                                        ; load offset
000075c: 21                                        ; local.set
000075d: 0e                                        ; local index
000075e: 20                                        ; local.get
000075f: 0b                                        ; local index
0000760: 21                                        ; local.set
0000761: 0f                                        ; local index
0000762: 02                                        ; block
0000763: 40                                        ; void
0000764: 03                                        ; loop
0000765: 40                                        ; void
0000766: 20                                        ; local.get
0000767: 0f                                        ; local index
0000768: 20                                        ; local.get
0000769: 0c                                        ; local index
000076a: 4a                                        ; i32.gt_s
000076b: 0d                                        ; br_if
000076c: 01                                        ; break depth
000076d: 23                                        ; global.get
000076e: 10                                        ; global index
000076f: 41                                        ; i32.const
0000770: 08                                        ; i32 literal
0000771: 6a                                        ; i32.add
0000772: 20                                        ; local.get
0000773: 02                                        ; local index
0000774: 41                                        ; i32.const
0000775: 04                                        ; i32 literal
0000776: 6c                                        ; i32.mul
0000777: 6a                                        ; i32.add
0000778: 28                                        ; i32.load
0000779: 02                                        ; alignment
000077a: 00                                        ; load offset
000077b: 21                                        ; local.set
000077c: 10                                        ; local index
000077d: 20                                        ; local.get
000077e: 02                                        ; local index
000077f: 41                                        ; i32.const
0000780: 01                                        ; i32 literal
0000781: 6a                                        ; i32.add
0000782: 21                                        ; local.set
0000783: 02                                        ; local index
0000784: 20                                        ; local.get
0000785: 10                                        ; local index
0000786: 41                                        ; i32.const
0000787: 04                                        ; i32 literal
0000788: 6a                                        ; i32.add
0000789: 20                                        ; local.get
000078a: 03                                        ; local index
000078b: 36                                        ; i32.store
000078c: 02                                        ; alignment
000078d: 00                                        ; store offset
000078e: 20                                        ; local.get
000078f: 10                                        ; local index
0000790: 41                                        ; i32.const
0000791: 00                                        ; i32 literal
0000792: 6a                                        ; i32.add
0000793: 20                                        ; local.get
0000794: 0e                                        ; local index
0000795: 41                                        ; i32.const
0000796: 08                                        ; i32 literal
0000797: 6a                                        ; i32.add
0000798: 20                                        ; local.get
0000799: 0f                                        ; local index
000079a: 41                                        ; i32.const
000079b: 04                                        ; i32 literal
000079c: 6c                                        ; i32.mul
000079d: 6a                                        ; i32.add
000079e: 28                                        ; i32.load
000079f: 02                                        ; alignment
00007a0: 00                                        ; load offset
00007a1: 36                                        ; i32.store
00007a2: 02                                        ; alignment
00007a3: 00                                        ; store offset
00007a4: 20                                        ; local.get
00007a5: 0e                                        ; local index
00007a6: 41                                        ; i32.const
00007a7: 08                                        ; i32 literal
00007a8: 6a                                        ; i32.add
00007a9: 20                                        ; local.get
00007aa: 0f                                        ; local index
00007ab: 41                                        ; i32.const
00007ac: 04                                        ; i32 literal
00007ad: 6c                                        ; i32.mul
00007ae: 6a                                        ; i32.add
00007af: 20                                        ; local.get
00007b0: 10                                        ; local index
00007b1: 36                                        ; i32.store
00007b2: 02                                        ; alignment
00007b3: 00                                        ; store offset
00007b4: 20                                        ; local.get
00007b5: 0f                                        ; local index
00007b6: 41                                        ; i32.const
00007b7: 01                                        ; i32 literal
00007b8: 6a                                        ; i32.add
00007b9: 21                                        ; local.set
00007ba: 0f                                        ; local index
00007bb: 0c                                        ; br
00007bc: 00                                        ; break depth
00007bd: 0b                                        ; end
00007be: 0b                                        ; end
00007bf: 20                                        ; local.get
00007c0: 0d                                        ; local index
00007c1: 41                                        ; i32.const
00007c2: 01                                        ; i32 literal
00007c3: 6a                                        ; i32.add
00007c4: 21                                        ; local.set
00007c5: 0d                                        ; local index
00007c6: 0c                                        ; br
00007c7: 00                                        ; break depth
00007c8: 0b                                        ; end
00007c9: 0b                                        ; end
00007ca: 20                                        ; local.get
00007cb: 03                                        ; local index
00007cc: 41                                        ; i32.const
00007cd: 01                                        ; i32 literal
00007ce: 6a                                        ; i32.add
00007cf: 21                                        ; local.set
00007d0: 03                                        ; local index
00007d1: 0c                                        ; br
00007d2: 00                                        ; break depth
00007d3: 0b                                        ; end
00007d4: 0b                                        ; end
00007d5: 0b                                        ; end
; move data: [562, 7d6) -> [563, 7d7)
0000561: f404                                      ; FIXUP func body size
; function body 7
00007d7: 00                                        ; func body size (guess)
00007d8: 07                                        ; local decl count
00007d9: 05                                        ; local type count
00007da: 7f                                        ; i32
00007db: 05                                        ; local type count
00007dc: 7d                                        ; f32
00007dd: 02                                        ; local type count
00007de: 7f                                        ; i32
00007df: 07                                        ; local type count
00007e0: 7d                                        ; f32
00007e1: 01                                        ; local type count
00007e2: 7c                                        ; f64
00007e3: 04                                        ; local type count
00007e4: 7d                                        ; f32
00007e5: 04                                        ; local type count
00007e6: 7c                                        ; f64
00007e7: 41                                        ; i32.const
00007e8: 00                                        ; i32 literal
00007e9: 21                                        ; local.set
00007ea: 00                                        ; local index
00007eb: 02                                        ; block
00007ec: 40                                        ; void
00007ed: 03                                        ; loop
00007ee: 40                                        ; void
00007ef: 20                                        ; local.get
00007f0: 00                                        ; local index
00007f1: 23                                        ; global.get
00007f2: 0c                                        ; global index
00007f3: 41                                        ; i32.const
00007f4: 01                                        ; i32 literal
00007f5: 6b                                        ; i32.sub
00007f6: 4a                                        ; i32.gt_s
00007f7: 0d                                        ; br_if
00007f8: 01                                        ; break depth
00007f9: 23                                        ; global.get
00007fa: 11                                        ; global index
00007fb: 41                                        ; i32.const
00007fc: 08                                        ; i32 literal
00007fd: 6a                                        ; i32.add
00007fe: 20                                        ; local.get
00007ff: 00                                        ; local index
0000800: 41                                        ; i32.const
0000801: 04                                        ; i32 literal
0000802: 6c                                        ; i32.mul
0000803: 6a                                        ; i32.add
0000804: 28                                        ; i32.load
0000805: 02                                        ; alignment
0000806: 00                                        ; load offset
0000807: 21                                        ; local.set
0000808: 01                                        ; local index
0000809: 41                                        ; i32.const
000080a: 00                                        ; i32 literal
000080b: 21                                        ; local.set
000080c: 02                                        ; local index
000080d: 02                                        ; block
000080e: 40                                        ; void
000080f: 03                                        ; loop
0000810: 40                                        ; void
0000811: 20                                        ; local.get
0000812: 02                                        ; local index
0000813: 23                                        ; global.get
0000814: 0b                                        ; global index
0000815: 41                                        ; i32.const
0000816: 01                                        ; i32 literal
0000817: 6b                                        ; i32.sub
0000818: 4a                                        ; i32.gt_s
0000819: 0d                                        ; br_if
000081a: 01                                        ; break depth
000081b: 20                                        ; local.get
000081c: 01                                        ; local index
000081d: 41                                        ; i32.const
000081e: 08                                        ; i32 literal
000081f: 6a                                        ; i32.add
0000820: 20                                        ; local.get
0000821: 02                                        ; local index
0000822: 41                                        ; i32.const
0000823: 04                                        ; i32 literal
0000824: 6c                                        ; i32.mul
0000825: 6a                                        ; i32.add
0000826: 28                                        ; i32.load
0000827: 02                                        ; alignment
0000828: 00                                        ; load offset
0000829: 21                                        ; local.set
000082a: 03                                        ; local index
000082b: 02                                        ; block
000082c: 40                                        ; void
000082d: 03                                        ; loop
000082e: 40                                        ; void
000082f: 20                                        ; local.get
0000830: 03                                        ; local index
0000831: 41                                        ; i32.const
0000832: 00                                        ; i32 literal
0000833: 46                                        ; i32.eq
0000834: 45                                        ; i32.eqz
0000835: 45                                        ; i32.eqz
0000836: 0d                                        ; br_if
0000837: 01                                        ; break depth
0000838: 20                                        ; local.get
0000839: 03                                        ; local index
000083a: 41                                        ; i32.const
000083b: 04                                        ; i32 literal
000083c: 6a                                        ; i32.add
000083d: 28                                        ; i32.load
000083e: 02                                        ; alignment
000083f: 00                                        ; load offset
0000840: 21                                        ; local.set
0000841: 04                                        ; local index
0000842: 23                                        ; global.get
0000843: 0e                                        ; global index
0000844: 41                                        ; i32.const
0000845: 08                                        ; i32 literal
0000846: 6a                                        ; i32.add
0000847: 20                                        ; local.get
0000848: 04                                        ; local index
0000849: 41                                        ; i32.const
000084a: 04                                        ; i32 literal
000084b: 6c                                        ; i32.mul
000084c: 6a                                        ; i32.add
000084d: 28                                        ; i32.load
000084e: 02                                        ; alignment
000084f: 00                                        ; load offset
0000850: 41                                        ; i32.const
0000851: 00                                        ; i32 literal
0000852: 6a                                        ; i32.add
0000853: 2a                                        ; f32.load
0000854: 02                                        ; alignment
0000855: 00                                        ; load offset
0000856: 21                                        ; local.set
0000857: 05                                        ; local index
0000858: 23                                        ; global.get
0000859: 0e                                        ; global index
000085a: 41                                        ; i32.const
000085b: 08                                        ; i32 literal
000085c: 6a                                        ; i32.add
000085d: 20                                        ; local.get
000085e: 04                                        ; local index
000085f: 41                                        ; i32.const
0000860: 04                                        ; i32 literal
0000861: 6c                                        ; i32.mul
0000862: 6a                                        ; i32.add
0000863: 28                                        ; i32.load
0000864: 02                                        ; alignment
0000865: 00                                        ; load offset
0000866: 41                                        ; i32.const
0000867: 04                                        ; i32 literal
0000868: 6a                                        ; i32.add
0000869: 2a                                        ; f32.load
000086a: 02                                        ; alignment
000086b: 00                                        ; load offset
000086c: 21                                        ; local.set
000086d: 06                                        ; local index
000086e: 23                                        ; global.get
000086f: 0e                                        ; global index
0000870: 41                                        ; i32.const
0000871: 08                                        ; i32 literal
0000872: 6a                                        ; i32.add
0000873: 20                                        ; local.get
0000874: 04                                        ; local index
0000875: 41                                        ; i32.const
0000876: 04                                        ; i32 literal
0000877: 6c                                        ; i32.mul
0000878: 6a                                        ; i32.add
0000879: 28                                        ; i32.load
000087a: 02                                        ; alignment
000087b: 00                                        ; load offset
000087c: 41                                        ; i32.const
000087d: 08                                        ; i32 literal
000087e: 6a                                        ; i32.add
000087f: 2a                                        ; f32.load
0000880: 02                                        ; alignment
0000881: 00                                        ; load offset
0000882: 21                                        ; local.set
0000883: 07                                        ; local index
0000884: 23                                        ; global.get
0000885: 0f                                        ; global index
0000886: 41                                        ; i32.const
0000887: 08                                        ; i32 literal
0000888: 6a                                        ; i32.add
0000889: 20                                        ; local.get
000088a: 04                                        ; local index
000088b: 41                                        ; i32.const
000088c: 04                                        ; i32 literal
000088d: 6c                                        ; i32.mul
000088e: 6a                                        ; i32.add
000088f: 28                                        ; i32.load
0000890: 02                                        ; alignment
0000891: 00                                        ; load offset
0000892: 41                                        ; i32.const
0000893: 04                                        ; i32 literal
0000894: 6a                                        ; i32.add
0000895: 2a                                        ; f32.load
0000896: 02                                        ; alignment
0000897: 00                                        ; load offset
0000898: 21                                        ; local.set
0000899: 08                                        ; local index
000089a: 23                                        ; global.get
000089b: 0f                                        ; global index
000089c: 41                                        ; i32.const
000089d: 08                                        ; i32 literal
000089e: 6a                                        ; i32.add
000089f: 20                                        ; local.get
00008a0: 04                                        ; local index
00008a1: 41                                        ; i32.const
00008a2: 04                                        ; i32 literal
00008a3: 6c                                        ; i32.mul
00008a4: 6a                                        ; i32.add
00008a5: 28                                        ; i32.load
00008a6: 02                                        ; alignment
00008a7: 00                                        ; load offset
00008a8: 41                                        ; i32.const
00008a9: 00                                        ; i32 literal
00008aa: 6a                                        ; i32.add
00008ab: 2a                                        ; f32.load
00008ac: 02                                        ; alignment
00008ad: 00                                        ; load offset
00008ae: 21                                        ; local.set
00008af: 09                                        ; local index
00008b0: 20                                        ; local.get
00008b1: 03                                        ; local index
00008b2: 21                                        ; local.set
00008b3: 0a                                        ; local index
00008b4: 20                                        ; local.get
00008b5: 0a                                        ; local index
00008b6: 41                                        ; i32.const
00008b7: 00                                        ; i32 literal
00008b8: 6a                                        ; i32.add
00008b9: 28                                        ; i32.load
00008ba: 02                                        ; alignment
00008bb: 00                                        ; load offset
00008bc: 21                                        ; local.set
00008bd: 0a                                        ; local index
00008be: 02                                        ; block
00008bf: 40                                        ; void
00008c0: 03                                        ; loop
00008c1: 40                                        ; void
00008c2: 20                                        ; local.get
00008c3: 0a                                        ; local index
00008c4: 41                                        ; i32.const
00008c5: 00                                        ; i32 literal
00008c6: 46                                        ; i32.eq
00008c7: 45                                        ; i32.eqz
00008c8: 45                                        ; i32.eqz
00008c9: 0d                                        ; br_if
00008ca: 01                                        ; break depth
00008cb: 20                                        ; local.get
00008cc: 0a                                        ; local index
00008cd: 41                                        ; i32.const
00008ce: 04                                        ; i32 literal
00008cf: 6a                                        ; i32.add
00008d0: 28                                        ; i32.load
00008d1: 02                                        ; alignment
00008d2: 00                                        ; load offset
00008d3: 21                                        ; local.set
00008d4: 0b                                        ; local index
00008d5: 23                                        ; global.get
00008d6: 0e                                        ; global index
00008d7: 41                                        ; i32.const
00008d8: 08                                        ; i32 literal
00008d9: 6a                                        ; i32.add
00008da: 20                                        ; local.get
00008db: 0b                                        ; local index
00008dc: 41                                        ; i32.const
00008dd: 04                                        ; i32 literal
00008de: 6c                                        ; i32.mul
00008df: 6a                                        ; i32.add
00008e0: 28                                        ; i32.load
00008e1: 02                                        ; alignment
00008e2: 00                                        ; load offset
00008e3: 41                                        ; i32.const
00008e4: 00                                        ; i32 literal
00008e5: 6a                                        ; i32.add
00008e6: 2a                                        ; f32.load
00008e7: 02                                        ; alignment
00008e8: 00                                        ; load offset
00008e9: 21                                        ; local.set
00008ea: 0c                                        ; local index
00008eb: 23                                        ; global.get
00008ec: 0e                                        ; global index
00008ed: 41                                        ; i32.const
00008ee: 08                                        ; i32 literal
00008ef: 6a                                        ; i32.add
00008f0: 20                                        ; local.get
00008f1: 0b                                        ; local index
00008f2: 41                                        ; i32.const
00008f3: 04                                        ; i32 literal
00008f4: 6c                                        ; i32.mul
00008f5: 6a                                        ; i32.add
00008f6: 28                                        ; i32.load
00008f7: 02                                        ; alignment
00008f8: 00                                        ; load offset
00008f9: 41                                        ; i32.const
00008fa: 04                                        ; i32 literal
00008fb: 6a                                        ; i32.add
00008fc: 2a                                        ; f32.load
00008fd: 02                                        ; alignment
00008fe: 00                                        ; load offset
00008ff: 21                                        ; local.set
0000900: 0d                                        ; local index
0000901: 23                                        ; global.get
0000902: 0e                                        ; global index
0000903: 41                                        ; i32.const
0000904: 08                                        ; i32 literal
0000905: 6a                                        ; i32.add
0000906: 20                                        ; local.get
0000907: 0b                                        ; local index
0000908: 41                                        ; i32.const
0000909: 04                                        ; i32 literal
000090a: 6c                                        ; i32.mul
000090b: 6a                                        ; i32.add
000090c: 28                                        ; i32.load
000090d: 02                                        ; alignment
000090e: 00                                        ; load offset
000090f: 41                                        ; i32.const
0000910: 08                                        ; i32 literal
0000911: 6a                                        ; i32.add
0000912: 2a                                        ; f32.load
0000913: 02                                        ; alignment
0000914: 00                                        ; load offset
0000915: 21                                        ; local.set
0000916: 0e                                        ; local index
0000917: 20                                        ; local.get
0000918: 05                                        ; local index
0000919: 20                                        ; local.get
000091a: 06                                        ; local index
000091b: 20                                        ; local.get
000091c: 07                                        ; local index
000091d: 20                                        ; local.get
000091e: 0c                                        ; local index
000091f: 20                                        ; local.get
0000920: 0d                                        ; local index
0000921: 20                                        ; local.get
0000922: 0e                                        ; local index
0000923: 10                                        ; call
0000924: 11                                        ; function index
0000925: 04                                        ; if
0000926: 40                                        ; void
0000927: 23                                        ; global.get
0000928: 0f                                        ; global index
0000929: 41                                        ; i32.const
000092a: 08                                        ; i32 literal
000092b: 6a                                        ; i32.add
000092c: 20                                        ; local.get
000092d: 0b                                        ; local index
000092e: 41                                        ; i32.const
000092f: 04                                        ; i32 literal
0000930: 6c                                        ; i32.mul
0000931: 6a                                        ; i32.add
0000932: 28                                        ; i32.load
0000933: 02                                        ; alignment
0000934: 00                                        ; load offset
0000935: 41                                        ; i32.const
0000936: 04                                        ; i32 literal
0000937: 6a                                        ; i32.add
0000938: 2a                                        ; f32.load
0000939: 02                                        ; alignment
000093a: 00                                        ; load offset
000093b: 21                                        ; local.set
000093c: 0f                                        ; local index
000093d: 23                                        ; global.get
000093e: 0f                                        ; global index
000093f: 41                                        ; i32.const
0000940: 08                                        ; i32 literal
0000941: 6a                                        ; i32.add
0000942: 20                                        ; local.get
0000943: 0b                                        ; local index
0000944: 41                                        ; i32.const
0000945: 04                                        ; i32 literal
0000946: 6c                                        ; i32.mul
0000947: 6a                                        ; i32.add
0000948: 28                                        ; i32.load
0000949: 02                                        ; alignment
000094a: 00                                        ; load offset
000094b: 41                                        ; i32.const
000094c: 00                                        ; i32 literal
000094d: 6a                                        ; i32.add
000094e: 2a                                        ; f32.load
000094f: 02                                        ; alignment
0000950: 00                                        ; load offset
0000951: 21                                        ; local.set
0000952: 10                                        ; local index
0000953: 20                                        ; local.get
0000954: 0c                                        ; local index
0000955: 20                                        ; local.get
0000956: 05                                        ; local index
0000957: 93                                        ; f32.sub
0000958: 21                                        ; local.set
0000959: 11                                        ; local index
000095a: 20                                        ; local.get
000095b: 0d                                        ; local index
000095c: 20                                        ; local.get
000095d: 06                                        ; local index
000095e: 93                                        ; f32.sub
000095f: 21                                        ; local.set
0000960: 12                                        ; local index
0000961: 20                                        ; local.get
0000962: 11                                        ; local index
0000963: 20                                        ; local.get
0000964: 11                                        ; local index
0000965: 94                                        ; f32.mul
0000966: 20                                        ; local.get
0000967: 12                                        ; local index
0000968: 20                                        ; local.get
0000969: 12                                        ; local index
000096a: 94                                        ; f32.mul
000096b: 92                                        ; f32.add
000096c: bb                                        ; f64.promote_f32
000096d: 10                                        ; call
000096e: 01                                        ; function index
000096f: 21                                        ; local.set
0000970: 13                                        ; local index
0000971: 20                                        ; local.get
0000972: 11                                        ; local index
0000973: bb                                        ; f64.promote_f32
0000974: 20                                        ; local.get
0000975: 13                                        ; local index
0000976: a3                                        ; f64.div
0000977: b6                                        ; f32.demote_f64
0000978: 21                                        ; local.set
0000979: 11                                        ; local index
000097a: 20                                        ; local.get
000097b: 12                                        ; local index
000097c: bb                                        ; f64.promote_f32
000097d: 20                                        ; local.get
000097e: 13                                        ; local index
000097f: a3                                        ; f64.div
0000980: b6                                        ; f32.demote_f64
0000981: 21                                        ; local.set
0000982: 12                                        ; local index
0000983: 20                                        ; local.get
0000984: 11                                        ; local index
0000985: 20                                        ; local.get
0000986: 08                                        ; local index
0000987: 94                                        ; f32.mul
0000988: 20                                        ; local.get
0000989: 12                                        ; local index
000098a: 20                                        ; local.get
000098b: 09                                        ; local index
000098c: 94                                        ; f32.mul
000098d: 92                                        ; f32.add
000098e: 21                                        ; local.set
000098f: 14                                        ; local index
0000990: 20                                        ; local.get
0000991: 11                                        ; local index
0000992: 20                                        ; local.get
0000993: 0f                                        ; local index
0000994: 94                                        ; f32.mul
0000995: 20                                        ; local.get
0000996: 12                                        ; local index
0000997: 20                                        ; local.get
0000998: 10                                        ; local index
0000999: 94                                        ; f32.mul
000099a: 92                                        ; f32.add
000099b: 21                                        ; local.set
000099c: 15                                        ; local index
000099d: 20                                        ; local.get
000099e: 14                                        ; local index
000099f: 20                                        ; local.get
00009a0: 15                                        ; local index
00009a1: 93                                        ; f32.sub
00009a2: 41                                        ; i32.const
00009a3: 00                                        ; i32 literal
00009a4: b2                                        ; f32.convert_i32_s
00009a5: 5f                                        ; f32.le
00009a6: 45                                        ; i32.eqz
00009a7: 04                                        ; if
00009a8: 40                                        ; void
00009a9: 20                                        ; local.get
00009aa: 07                                        ; local index
00009ab: 20                                        ; local.get
00009ac: 0e                                        ; local index
00009ad: 92                                        ; f32.add
00009ae: 21                                        ; local.set
00009af: 16                                        ; local index
00009b0: 20                                        ; local.get
00009b1: 07                                        ; local index
00009b2: 20                                        ; local.get
00009b3: 0e                                        ; local index
00009b4: 93                                        ; f32.sub
00009b5: 21                                        ; local.set
00009b6: 17                                        ; local index
00009b7: 20                                        ; local.get
00009b8: 14                                        ; local index
00009b9: 20                                        ; local.get
00009ba: 17                                        ; local index
00009bb: 94                                        ; f32.mul
00009bc: 41                                        ; i32.const
00009bd: 02                                        ; i32 literal
00009be: b2                                        ; f32.convert_i32_s
00009bf: 20                                        ; local.get
00009c0: 0e                                        ; local index
00009c1: 94                                        ; f32.mul
00009c2: 20                                        ; local.get
00009c3: 15                                        ; local index
00009c4: 94                                        ; f32.mul
00009c5: 92                                        ; f32.add
00009c6: bb                                        ; f64.promote_f32
00009c7: 20                                        ; local.get
00009c8: 16                                        ; local index
00009c9: bb                                        ; f64.promote_f32
00009ca: a3                                        ; f64.div
00009cb: 21                                        ; local.set
00009cc: 18                                        ; local index
00009cd: 41                                        ; i32.const
00009ce: 02                                        ; i32 literal
00009cf: b2                                        ; f32.convert_i32_s
00009d0: 20                                        ; local.get
00009d1: 07                                        ; local index
00009d2: 94                                        ; f32.mul
00009d3: 20                                        ; local.get
00009d4: 14                                        ; local index
00009d5: 94                                        ; f32.mul
00009d6: 20                                        ; local.get
00009d7: 15                                        ; local index
00009d8: 20                                        ; local.get
00009d9: 17                                        ; local index
00009da: 94                                        ; f32.mul
00009db: 93                                        ; f32.sub
00009dc: bb                                        ; f64.promote_f32
00009dd: 20                                        ; local.get
00009de: 16                                        ; local index
00009df: bb                                        ; f64.promote_f32
00009e0: a3                                        ; f64.div
00009e1: 21                                        ; local.set
00009e2: 19                                        ; local index
00009e3: 20                                        ; local.get
00009e4: 18                                        ; local index
00009e5: 20                                        ; local.get
00009e6: 14                                        ; local index
00009e7: bb                                        ; f64.promote_f32
00009e8: a1                                        ; f64.sub
00009e9: 21                                        ; local.set
00009ea: 1a                                        ; local index
00009eb: 20                                        ; local.get
00009ec: 19                                        ; local index
00009ed: 20                                        ; local.get
00009ee: 15                                        ; local index
00009ef: bb                                        ; f64.promote_f32
00009f0: a1                                        ; f64.sub
00009f1: 21                                        ; local.set
00009f2: 1b                                        ; local index
00009f3: 23                                        ; global.get
00009f4: 0f                                        ; global index
00009f5: 41                                        ; i32.const
00009f6: 08                                        ; i32 literal
00009f7: 6a                                        ; i32.add
00009f8: 20                                        ; local.get
00009f9: 04                                        ; local index
00009fa: 41                                        ; i32.const
00009fb: 04                                        ; i32 literal
00009fc: 6c                                        ; i32.mul
00009fd: 6a                                        ; i32.add
00009fe: 28                                        ; i32.load
00009ff: 02                                        ; alignment
0000a00: 00                                        ; load offset
0000a01: 41                                        ; i32.const
0000a02: 04                                        ; i32 literal
0000a03: 6a                                        ; i32.add
0000a04: 20                                        ; local.get
0000a05: 08                                        ; local index
0000a06: bb                                        ; f64.promote_f32
0000a07: 20                                        ; local.get
0000a08: 11                                        ; local index
0000a09: bb                                        ; f64.promote_f32
0000a0a: 20                                        ; local.get
0000a0b: 1a                                        ; local index
0000a0c: a2                                        ; f64.mul
0000a0d: a0                                        ; f64.add
0000a0e: b6                                        ; f32.demote_f64
0000a0f: 38                                        ; f32.store
0000a10: 02                                        ; alignment
0000a11: 00                                        ; store offset
0000a12: 23                                        ; global.get
0000a13: 0f                                        ; global index
0000a14: 41                                        ; i32.const
0000a15: 08                                        ; i32 literal
0000a16: 6a                                        ; i32.add
0000a17: 20                                        ; local.get
0000a18: 04                                        ; local index
0000a19: 41                                        ; i32.const
0000a1a: 04                                        ; i32 literal
0000a1b: 6c                                        ; i32.mul
0000a1c: 6a                                        ; i32.add
0000a1d: 28                                        ; i32.load
0000a1e: 02                                        ; alignment
0000a1f: 00                                        ; load offset
0000a20: 41                                        ; i32.const
0000a21: 00                                        ; i32 literal
0000a22: 6a                                        ; i32.add
0000a23: 20                                        ; local.get
0000a24: 09                                        ; local index
0000a25: bb                                        ; f64.promote_f32
0000a26: 20                                        ; local.get
0000a27: 12                                        ; local index
0000a28: bb                                        ; f64.promote_f32
0000a29: 20                                        ; local.get
0000a2a: 1a                                        ; local index
0000a2b: a2                                        ; f64.mul
0000a2c: a0                                        ; f64.add
0000a2d: b6                                        ; f32.demote_f64
0000a2e: 38                                        ; f32.store
0000a2f: 02                                        ; alignment
0000a30: 00                                        ; store offset
0000a31: 23                                        ; global.get
0000a32: 0f                                        ; global index
0000a33: 41                                        ; i32.const
0000a34: 08                                        ; i32 literal
0000a35: 6a                                        ; i32.add
0000a36: 20                                        ; local.get
0000a37: 0b                                        ; local index
0000a38: 41                                        ; i32.const
0000a39: 04                                        ; i32 literal
0000a3a: 6c                                        ; i32.mul
0000a3b: 6a                                        ; i32.add
0000a3c: 28                                        ; i32.load
0000a3d: 02                                        ; alignment
0000a3e: 00                                        ; load offset
0000a3f: 41                                        ; i32.const
0000a40: 04                                        ; i32 literal
0000a41: 6a                                        ; i32.add
0000a42: 20                                        ; local.get
0000a43: 0f                                        ; local index
0000a44: bb                                        ; f64.promote_f32
0000a45: 20                                        ; local.get
0000a46: 11                                        ; local index
0000a47: bb                                        ; f64.promote_f32
0000a48: 20                                        ; local.get
0000a49: 1b                                        ; local index
0000a4a: a2                                        ; f64.mul
0000a4b: a0                                        ; f64.add
0000a4c: b6                                        ; f32.demote_f64
0000a4d: 38                                        ; f32.store
0000a4e: 02                                        ; alignment
0000a4f: 00                                        ; store offset
0000a50: 23                                        ; global.get
0000a51: 0f                                        ; global index
0000a52: 41                                        ; i32.const
0000a53: 08                                        ; i32 literal
0000a54: 6a                                        ; i32.add
0000a55: 20                                        ; local.get
0000a56: 0b                                        ; local index
0000a57: 41                                        ; i32.const
0000a58: 04                                        ; i32 literal
0000a59: 6c                                        ; i32.mul
0000a5a: 6a                                        ; i32.add
0000a5b: 28                                        ; i32.load
0000a5c: 02                                        ; alignment
0000a5d: 00                                        ; load offset
0000a5e: 41                                        ; i32.const
0000a5f: 00                                        ; i32 literal
0000a60: 6a                                        ; i32.add
0000a61: 20                                        ; local.get
0000a62: 10                                        ; local index
0000a63: bb                                        ; f64.promote_f32
0000a64: 20                                        ; local.get
0000a65: 12                                        ; local index
0000a66: bb                                        ; f64.promote_f32
0000a67: 20                                        ; local.get
0000a68: 1b                                        ; local index
0000a69: a2                                        ; f64.mul
0000a6a: a0                                        ; f64.add
0000a6b: b6                                        ; f32.demote_f64
0000a6c: 38                                        ; f32.store
0000a6d: 02                                        ; alignment
0000a6e: 00                                        ; store offset
0000a6f: 20                                        ; local.get
0000a70: 0a                                        ; local index
0000a71: 41                                        ; i32.const
0000a72: 00                                        ; i32 literal
0000a73: 6a                                        ; i32.add
0000a74: 28                                        ; i32.load
0000a75: 02                                        ; alignment
0000a76: 00                                        ; load offset
0000a77: 21                                        ; local.set
0000a78: 0a                                        ; local index
0000a79: 0b                                        ; end
0000a7a: 05                                        ; else
0000a7b: 20                                        ; local.get
0000a7c: 0a                                        ; local index
0000a7d: 41                                        ; i32.const
0000a7e: 00                                        ; i32 literal
0000a7f: 6a                                        ; i32.add
0000a80: 28                                        ; i32.load
0000a81: 02                                        ; alignment
0000a82: 00                                        ; load offset
0000a83: 21                                        ; local.set
0000a84: 0a                                        ; local index
0000a85: 0b                                        ; end
0000a86: 0c                                        ; br
0000a87: 00                                        ; break depth
0000a88: 0b                                        ; end
0000a89: 0b                                        ; end
0000a8a: 20                                        ; local.get
0000a8b: 03                                        ; local index
0000a8c: 41                                        ; i32.const
0000a8d: 00                                        ; i32 literal
0000a8e: 6a                                        ; i32.add
0000a8f: 28                                        ; i32.load
0000a90: 02                                        ; alignment
0000a91: 00                                        ; load offset
0000a92: 21                                        ; local.set
0000a93: 03                                        ; local index
0000a94: 0c                                        ; br
0000a95: 00                                        ; break depth
0000a96: 0b                                        ; end
0000a97: 0b                                        ; end
0000a98: 20                                        ; local.get
0000a99: 02                                        ; local index
0000a9a: 41                                        ; i32.const
0000a9b: 01                                        ; i32 literal
0000a9c: 6a                                        ; i32.add
0000a9d: 21                                        ; local.set
0000a9e: 02                                        ; local index
0000a9f: 0c                                        ; br
0000aa0: 00                                        ; break depth
0000aa1: 0b                                        ; end
0000aa2: 0b                                        ; end
0000aa3: 20                                        ; local.get
0000aa4: 00                                        ; local index
0000aa5: 41                                        ; i32.const
0000aa6: 01                                        ; i32 literal
0000aa7: 6a                                        ; i32.add
0000aa8: 21                                        ; local.set
0000aa9: 00                                        ; local index
0000aaa: 0c                                        ; br
0000aab: 00                                        ; break depth
0000aac: 0b                                        ; end
0000aad: 0b                                        ; end
0000aae: 0b                                        ; end
; move data: [7d8, aaf) -> [7d9, ab0)
00007d7: d705                                      ; FIXUP func body size
; function body 8
0000ab0: 00                                        ; func body size (guess)
0000ab1: 00                                        ; local decl count
0000ab2: 10                                        ; call
0000ab3: 0d                                        ; function index
0000ab4: 20                                        ; local.get
0000ab5: 00                                        ; local index
0000ab6: 20                                        ; local.get
0000ab7: 01                                        ; local index
0000ab8: 10                                        ; call
0000ab9: 0e                                        ; function index
0000aba: 10                                        ; call
0000abb: 0f                                        ; function index
0000abc: 0b                                        ; end
0000ab0: 0c                                        ; FIXUP func body size
; function body 9
0000abd: 00                                        ; func body size (guess)
0000abe: 01                                        ; local decl count
0000abf: 02                                        ; local type count
0000ac0: 7f                                        ; i32
0000ac1: 20                                        ; local.get
0000ac2: 00                                        ; local index
0000ac3: 20                                        ; local.get
0000ac4: 02                                        ; local index
0000ac5: 92                                        ; f32.add
0000ac6: 20                                        ; local.get
0000ac7: 03                                        ; local index
0000ac8: 20                                        ; local.get
0000ac9: 05                                        ; local index
0000aca: 93                                        ; f32.sub
0000acb: 5d                                        ; f32.lt
0000acc: 20                                        ; local.get
0000acd: 00                                        ; local index
0000ace: 20                                        ; local.get
0000acf: 02                                        ; local index
0000ad0: 93                                        ; f32.sub
0000ad1: 20                                        ; local.get
0000ad2: 03                                        ; local index
0000ad3: 20                                        ; local.get
0000ad4: 05                                        ; local index
0000ad5: 92                                        ; f32.add
0000ad6: 5e                                        ; f32.gt
0000ad7: 6a                                        ; i32.add
0000ad8: 20                                        ; local.get
0000ad9: 01                                        ; local index
0000ada: 20                                        ; local.get
0000adb: 02                                        ; local index
0000adc: 92                                        ; f32.add
0000add: 20                                        ; local.get
0000ade: 04                                        ; local index
0000adf: 20                                        ; local.get
0000ae0: 05                                        ; local index
0000ae1: 93                                        ; f32.sub
0000ae2: 5d                                        ; f32.lt
0000ae3: 6a                                        ; i32.add
0000ae4: 20                                        ; local.get
0000ae5: 01                                        ; local index
0000ae6: 20                                        ; local.get
0000ae7: 02                                        ; local index
0000ae8: 93                                        ; f32.sub
0000ae9: 20                                        ; local.get
0000aea: 04                                        ; local index
0000aeb: 20                                        ; local.get
0000aec: 05                                        ; local index
0000aed: 92                                        ; f32.add
0000aee: 5e                                        ; f32.gt
0000aef: 6a                                        ; i32.add
0000af0: 04                                        ; if
0000af1: 40                                        ; void
0000af2: 41                                        ; i32.const
0000af3: 00                                        ; i32 literal
0000af4: 0f                                        ; return
0000af5: 0b                                        ; end
0000af6: 20                                        ; local.get
0000af7: 03                                        ; local index
0000af8: 20                                        ; local.get
0000af9: 00                                        ; local index
0000afa: 93                                        ; f32.sub
0000afb: bb                                        ; f64.promote_f32
0000afc: 41                                        ; i32.const
0000afd: 02                                        ; i32 literal
0000afe: b2                                        ; f32.convert_i32_s
0000aff: bb                                        ; f64.promote_f32
0000b00: 10                                        ; call
0000b01: 00                                        ; function index
0000b02: 20                                        ; local.get
0000b03: 04                                        ; local index
0000b04: 20                                        ; local.get
0000b05: 01                                        ; local index
0000b06: 93                                        ; f32.sub
0000b07: bb                                        ; f64.promote_f32
0000b08: 41                                        ; i32.const
0000b09: 02                                        ; i32 literal
0000b0a: b2                                        ; f32.convert_i32_s
0000b0b: bb                                        ; f64.promote_f32
0000b0c: 10                                        ; call
0000b0d: 00                                        ; function index
0000b0e: a0                                        ; f64.add
0000b0f: 10                                        ; call
0000b10: 01                                        ; function index
0000b11: 20                                        ; local.get
0000b12: 02                                        ; local index
0000b13: 20                                        ; local.get
0000b14: 05                                        ; local index
0000b15: 92                                        ; f32.add
0000b16: bb                                        ; f64.promote_f32
0000b17: 65                                        ; f64.le
0000b18: 0f                                        ; return
0000b19: 0b                                        ; end
0000abd: 5c                                        ; FIXUP func body size
; function body 10
0000b1a: 00                                        ; func body size (guess)
0000b1b: 00                                        ; local decl count
0000b1c: 41                                        ; i32.const
0000b1d: 8807                                      ; i32 literal
0000b1f: 0f                                        ; return
0000b20: 0b                                        ; end
0000b1a: 06                                        ; FIXUP func body size
; function body 11
0000b21: 00                                        ; func body size (guess)
0000b22: 00                                        ; local decl count
0000b23: 41                                        ; i32.const
0000b24: 9807                                      ; i32 literal
0000b26: 0f                                        ; return
0000b27: 0b                                        ; end
0000b21: 06                                        ; FIXUP func body size
; function body 12
0000b28: 00                                        ; func body size (guess)
0000b29: 00                                        ; local decl count
0000b2a: 41                                        ; i32.const
0000b2b: f007                                      ; i32 literal
0000b2d: 0f                                        ; return
0000b2e: 0b                                        ; end
0000b28: 06                                        ; FIXUP func body size
; function body 13
0000b2f: 00                                        ; func body size (guess)
0000b30: 00                                        ; local decl count
0000b31: 41                                        ; i32.const
0000b32: f807                                      ; i32 literal
0000b34: 0f                                        ; return
0000b35: 0b                                        ; end
0000b2f: 06                                        ; FIXUP func body size
; function body 14
0000b36: 00                                        ; func body size (guess)
0000b37: 00                                        ; local decl count
0000b38: 41                                        ; i32.const
0000b39: 8808                                      ; i32 literal
0000b3b: 0f                                        ; return
0000b3c: 0b                                        ; end
0000b36: 06                                        ; FIXUP func body size
; function body 15
0000b3d: 00                                        ; func body size (guess)
0000b3e: 00                                        ; local decl count
0000b3f: 41                                        ; i32.const
0000b40: d008                                      ; i32 literal
0000b42: 0f                                        ; return
0000b43: 0b                                        ; end
0000b3d: 06                                        ; FIXUP func body size
; function body 16
0000b44: 00                                        ; func body size (guess)
0000b45: 00                                        ; local decl count
0000b46: 41                                        ; i32.const
0000b47: e008                                      ; i32 literal
0000b49: 0f                                        ; return
0000b4a: 0b                                        ; end
0000b44: 06                                        ; FIXUP func body size
; function body 17
0000b4b: 00                                        ; func body size (guess)
0000b4c: 00                                        ; local decl count
0000b4d: 41                                        ; i32.const
0000b4e: 8809                                      ; i32 literal
0000b50: 0f                                        ; return
0000b51: 0b                                        ; end
0000b4b: 06                                        ; FIXUP func body size
; function body 18
0000b52: 00                                        ; func body size (guess)
0000b53: 00                                        ; local decl count
0000b54: 41                                        ; i32.const
0000b55: 9009                                      ; i32 literal
0000b57: 0f                                        ; return
0000b58: 0b                                        ; end
0000b52: 06                                        ; FIXUP func body size
; function body 19
0000b59: 00                                        ; func body size (guess)
0000b5a: 00                                        ; local decl count
0000b5b: 10                                        ; call
0000b5c: 1c                                        ; function index
0000b5d: 10                                        ; call
0000b5e: 1d                                        ; function index
0000b5f: 10                                        ; call
0000b60: 1e                                        ; function index
0000b61: 10                                        ; call
0000b62: 1f                                        ; function index
0000b63: 0b                                        ; end
0000b59: 0a                                        ; FIXUP func body size
; function body 20
0000b64: 00                                        ; func body size (guess)
0000b65: 01                                        ; local decl count
0000b66: 04                                        ; local type count
0000b67: 7f                                        ; i32
0000b68: 41                                        ; i32.const
0000b69: 08                                        ; i32 literal
0000b6a: 23                                        ; global.get
0000b6b: 0d                                        ; global index
0000b6c: 41                                        ; i32.const
0000b6d: 01                                        ; i32 literal
0000b6e: 6b                                        ; i32.sub
0000b6f: 41                                        ; i32.const
0000b70: 04                                        ; i32 literal
0000b71: 6c                                        ; i32.mul
0000b72: 6a                                        ; i32.add
0000b73: 41                                        ; i32.const
0000b74: 07                                        ; i32 literal
0000b75: 10                                        ; call
0000b76: 08                                        ; function index
0000b77: 21                                        ; local.set
0000b78: 00                                        ; local index
0000b79: 20                                        ; local.get
0000b7a: 00                                        ; local index
0000b7b: 41                                        ; i32.const
0000b7c: 0d                                        ; i32 literal
0000b7d: 36                                        ; i32.store
0000b7e: 02                                        ; alignment
0000b7f: 00                                        ; store offset
0000b80: 20                                        ; local.get
0000b81: 00                                        ; local index
0000b82: 41                                        ; i32.const
0000b83: 04                                        ; i32 literal
0000b84: 6a                                        ; i32.add
0000b85: 23                                        ; global.get
0000b86: 0d                                        ; global index
0000b87: 41                                        ; i32.const
0000b88: 01                                        ; i32 literal
0000b89: 6b                                        ; i32.sub
0000b8a: 36                                        ; i32.store
0000b8b: 02                                        ; alignment
0000b8c: 00                                        ; store offset
0000b8d: 20                                        ; local.get
0000b8e: 00                                        ; local index
0000b8f: 24                                        ; global.set
0000b90: 0e                                        ; global index
0000b91: 41                                        ; i32.const
0000b92: 08                                        ; i32 literal
0000b93: 23                                        ; global.get
0000b94: 0d                                        ; global index
0000b95: 41                                        ; i32.const
0000b96: 01                                        ; i32 literal
0000b97: 6b                                        ; i32.sub
0000b98: 41                                        ; i32.const
0000b99: 04                                        ; i32 literal
0000b9a: 6c                                        ; i32.mul
0000b9b: 6a                                        ; i32.add
0000b9c: 41                                        ; i32.const
0000b9d: 07                                        ; i32 literal
0000b9e: 10                                        ; call
0000b9f: 08                                        ; function index
0000ba0: 21                                        ; local.set
0000ba1: 01                                        ; local index
0000ba2: 20                                        ; local.get
0000ba3: 01                                        ; local index
0000ba4: 41                                        ; i32.const
0000ba5: c002                                      ; i32 literal
0000ba7: 36                                        ; i32.store
0000ba8: 02                                        ; alignment
0000ba9: 00                                        ; store offset
0000baa: 20                                        ; local.get
0000bab: 01                                        ; local index
0000bac: 41                                        ; i32.const
0000bad: 04                                        ; i32 literal
0000bae: 6a                                        ; i32.add
0000baf: 23                                        ; global.get
0000bb0: 0d                                        ; global index
0000bb1: 41                                        ; i32.const
0000bb2: 01                                        ; i32 literal
0000bb3: 6b                                        ; i32.sub
0000bb4: 36                                        ; i32.store
0000bb5: 02                                        ; alignment
0000bb6: 00                                        ; store offset
0000bb7: 20                                        ; local.get
0000bb8: 01                                        ; local index
0000bb9: 24                                        ; global.set
0000bba: 0f                                        ; global index
0000bbb: 41                                        ; i32.const
0000bbc: 08                                        ; i32 literal
0000bbd: 23                                        ; global.get
0000bbe: 0d                                        ; global index
0000bbf: 41                                        ; i32.const
0000bc0: 04                                        ; i32 literal
0000bc1: 6c                                        ; i32.mul
0000bc2: 41                                        ; i32.const
0000bc3: 01                                        ; i32 literal
0000bc4: 6b                                        ; i32.sub
0000bc5: 41                                        ; i32.const
0000bc6: 04                                        ; i32 literal
0000bc7: 6c                                        ; i32.mul
0000bc8: 6a                                        ; i32.add
0000bc9: 41                                        ; i32.const
0000bca: 07                                        ; i32 literal
0000bcb: 10                                        ; call
0000bcc: 08                                        ; function index
0000bcd: 21                                        ; local.set
0000bce: 02                                        ; local index
0000bcf: 20                                        ; local.get
0000bd0: 02                                        ; local index
0000bd1: 41                                        ; i32.const
0000bd2: c004                                      ; i32 literal
0000bd4: 36                                        ; i32.store
0000bd5: 02                                        ; alignment
0000bd6: 00                                        ; store offset
0000bd7: 20                                        ; local.get
0000bd8: 02                                        ; local index
0000bd9: 41                                        ; i32.const
0000bda: 04                                        ; i32 literal
0000bdb: 6a                                        ; i32.add
0000bdc: 23                                        ; global.get
0000bdd: 0d                                        ; global index
0000bde: 41                                        ; i32.const
0000bdf: 04                                        ; i32 literal
0000be0: 6c                                        ; i32.mul
0000be1: 41                                        ; i32.const
0000be2: 01                                        ; i32 literal
0000be3: 6b                                        ; i32.sub
0000be4: 36                                        ; i32.store
0000be5: 02                                        ; alignment
0000be6: 00                                        ; store offset
0000be7: 20                                        ; local.get
0000be8: 02                                        ; local index
0000be9: 24                                        ; global.set
0000bea: 10                                        ; global index
0000beb: 41                                        ; i32.const
0000bec: 08                                        ; i32 literal
0000bed: 23                                        ; global.get
0000bee: 0c                                        ; global index
0000bef: 41                                        ; i32.const
0000bf0: 01                                        ; i32 literal
0000bf1: 6b                                        ; i32.sub
0000bf2: 41                                        ; i32.const
0000bf3: 04                                        ; i32 literal
0000bf4: 6c                                        ; i32.mul
0000bf5: 6a                                        ; i32.add
0000bf6: 41                                        ; i32.const
0000bf7: 07                                        ; i32 literal
0000bf8: 10                                        ; call
0000bf9: 08                                        ; function index
0000bfa: 21                                        ; local.set
0000bfb: 03                                        ; local index
0000bfc: 20                                        ; local.get
0000bfd: 03                                        ; local index
0000bfe: 41                                        ; i32.const
0000bff: c004                                      ; i32 literal
0000c01: 36                                        ; i32.store
0000c02: 02                                        ; alignment
0000c03: 00                                        ; store offset
0000c04: 20                                        ; local.get
0000c05: 03                                        ; local index
0000c06: 41                                        ; i32.const
0000c07: 04                                        ; i32 literal
0000c08: 6a                                        ; i32.add
0000c09: 23                                        ; global.get
0000c0a: 0c                                        ; global index
0000c0b: 41                                        ; i32.const
0000c0c: 01                                        ; i32 literal
0000c0d: 6b                                        ; i32.sub
0000c0e: 36                                        ; i32.store
0000c0f: 02                                        ; alignment
0000c10: 00                                        ; store offset
0000c11: 20                                        ; local.get
0000c12: 03                                        ; local index
0000c13: 24                                        ; global.set
0000c14: 11                                        ; global index
0000c15: 0b                                        ; end
; move data: [b65, c16) -> [b66, c17)
0000b64: b101                                      ; FIXUP func body size
; function body 21
0000c17: 00                                        ; func body size (guess)
0000c18: 00                                        ; local decl count
0000c19: 0b                                        ; end
0000c17: 02                                        ; FIXUP func body size
; function body 22
0000c1a: 00                                        ; func body size (guess)
0000c1b: 01                                        ; local decl count
0000c1c: 02                                        ; local type count
0000c1d: 7f                                        ; i32
0000c1e: 41                                        ; i32.const
0000c1f: 00                                        ; i32 literal
0000c20: 21                                        ; local.set
0000c21: 00                                        ; local index
0000c22: 02                                        ; block
0000c23: 40                                        ; void
0000c24: 03                                        ; loop
0000c25: 40                                        ; void
0000c26: 20                                        ; local.get
0000c27: 00                                        ; local index
0000c28: 23                                        ; global.get
0000c29: 11                                        ; global index
0000c2a: 41                                        ; i32.const
0000c2b: 04                                        ; i32 literal
0000c2c: 6a                                        ; i32.add
0000c2d: 28                                        ; i32.load
0000c2e: 02                                        ; alignment
0000c2f: 00                                        ; load offset
0000c30: 41                                        ; i32.const
0000c31: 01                                        ; i32 literal
0000c32: 6b                                        ; i32.sub
0000c33: 4a                                        ; i32.gt_s
0000c34: 0d                                        ; br_if
0000c35: 01                                        ; break depth
0000c36: 23                                        ; global.get
0000c37: 11                                        ; global index
0000c38: 41                                        ; i32.const
0000c39: 08                                        ; i32 literal
0000c3a: 6a                                        ; i32.add
0000c3b: 20                                        ; local.get
0000c3c: 00                                        ; local index
0000c3d: 41                                        ; i32.const
0000c3e: 04                                        ; i32 literal
0000c3f: 6c                                        ; i32.mul
0000c40: 6a                                        ; i32.add
0000c41: 20                                        ; local.get
0000c42: 01                                        ; local index
0000c43: 36                                        ; i32.store
0000c44: 02                                        ; alignment
0000c45: 00                                        ; store offset
0000c46: 20                                        ; local.get
0000c47: 00                                        ; local index
0000c48: 41                                        ; i32.const
0000c49: 01                                        ; i32 literal
0000c4a: 6a                                        ; i32.add
0000c4b: 21                                        ; local.set
0000c4c: 00                                        ; local index
0000c4d: 0c                                        ; br
0000c4e: 00                                        ; break depth
0000c4f: 0b                                        ; end
0000c50: 0b                                        ; end
0000c51: 0b                                        ; end
0000c1a: 37                                        ; FIXUP func body size
; function body 23
0000c52: 00                                        ; func body size (guess)
0000c53: 00                                        ; local decl count
0000c54: 0b                                        ; end
0000c52: 02                                        ; FIXUP func body size
; move data: [321, c55) -> [322, c56)
0000320: b412                                      ; FIXUP section size
; section "Data" (11)
0000c56: 0b                                        ; section code
0000c57: 00                                        ; section size (guess)
0000c58: 0c                                        ; num data segments
; data segment header 0
0000c59: 00                                      
0000c5a: 41                                        ; i32.const
0000c5b: 8807                                      ; i32 literal
0000c5d: 0b                                        ; end
0000c5e: 0b                                        ; data segment size
; data segment data 0
0000c5f: 5765 6247 4c2d 4465 6d6f 00               ; data segment data
; data segment header 1
0000c6a: 00                                      
0000c6b: 41                                        ; i32.const
0000c6c: 9807                                      ; i32 literal
0000c6e: 0b                                        ; end
0000c6f: 51                                        ; data segment size
; data segment data 1
0000c70: 5765 6241 7373 656d 626c 7920 636f 6e76 
0000c80: 6572 7369 6f6e 2064 656d 6f6e 7374 7261 
0000c90: 7469 6e67 2074 6865 2066 6173 7465 722d 
0000ca0: 7065 7266 6f72 6d69 6e67 2067 7269 6420 
0000cb0: 6f66 206c 696e 6b65 642d 6c69 7374 732e 
0000cc0: 00                                        ; data segment data
; data segment header 2
0000cc1: 00                                      
0000cc2: 41                                        ; i32.const
0000cc3: f007                                      ; i32 literal
0000cc5: 0b                                        ; end
0000cc6: 04                                        ; data segment size
; data segment data 2
0000cc7: 4d49 5400                                 ; data segment data
; data segment header 3
0000ccb: 00                                      
0000ccc: 41                                        ; i32.const
0000ccd: f807                                      ; i32 literal
0000ccf: 0b                                        ; end
0000cd0: 0b                                        ; data segment size
; data segment data 3
0000cd1: 5765 6247 4c2d 4465 6d6f 00               ; data segment data
; data segment header 4
0000cdc: 00                                      
0000cdd: 41                                        ; i32.const
0000cde: 8808                                      ; i32 literal
0000ce0: 0b                                        ; end
0000ce1: 46                                        ; data segment size
; data segment data 4
0000ce2: 6874 7470 733a 2f2f 6769 7468 7562 2e63 
0000cf2: 6f6d 2f67 7579 6265 6466 6f72 642f 7761 
0000d02: 736d 2d64 656d 6f2f 626c 6f62 2f6d 6173 
0000d12: 7465 722f 6e61 7469 7665 2f64 656d 6f2d 
0000d22: 6f70 742e 6300                            ; data segment data
; data segment header 5
0000d28: 00                                      
0000d29: 41                                        ; i32.const
0000d2a: d008                                      ; i32 literal
0000d2c: 0b                                        ; end
0000d2d: 0e                                        ; data segment size
; data segment data 5
0000d2e: 7661 6e69 6c6c 6176 622e 6170 7000        ; data segment data
; data segment header 6
0000d3c: 00                                      
0000d3d: 41                                        ; i32.const
0000d3e: e008                                      ; i32 literal
0000d40: 0b                                        ; end
0000d41: 25                                        ; data segment size
; data segment data 6
0000d42: 3833 6361 3262 3933 2d34 6535 372d 3464 
0000d52: 3434 2d62 3262 632d 3136 3332 3532 6139 
0000d62: 3330 3564 00                              ; data segment data
; data segment header 7
0000d67: 00                                      
0000d68: 41                                        ; i32.const
0000d69: 8809                                      ; i32 literal
0000d6b: 0b                                        ; end
0000d6c: 08                                        ; data segment size
; data segment data 7
0000d6d: 312e 302e 302e 3000                       ; data segment data
; data segment header 8
0000d75: 00                                      
0000d76: 41                                        ; i32.const
0000d77: 9009                                      ; i32 literal
0000d79: 0b                                        ; end
0000d7a: 08                                        ; data segment size
; data segment data 8
0000d7b: 312e 302e 302e 3000                       ; data segment data
; data segment header 9
0000d83: 00                                      
0000d84: 41                                        ; i32.const
0000d85: 0d                                        ; i32 literal
0000d86: 0b                                        ; end
0000d87: ad02                                      ; data segment size
; data segment data 9
0000d89: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000d99: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0000da9: 496b 4e70 636d 4e73 5a53 4973 496d 4e73 
0000db9: 5958 4e7a 5832 6c6b 496a 6f78 4d79 7769 
0000dc9: 5a6d 6c6c 6247 527a 496a 7037 496e 6769 
0000dd9: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
0000de9: 5731 3073 496e 4a68 6479 4936 496d 597a 
0000df9: 4d69 4973 496e 5235 6347 5569 4f6a 4e39 
0000e09: 4c43 4a35 496a 7037 496d 646c 626d 5679 
0000e19: 6157 4d69 4f6c 7464 4c43 4a79 5958 6369 
0000e29: 4f69 4a6d 4d7a 4969 4c43 4a30 6558 426c 
0000e39: 496a 6f7a 6653 7769 6369 4936 6579 4a6e 
0000e49: 5a57 356c 636d 6c6a 496a 7062 5853 7769 
0000e59: 636d 4633 496a 6f69 5a6a 4d79 4969 7769 
0000e69: 6448 6c77 5a53 4936 4d33 3139 4c43 4a70 
0000e79: 6331 4e30 636e 566a 6443 4936 5a6d 4673 
0000e89: 6332 5573 496d 316c 6447 6876 5a48 4d69 
0000e99: 4f6e 7439 4c43 4a75 5957 316c 6333 4268 
0000ea9: 5932 5569 4f6d 3531 6247 7839 00          ; data segment data
; data segment header 10
0000eb6: 00                                      
0000eb7: 41                                        ; i32.const
0000eb8: c002                                      ; i32 literal
0000eba: 0b                                        ; end
0000ebb: fd01                                      ; data segment size
; data segment data 10
0000ebd: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000ecd: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0000edd: 496b 4e70 636d 4e73 5a56 5969 4c43 4a6a 
0000eed: 6247 467a 6331 3970 5a43 4936 4d7a 4977 
0000efd: 4c43 4a6d 6157 5673 5a48 4d69 4f6e 7369 
0000f0d: 646e 6b69 4f6e 7369 5a32 5675 5a58 4a70 
0000f1d: 5979 4936 5731 3073 496e 4a68 6479 4936 
0000f2d: 496d 597a 4d69 4973 496e 5235 6347 5569 
0000f3d: 4f6a 4e39 4c43 4a32 6543 4936 6579 4a6e 
0000f4d: 5a57 356c 636d 6c6a 496a 7062 5853 7769 
0000f5d: 636d 4633 496a 6f69 5a6a 4d79 4969 7769 
0000f6d: 6448 6c77 5a53 4936 4d33 3139 4c43 4a70 
0000f7d: 6331 4e30 636e 566a 6443 4936 5a6d 4673 
0000f8d: 6332 5573 496d 316c 6447 6876 5a48 4d69 
0000f9d: 4f6e 7439 4c43 4a75 5957 316c 6333 4268 
0000fad: 5932 5569 4f6d 3531 6247 7839 00          ; data segment data
; data segment header 11
0000fba: 00                                      
0000fbb: 41                                        ; i32.const
0000fbc: c004                                      ; i32 literal
0000fbe: 0b                                        ; end
0000fbf: a102                                      ; data segment size
; data segment data 11
0000fc1: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000fd1: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0000fe1: 496b 4e6c 6247 7844 6158 4a6a 6247 5569 
0000ff1: 4c43 4a6a 6247 467a 6331 3970 5a43 4936 
0001001: 4e54 6332 4c43 4a6d 6157 5673 5a48 4d69 
0001011: 4f6e 7369 626d 5634 6443 4936 6579 4a6e 
0001021: 5a57 356c 636d 6c6a 496a 7062 5853 7769 
0001031: 636d 4633 496a 6f69 577a 5533 4e6c 3144 
0001041: 5a57 7873 5132 6c79 5932 786c 4969 7769 
0001051: 6448 6c77 5a53 4936 4d54 4239 4c43 4a6a 
0001061: 6158 4a6a 6247 564a 626d 526c 6543 4936 
0001071: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
0001081: 5853 7769 636d 4633 496a 6f69 6154 4d79 
0001091: 4969 7769 6448 6c77 5a53 4936 4d58 3139 
00010a1: 4c43 4a70 6331 4e30 636e 566a 6443 4936 
00010b1: 5a6d 4673 6332 5573 496d 316c 6447 6876 
00010c1: 5a48 4d69 4f6e 7439 4c43 4a75 5957 316c 
00010d1: 6333 4268 5932 5569 4f6d 3531 6247 7839 
00010e1: 00                                        ; data segment data
; move data: [c58, 10e2) -> [c59, 10e3)
0000c57: 8a09                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0131 0960 027c 7c01 
0000010: 7c60 017c 017c 6000 017c 6002 7f7f 0060 
0000020: 027f 7f01 7f60 0001 7f60 027d 7d00 6000 
0000030: 0060 067d 7d7d 7d7d 7d01 7f02 7609 044d 
0000040: 6174 6803 706f 7700 0004 4d61 7468 0473 
0000050: 7172 7400 0104 4d61 7468 0365 7870 0001 
0000060: 044d 6174 6803 636f 7300 0104 4d61 7468 
0000070: 0672 616e 646f 6d00 0204 4d61 7468 0463 
0000080: 6569 6c00 0104 4d61 7468 0566 6c6f 6f72 
0000090: 0001 0247 4309 6164 644f 626a 6563 7400 
00000a0: 0303 656e 760a 6279 7465 6368 756e 6b73 
00000b0: 0200 0103 1918 0405 0505 0607 0607 0608 
00000c0: 0505 0505 0505 0505 0507 0707 0707 069c 
00000d0: 0112 7f01 4198 090b 7c01 4469 5714 8b0a 
00000e0: bf05 400b 7c01 4418 2d44 54fb 2109 400b 
00000f0: 7f01 41ff ffff ff07 0b7e 0142 ffff ffff 
0000100: ffff ffff ff00 0b7d 0143 ffff 7f7f 0b7c 
0000110: 0144 ffff ffff ffff ef7f 0b7f 0141 8080 
0000120: 8080 780b 7e01 4280 8080 8080 8080 8080 
0000130: 7f0b 7d01 43ff ff7f ff0b 7c01 44ff ffff 
0000140: ffff ffef ff0b 7f01 41f8 000b 7f01 41c6 
0000150: 000b 7f01 4190 ce00 0b7f 0141 000b 7f01 
0000160: 4100 0b7f 0141 000b 7f01 4100 0b07 ac03 
0000170: 0f14 676c 6f62 616c 2e47 6574 4d65 6d6f 
0000180: 7279 5369 7a65 0009 1841 6c67 6f72 6974 
0000190: 686d 2e67 6574 4369 7263 6c65 436f 756e 
00001a0: 7400 0a1d 416c 676f 7269 7468 6d2e 6765 
00001b0: 7443 6972 636c 6544 6174 614f 6666 7365 
00001c0: 7400 0b0e 416c 676f 7269 7468 6d2e 696e 
00001d0: 6974 000c 1241 6c67 6f72 6974 686d 2e74 
00001e0: 696d 6553 7465 7000 101a 4d61 7468 2e64 
00001f0: 6574 6563 7443 6972 636c 6543 6f6c 6c69 
0000200: 7369 6f6e 0011 1a41 7373 656d 626c 7949 
0000210: 6e66 6f2e 4173 7365 6d62 6c79 5469 746c 
0000220: 6500 1220 4173 7365 6d62 6c79 496e 666f 
0000230: 2e41 7373 656d 626c 7944 6573 6372 6970 
0000240: 7469 6f6e 0013 1c41 7373 656d 626c 7949 
0000250: 6e66 6f2e 4173 7365 6d62 6c79 436f 6d70 
0000260: 616e 7900 141c 4173 7365 6d62 6c79 496e 
0000270: 666f 2e41 7373 656d 626c 7950 726f 6475 
0000280: 6374 0015 1e41 7373 656d 626c 7949 6e66 
0000290: 6f2e 4173 7365 6d62 6c79 436f 7079 7269 
00002a0: 6768 7400 161e 4173 7365 6d62 6c79 496e 
00002b0: 666f 2e41 7373 656d 626c 7954 7261 6465 
00002c0: 6d61 726b 0017 1141 7373 656d 626c 7949 
00002d0: 6e66 6f2e 4775 6964 0018 1c41 7373 656d 
00002e0: 626c 7949 6e66 6f2e 4173 7365 6d62 6c79 
00002f0: 5665 7273 696f 6e00 1920 4173 7365 6d62 
0000300: 6c79 496e 666f 2e41 7373 656d 626c 7946 
0000310: 696c 6556 6572 7369 6f6e 001a 0801 1b0a 
0000320: b412 1818 0101 7f23 0021 0220 0220 006a 
0000330: 2400 2002 2001 1007 2002 0f0b 0500 2300 
0000340: 0f0b 0701 047f 230d 0f0b 0500 230e 0f0b 
0000350: b103 0302 7f03 7d01 7f41 0021 0202 4003 
0000360: 4020 0223 0d41 016b 4a0d 0141 0021 0343 
0000370: 0000 0000 2104 4300 0000 0021 0543 0000 
0000380: 0000 2106 0240 0340 4100 2103 2000 bb10 
0000390: 04a2 b621 0420 01bb 1004 a2b6 2105 1004 
00003a0: 4108 b7a2 1002 44ee 5a42 3ee8 4937 40a3 
00003b0: 1005 b621 0620 0020 0420 0692 9341 00b2 
00003c0: 5d20 0420 0693 4100 b25d 6a20 0120 0520 
00003d0: 0692 9341 00b2 5d6a 2005 2006 9341 00b2 
00003e0: 5d6a 0440 4101 2103 0541 0021 0702 4003 
00003f0: 4020 0720 0241 016b 4a0d 0120 0420 0520 
0000400: 0623 0e41 086a 2007 4104 6c6a 2802 0041 
0000410: 006a 2a02 0023 0e41 086a 2007 4104 6c6a 
0000420: 2802 0041 046a 2a02 0023 0e41 086a 2007 
0000430: 4104 6c6a 2802 0041 086a 2a02 0010 1104 
0000440: 4041 0121 0341 010d 050b 2007 4101 6a21 
0000450: 070c 000b 0b0b 2003 450d 010c 000b 0b23 
0000460: 0e41 086a 2002 4104 6c6a 2802 0041 006a 
0000470: 2004 3802 0023 0e41 086a 2002 4104 6c6a 
0000480: 2802 0041 046a 2005 3802 0023 0e41 086a 
0000490: 2002 4104 6c6a 2802 0041 086a 2006 3802 
00004a0: 0023 0f41 086a 2002 4104 6c6a 2802 0041 
00004b0: 046a 1004 4400 0000 0000 00e0 3fa1 449a 
00004c0: 9999 9999 99b9 3fa2 b638 0200 230f 4108 
00004d0: 6a20 0241 046c 6a28 0200 4100 6a10 0444 
00004e0: 0000 0000 0000 e03f a144 9a99 9999 9999 
00004f0: b93f a2b6 3802 0020 0241 016a 2102 0c00 
0000500: 0b0b 0b5e 0103 7f41 0021 0002 4003 4020 
0000510: 0023 0c41 016b 4a0d 0123 1141 086a 2000 
0000520: 4104 6c6a 2802 0021 0141 0021 0202 4003 
0000530: 4020 0223 0b41 016b 4a0d 0120 0141 086a 
0000540: 2002 4104 6c6a 4100 3602 0020 0241 016a 
0000550: 2102 0c00 0b0b 2000 4101 6a21 000c 000b 
0000560: 0b0b f404 0302 7f05 7d08 7f41 0021 0241 
0000570: 0021 0302 4003 4020 0323 0d41 016b 4a0d 
0000580: 0123 0e41 086a 2003 4104 6c6a 2802 0041 
0000590: 006a 2a02 0021 0423 0e41 086a 2003 4104 
00005a0: 6c6a 2802 0041 046a 2a02 0021 0523 0e41 
00005b0: 086a 2003 4104 6c6a 2802 0041 086a 2a02 
00005c0: 0021 0623 0f41 086a 2003 4104 6c6a 2802 
00005d0: 0041 046a 2a02 0021 0723 0f41 086a 2003 
00005e0: 4104 6c6a 2802 0041 006a 2a02 0021 0820 
00005f0: 08bb 442d 431c ebe2 361a 3fa0 b621 0820 
0000600: 0020 0420 0692 9341 00b2 5d20 0741 00b2 
0000610: 5e6c 2004 2006 9341 00b2 5d20 0741 00b2 
0000620: 5d6c 6a04 4043 0000 0000 2007 9321 070b 
0000630: 2001 2005 2006 9293 4100 b25d 2008 4100 
0000640: b25e 6c20 0520 0693 4100 b25d 2008 4100 
0000650: b25d 6c6a 0440 4300 0000 0020 0893 2108 
0000660: 0b23 0e41 086a 2003 4104 6c6a 2802 0041 
0000670: 006a 2004 2007 9238 0200 230e 4108 6a20 
0000680: 0341 046c 6a28 0200 4104 6a20 0520 0892 
0000690: 3802 0023 0f41 086a 2003 4104 6c6a 2802 
00006a0: 0041 046a 2007 3802 0023 0f41 086a 2003 
00006b0: 4104 6c6a 2802 0041 006a 2008 3802 0020 
00006c0: 0420 0693 bb20 00bb a323 0cb7 a210 06aa 
00006d0: 2109 2004 2006 92bb 2000 bba3 230c b7a2 
00006e0: 1006 aa21 0a20 0520 0693 bb20 01bb a323 
00006f0: 0bb7 a210 06aa 210b 2005 2006 92bb 2001 
0000700: bba3 230b b7a2 1006 aa21 0c20 0941 0048 
0000710: 0440 4100 2109 0b20 0a23 0c4e 0440 230c 
0000720: 4101 6b21 0a0b 200b 4100 4804 4041 0021 
0000730: 0b0b 200c 230b 4e04 4023 0b41 016b 210c 
0000740: 0b20 0921 0d02 4003 4020 0d20 0a4a 0d01 
0000750: 2311 4108 6a20 0d41 046c 6a28 0200 210e 
0000760: 200b 210f 0240 0340 200f 200c 4a0d 0123 
0000770: 1041 086a 2002 4104 6c6a 2802 0021 1020 
0000780: 0241 016a 2102 2010 4104 6a20 0336 0200 
0000790: 2010 4100 6a20 0e41 086a 200f 4104 6c6a 
00007a0: 2802 0036 0200 200e 4108 6a20 0f41 046c 
00007b0: 6a20 1036 0200 200f 4101 6a21 0f0c 000b 
00007c0: 0b20 0d41 016a 210d 0c00 0b0b 2003 4101 
00007d0: 6a21 030c 000b 0b0b d705 0705 7f05 7d02 
00007e0: 7f07 7d01 7c04 7d04 7c41 0021 0002 4003 
00007f0: 4020 0023 0c41 016b 4a0d 0123 1141 086a 
0000800: 2000 4104 6c6a 2802 0021 0141 0021 0202 
0000810: 4003 4020 0223 0b41 016b 4a0d 0120 0141 
0000820: 086a 2002 4104 6c6a 2802 0021 0302 4003 
0000830: 4020 0341 0046 4545 0d01 2003 4104 6a28 
0000840: 0200 2104 230e 4108 6a20 0441 046c 6a28 
0000850: 0200 4100 6a2a 0200 2105 230e 4108 6a20 
0000860: 0441 046c 6a28 0200 4104 6a2a 0200 2106 
0000870: 230e 4108 6a20 0441 046c 6a28 0200 4108 
0000880: 6a2a 0200 2107 230f 4108 6a20 0441 046c 
0000890: 6a28 0200 4104 6a2a 0200 2108 230f 4108 
00008a0: 6a20 0441 046c 6a28 0200 4100 6a2a 0200 
00008b0: 2109 2003 210a 200a 4100 6a28 0200 210a 
00008c0: 0240 0340 200a 4100 4645 450d 0120 0a41 
00008d0: 046a 2802 0021 0b23 0e41 086a 200b 4104 
00008e0: 6c6a 2802 0041 006a 2a02 0021 0c23 0e41 
00008f0: 086a 200b 4104 6c6a 2802 0041 046a 2a02 
0000900: 0021 0d23 0e41 086a 200b 4104 6c6a 2802 
0000910: 0041 086a 2a02 0021 0e20 0520 0620 0720 
0000920: 0c20 0d20 0e10 1104 4023 0f41 086a 200b 
0000930: 4104 6c6a 2802 0041 046a 2a02 0021 0f23 
0000940: 0f41 086a 200b 4104 6c6a 2802 0041 006a 
0000950: 2a02 0021 1020 0c20 0593 2111 200d 2006 
0000960: 9321 1220 1120 1194 2012 2012 9492 bb10 
0000970: 0121 1320 11bb 2013 a3b6 2111 2012 bb20 
0000980: 13a3 b621 1220 1120 0894 2012 2009 9492 
0000990: 2114 2011 200f 9420 1220 1094 9221 1520 
00009a0: 1420 1593 4100 b25f 4504 4020 0720 0e92 
00009b0: 2116 2007 200e 9321 1720 1420 1794 4102 
00009c0: b220 0e94 2015 9492 bb20 16bb a321 1841 
00009d0: 02b2 2007 9420 1494 2015 2017 9493 bb20 
00009e0: 16bb a321 1920 1820 14bb a121 1a20 1920 
00009f0: 15bb a121 1b23 0f41 086a 2004 4104 6c6a 
0000a00: 2802 0041 046a 2008 bb20 11bb 201a a2a0 
0000a10: b638 0200 230f 4108 6a20 0441 046c 6a28 
0000a20: 0200 4100 6a20 09bb 2012 bb20 1aa2 a0b6 
0000a30: 3802 0023 0f41 086a 200b 4104 6c6a 2802 
0000a40: 0041 046a 200f bb20 11bb 201b a2a0 b638 
0000a50: 0200 230f 4108 6a20 0b41 046c 6a28 0200 
0000a60: 4100 6a20 10bb 2012 bb20 1ba2 a0b6 3802 
0000a70: 0020 0a41 006a 2802 0021 0a0b 0520 0a41 
0000a80: 006a 2802 0021 0a0b 0c00 0b0b 2003 4100 
0000a90: 6a28 0200 2103 0c00 0b0b 2002 4101 6a21 
0000aa0: 020c 000b 0b20 0041 016a 2100 0c00 0b0b 
0000ab0: 0b0c 0010 0d20 0020 0110 0e10 0f0b 5c01 
0000ac0: 027f 2000 2002 9220 0320 0593 5d20 0020 
0000ad0: 0293 2003 2005 925e 6a20 0120 0292 2004 
0000ae0: 2005 935d 6a20 0120 0293 2004 2005 925e 
0000af0: 6a04 4041 000f 0b20 0320 0093 bb41 02b2 
0000b00: bb10 0020 0420 0193 bb41 02b2 bb10 00a0 
0000b10: 1001 2002 2005 92bb 650f 0b06 0041 8807 
0000b20: 0f0b 0600 4198 070f 0b06 0041 f007 0f0b 
0000b30: 0600 41f8 070f 0b06 0041 8808 0f0b 0600 
0000b40: 41d0 080f 0b06 0041 e008 0f0b 0600 4188 
0000b50: 090f 0b06 0041 9009 0f0b 0a00 101c 101d 
0000b60: 101e 101f 0bb1 0101 047f 4108 230d 4101 
0000b70: 6b41 046c 6a41 0710 0821 0020 0041 0d36 
0000b80: 0200 2000 4104 6a23 0d41 016b 3602 0020 
0000b90: 0024 0e41 0823 0d41 016b 4104 6c6a 4107 
0000ba0: 1008 2101 2001 41c0 0236 0200 2001 4104 
0000bb0: 6a23 0d41 016b 3602 0020 0124 0f41 0823 
0000bc0: 0d41 046c 4101 6b41 046c 6a41 0710 0821 
0000bd0: 0220 0241 c004 3602 0020 0241 046a 230d 
0000be0: 4104 6c41 016b 3602 0020 0224 1041 0823 
0000bf0: 0c41 016b 4104 6c6a 4107 1008 2103 2003 
0000c00: 41c0 0436 0200 2003 4104 6a23 0c41 016b 
0000c10: 3602 0020 0324 110b 0200 0b37 0102 7f41 
0000c20: 0021 0002 4003 4020 0023 1141 046a 2802 
0000c30: 0041 016b 4a0d 0123 1141 086a 2000 4104 
0000c40: 6c6a 2001 3602 0020 0041 016a 2100 0c00 
0000c50: 0b0b 0b02 000b 0b8a 090c 0041 8807 0b0b 
0000c60: 5765 6247 4c2d 4465 6d6f 0000 4198 070b 
0000c70: 5157 6562 4173 7365 6d62 6c79 2063 6f6e 
0000c80: 7665 7273 696f 6e20 6465 6d6f 6e73 7472 
0000c90: 6174 696e 6720 7468 6520 6661 7374 6572 
0000ca0: 2d70 6572 666f 726d 696e 6720 6772 6964 
0000cb0: 206f 6620 6c69 6e6b 6564 2d6c 6973 7473 
0000cc0: 2e00 0041 f007 0b04 4d49 5400 0041 f807 
0000cd0: 0b0b 5765 6247 4c2d 4465 6d6f 0000 4188 
0000ce0: 080b 4668 7474 7073 3a2f 2f67 6974 6875 
0000cf0: 622e 636f 6d2f 6775 7962 6564 666f 7264 
0000d00: 2f77 6173 6d2d 6465 6d6f 2f62 6c6f 622f 
0000d10: 6d61 7374 6572 2f6e 6174 6976 652f 6465 
0000d20: 6d6f 2d6f 7074 2e63 0000 41d0 080b 0e76 
0000d30: 616e 696c 6c61 7662 2e61 7070 0000 41e0 
0000d40: 080b 2538 3363 6132 6239 332d 3465 3537 
0000d50: 2d34 6434 342d 6232 6263 2d31 3633 3235 
0000d60: 3261 3933 3035 6400 0041 8809 0b08 312e 
0000d70: 302e 302e 3000 0041 9009 0b08 312e 302e 
0000d80: 302e 3000 0041 0d0b ad02 6579 4a6a 6232 
0000d90: 3174 5a57 3530 496a 7075 6457 7873 4c43 
0000da0: 4a6a 6247 467a 6379 4936 496b 4e70 636d 
0000db0: 4e73 5a53 4973 496d 4e73 5958 4e7a 5832 
0000dc0: 6c6b 496a 6f78 4d79 7769 5a6d 6c6c 6247 
0000dd0: 527a 496a 7037 496e 6769 4f6e 7369 5a32 
0000de0: 5675 5a58 4a70 5979 4936 5731 3073 496e 
0000df0: 4a68 6479 4936 496d 597a 4d69 4973 496e 
0000e00: 5235 6347 5569 4f6a 4e39 4c43 4a35 496a 
0000e10: 7037 496d 646c 626d 5679 6157 4d69 4f6c 
0000e20: 7464 4c43 4a79 5958 6369 4f69 4a6d 4d7a 
0000e30: 4969 4c43 4a30 6558 426c 496a 6f7a 6653 
0000e40: 7769 6369 4936 6579 4a6e 5a57 356c 636d 
0000e50: 6c6a 496a 7062 5853 7769 636d 4633 496a 
0000e60: 6f69 5a6a 4d79 4969 7769 6448 6c77 5a53 
0000e70: 4936 4d33 3139 4c43 4a70 6331 4e30 636e 
0000e80: 566a 6443 4936 5a6d 4673 6332 5573 496d 
0000e90: 316c 6447 6876 5a48 4d69 4f6e 7439 4c43 
0000ea0: 4a75 5957 316c 6333 4268 5932 5569 4f6d 
0000eb0: 3531 6247 7839 0000 41c0 020b fd01 6579 
0000ec0: 4a6a 6232 3174 5a57 3530 496a 7075 6457 
0000ed0: 7873 4c43 4a6a 6247 467a 6379 4936 496b 
0000ee0: 4e70 636d 4e73 5a56 5969 4c43 4a6a 6247 
0000ef0: 467a 6331 3970 5a43 4936 4d7a 4977 4c43 
0000f00: 4a6d 6157 5673 5a48 4d69 4f6e 7369 646e 
0000f10: 6b69 4f6e 7369 5a32 5675 5a58 4a70 5979 
0000f20: 4936 5731 3073 496e 4a68 6479 4936 496d 
0000f30: 597a 4d69 4973 496e 5235 6347 5569 4f6a 
0000f40: 4e39 4c43 4a32 6543 4936 6579 4a6e 5a57 
0000f50: 356c 636d 6c6a 496a 7062 5853 7769 636d 
0000f60: 4633 496a 6f69 5a6a 4d79 4969 7769 6448 
0000f70: 6c77 5a53 4936 4d33 3139 4c43 4a70 6331 
0000f80: 4e30 636e 566a 6443 4936 5a6d 4673 6332 
0000f90: 5573 496d 316c 6447 6876 5a48 4d69 4f6e 
0000fa0: 7439 4c43 4a75 5957 316c 6333 4268 5932 
0000fb0: 5569 4f6d 3531 6247 7839 0000 41c0 040b 
0000fc0: a102 6579 4a6a 6232 3174 5a57 3530 496a 
0000fd0: 7075 6457 7873 4c43 4a6a 6247 467a 6379 
0000fe0: 4936 496b 4e6c 6247 7844 6158 4a6a 6247 
0000ff0: 5569 4c43 4a6a 6247 467a 6331 3970 5a43 
0001000: 4936 4e54 6332 4c43 4a6d 6157 5673 5a48 
0001010: 4d69 4f6e 7369 626d 5634 6443 4936 6579 
0001020: 4a6e 5a57 356c 636d 6c6a 496a 7062 5853 
0001030: 7769 636d 4633 496a 6f69 577a 5533 4e6c 
0001040: 3144 5a57 7873 5132 6c79 5932 786c 4969 
0001050: 7769 6448 6c77 5a53 4936 4d54 4239 4c43 
0001060: 4a6a 6158 4a6a 6247 564a 626d 526c 6543 
0001070: 4936 6579 4a6e 5a57 356c 636d 6c6a 496a 
0001080: 7062 5853 7769 636d 4633 496a 6f69 6154 
0001090: 4d79 4969 7769 6448 6c77 5a53 4936 4d58 
00010a0: 3139 4c43 4a70 6331 4e30 636e 566a 6443 
00010b0: 4936 5a6d 4673 6332 5573 496d 316c 6447 
00010c0: 6876 5a48 4d69 4f6e 7439 4c43 4a75 5957 
00010d0: 316c 6333 4268 5932 5569 4f6d 3531 6247 
00010e0: 7839 00                                 
