0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 0c                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7c                                        ; f64
000000e: 7c                                        ; f64
000000f: 01                                        ; num results
0000010: 7c                                        ; f64
; type 1
0000011: 60                                        ; func
0000012: 01                                        ; num params
0000013: 7c                                        ; f64
0000014: 01                                        ; num results
0000015: 7c                                        ; f64
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 00                                        ; num results
; type 4
000001f: 60                                        ; func
0000020: 01                                        ; num params
0000021: 7f                                        ; i32
0000022: 00                                        ; num results
; type 5
0000023: 60                                        ; func
0000024: 03                                        ; num params
0000025: 7f                                        ; i32
0000026: 7f                                        ; i32
0000027: 7f                                        ; i32
0000028: 01                                        ; num results
0000029: 7f                                        ; i32
; type 6
000002a: 60                                        ; func
000002b: 02                                        ; num params
000002c: 7f                                        ; i32
000002d: 7f                                        ; i32
000002e: 01                                        ; num results
000002f: 7f                                        ; i32
; type 7
0000030: 60                                        ; func
0000031: 01                                        ; num params
0000032: 7f                                        ; i32
0000033: 01                                        ; num results
0000034: 7f                                        ; i32
; type 8
0000035: 60                                        ; func
0000036: 00                                        ; num params
0000037: 01                                        ; num results
0000038: 7f                                        ; i32
; type 9
0000039: 60                                        ; func
000003a: 02                                        ; num params
000003b: 7d                                        ; f32
000003c: 7d                                        ; f32
000003d: 00                                        ; num results
; type 10
000003e: 60                                        ; func
000003f: 00                                        ; num params
0000040: 00                                        ; num results
; type 11
0000041: 60                                        ; func
0000042: 06                                        ; num params
0000043: 7d                                        ; f32
0000044: 7d                                        ; f32
0000045: 7d                                        ; f32
0000046: 7d                                        ; f32
0000047: 7d                                        ; f32
0000048: 7d                                        ; f32
0000049: 01                                        ; num results
000004a: 7f                                        ; i32
0000009: 41                                        ; FIXUP section size
; section "Import" (2)
000004b: 02                                        ; section code
000004c: 00                                        ; section size (guess)
000004d: 0f                                        ; num imports
; import header 0
000004e: 04                                        ; string length
000004f: 4d61 7468                                Math  ; import module name
0000053: 03                                        ; string length
0000054: 706f 77                                  pow  ; import field name
0000057: 00                                        ; import kind
0000058: 00                                        ; import signature index
; import header 1
0000059: 04                                        ; string length
000005a: 4d61 7468                                Math  ; import module name
000005e: 04                                        ; string length
000005f: 7371 7274                                sqrt  ; import field name
0000063: 00                                        ; import kind
0000064: 01                                        ; import signature index
; import header 2
0000065: 04                                        ; string length
0000066: 4d61 7468                                Math  ; import module name
000006a: 03                                        ; string length
000006b: 6578 70                                  exp  ; import field name
000006e: 00                                        ; import kind
000006f: 01                                        ; import signature index
; import header 3
0000070: 04                                        ; string length
0000071: 4d61 7468                                Math  ; import module name
0000075: 03                                        ; string length
0000076: 636f 73                                  cos  ; import field name
0000079: 00                                        ; import kind
000007a: 01                                        ; import signature index
; import header 4
000007b: 04                                        ; string length
000007c: 4d61 7468                                Math  ; import module name
0000080: 06                                        ; string length
0000081: 7261 6e64 6f6d                           random  ; import field name
0000087: 00                                        ; import kind
0000088: 02                                        ; import signature index
; import header 5
0000089: 04                                        ; string length
000008a: 4d61 7468                                Math  ; import module name
000008e: 04                                        ; string length
000008f: 6365 696c                                ceil  ; import field name
0000093: 00                                        ; import kind
0000094: 01                                        ; import signature index
; import header 6
0000095: 04                                        ; string length
0000096: 4d61 7468                                Math  ; import module name
000009a: 05                                        ; string length
000009b: 666c 6f6f 72                             floor  ; import field name
00000a0: 00                                        ; import kind
00000a1: 01                                        ; import signature index
; import header 7
00000a2: 02                                        ; string length
00000a3: 4743                                     GC  ; import module name
00000a5: 09                                        ; string length
00000a6: 6164 644f 626a 6563 74                   addObject  ; import field name
00000af: 00                                        ; import kind
00000b0: 03                                        ; import signature index
; import header 8
00000b1: 07                                        ; string length
00000b2: 636f 6e73 6f6c 65                        console  ; import module name
00000b9: 03                                        ; string length
00000ba: 6c6f 67                                  log  ; import field name
00000bd: 00                                        ; import kind
00000be: 04                                        ; import signature index
; import header 9
00000bf: 06                                        ; string length
00000c0: 7374 7269 6e67                           string  ; import module name
00000c6: 07                                        ; string length
00000c7: 7265 706c 6163 65                        replace  ; import field name
00000ce: 00                                        ; import kind
00000cf: 05                                        ; import signature index
; import header 10
00000d0: 06                                        ; string length
00000d1: 7374 7269 6e67                           string  ; import module name
00000d7: 03                                        ; string length
00000d8: 6164 64                                  add  ; import field name
00000db: 00                                        ; import kind
00000dc: 06                                        ; import signature index
; import header 11
00000dd: 06                                        ; string length
00000de: 7374 7269 6e67                           string  ; import module name
00000e4: 06                                        ; string length
00000e5: 6c65 6e67 7468                           length  ; import field name
00000eb: 00                                        ; import kind
00000ec: 07                                        ; import signature index
; import header 12
00000ed: 06                                        ; string length
00000ee: 7374 7269 6e67                           string  ; import module name
00000f4: 07                                        ; string length
00000f5: 696e 6465 784f 66                        indexOf  ; import field name
00000fc: 00                                        ; import kind
00000fd: 06                                        ; import signature index
; import header 13
00000fe: 06                                        ; string length
00000ff: 7374 7269 6e67                           string  ; import module name
0000105: 08                                        ; string length
0000106: 746f 5374 7269 6e67                      toString  ; import field name
000010e: 00                                        ; import kind
000010f: 07                                        ; import signature index
; import header 14
0000110: 03                                        ; string length
0000111: 656e 76                                  env  ; import module name
0000114: 0a                                        ; string length
0000115: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
000011f: 02                                        ; import kind
0000120: 00                                        ; limits: flags
0000121: 01                                        ; limits: initial
; move data: [4d, 122) -> [4e, 123)
000004c: d501                                      ; FIXUP section size
; section "Function" (3)
0000123: 03                                        ; section code
0000124: 00                                        ; section size (guess)
0000125: 1c                                        ; num functions
0000126: 06                                        ; function 0 signature index
0000127: 08                                        ; function 1 signature index
0000128: 08                                        ; function 2 signature index
0000129: 08                                        ; function 3 signature index
000012a: 08                                        ; function 4 signature index
000012b: 08                                        ; function 5 signature index
000012c: 08                                        ; function 6 signature index
000012d: 09                                        ; function 7 signature index
000012e: 0a                                        ; function 8 signature index
000012f: 09                                        ; function 9 signature index
0000130: 0a                                        ; function 10 signature index
0000131: 09                                        ; function 11 signature index
0000132: 0b                                        ; function 12 signature index
0000133: 08                                        ; function 13 signature index
0000134: 08                                        ; function 14 signature index
0000135: 08                                        ; function 15 signature index
0000136: 08                                        ; function 16 signature index
0000137: 08                                        ; function 17 signature index
0000138: 08                                        ; function 18 signature index
0000139: 08                                        ; function 19 signature index
000013a: 08                                        ; function 20 signature index
000013b: 08                                        ; function 21 signature index
000013c: 0a                                        ; function 22 signature index
000013d: 0a                                        ; function 23 signature index
000013e: 0a                                        ; function 24 signature index
000013f: 0a                                        ; function 25 signature index
0000140: 0a                                        ; function 26 signature index
0000141: 0a                                        ; function 27 signature index
0000124: 1d                                        ; FIXUP section size
; section "Global" (6)
0000142: 06                                        ; section code
0000143: 00                                        ; section size (guess)
0000144: 12                                        ; num globals
0000145: 7f                                        ; i32
0000146: 01                                        ; global mutability
0000147: 41                                        ; i32.const
0000148: d80a                                      ; i32 literal
000014a: 0b                                        ; end
000014b: 7c                                        ; f64
000014c: 01                                        ; global mutability
000014d: 44                                        ; f64.const
000014e: 6957 148b 0abf 0540                       ; f64 literal
0000156: 0b                                        ; end
0000157: 7c                                        ; f64
0000158: 01                                        ; global mutability
0000159: 44                                        ; f64.const
000015a: 182d 4454 fb21 0940                       ; f64 literal
0000162: 0b                                        ; end
0000163: 7f                                        ; i32
0000164: 01                                        ; global mutability
0000165: 41                                        ; i32.const
0000166: ffff ffff 07                              ; i32 literal
000016b: 0b                                        ; end
000016c: 7e                                        ; i64
000016d: 01                                        ; global mutability
000016e: 42                                        ; i64.const
000016f: ffff ffff ffff ffff ff00                  ; i64 literal
0000179: 0b                                        ; end
000017a: 7d                                        ; f32
000017b: 01                                        ; global mutability
000017c: 43                                        ; f32.const
000017d: ffff 7f7f                                 ; f32 literal
0000181: 0b                                        ; end
0000182: 7c                                        ; f64
0000183: 01                                        ; global mutability
0000184: 44                                        ; f64.const
0000185: ffff ffff ffff ef7f                       ; f64 literal
000018d: 0b                                        ; end
000018e: 7f                                        ; i32
000018f: 01                                        ; global mutability
0000190: 41                                        ; i32.const
0000191: 8080 8080 78                              ; i32 literal
0000196: 0b                                        ; end
0000197: 7e                                        ; i64
0000198: 01                                        ; global mutability
0000199: 42                                        ; i64.const
000019a: 8080 8080 8080 8080 807f                  ; i64 literal
00001a4: 0b                                        ; end
00001a5: 7d                                        ; f32
00001a6: 01                                        ; global mutability
00001a7: 43                                        ; f32.const
00001a8: ffff 7fff                                 ; f32 literal
00001ac: 0b                                        ; end
00001ad: 7c                                        ; f64
00001ae: 01                                        ; global mutability
00001af: 44                                        ; f64.const
00001b0: ffff ffff ffff efff                       ; f64 literal
00001b8: 0b                                        ; end
00001b9: 7f                                        ; i32
00001ba: 01                                        ; global mutability
00001bb: 41                                        ; i32.const
00001bc: f800                                      ; i32 literal
00001be: 0b                                        ; end
00001bf: 7f                                        ; i32
00001c0: 01                                        ; global mutability
00001c1: 41                                        ; i32.const
00001c2: c600                                      ; i32 literal
00001c4: 0b                                        ; end
00001c5: 7f                                        ; i32
00001c6: 01                                        ; global mutability
00001c7: 41                                        ; i32.const
00001c8: e400                                      ; i32 literal
00001ca: 0b                                        ; end
00001cb: 7f                                        ; i32
00001cc: 01                                        ; global mutability
00001cd: 41                                        ; i32.const
00001ce: 00                                        ; i32 literal
00001cf: 0b                                        ; end
00001d0: 7f                                        ; i32
00001d1: 01                                        ; global mutability
00001d2: 41                                        ; i32.const
00001d3: 00                                        ; i32 literal
00001d4: 0b                                        ; end
00001d5: 7f                                        ; i32
00001d6: 01                                        ; global mutability
00001d7: 41                                        ; i32.const
00001d8: 00                                        ; i32 literal
00001d9: 0b                                        ; end
00001da: 7f                                        ; i32
00001db: 01                                        ; global mutability
00001dc: 41                                        ; i32.const
00001dd: 00                                        ; i32 literal
00001de: 0b                                        ; end
; move data: [144, 1df) -> [145, 1e0)
0000143: 9b01                                      ; FIXUP section size
; section "Export" (7)
00001e0: 07                                        ; section code
00001e1: 00                                        ; section size (guess)
00001e2: 0f                                        ; num exports
00001e3: 14                                        ; string length
00001e4: 676c 6f62 616c 2e47 6574 4d65 6d6f 7279  global.GetMemory
00001f4: 5369 7a65                                Size  ; export name
00001f8: 00                                        ; export kind
00001f9: 0f                                        ; export func index
00001fa: 18                                        ; string length
00001fb: 416c 676f 7269 7468 6d2e 6765 7443 6972  Algorithm.getCir
000020b: 636c 6543 6f75 6e74                      cleCount  ; export name
0000213: 00                                        ; export kind
0000214: 13                                        ; export func index
0000215: 1d                                        ; string length
0000216: 416c 676f 7269 7468 6d2e 6765 7443 6972  Algorithm.getCir
0000226: 636c 6544 6174 614f 6666 7365 74         cleDataOffset  ; export name
0000233: 00                                        ; export kind
0000234: 14                                        ; export func index
0000235: 0e                                        ; string length
0000236: 416c 676f 7269 7468 6d2e 696e 6974       Algorithm.init  ; export name
0000244: 00                                        ; export kind
0000245: 15                                        ; export func index
0000246: 12                                        ; string length
0000247: 416c 676f 7269 7468 6d2e 7469 6d65 5374  Algorithm.timeSt
0000257: 6570                                     ep  ; export name
0000259: 00                                        ; export kind
000025a: 19                                        ; export func index
000025b: 1a                                        ; string length
000025c: 4d61 7468 2e64 6574 6563 7443 6972 636c  Math.detectCircl
000026c: 6543 6f6c 6c69 7369 6f6e                 eCollision  ; export name
0000276: 00                                        ; export kind
0000277: 1a                                        ; export func index
0000278: 1a                                        ; string length
0000279: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000289: 656d 626c 7954 6974 6c65                 emblyTitle  ; export name
0000293: 00                                        ; export kind
0000294: 1b                                        ; export func index
0000295: 20                                        ; string length
0000296: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002a6: 656d 626c 7944 6573 6372 6970 7469 6f6e  emblyDescription  ; export name
00002b6: 00                                        ; export kind
00002b7: 1c                                        ; export func index
00002b8: 1c                                        ; string length
00002b9: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002c9: 656d 626c 7943 6f6d 7061 6e79            emblyCompany  ; export name
00002d5: 00                                        ; export kind
00002d6: 1d                                        ; export func index
00002d7: 1c                                        ; string length
00002d8: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002e8: 656d 626c 7950 726f 6475 6374            emblyProduct  ; export name
00002f4: 00                                        ; export kind
00002f5: 1e                                        ; export func index
00002f6: 1e                                        ; string length
00002f7: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000307: 656d 626c 7943 6f70 7972 6967 6874       emblyCopyright  ; export name
0000315: 00                                        ; export kind
0000316: 1f                                        ; export func index
0000317: 1e                                        ; string length
0000318: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000328: 656d 626c 7954 7261 6465 6d61 726b       emblyTrademark  ; export name
0000336: 00                                        ; export kind
0000337: 20                                        ; export func index
0000338: 11                                        ; string length
0000339: 4173 7365 6d62 6c79 496e 666f 2e47 7569  AssemblyInfo.Gui
0000349: 64                                       d  ; export name
000034a: 00                                        ; export kind
000034b: 21                                        ; export func index
000034c: 1c                                        ; string length
000034d: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000035d: 656d 626c 7956 6572 7369 6f6e            emblyVersion  ; export name
0000369: 00                                        ; export kind
000036a: 22                                        ; export func index
000036b: 20                                        ; string length
000036c: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000037c: 656d 626c 7946 696c 6556 6572 7369 6f6e  emblyFileVersion  ; export name
000038c: 00                                        ; export kind
000038d: 23                                        ; export func index
; move data: [1e2, 38e) -> [1e3, 38f)
00001e1: ac03                                      ; FIXUP section size
; section "Start" (8)
000038f: 08                                        ; section code
0000390: 00                                        ; section size (guess)
0000391: 24                                        ; start func index
0000390: 01                                        ; FIXUP section size
; section "Code" (10)
0000392: 0a                                        ; section code
0000393: 00                                        ; section size (guess)
0000394: 1c                                        ; num functions
; function body 0
0000395: 00                                        ; func body size (guess)
0000396: 01                                        ; local decl count
0000397: 02                                        ; local type count
0000398: 7f                                        ; i32
0000399: 23                                        ; global.get
000039a: 00                                        ; global index
000039b: 21                                        ; local.set
000039c: 02                                        ; local index
000039d: 20                                        ; local.get
000039e: 02                                        ; local index
000039f: 20                                        ; local.get
00003a0: 00                                        ; local index
00003a1: 6a                                        ; i32.add
00003a2: 24                                        ; global.set
00003a3: 00                                        ; global index
00003a4: 23                                        ; global.get
00003a5: 00                                        ; global index
00003a6: 41                                        ; i32.const
00003a7: 08                                        ; i32 literal
00003a8: 6f                                        ; i32.rem_s
00003a9: 21                                        ; local.set
00003aa: 03                                        ; local index
00003ab: 20                                        ; local.get
00003ac: 03                                        ; local index
00003ad: 04                                        ; if
00003ae: 40                                        ; void
00003af: 41                                        ; i32.const
00003b0: 08                                        ; i32 literal
00003b1: 20                                        ; local.get
00003b2: 03                                        ; local index
00003b3: 6b                                        ; i32.sub
00003b4: 21                                        ; local.set
00003b5: 03                                        ; local index
00003b6: 23                                        ; global.get
00003b7: 00                                        ; global index
00003b8: 20                                        ; local.get
00003b9: 03                                        ; local index
00003ba: 6a                                        ; i32.add
00003bb: 24                                        ; global.set
00003bc: 00                                        ; global index
00003bd: 05                                        ; else
00003be: 23                                        ; global.get
00003bf: 00                                        ; global index
00003c0: 41                                        ; i32.const
00003c1: 08                                        ; i32 literal
00003c2: 6a                                        ; i32.add
00003c3: 24                                        ; global.set
00003c4: 00                                        ; global index
00003c5: 0b                                        ; end
00003c6: 20                                        ; local.get
00003c7: 02                                        ; local index
00003c8: 20                                        ; local.get
00003c9: 01                                        ; local index
00003ca: 10                                        ; call
00003cb: 07                                        ; function index
00003cc: 20                                        ; local.get
00003cd: 02                                        ; local index
00003ce: 0f                                        ; return
00003cf: 0b                                        ; end
0000395: 3a                                        ; FIXUP func body size
; function body 1
00003d0: 00                                        ; func body size (guess)
00003d1: 00                                        ; local decl count
00003d2: 23                                        ; global.get
00003d3: 00                                        ; global index
00003d4: 0f                                        ; return
00003d5: 0b                                        ; end
00003d0: 05                                        ; FIXUP func body size
; function body 2
00003d6: 00                                        ; func body size (guess)
00003d7: 01                                        ; local decl count
00003d8: 05                                        ; local type count
00003d9: 7f                                        ; i32
00003da: 41                                        ; i32.const
00003db: 08                                        ; i32 literal
00003dc: 23                                        ; global.get
00003dd: 0b                                        ; global index
00003de: 41                                        ; i32.const
00003df: 01                                        ; i32 literal
00003e0: 6b                                        ; i32.sub
00003e1: 41                                        ; i32.const
00003e2: 04                                        ; i32 literal
00003e3: 6c                                        ; i32.mul
00003e4: 6a                                        ; i32.add
00003e5: 41                                        ; i32.const
00003e6: 07                                        ; i32 literal
00003e7: 10                                        ; call
00003e8: 0e                                        ; function index
00003e9: 21                                        ; local.set
00003ea: 04                                        ; local index
00003eb: 20                                        ; local.get
00003ec: 04                                        ; local index
00003ed: 41                                        ; i32.const
00003ee: 9002                                      ; i32 literal
00003f0: 36                                        ; i32.store
00003f1: 02                                        ; alignment
00003f2: 00                                        ; store offset
00003f3: 20                                        ; local.get
00003f4: 04                                        ; local index
00003f5: 41                                        ; i32.const
00003f6: 04                                        ; i32 literal
00003f7: 6a                                        ; i32.add
00003f8: 23                                        ; global.get
00003f9: 0b                                        ; global index
00003fa: 41                                        ; i32.const
00003fb: 01                                        ; i32 literal
00003fc: 6b                                        ; i32.sub
00003fd: 36                                        ; i32.store
00003fe: 02                                        ; alignment
00003ff: 00                                        ; store offset
0000400: 20                                        ; local.get
0000401: 04                                        ; local index
0000402: 0f                                        ; return
0000403: 0b                                        ; end
00003d6: 2d                                        ; FIXUP func body size
; function body 3
0000404: 00                                        ; func body size (guess)
0000405: 01                                        ; local decl count
0000406: 01                                        ; local type count
0000407: 7f                                        ; i32
0000408: 41                                        ; i32.const
0000409: 08                                        ; i32 literal
000040a: 41                                        ; i32.const
000040b: 9002                                      ; i32 literal
000040d: 10                                        ; call
000040e: 0e                                        ; function index
000040f: 21                                        ; local.set
0000410: 00                                        ; local index
0000411: 20                                        ; local.get
0000412: 00                                        ; local index
0000413: 41                                        ; i32.const
0000414: 00                                        ; i32 literal
0000415: 6a                                        ; i32.add
0000416: 41                                        ; i32.const
0000417: 00                                        ; i32 literal
0000418: 36                                        ; i32.store
0000419: 02                                        ; alignment
000041a: 00                                        ; store offset
000041b: 20                                        ; local.get
000041c: 00                                        ; local index
000041d: 41                                        ; i32.const
000041e: 04                                        ; i32 literal
000041f: 6a                                        ; i32.add
0000420: 41                                        ; i32.const
0000421: 00                                        ; i32 literal
0000422: 36                                        ; i32.store
0000423: 02                                        ; alignment
0000424: 00                                        ; store offset
0000425: 20                                        ; local.get
0000426: 00                                        ; local index
0000427: 0f                                        ; return
0000428: 0b                                        ; end
0000404: 24                                        ; FIXUP func body size
; function body 4
0000429: 00                                        ; func body size (guess)
000042a: 01                                        ; local decl count
000042b: 01                                        ; local type count
000042c: 7f                                        ; i32
000042d: 41                                        ; i32.const
000042e: 08                                        ; i32 literal
000042f: 41                                        ; i32.const
0000430: 0d                                        ; i32 literal
0000431: 10                                        ; call
0000432: 0e                                        ; function index
0000433: 21                                        ; local.set
0000434: 00                                        ; local index
0000435: 20                                        ; local.get
0000436: 00                                        ; local index
0000437: 41                                        ; i32.const
0000438: 00                                        ; i32 literal
0000439: 6a                                        ; i32.add
000043a: 10                                        ; call
000043b: 04                                        ; function index
000043c: b6                                        ; f32.demote_f64
000043d: 38                                        ; f32.store
000043e: 02                                        ; alignment
000043f: 00                                        ; store offset
0000440: 20                                        ; local.get
0000441: 00                                        ; local index
0000442: 41                                        ; i32.const
0000443: 04                                        ; i32 literal
0000444: 6a                                        ; i32.add
0000445: 10                                        ; call
0000446: 04                                        ; function index
0000447: b6                                        ; f32.demote_f64
0000448: 38                                        ; f32.store
0000449: 02                                        ; alignment
000044a: 00                                        ; store offset
000044b: 20                                        ; local.get
000044c: 00                                        ; local index
000044d: 0f                                        ; return
000044e: 0b                                        ; end
0000429: 25                                        ; FIXUP func body size
; function body 5
000044f: 00                                        ; func body size (guess)
0000450: 00                                        ; local decl count
0000451: 23                                        ; global.get
0000452: 0d                                        ; global index
0000453: 0f                                        ; return
0000454: 0b                                        ; end
000044f: 05                                        ; FIXUP func body size
; function body 6
0000455: 00                                        ; func body size (guess)
0000456: 00                                        ; local decl count
0000457: 23                                        ; global.get
0000458: 0e                                        ; global index
0000459: 0f                                        ; return
000045a: 0b                                        ; end
0000455: 05                                        ; FIXUP func body size
; function body 7
000045b: 00                                        ; func body size (guess)
000045c: 03                                        ; local decl count
000045d: 02                                        ; local type count
000045e: 7f                                        ; i32
000045f: 03                                        ; local type count
0000460: 7d                                        ; f32
0000461: 01                                        ; local type count
0000462: 7f                                        ; i32
0000463: 41                                        ; i32.const
0000464: 8807                                      ; i32 literal
0000466: 23                                        ; global.get
0000467: 0e                                        ; global index
0000468: 10                                        ; call
0000469: 0d                                        ; function index
000046a: 10                                        ; call
000046b: 0a                                        ; function index
000046c: 10                                        ; call
000046d: 08                                        ; function index
000046e: 41                                        ; i32.const
000046f: 00                                        ; i32 literal
0000470: 21                                        ; local.set
0000471: 02                                        ; local index
0000472: 02                                        ; block
0000473: 40                                        ; void
0000474: 03                                        ; loop
0000475: 40                                        ; void
0000476: 20                                        ; local.get
0000477: 02                                        ; local index
0000478: 23                                        ; global.get
0000479: 0d                                        ; global index
000047a: 41                                        ; i32.const
000047b: 01                                        ; i32 literal
000047c: 6b                                        ; i32.sub
000047d: 4a                                        ; i32.gt_s
000047e: 0d                                        ; br_if
000047f: 01                                        ; break depth
0000480: 41                                        ; i32.const
0000481: 00                                        ; i32 literal
0000482: 21                                        ; local.set
0000483: 03                                        ; local index
0000484: 43                                        ; f32.const
0000485: 0000 0000                                 ; f32 literal
0000489: 21                                        ; local.set
000048a: 04                                        ; local index
000048b: 43                                        ; f32.const
000048c: 0000 0000                                 ; f32 literal
0000490: 21                                        ; local.set
0000491: 05                                        ; local index
0000492: 43                                        ; f32.const
0000493: 0000 0000                                 ; f32 literal
0000497: 21                                        ; local.set
0000498: 06                                        ; local index
0000499: 02                                        ; block
000049a: 40                                        ; void
000049b: 03                                        ; loop
000049c: 40                                        ; void
000049d: 41                                        ; i32.const
000049e: 00                                        ; i32 literal
000049f: 21                                        ; local.set
00004a0: 03                                        ; local index
00004a1: 20                                        ; local.get
00004a2: 00                                        ; local index
00004a3: bb                                        ; f64.promote_f32
00004a4: 10                                        ; call
00004a5: 04                                        ; function index
00004a6: a2                                        ; f64.mul
00004a7: b6                                        ; f32.demote_f64
00004a8: 21                                        ; local.set
00004a9: 04                                        ; local index
00004aa: 20                                        ; local.get
00004ab: 01                                        ; local index
00004ac: bb                                        ; f64.promote_f32
00004ad: 10                                        ; call
00004ae: 04                                        ; function index
00004af: a2                                        ; f64.mul
00004b0: b6                                        ; f32.demote_f64
00004b1: 21                                        ; local.set
00004b2: 05                                        ; local index
00004b3: 10                                        ; call
00004b4: 04                                        ; function index
00004b5: 41                                        ; i32.const
00004b6: 08                                        ; i32 literal
00004b7: b7                                        ; f64.convert_i32_s
00004b8: a2                                        ; f64.mul
00004b9: 10                                        ; call
00004ba: 02                                        ; function index
00004bb: 44                                        ; f64.const
00004bc: ee5a 423e e849 3740                       ; f64 literal
00004c4: a3                                        ; f64.div
00004c5: 10                                        ; call
00004c6: 05                                        ; function index
00004c7: b6                                        ; f32.demote_f64
00004c8: 21                                        ; local.set
00004c9: 06                                        ; local index
00004ca: 20                                        ; local.get
00004cb: 00                                        ; local index
00004cc: 20                                        ; local.get
00004cd: 04                                        ; local index
00004ce: 20                                        ; local.get
00004cf: 06                                        ; local index
00004d0: 92                                        ; f32.add
00004d1: 93                                        ; f32.sub
00004d2: 41                                        ; i32.const
00004d3: 00                                        ; i32 literal
00004d4: b2                                        ; f32.convert_i32_s
00004d5: 5d                                        ; f32.lt
00004d6: 20                                        ; local.get
00004d7: 04                                        ; local index
00004d8: 20                                        ; local.get
00004d9: 06                                        ; local index
00004da: 93                                        ; f32.sub
00004db: 41                                        ; i32.const
00004dc: 00                                        ; i32 literal
00004dd: b2                                        ; f32.convert_i32_s
00004de: 5d                                        ; f32.lt
00004df: 6a                                        ; i32.add
00004e0: 20                                        ; local.get
00004e1: 01                                        ; local index
00004e2: 20                                        ; local.get
00004e3: 05                                        ; local index
00004e4: 20                                        ; local.get
00004e5: 06                                        ; local index
00004e6: 92                                        ; f32.add
00004e7: 93                                        ; f32.sub
00004e8: 41                                        ; i32.const
00004e9: 00                                        ; i32 literal
00004ea: b2                                        ; f32.convert_i32_s
00004eb: 5d                                        ; f32.lt
00004ec: 6a                                        ; i32.add
00004ed: 20                                        ; local.get
00004ee: 05                                        ; local index
00004ef: 20                                        ; local.get
00004f0: 06                                        ; local index
00004f1: 93                                        ; f32.sub
00004f2: 41                                        ; i32.const
00004f3: 00                                        ; i32 literal
00004f4: b2                                        ; f32.convert_i32_s
00004f5: 5d                                        ; f32.lt
00004f6: 6a                                        ; i32.add
00004f7: 04                                        ; if
00004f8: 40                                        ; void
00004f9: 41                                        ; i32.const
00004fa: 01                                        ; i32 literal
00004fb: 21                                        ; local.set
00004fc: 03                                        ; local index
00004fd: 05                                        ; else
00004fe: 41                                        ; i32.const
00004ff: 00                                        ; i32 literal
0000500: 21                                        ; local.set
0000501: 07                                        ; local index
0000502: 02                                        ; block
0000503: 40                                        ; void
0000504: 03                                        ; loop
0000505: 40                                        ; void
0000506: 20                                        ; local.get
0000507: 07                                        ; local index
0000508: 20                                        ; local.get
0000509: 02                                        ; local index
000050a: 41                                        ; i32.const
000050b: 01                                        ; i32 literal
000050c: 6b                                        ; i32.sub
000050d: 4a                                        ; i32.gt_s
000050e: 0d                                        ; br_if
000050f: 01                                        ; break depth
0000510: 20                                        ; local.get
0000511: 04                                        ; local index
0000512: 20                                        ; local.get
0000513: 05                                        ; local index
0000514: 20                                        ; local.get
0000515: 06                                        ; local index
0000516: 23                                        ; global.get
0000517: 0e                                        ; global index
0000518: 41                                        ; i32.const
0000519: 08                                        ; i32 literal
000051a: 6a                                        ; i32.add
000051b: 20                                        ; local.get
000051c: 07                                        ; local index
000051d: 41                                        ; i32.const
000051e: 0c                                        ; i32 literal
000051f: 6c                                        ; i32.mul
0000520: 6a                                        ; i32.add
0000521: 28                                        ; i32.load
0000522: 02                                        ; alignment
0000523: 00                                        ; load offset
0000524: 41                                        ; i32.const
0000525: 04                                        ; i32 literal
0000526: 6a                                        ; i32.add
0000527: 2a                                        ; f32.load
0000528: 02                                        ; alignment
0000529: 00                                        ; load offset
000052a: 23                                        ; global.get
000052b: 0e                                        ; global index
000052c: 41                                        ; i32.const
000052d: 08                                        ; i32 literal
000052e: 6a                                        ; i32.add
000052f: 20                                        ; local.get
0000530: 07                                        ; local index
0000531: 41                                        ; i32.const
0000532: 0c                                        ; i32 literal
0000533: 6c                                        ; i32.mul
0000534: 6a                                        ; i32.add
0000535: 28                                        ; i32.load
0000536: 02                                        ; alignment
0000537: 00                                        ; load offset
0000538: 41                                        ; i32.const
0000539: 00                                        ; i32 literal
000053a: 6a                                        ; i32.add
000053b: 2a                                        ; f32.load
000053c: 02                                        ; alignment
000053d: 00                                        ; load offset
000053e: 23                                        ; global.get
000053f: 0e                                        ; global index
0000540: 41                                        ; i32.const
0000541: 08                                        ; i32 literal
0000542: 6a                                        ; i32.add
0000543: 20                                        ; local.get
0000544: 07                                        ; local index
0000545: 41                                        ; i32.const
0000546: 0c                                        ; i32 literal
0000547: 6c                                        ; i32.mul
0000548: 6a                                        ; i32.add
0000549: 28                                        ; i32.load
000054a: 02                                        ; alignment
000054b: 00                                        ; load offset
000054c: 41                                        ; i32.const
000054d: 08                                        ; i32 literal
000054e: 6a                                        ; i32.add
000054f: 2a                                        ; f32.load
0000550: 02                                        ; alignment
0000551: 00                                        ; load offset
0000552: 10                                        ; call
0000553: 1a                                        ; function index
0000554: 04                                        ; if
0000555: 40                                        ; void
0000556: 41                                        ; i32.const
0000557: 01                                        ; i32 literal
0000558: 21                                        ; local.set
0000559: 03                                        ; local index
000055a: 41                                        ; i32.const
000055b: 01                                        ; i32 literal
000055c: 0d                                        ; br_if
000055d: 05                                        ; break depth
000055e: 0b                                        ; end
000055f: 20                                        ; local.get
0000560: 07                                        ; local index
0000561: 41                                        ; i32.const
0000562: 01                                        ; i32 literal
0000563: 6a                                        ; i32.add
0000564: 21                                        ; local.set
0000565: 07                                        ; local index
0000566: 0c                                        ; br
0000567: 00                                        ; break depth
0000568: 0b                                        ; end
0000569: 0b                                        ; end
000056a: 0b                                        ; end
000056b: 20                                        ; local.get
000056c: 03                                        ; local index
000056d: 45                                        ; i32.eqz
000056e: 0d                                        ; br_if
000056f: 01                                        ; break depth
0000570: 0c                                        ; br
0000571: 00                                        ; break depth
0000572: 0b                                        ; end
0000573: 0b                                        ; end
0000574: 23                                        ; global.get
0000575: 0e                                        ; global index
0000576: 41                                        ; i32.const
0000577: 08                                        ; i32 literal
0000578: 6a                                        ; i32.add
0000579: 20                                        ; local.get
000057a: 02                                        ; local index
000057b: 41                                        ; i32.const
000057c: 0c                                        ; i32 literal
000057d: 6c                                        ; i32.mul
000057e: 6a                                        ; i32.add
000057f: 41                                        ; i32.const
0000580: 04                                        ; i32 literal
0000581: 6a                                        ; i32.add
0000582: 20                                        ; local.get
0000583: 04                                        ; local index
0000584: 38                                        ; f32.store
0000585: 02                                        ; alignment
0000586: 00                                        ; store offset
0000587: 23                                        ; global.get
0000588: 0e                                        ; global index
0000589: 41                                        ; i32.const
000058a: 08                                        ; i32 literal
000058b: 6a                                        ; i32.add
000058c: 20                                        ; local.get
000058d: 02                                        ; local index
000058e: 41                                        ; i32.const
000058f: 0c                                        ; i32 literal
0000590: 6c                                        ; i32.mul
0000591: 6a                                        ; i32.add
0000592: 41                                        ; i32.const
0000593: 00                                        ; i32 literal
0000594: 6a                                        ; i32.add
0000595: 20                                        ; local.get
0000596: 05                                        ; local index
0000597: 38                                        ; f32.store
0000598: 02                                        ; alignment
0000599: 00                                        ; store offset
000059a: 23                                        ; global.get
000059b: 0e                                        ; global index
000059c: 41                                        ; i32.const
000059d: 08                                        ; i32 literal
000059e: 6a                                        ; i32.add
000059f: 20                                        ; local.get
00005a0: 02                                        ; local index
00005a1: 41                                        ; i32.const
00005a2: 0c                                        ; i32 literal
00005a3: 6c                                        ; i32.mul
00005a4: 6a                                        ; i32.add
00005a5: 41                                        ; i32.const
00005a6: 08                                        ; i32 literal
00005a7: 6a                                        ; i32.add
00005a8: 20                                        ; local.get
00005a9: 06                                        ; local index
00005aa: 38                                        ; f32.store
00005ab: 02                                        ; alignment
00005ac: 00                                        ; store offset
00005ad: 41                                        ; i32.const
00005ae: a007                                      ; i32 literal
00005b0: 20                                        ; local.get
00005b1: 02                                        ; local index
00005b2: 10                                        ; call
00005b3: 0d                                        ; function index
00005b4: 10                                        ; call
00005b5: 0a                                        ; function index
00005b6: 41                                        ; i32.const
00005b7: b007                                      ; i32 literal
00005b9: 10                                        ; call
00005ba: 0a                                        ; function index
00005bb: 23                                        ; global.get
00005bc: 0e                                        ; global index
00005bd: 41                                        ; i32.const
00005be: 08                                        ; i32 literal
00005bf: 6a                                        ; i32.add
00005c0: 20                                        ; local.get
00005c1: 02                                        ; local index
00005c2: 41                                        ; i32.const
00005c3: 0c                                        ; i32 literal
00005c4: 6c                                        ; i32.mul
00005c5: 6a                                        ; i32.add
00005c6: 28                                        ; i32.load
00005c7: 02                                        ; alignment
00005c8: 00                                        ; load offset
00005c9: 10                                        ; call
00005ca: 0d                                        ; function index
00005cb: 10                                        ; call
00005cc: 0a                                        ; function index
00005cd: 41                                        ; i32.const
00005ce: b807                                      ; i32 literal
00005d0: 10                                        ; call
00005d1: 0a                                        ; function index
00005d2: 10                                        ; call
00005d3: 08                                        ; function index
00005d4: 41                                        ; i32.const
00005d5: c007                                      ; i32 literal
00005d7: 23                                        ; global.get
00005d8: 0f                                        ; global index
00005d9: 41                                        ; i32.const
00005da: 08                                        ; i32 literal
00005db: 6a                                        ; i32.add
00005dc: 20                                        ; local.get
00005dd: 02                                        ; local index
00005de: 41                                        ; i32.const
00005df: 04                                        ; i32 literal
00005e0: 6c                                        ; i32.mul
00005e1: 6a                                        ; i32.add
00005e2: 28                                        ; i32.load
00005e3: 02                                        ; alignment
00005e4: 00                                        ; load offset
00005e5: 10                                        ; call
00005e6: 0d                                        ; function index
00005e7: 10                                        ; call
00005e8: 0a                                        ; function index
00005e9: 10                                        ; call
00005ea: 08                                        ; function index
00005eb: 23                                        ; global.get
00005ec: 0f                                        ; global index
00005ed: 41                                        ; i32.const
00005ee: 08                                        ; i32 literal
00005ef: 6a                                        ; i32.add
00005f0: 20                                        ; local.get
00005f1: 02                                        ; local index
00005f2: 41                                        ; i32.const
00005f3: 04                                        ; i32 literal
00005f4: 6c                                        ; i32.mul
00005f5: 6a                                        ; i32.add
00005f6: 28                                        ; i32.load
00005f7: 02                                        ; alignment
00005f8: 00                                        ; load offset
00005f9: 41                                        ; i32.const
00005fa: 00                                        ; i32 literal
00005fb: 6a                                        ; i32.add
00005fc: 10                                        ; call
00005fd: 04                                        ; function index
00005fe: 44                                        ; f64.const
00005ff: 0000 0000 0000 e03f                       ; f64 literal
0000607: a1                                        ; f64.sub
0000608: 44                                        ; f64.const
0000609: 9a99 9999 9999 b93f                       ; f64 literal
0000611: a2                                        ; f64.mul
0000612: b6                                        ; f32.demote_f64
0000613: 38                                        ; f32.store
0000614: 02                                        ; alignment
0000615: 00                                        ; store offset
0000616: 23                                        ; global.get
0000617: 0f                                        ; global index
0000618: 41                                        ; i32.const
0000619: 08                                        ; i32 literal
000061a: 6a                                        ; i32.add
000061b: 20                                        ; local.get
000061c: 02                                        ; local index
000061d: 41                                        ; i32.const
000061e: 04                                        ; i32 literal
000061f: 6c                                        ; i32.mul
0000620: 6a                                        ; i32.add
0000621: 28                                        ; i32.load
0000622: 02                                        ; alignment
0000623: 00                                        ; load offset
0000624: 41                                        ; i32.const
0000625: 04                                        ; i32 literal
0000626: 6a                                        ; i32.add
0000627: 10                                        ; call
0000628: 04                                        ; function index
0000629: 44                                        ; f64.const
000062a: 0000 0000 0000 e03f                       ; f64 literal
0000632: a1                                        ; f64.sub
0000633: 44                                        ; f64.const
0000634: 9a99 9999 9999 b93f                       ; f64 literal
000063c: a2                                        ; f64.mul
000063d: b6                                        ; f32.demote_f64
000063e: 38                                        ; f32.store
000063f: 02                                        ; alignment
0000640: 00                                        ; store offset
0000641: 20                                        ; local.get
0000642: 02                                        ; local index
0000643: 41                                        ; i32.const
0000644: 01                                        ; i32 literal
0000645: 6a                                        ; i32.add
0000646: 21                                        ; local.set
0000647: 02                                        ; local index
0000648: 0c                                        ; br
0000649: 00                                        ; break depth
000064a: 0b                                        ; end
000064b: 0b                                        ; end
000064c: 0b                                        ; end
; move data: [45c, 64d) -> [45d, 64e)
000045b: f103                                      ; FIXUP func body size
; function body 8
000064e: 00                                        ; func body size (guess)
000064f: 01                                        ; local decl count
0000650: 03                                        ; local type count
0000651: 7f                                        ; i32
0000652: 41                                        ; i32.const
0000653: 00                                        ; i32 literal
0000654: 21                                        ; local.set
0000655: 00                                        ; local index
0000656: 02                                        ; block
0000657: 40                                        ; void
0000658: 03                                        ; loop
0000659: 40                                        ; void
000065a: 20                                        ; local.get
000065b: 00                                        ; local index
000065c: 23                                        ; global.get
000065d: 0c                                        ; global index
000065e: 41                                        ; i32.const
000065f: 01                                        ; i32 literal
0000660: 6b                                        ; i32.sub
0000661: 4a                                        ; i32.gt_s
0000662: 0d                                        ; br_if
0000663: 01                                        ; break depth
0000664: 23                                        ; global.get
0000665: 11                                        ; global index
0000666: 41                                        ; i32.const
0000667: 08                                        ; i32 literal
0000668: 6a                                        ; i32.add
0000669: 20                                        ; local.get
000066a: 00                                        ; local index
000066b: 41                                        ; i32.const
000066c: 04                                        ; i32 literal
000066d: 6c                                        ; i32.mul
000066e: 6a                                        ; i32.add
000066f: 28                                        ; i32.load
0000670: 02                                        ; alignment
0000671: 00                                        ; load offset
0000672: 21                                        ; local.set
0000673: 01                                        ; local index
0000674: 41                                        ; i32.const
0000675: 00                                        ; i32 literal
0000676: 21                                        ; local.set
0000677: 02                                        ; local index
0000678: 02                                        ; block
0000679: 40                                        ; void
000067a: 03                                        ; loop
000067b: 40                                        ; void
000067c: 20                                        ; local.get
000067d: 02                                        ; local index
000067e: 23                                        ; global.get
000067f: 0b                                        ; global index
0000680: 41                                        ; i32.const
0000681: 01                                        ; i32 literal
0000682: 6b                                        ; i32.sub
0000683: 4a                                        ; i32.gt_s
0000684: 0d                                        ; br_if
0000685: 01                                        ; break depth
0000686: 20                                        ; local.get
0000687: 01                                        ; local index
0000688: 41                                        ; i32.const
0000689: 08                                        ; i32 literal
000068a: 6a                                        ; i32.add
000068b: 20                                        ; local.get
000068c: 02                                        ; local index
000068d: 41                                        ; i32.const
000068e: 04                                        ; i32 literal
000068f: 6c                                        ; i32.mul
0000690: 6a                                        ; i32.add
0000691: 41                                        ; i32.const
0000692: 00                                        ; i32 literal
0000693: 36                                        ; i32.store
0000694: 02                                        ; alignment
0000695: 00                                        ; store offset
0000696: 20                                        ; local.get
0000697: 02                                        ; local index
0000698: 41                                        ; i32.const
0000699: 01                                        ; i32 literal
000069a: 6a                                        ; i32.add
000069b: 21                                        ; local.set
000069c: 02                                        ; local index
000069d: 0c                                        ; br
000069e: 00                                        ; break depth
000069f: 0b                                        ; end
00006a0: 0b                                        ; end
00006a1: 20                                        ; local.get
00006a2: 00                                        ; local index
00006a3: 41                                        ; i32.const
00006a4: 01                                        ; i32 literal
00006a5: 6a                                        ; i32.add
00006a6: 21                                        ; local.set
00006a7: 00                                        ; local index
00006a8: 0c                                        ; br
00006a9: 00                                        ; break depth
00006aa: 0b                                        ; end
00006ab: 0b                                        ; end
00006ac: 0b                                        ; end
000064e: 5e                                        ; FIXUP func body size
; function body 9
00006ad: 00                                        ; func body size (guess)
00006ae: 03                                        ; local decl count
00006af: 02                                        ; local type count
00006b0: 7f                                        ; i32
00006b1: 05                                        ; local type count
00006b2: 7d                                        ; f32
00006b3: 08                                        ; local type count
00006b4: 7f                                        ; i32
00006b5: 41                                        ; i32.const
00006b6: 00                                        ; i32 literal
00006b7: 21                                        ; local.set
00006b8: 02                                        ; local index
00006b9: 41                                        ; i32.const
00006ba: 00                                        ; i32 literal
00006bb: 21                                        ; local.set
00006bc: 03                                        ; local index
00006bd: 02                                        ; block
00006be: 40                                        ; void
00006bf: 03                                        ; loop
00006c0: 40                                        ; void
00006c1: 20                                        ; local.get
00006c2: 03                                        ; local index
00006c3: 23                                        ; global.get
00006c4: 0d                                        ; global index
00006c5: 41                                        ; i32.const
00006c6: 01                                        ; i32 literal
00006c7: 6b                                        ; i32.sub
00006c8: 4a                                        ; i32.gt_s
00006c9: 0d                                        ; br_if
00006ca: 01                                        ; break depth
00006cb: 23                                        ; global.get
00006cc: 0e                                        ; global index
00006cd: 41                                        ; i32.const
00006ce: 08                                        ; i32 literal
00006cf: 6a                                        ; i32.add
00006d0: 20                                        ; local.get
00006d1: 03                                        ; local index
00006d2: 41                                        ; i32.const
00006d3: 0c                                        ; i32 literal
00006d4: 6c                                        ; i32.mul
00006d5: 6a                                        ; i32.add
00006d6: 28                                        ; i32.load
00006d7: 02                                        ; alignment
00006d8: 00                                        ; load offset
00006d9: 41                                        ; i32.const
00006da: 04                                        ; i32 literal
00006db: 6a                                        ; i32.add
00006dc: 2a                                        ; f32.load
00006dd: 02                                        ; alignment
00006de: 00                                        ; load offset
00006df: 21                                        ; local.set
00006e0: 04                                        ; local index
00006e1: 23                                        ; global.get
00006e2: 0e                                        ; global index
00006e3: 41                                        ; i32.const
00006e4: 08                                        ; i32 literal
00006e5: 6a                                        ; i32.add
00006e6: 20                                        ; local.get
00006e7: 03                                        ; local index
00006e8: 41                                        ; i32.const
00006e9: 0c                                        ; i32 literal
00006ea: 6c                                        ; i32.mul
00006eb: 6a                                        ; i32.add
00006ec: 28                                        ; i32.load
00006ed: 02                                        ; alignment
00006ee: 00                                        ; load offset
00006ef: 41                                        ; i32.const
00006f0: 00                                        ; i32 literal
00006f1: 6a                                        ; i32.add
00006f2: 2a                                        ; f32.load
00006f3: 02                                        ; alignment
00006f4: 00                                        ; load offset
00006f5: 21                                        ; local.set
00006f6: 05                                        ; local index
00006f7: 23                                        ; global.get
00006f8: 0e                                        ; global index
00006f9: 41                                        ; i32.const
00006fa: 08                                        ; i32 literal
00006fb: 6a                                        ; i32.add
00006fc: 20                                        ; local.get
00006fd: 03                                        ; local index
00006fe: 41                                        ; i32.const
00006ff: 0c                                        ; i32 literal
0000700: 6c                                        ; i32.mul
0000701: 6a                                        ; i32.add
0000702: 28                                        ; i32.load
0000703: 02                                        ; alignment
0000704: 00                                        ; load offset
0000705: 41                                        ; i32.const
0000706: 08                                        ; i32 literal
0000707: 6a                                        ; i32.add
0000708: 2a                                        ; f32.load
0000709: 02                                        ; alignment
000070a: 00                                        ; load offset
000070b: 21                                        ; local.set
000070c: 06                                        ; local index
000070d: 23                                        ; global.get
000070e: 0f                                        ; global index
000070f: 41                                        ; i32.const
0000710: 08                                        ; i32 literal
0000711: 6a                                        ; i32.add
0000712: 20                                        ; local.get
0000713: 03                                        ; local index
0000714: 41                                        ; i32.const
0000715: 04                                        ; i32 literal
0000716: 6c                                        ; i32.mul
0000717: 6a                                        ; i32.add
0000718: 28                                        ; i32.load
0000719: 02                                        ; alignment
000071a: 00                                        ; load offset
000071b: 41                                        ; i32.const
000071c: 00                                        ; i32 literal
000071d: 6a                                        ; i32.add
000071e: 2a                                        ; f32.load
000071f: 02                                        ; alignment
0000720: 00                                        ; load offset
0000721: 21                                        ; local.set
0000722: 07                                        ; local index
0000723: 23                                        ; global.get
0000724: 0f                                        ; global index
0000725: 41                                        ; i32.const
0000726: 08                                        ; i32 literal
0000727: 6a                                        ; i32.add
0000728: 20                                        ; local.get
0000729: 03                                        ; local index
000072a: 41                                        ; i32.const
000072b: 04                                        ; i32 literal
000072c: 6c                                        ; i32.mul
000072d: 6a                                        ; i32.add
000072e: 28                                        ; i32.load
000072f: 02                                        ; alignment
0000730: 00                                        ; load offset
0000731: 41                                        ; i32.const
0000732: 04                                        ; i32 literal
0000733: 6a                                        ; i32.add
0000734: 2a                                        ; f32.load
0000735: 02                                        ; alignment
0000736: 00                                        ; load offset
0000737: 21                                        ; local.set
0000738: 08                                        ; local index
0000739: 20                                        ; local.get
000073a: 08                                        ; local index
000073b: bb                                        ; f64.promote_f32
000073c: 44                                        ; f64.const
000073d: 2d43 1ceb e236 1a3f                       ; f64 literal
0000745: a0                                        ; f64.add
0000746: b6                                        ; f32.demote_f64
0000747: 21                                        ; local.set
0000748: 08                                        ; local index
0000749: 20                                        ; local.get
000074a: 00                                        ; local index
000074b: 20                                        ; local.get
000074c: 04                                        ; local index
000074d: 20                                        ; local.get
000074e: 06                                        ; local index
000074f: 92                                        ; f32.add
0000750: 93                                        ; f32.sub
0000751: 41                                        ; i32.const
0000752: 00                                        ; i32 literal
0000753: b2                                        ; f32.convert_i32_s
0000754: 5d                                        ; f32.lt
0000755: 20                                        ; local.get
0000756: 07                                        ; local index
0000757: 41                                        ; i32.const
0000758: 00                                        ; i32 literal
0000759: b2                                        ; f32.convert_i32_s
000075a: 5e                                        ; f32.gt
000075b: 6c                                        ; i32.mul
000075c: 20                                        ; local.get
000075d: 04                                        ; local index
000075e: 20                                        ; local.get
000075f: 06                                        ; local index
0000760: 93                                        ; f32.sub
0000761: 41                                        ; i32.const
0000762: 00                                        ; i32 literal
0000763: b2                                        ; f32.convert_i32_s
0000764: 5d                                        ; f32.lt
0000765: 20                                        ; local.get
0000766: 07                                        ; local index
0000767: 41                                        ; i32.const
0000768: 00                                        ; i32 literal
0000769: b2                                        ; f32.convert_i32_s
000076a: 5d                                        ; f32.lt
000076b: 6c                                        ; i32.mul
000076c: 6a                                        ; i32.add
000076d: 04                                        ; if
000076e: 40                                        ; void
000076f: 43                                        ; f32.const
0000770: 0000 0000                                 ; f32 literal
0000774: 20                                        ; local.get
0000775: 07                                        ; local index
0000776: 93                                        ; f32.sub
0000777: 21                                        ; local.set
0000778: 07                                        ; local index
0000779: 0b                                        ; end
000077a: 20                                        ; local.get
000077b: 01                                        ; local index
000077c: 20                                        ; local.get
000077d: 05                                        ; local index
000077e: 20                                        ; local.get
000077f: 06                                        ; local index
0000780: 92                                        ; f32.add
0000781: 93                                        ; f32.sub
0000782: 41                                        ; i32.const
0000783: 00                                        ; i32 literal
0000784: b2                                        ; f32.convert_i32_s
0000785: 5d                                        ; f32.lt
0000786: 20                                        ; local.get
0000787: 08                                        ; local index
0000788: 41                                        ; i32.const
0000789: 00                                        ; i32 literal
000078a: b2                                        ; f32.convert_i32_s
000078b: 5e                                        ; f32.gt
000078c: 6c                                        ; i32.mul
000078d: 20                                        ; local.get
000078e: 05                                        ; local index
000078f: 20                                        ; local.get
0000790: 06                                        ; local index
0000791: 93                                        ; f32.sub
0000792: 41                                        ; i32.const
0000793: 00                                        ; i32 literal
0000794: b2                                        ; f32.convert_i32_s
0000795: 5d                                        ; f32.lt
0000796: 20                                        ; local.get
0000797: 08                                        ; local index
0000798: 41                                        ; i32.const
0000799: 00                                        ; i32 literal
000079a: b2                                        ; f32.convert_i32_s
000079b: 5d                                        ; f32.lt
000079c: 6c                                        ; i32.mul
000079d: 6a                                        ; i32.add
000079e: 04                                        ; if
000079f: 40                                        ; void
00007a0: 43                                        ; f32.const
00007a1: 0000 0000                                 ; f32 literal
00007a5: 20                                        ; local.get
00007a6: 08                                        ; local index
00007a7: 93                                        ; f32.sub
00007a8: 21                                        ; local.set
00007a9: 08                                        ; local index
00007aa: 0b                                        ; end
00007ab: 23                                        ; global.get
00007ac: 0e                                        ; global index
00007ad: 41                                        ; i32.const
00007ae: 08                                        ; i32 literal
00007af: 6a                                        ; i32.add
00007b0: 20                                        ; local.get
00007b1: 03                                        ; local index
00007b2: 41                                        ; i32.const
00007b3: 0c                                        ; i32 literal
00007b4: 6c                                        ; i32.mul
00007b5: 6a                                        ; i32.add
00007b6: 41                                        ; i32.const
00007b7: 04                                        ; i32 literal
00007b8: 6a                                        ; i32.add
00007b9: 20                                        ; local.get
00007ba: 04                                        ; local index
00007bb: 20                                        ; local.get
00007bc: 07                                        ; local index
00007bd: 92                                        ; f32.add
00007be: 38                                        ; f32.store
00007bf: 02                                        ; alignment
00007c0: 00                                        ; store offset
00007c1: 23                                        ; global.get
00007c2: 0e                                        ; global index
00007c3: 41                                        ; i32.const
00007c4: 08                                        ; i32 literal
00007c5: 6a                                        ; i32.add
00007c6: 20                                        ; local.get
00007c7: 03                                        ; local index
00007c8: 41                                        ; i32.const
00007c9: 0c                                        ; i32 literal
00007ca: 6c                                        ; i32.mul
00007cb: 6a                                        ; i32.add
00007cc: 41                                        ; i32.const
00007cd: 00                                        ; i32 literal
00007ce: 6a                                        ; i32.add
00007cf: 20                                        ; local.get
00007d0: 05                                        ; local index
00007d1: 20                                        ; local.get
00007d2: 08                                        ; local index
00007d3: 92                                        ; f32.add
00007d4: 38                                        ; f32.store
00007d5: 02                                        ; alignment
00007d6: 00                                        ; store offset
00007d7: 23                                        ; global.get
00007d8: 0f                                        ; global index
00007d9: 41                                        ; i32.const
00007da: 08                                        ; i32 literal
00007db: 6a                                        ; i32.add
00007dc: 20                                        ; local.get
00007dd: 03                                        ; local index
00007de: 41                                        ; i32.const
00007df: 04                                        ; i32 literal
00007e0: 6c                                        ; i32.mul
00007e1: 6a                                        ; i32.add
00007e2: 28                                        ; i32.load
00007e3: 02                                        ; alignment
00007e4: 00                                        ; load offset
00007e5: 41                                        ; i32.const
00007e6: 00                                        ; i32 literal
00007e7: 6a                                        ; i32.add
00007e8: 20                                        ; local.get
00007e9: 07                                        ; local index
00007ea: 38                                        ; f32.store
00007eb: 02                                        ; alignment
00007ec: 00                                        ; store offset
00007ed: 23                                        ; global.get
00007ee: 0f                                        ; global index
00007ef: 41                                        ; i32.const
00007f0: 08                                        ; i32 literal
00007f1: 6a                                        ; i32.add
00007f2: 20                                        ; local.get
00007f3: 03                                        ; local index
00007f4: 41                                        ; i32.const
00007f5: 04                                        ; i32 literal
00007f6: 6c                                        ; i32.mul
00007f7: 6a                                        ; i32.add
00007f8: 28                                        ; i32.load
00007f9: 02                                        ; alignment
00007fa: 00                                        ; load offset
00007fb: 41                                        ; i32.const
00007fc: 04                                        ; i32 literal
00007fd: 6a                                        ; i32.add
00007fe: 20                                        ; local.get
00007ff: 08                                        ; local index
0000800: 38                                        ; f32.store
0000801: 02                                        ; alignment
0000802: 00                                        ; store offset
0000803: 20                                        ; local.get
0000804: 04                                        ; local index
0000805: 20                                        ; local.get
0000806: 06                                        ; local index
0000807: 93                                        ; f32.sub
0000808: bb                                        ; f64.promote_f32
0000809: 20                                        ; local.get
000080a: 00                                        ; local index
000080b: bb                                        ; f64.promote_f32
000080c: a3                                        ; f64.div
000080d: 23                                        ; global.get
000080e: 0c                                        ; global index
000080f: b7                                        ; f64.convert_i32_s
0000810: a2                                        ; f64.mul
0000811: 10                                        ; call
0000812: 06                                        ; function index
0000813: aa                                        ; i32.trunc_f64_s
0000814: 21                                        ; local.set
0000815: 09                                        ; local index
0000816: 20                                        ; local.get
0000817: 04                                        ; local index
0000818: 20                                        ; local.get
0000819: 06                                        ; local index
000081a: 92                                        ; f32.add
000081b: bb                                        ; f64.promote_f32
000081c: 20                                        ; local.get
000081d: 00                                        ; local index
000081e: bb                                        ; f64.promote_f32
000081f: a3                                        ; f64.div
0000820: 23                                        ; global.get
0000821: 0c                                        ; global index
0000822: b7                                        ; f64.convert_i32_s
0000823: a2                                        ; f64.mul
0000824: 10                                        ; call
0000825: 06                                        ; function index
0000826: aa                                        ; i32.trunc_f64_s
0000827: 21                                        ; local.set
0000828: 0a                                        ; local index
0000829: 20                                        ; local.get
000082a: 05                                        ; local index
000082b: 20                                        ; local.get
000082c: 06                                        ; local index
000082d: 93                                        ; f32.sub
000082e: bb                                        ; f64.promote_f32
000082f: 20                                        ; local.get
0000830: 01                                        ; local index
0000831: bb                                        ; f64.promote_f32
0000832: a3                                        ; f64.div
0000833: 23                                        ; global.get
0000834: 0b                                        ; global index
0000835: b7                                        ; f64.convert_i32_s
0000836: a2                                        ; f64.mul
0000837: 10                                        ; call
0000838: 06                                        ; function index
0000839: aa                                        ; i32.trunc_f64_s
000083a: 21                                        ; local.set
000083b: 0b                                        ; local index
000083c: 20                                        ; local.get
000083d: 05                                        ; local index
000083e: 20                                        ; local.get
000083f: 06                                        ; local index
0000840: 92                                        ; f32.add
0000841: bb                                        ; f64.promote_f32
0000842: 20                                        ; local.get
0000843: 01                                        ; local index
0000844: bb                                        ; f64.promote_f32
0000845: a3                                        ; f64.div
0000846: 23                                        ; global.get
0000847: 0b                                        ; global index
0000848: b7                                        ; f64.convert_i32_s
0000849: a2                                        ; f64.mul
000084a: 10                                        ; call
000084b: 06                                        ; function index
000084c: aa                                        ; i32.trunc_f64_s
000084d: 21                                        ; local.set
000084e: 0c                                        ; local index
000084f: 20                                        ; local.get
0000850: 09                                        ; local index
0000851: 41                                        ; i32.const
0000852: 00                                        ; i32 literal
0000853: 48                                        ; i32.lt_s
0000854: 04                                        ; if
0000855: 40                                        ; void
0000856: 41                                        ; i32.const
0000857: 00                                        ; i32 literal
0000858: 21                                        ; local.set
0000859: 09                                        ; local index
000085a: 0b                                        ; end
000085b: 20                                        ; local.get
000085c: 0a                                        ; local index
000085d: 23                                        ; global.get
000085e: 0c                                        ; global index
000085f: 4e                                        ; i32.ge_s
0000860: 04                                        ; if
0000861: 40                                        ; void
0000862: 23                                        ; global.get
0000863: 0c                                        ; global index
0000864: 41                                        ; i32.const
0000865: 01                                        ; i32 literal
0000866: 6b                                        ; i32.sub
0000867: 21                                        ; local.set
0000868: 0a                                        ; local index
0000869: 0b                                        ; end
000086a: 20                                        ; local.get
000086b: 0b                                        ; local index
000086c: 41                                        ; i32.const
000086d: 00                                        ; i32 literal
000086e: 48                                        ; i32.lt_s
000086f: 04                                        ; if
0000870: 40                                        ; void
0000871: 41                                        ; i32.const
0000872: 00                                        ; i32 literal
0000873: 21                                        ; local.set
0000874: 0b                                        ; local index
0000875: 0b                                        ; end
0000876: 20                                        ; local.get
0000877: 0c                                        ; local index
0000878: 23                                        ; global.get
0000879: 0b                                        ; global index
000087a: 4e                                        ; i32.ge_s
000087b: 04                                        ; if
000087c: 40                                        ; void
000087d: 23                                        ; global.get
000087e: 0b                                        ; global index
000087f: 41                                        ; i32.const
0000880: 01                                        ; i32 literal
0000881: 6b                                        ; i32.sub
0000882: 21                                        ; local.set
0000883: 0c                                        ; local index
0000884: 0b                                        ; end
0000885: 20                                        ; local.get
0000886: 09                                        ; local index
0000887: 21                                        ; local.set
0000888: 0d                                        ; local index
0000889: 02                                        ; block
000088a: 40                                        ; void
000088b: 03                                        ; loop
000088c: 40                                        ; void
000088d: 20                                        ; local.get
000088e: 0d                                        ; local index
000088f: 20                                        ; local.get
0000890: 0a                                        ; local index
0000891: 4a                                        ; i32.gt_s
0000892: 0d                                        ; br_if
0000893: 01                                        ; break depth
0000894: 23                                        ; global.get
0000895: 11                                        ; global index
0000896: 41                                        ; i32.const
0000897: 08                                        ; i32 literal
0000898: 6a                                        ; i32.add
0000899: 20                                        ; local.get
000089a: 0d                                        ; local index
000089b: 41                                        ; i32.const
000089c: 04                                        ; i32 literal
000089d: 6c                                        ; i32.mul
000089e: 6a                                        ; i32.add
000089f: 28                                        ; i32.load
00008a0: 02                                        ; alignment
00008a1: 00                                        ; load offset
00008a2: 21                                        ; local.set
00008a3: 0e                                        ; local index
00008a4: 20                                        ; local.get
00008a5: 0b                                        ; local index
00008a6: 21                                        ; local.set
00008a7: 0f                                        ; local index
00008a8: 02                                        ; block
00008a9: 40                                        ; void
00008aa: 03                                        ; loop
00008ab: 40                                        ; void
00008ac: 20                                        ; local.get
00008ad: 0f                                        ; local index
00008ae: 20                                        ; local.get
00008af: 0c                                        ; local index
00008b0: 4a                                        ; i32.gt_s
00008b1: 0d                                        ; br_if
00008b2: 01                                        ; break depth
00008b3: 23                                        ; global.get
00008b4: 10                                        ; global index
00008b5: 41                                        ; i32.const
00008b6: 08                                        ; i32 literal
00008b7: 6a                                        ; i32.add
00008b8: 20                                        ; local.get
00008b9: 02                                        ; local index
00008ba: 41                                        ; i32.const
00008bb: 04                                        ; i32 literal
00008bc: 6c                                        ; i32.mul
00008bd: 6a                                        ; i32.add
00008be: 28                                        ; i32.load
00008bf: 02                                        ; alignment
00008c0: 00                                        ; load offset
00008c1: 21                                        ; local.set
00008c2: 10                                        ; local index
00008c3: 20                                        ; local.get
00008c4: 02                                        ; local index
00008c5: 41                                        ; i32.const
00008c6: 01                                        ; i32 literal
00008c7: 6a                                        ; i32.add
00008c8: 21                                        ; local.set
00008c9: 02                                        ; local index
00008ca: 20                                        ; local.get
00008cb: 10                                        ; local index
00008cc: 41                                        ; i32.const
00008cd: 04                                        ; i32 literal
00008ce: 6a                                        ; i32.add
00008cf: 20                                        ; local.get
00008d0: 03                                        ; local index
00008d1: 36                                        ; i32.store
00008d2: 02                                        ; alignment
00008d3: 00                                        ; store offset
00008d4: 20                                        ; local.get
00008d5: 10                                        ; local index
00008d6: 41                                        ; i32.const
00008d7: 00                                        ; i32 literal
00008d8: 6a                                        ; i32.add
00008d9: 20                                        ; local.get
00008da: 0e                                        ; local index
00008db: 41                                        ; i32.const
00008dc: 08                                        ; i32 literal
00008dd: 6a                                        ; i32.add
00008de: 20                                        ; local.get
00008df: 0f                                        ; local index
00008e0: 41                                        ; i32.const
00008e1: 04                                        ; i32 literal
00008e2: 6c                                        ; i32.mul
00008e3: 6a                                        ; i32.add
00008e4: 28                                        ; i32.load
00008e5: 02                                        ; alignment
00008e6: 00                                        ; load offset
00008e7: 36                                        ; i32.store
00008e8: 02                                        ; alignment
00008e9: 00                                        ; store offset
00008ea: 20                                        ; local.get
00008eb: 0e                                        ; local index
00008ec: 41                                        ; i32.const
00008ed: 08                                        ; i32 literal
00008ee: 6a                                        ; i32.add
00008ef: 20                                        ; local.get
00008f0: 0f                                        ; local index
00008f1: 41                                        ; i32.const
00008f2: 04                                        ; i32 literal
00008f3: 6c                                        ; i32.mul
00008f4: 6a                                        ; i32.add
00008f5: 20                                        ; local.get
00008f6: 10                                        ; local index
00008f7: 36                                        ; i32.store
00008f8: 02                                        ; alignment
00008f9: 00                                        ; store offset
00008fa: 20                                        ; local.get
00008fb: 0f                                        ; local index
00008fc: 41                                        ; i32.const
00008fd: 01                                        ; i32 literal
00008fe: 6a                                        ; i32.add
00008ff: 21                                        ; local.set
0000900: 0f                                        ; local index
0000901: 0c                                        ; br
0000902: 00                                        ; break depth
0000903: 0b                                        ; end
0000904: 0b                                        ; end
0000905: 20                                        ; local.get
0000906: 0d                                        ; local index
0000907: 41                                        ; i32.const
0000908: 01                                        ; i32 literal
0000909: 6a                                        ; i32.add
000090a: 21                                        ; local.set
000090b: 0d                                        ; local index
000090c: 0c                                        ; br
000090d: 00                                        ; break depth
000090e: 0b                                        ; end
000090f: 0b                                        ; end
0000910: 20                                        ; local.get
0000911: 03                                        ; local index
0000912: 41                                        ; i32.const
0000913: 01                                        ; i32 literal
0000914: 6a                                        ; i32.add
0000915: 21                                        ; local.set
0000916: 03                                        ; local index
0000917: 0c                                        ; br
0000918: 00                                        ; break depth
0000919: 0b                                        ; end
000091a: 0b                                        ; end
000091b: 0b                                        ; end
; move data: [6ae, 91c) -> [6af, 91d)
00006ad: ee04                                      ; FIXUP func body size
; function body 10
000091d: 00                                        ; func body size (guess)
000091e: 07                                        ; local decl count
000091f: 05                                        ; local type count
0000920: 7f                                        ; i32
0000921: 05                                        ; local type count
0000922: 7d                                        ; f32
0000923: 02                                        ; local type count
0000924: 7f                                        ; i32
0000925: 07                                        ; local type count
0000926: 7d                                        ; f32
0000927: 01                                        ; local type count
0000928: 7c                                        ; f64
0000929: 04                                        ; local type count
000092a: 7d                                        ; f32
000092b: 04                                        ; local type count
000092c: 7c                                        ; f64
000092d: 41                                        ; i32.const
000092e: 00                                        ; i32 literal
000092f: 21                                        ; local.set
0000930: 00                                        ; local index
0000931: 02                                        ; block
0000932: 40                                        ; void
0000933: 03                                        ; loop
0000934: 40                                        ; void
0000935: 20                                        ; local.get
0000936: 00                                        ; local index
0000937: 23                                        ; global.get
0000938: 0c                                        ; global index
0000939: 41                                        ; i32.const
000093a: 01                                        ; i32 literal
000093b: 6b                                        ; i32.sub
000093c: 4a                                        ; i32.gt_s
000093d: 0d                                        ; br_if
000093e: 01                                        ; break depth
000093f: 23                                        ; global.get
0000940: 11                                        ; global index
0000941: 41                                        ; i32.const
0000942: 08                                        ; i32 literal
0000943: 6a                                        ; i32.add
0000944: 20                                        ; local.get
0000945: 00                                        ; local index
0000946: 41                                        ; i32.const
0000947: 04                                        ; i32 literal
0000948: 6c                                        ; i32.mul
0000949: 6a                                        ; i32.add
000094a: 28                                        ; i32.load
000094b: 02                                        ; alignment
000094c: 00                                        ; load offset
000094d: 21                                        ; local.set
000094e: 01                                        ; local index
000094f: 41                                        ; i32.const
0000950: 00                                        ; i32 literal
0000951: 21                                        ; local.set
0000952: 02                                        ; local index
0000953: 02                                        ; block
0000954: 40                                        ; void
0000955: 03                                        ; loop
0000956: 40                                        ; void
0000957: 20                                        ; local.get
0000958: 02                                        ; local index
0000959: 23                                        ; global.get
000095a: 0b                                        ; global index
000095b: 41                                        ; i32.const
000095c: 01                                        ; i32 literal
000095d: 6b                                        ; i32.sub
000095e: 4a                                        ; i32.gt_s
000095f: 0d                                        ; br_if
0000960: 01                                        ; break depth
0000961: 20                                        ; local.get
0000962: 01                                        ; local index
0000963: 41                                        ; i32.const
0000964: 08                                        ; i32 literal
0000965: 6a                                        ; i32.add
0000966: 20                                        ; local.get
0000967: 02                                        ; local index
0000968: 41                                        ; i32.const
0000969: 04                                        ; i32 literal
000096a: 6c                                        ; i32.mul
000096b: 6a                                        ; i32.add
000096c: 28                                        ; i32.load
000096d: 02                                        ; alignment
000096e: 00                                        ; load offset
000096f: 21                                        ; local.set
0000970: 03                                        ; local index
0000971: 02                                        ; block
0000972: 40                                        ; void
0000973: 03                                        ; loop
0000974: 40                                        ; void
0000975: 20                                        ; local.get
0000976: 03                                        ; local index
0000977: 41                                        ; i32.const
0000978: 00                                        ; i32 literal
0000979: 46                                        ; i32.eq
000097a: 45                                        ; i32.eqz
000097b: 45                                        ; i32.eqz
000097c: 0d                                        ; br_if
000097d: 01                                        ; break depth
000097e: 20                                        ; local.get
000097f: 03                                        ; local index
0000980: 41                                        ; i32.const
0000981: 04                                        ; i32 literal
0000982: 6a                                        ; i32.add
0000983: 28                                        ; i32.load
0000984: 02                                        ; alignment
0000985: 00                                        ; load offset
0000986: 21                                        ; local.set
0000987: 04                                        ; local index
0000988: 23                                        ; global.get
0000989: 0e                                        ; global index
000098a: 41                                        ; i32.const
000098b: 08                                        ; i32 literal
000098c: 6a                                        ; i32.add
000098d: 20                                        ; local.get
000098e: 04                                        ; local index
000098f: 41                                        ; i32.const
0000990: 0c                                        ; i32 literal
0000991: 6c                                        ; i32.mul
0000992: 6a                                        ; i32.add
0000993: 28                                        ; i32.load
0000994: 02                                        ; alignment
0000995: 00                                        ; load offset
0000996: 41                                        ; i32.const
0000997: 04                                        ; i32 literal
0000998: 6a                                        ; i32.add
0000999: 2a                                        ; f32.load
000099a: 02                                        ; alignment
000099b: 00                                        ; load offset
000099c: 21                                        ; local.set
000099d: 05                                        ; local index
000099e: 23                                        ; global.get
000099f: 0e                                        ; global index
00009a0: 41                                        ; i32.const
00009a1: 08                                        ; i32 literal
00009a2: 6a                                        ; i32.add
00009a3: 20                                        ; local.get
00009a4: 04                                        ; local index
00009a5: 41                                        ; i32.const
00009a6: 0c                                        ; i32 literal
00009a7: 6c                                        ; i32.mul
00009a8: 6a                                        ; i32.add
00009a9: 28                                        ; i32.load
00009aa: 02                                        ; alignment
00009ab: 00                                        ; load offset
00009ac: 41                                        ; i32.const
00009ad: 00                                        ; i32 literal
00009ae: 6a                                        ; i32.add
00009af: 2a                                        ; f32.load
00009b0: 02                                        ; alignment
00009b1: 00                                        ; load offset
00009b2: 21                                        ; local.set
00009b3: 06                                        ; local index
00009b4: 23                                        ; global.get
00009b5: 0e                                        ; global index
00009b6: 41                                        ; i32.const
00009b7: 08                                        ; i32 literal
00009b8: 6a                                        ; i32.add
00009b9: 20                                        ; local.get
00009ba: 04                                        ; local index
00009bb: 41                                        ; i32.const
00009bc: 0c                                        ; i32 literal
00009bd: 6c                                        ; i32.mul
00009be: 6a                                        ; i32.add
00009bf: 28                                        ; i32.load
00009c0: 02                                        ; alignment
00009c1: 00                                        ; load offset
00009c2: 41                                        ; i32.const
00009c3: 08                                        ; i32 literal
00009c4: 6a                                        ; i32.add
00009c5: 2a                                        ; f32.load
00009c6: 02                                        ; alignment
00009c7: 00                                        ; load offset
00009c8: 21                                        ; local.set
00009c9: 07                                        ; local index
00009ca: 23                                        ; global.get
00009cb: 0f                                        ; global index
00009cc: 41                                        ; i32.const
00009cd: 08                                        ; i32 literal
00009ce: 6a                                        ; i32.add
00009cf: 20                                        ; local.get
00009d0: 04                                        ; local index
00009d1: 41                                        ; i32.const
00009d2: 04                                        ; i32 literal
00009d3: 6c                                        ; i32.mul
00009d4: 6a                                        ; i32.add
00009d5: 28                                        ; i32.load
00009d6: 02                                        ; alignment
00009d7: 00                                        ; load offset
00009d8: 41                                        ; i32.const
00009d9: 00                                        ; i32 literal
00009da: 6a                                        ; i32.add
00009db: 2a                                        ; f32.load
00009dc: 02                                        ; alignment
00009dd: 00                                        ; load offset
00009de: 21                                        ; local.set
00009df: 08                                        ; local index
00009e0: 23                                        ; global.get
00009e1: 0f                                        ; global index
00009e2: 41                                        ; i32.const
00009e3: 08                                        ; i32 literal
00009e4: 6a                                        ; i32.add
00009e5: 20                                        ; local.get
00009e6: 04                                        ; local index
00009e7: 41                                        ; i32.const
00009e8: 04                                        ; i32 literal
00009e9: 6c                                        ; i32.mul
00009ea: 6a                                        ; i32.add
00009eb: 28                                        ; i32.load
00009ec: 02                                        ; alignment
00009ed: 00                                        ; load offset
00009ee: 41                                        ; i32.const
00009ef: 04                                        ; i32 literal
00009f0: 6a                                        ; i32.add
00009f1: 2a                                        ; f32.load
00009f2: 02                                        ; alignment
00009f3: 00                                        ; load offset
00009f4: 21                                        ; local.set
00009f5: 09                                        ; local index
00009f6: 20                                        ; local.get
00009f7: 03                                        ; local index
00009f8: 21                                        ; local.set
00009f9: 0a                                        ; local index
00009fa: 20                                        ; local.get
00009fb: 0a                                        ; local index
00009fc: 41                                        ; i32.const
00009fd: 00                                        ; i32 literal
00009fe: 6a                                        ; i32.add
00009ff: 28                                        ; i32.load
0000a00: 02                                        ; alignment
0000a01: 00                                        ; load offset
0000a02: 21                                        ; local.set
0000a03: 0a                                        ; local index
0000a04: 02                                        ; block
0000a05: 40                                        ; void
0000a06: 03                                        ; loop
0000a07: 40                                        ; void
0000a08: 20                                        ; local.get
0000a09: 0a                                        ; local index
0000a0a: 41                                        ; i32.const
0000a0b: 00                                        ; i32 literal
0000a0c: 46                                        ; i32.eq
0000a0d: 45                                        ; i32.eqz
0000a0e: 45                                        ; i32.eqz
0000a0f: 0d                                        ; br_if
0000a10: 01                                        ; break depth
0000a11: 20                                        ; local.get
0000a12: 0a                                        ; local index
0000a13: 41                                        ; i32.const
0000a14: 04                                        ; i32 literal
0000a15: 6a                                        ; i32.add
0000a16: 28                                        ; i32.load
0000a17: 02                                        ; alignment
0000a18: 00                                        ; load offset
0000a19: 21                                        ; local.set
0000a1a: 0b                                        ; local index
0000a1b: 23                                        ; global.get
0000a1c: 0e                                        ; global index
0000a1d: 41                                        ; i32.const
0000a1e: 08                                        ; i32 literal
0000a1f: 6a                                        ; i32.add
0000a20: 20                                        ; local.get
0000a21: 0b                                        ; local index
0000a22: 41                                        ; i32.const
0000a23: 0c                                        ; i32 literal
0000a24: 6c                                        ; i32.mul
0000a25: 6a                                        ; i32.add
0000a26: 28                                        ; i32.load
0000a27: 02                                        ; alignment
0000a28: 00                                        ; load offset
0000a29: 41                                        ; i32.const
0000a2a: 04                                        ; i32 literal
0000a2b: 6a                                        ; i32.add
0000a2c: 2a                                        ; f32.load
0000a2d: 02                                        ; alignment
0000a2e: 00                                        ; load offset
0000a2f: 21                                        ; local.set
0000a30: 0c                                        ; local index
0000a31: 23                                        ; global.get
0000a32: 0e                                        ; global index
0000a33: 41                                        ; i32.const
0000a34: 08                                        ; i32 literal
0000a35: 6a                                        ; i32.add
0000a36: 20                                        ; local.get
0000a37: 0b                                        ; local index
0000a38: 41                                        ; i32.const
0000a39: 0c                                        ; i32 literal
0000a3a: 6c                                        ; i32.mul
0000a3b: 6a                                        ; i32.add
0000a3c: 28                                        ; i32.load
0000a3d: 02                                        ; alignment
0000a3e: 00                                        ; load offset
0000a3f: 41                                        ; i32.const
0000a40: 00                                        ; i32 literal
0000a41: 6a                                        ; i32.add
0000a42: 2a                                        ; f32.load
0000a43: 02                                        ; alignment
0000a44: 00                                        ; load offset
0000a45: 21                                        ; local.set
0000a46: 0d                                        ; local index
0000a47: 23                                        ; global.get
0000a48: 0e                                        ; global index
0000a49: 41                                        ; i32.const
0000a4a: 08                                        ; i32 literal
0000a4b: 6a                                        ; i32.add
0000a4c: 20                                        ; local.get
0000a4d: 0b                                        ; local index
0000a4e: 41                                        ; i32.const
0000a4f: 0c                                        ; i32 literal
0000a50: 6c                                        ; i32.mul
0000a51: 6a                                        ; i32.add
0000a52: 28                                        ; i32.load
0000a53: 02                                        ; alignment
0000a54: 00                                        ; load offset
0000a55: 41                                        ; i32.const
0000a56: 08                                        ; i32 literal
0000a57: 6a                                        ; i32.add
0000a58: 2a                                        ; f32.load
0000a59: 02                                        ; alignment
0000a5a: 00                                        ; load offset
0000a5b: 21                                        ; local.set
0000a5c: 0e                                        ; local index
0000a5d: 20                                        ; local.get
0000a5e: 05                                        ; local index
0000a5f: 20                                        ; local.get
0000a60: 06                                        ; local index
0000a61: 20                                        ; local.get
0000a62: 07                                        ; local index
0000a63: 20                                        ; local.get
0000a64: 0c                                        ; local index
0000a65: 20                                        ; local.get
0000a66: 0d                                        ; local index
0000a67: 20                                        ; local.get
0000a68: 0e                                        ; local index
0000a69: 10                                        ; call
0000a6a: 1a                                        ; function index
0000a6b: 04                                        ; if
0000a6c: 40                                        ; void
0000a6d: 23                                        ; global.get
0000a6e: 0f                                        ; global index
0000a6f: 41                                        ; i32.const
0000a70: 08                                        ; i32 literal
0000a71: 6a                                        ; i32.add
0000a72: 20                                        ; local.get
0000a73: 0b                                        ; local index
0000a74: 41                                        ; i32.const
0000a75: 04                                        ; i32 literal
0000a76: 6c                                        ; i32.mul
0000a77: 6a                                        ; i32.add
0000a78: 28                                        ; i32.load
0000a79: 02                                        ; alignment
0000a7a: 00                                        ; load offset
0000a7b: 41                                        ; i32.const
0000a7c: 00                                        ; i32 literal
0000a7d: 6a                                        ; i32.add
0000a7e: 2a                                        ; f32.load
0000a7f: 02                                        ; alignment
0000a80: 00                                        ; load offset
0000a81: 21                                        ; local.set
0000a82: 0f                                        ; local index
0000a83: 23                                        ; global.get
0000a84: 0f                                        ; global index
0000a85: 41                                        ; i32.const
0000a86: 08                                        ; i32 literal
0000a87: 6a                                        ; i32.add
0000a88: 20                                        ; local.get
0000a89: 0b                                        ; local index
0000a8a: 41                                        ; i32.const
0000a8b: 04                                        ; i32 literal
0000a8c: 6c                                        ; i32.mul
0000a8d: 6a                                        ; i32.add
0000a8e: 28                                        ; i32.load
0000a8f: 02                                        ; alignment
0000a90: 00                                        ; load offset
0000a91: 41                                        ; i32.const
0000a92: 04                                        ; i32 literal
0000a93: 6a                                        ; i32.add
0000a94: 2a                                        ; f32.load
0000a95: 02                                        ; alignment
0000a96: 00                                        ; load offset
0000a97: 21                                        ; local.set
0000a98: 10                                        ; local index
0000a99: 20                                        ; local.get
0000a9a: 0c                                        ; local index
0000a9b: 20                                        ; local.get
0000a9c: 05                                        ; local index
0000a9d: 93                                        ; f32.sub
0000a9e: 21                                        ; local.set
0000a9f: 11                                        ; local index
0000aa0: 20                                        ; local.get
0000aa1: 0d                                        ; local index
0000aa2: 20                                        ; local.get
0000aa3: 06                                        ; local index
0000aa4: 93                                        ; f32.sub
0000aa5: 21                                        ; local.set
0000aa6: 12                                        ; local index
0000aa7: 20                                        ; local.get
0000aa8: 11                                        ; local index
0000aa9: 20                                        ; local.get
0000aaa: 11                                        ; local index
0000aab: 94                                        ; f32.mul
0000aac: 20                                        ; local.get
0000aad: 12                                        ; local index
0000aae: 20                                        ; local.get
0000aaf: 12                                        ; local index
0000ab0: 94                                        ; f32.mul
0000ab1: 92                                        ; f32.add
0000ab2: bb                                        ; f64.promote_f32
0000ab3: 10                                        ; call
0000ab4: 01                                        ; function index
0000ab5: 21                                        ; local.set
0000ab6: 13                                        ; local index
0000ab7: 20                                        ; local.get
0000ab8: 11                                        ; local index
0000ab9: bb                                        ; f64.promote_f32
0000aba: 20                                        ; local.get
0000abb: 13                                        ; local index
0000abc: a3                                        ; f64.div
0000abd: b6                                        ; f32.demote_f64
0000abe: 21                                        ; local.set
0000abf: 11                                        ; local index
0000ac0: 20                                        ; local.get
0000ac1: 12                                        ; local index
0000ac2: bb                                        ; f64.promote_f32
0000ac3: 20                                        ; local.get
0000ac4: 13                                        ; local index
0000ac5: a3                                        ; f64.div
0000ac6: b6                                        ; f32.demote_f64
0000ac7: 21                                        ; local.set
0000ac8: 12                                        ; local index
0000ac9: 20                                        ; local.get
0000aca: 11                                        ; local index
0000acb: 20                                        ; local.get
0000acc: 08                                        ; local index
0000acd: 94                                        ; f32.mul
0000ace: 20                                        ; local.get
0000acf: 12                                        ; local index
0000ad0: 20                                        ; local.get
0000ad1: 09                                        ; local index
0000ad2: 94                                        ; f32.mul
0000ad3: 92                                        ; f32.add
0000ad4: 21                                        ; local.set
0000ad5: 14                                        ; local index
0000ad6: 20                                        ; local.get
0000ad7: 11                                        ; local index
0000ad8: 20                                        ; local.get
0000ad9: 0f                                        ; local index
0000ada: 94                                        ; f32.mul
0000adb: 20                                        ; local.get
0000adc: 12                                        ; local index
0000add: 20                                        ; local.get
0000ade: 10                                        ; local index
0000adf: 94                                        ; f32.mul
0000ae0: 92                                        ; f32.add
0000ae1: 21                                        ; local.set
0000ae2: 15                                        ; local index
0000ae3: 20                                        ; local.get
0000ae4: 14                                        ; local index
0000ae5: 20                                        ; local.get
0000ae6: 15                                        ; local index
0000ae7: 93                                        ; f32.sub
0000ae8: 41                                        ; i32.const
0000ae9: 00                                        ; i32 literal
0000aea: b2                                        ; f32.convert_i32_s
0000aeb: 5f                                        ; f32.le
0000aec: 45                                        ; i32.eqz
0000aed: 04                                        ; if
0000aee: 40                                        ; void
0000aef: 20                                        ; local.get
0000af0: 07                                        ; local index
0000af1: 20                                        ; local.get
0000af2: 0e                                        ; local index
0000af3: 92                                        ; f32.add
0000af4: 21                                        ; local.set
0000af5: 16                                        ; local index
0000af6: 20                                        ; local.get
0000af7: 07                                        ; local index
0000af8: 20                                        ; local.get
0000af9: 0e                                        ; local index
0000afa: 93                                        ; f32.sub
0000afb: 21                                        ; local.set
0000afc: 17                                        ; local index
0000afd: 20                                        ; local.get
0000afe: 14                                        ; local index
0000aff: 20                                        ; local.get
0000b00: 17                                        ; local index
0000b01: 94                                        ; f32.mul
0000b02: 41                                        ; i32.const
0000b03: 02                                        ; i32 literal
0000b04: b2                                        ; f32.convert_i32_s
0000b05: 20                                        ; local.get
0000b06: 0e                                        ; local index
0000b07: 94                                        ; f32.mul
0000b08: 20                                        ; local.get
0000b09: 15                                        ; local index
0000b0a: 94                                        ; f32.mul
0000b0b: 92                                        ; f32.add
0000b0c: bb                                        ; f64.promote_f32
0000b0d: 20                                        ; local.get
0000b0e: 16                                        ; local index
0000b0f: bb                                        ; f64.promote_f32
0000b10: a3                                        ; f64.div
0000b11: 21                                        ; local.set
0000b12: 18                                        ; local index
0000b13: 41                                        ; i32.const
0000b14: 02                                        ; i32 literal
0000b15: b2                                        ; f32.convert_i32_s
0000b16: 20                                        ; local.get
0000b17: 07                                        ; local index
0000b18: 94                                        ; f32.mul
0000b19: 20                                        ; local.get
0000b1a: 14                                        ; local index
0000b1b: 94                                        ; f32.mul
0000b1c: 20                                        ; local.get
0000b1d: 15                                        ; local index
0000b1e: 20                                        ; local.get
0000b1f: 17                                        ; local index
0000b20: 94                                        ; f32.mul
0000b21: 93                                        ; f32.sub
0000b22: bb                                        ; f64.promote_f32
0000b23: 20                                        ; local.get
0000b24: 16                                        ; local index
0000b25: bb                                        ; f64.promote_f32
0000b26: a3                                        ; f64.div
0000b27: 21                                        ; local.set
0000b28: 19                                        ; local index
0000b29: 20                                        ; local.get
0000b2a: 18                                        ; local index
0000b2b: 20                                        ; local.get
0000b2c: 14                                        ; local index
0000b2d: bb                                        ; f64.promote_f32
0000b2e: a1                                        ; f64.sub
0000b2f: 21                                        ; local.set
0000b30: 1a                                        ; local index
0000b31: 20                                        ; local.get
0000b32: 19                                        ; local index
0000b33: 20                                        ; local.get
0000b34: 15                                        ; local index
0000b35: bb                                        ; f64.promote_f32
0000b36: a1                                        ; f64.sub
0000b37: 21                                        ; local.set
0000b38: 1b                                        ; local index
0000b39: 23                                        ; global.get
0000b3a: 0f                                        ; global index
0000b3b: 41                                        ; i32.const
0000b3c: 08                                        ; i32 literal
0000b3d: 6a                                        ; i32.add
0000b3e: 20                                        ; local.get
0000b3f: 04                                        ; local index
0000b40: 41                                        ; i32.const
0000b41: 04                                        ; i32 literal
0000b42: 6c                                        ; i32.mul
0000b43: 6a                                        ; i32.add
0000b44: 28                                        ; i32.load
0000b45: 02                                        ; alignment
0000b46: 00                                        ; load offset
0000b47: 41                                        ; i32.const
0000b48: 00                                        ; i32 literal
0000b49: 6a                                        ; i32.add
0000b4a: 20                                        ; local.get
0000b4b: 08                                        ; local index
0000b4c: bb                                        ; f64.promote_f32
0000b4d: 20                                        ; local.get
0000b4e: 11                                        ; local index
0000b4f: bb                                        ; f64.promote_f32
0000b50: 20                                        ; local.get
0000b51: 1a                                        ; local index
0000b52: a2                                        ; f64.mul
0000b53: a0                                        ; f64.add
0000b54: b6                                        ; f32.demote_f64
0000b55: 38                                        ; f32.store
0000b56: 02                                        ; alignment
0000b57: 00                                        ; store offset
0000b58: 23                                        ; global.get
0000b59: 0f                                        ; global index
0000b5a: 41                                        ; i32.const
0000b5b: 08                                        ; i32 literal
0000b5c: 6a                                        ; i32.add
0000b5d: 20                                        ; local.get
0000b5e: 04                                        ; local index
0000b5f: 41                                        ; i32.const
0000b60: 04                                        ; i32 literal
0000b61: 6c                                        ; i32.mul
0000b62: 6a                                        ; i32.add
0000b63: 28                                        ; i32.load
0000b64: 02                                        ; alignment
0000b65: 00                                        ; load offset
0000b66: 41                                        ; i32.const
0000b67: 04                                        ; i32 literal
0000b68: 6a                                        ; i32.add
0000b69: 20                                        ; local.get
0000b6a: 09                                        ; local index
0000b6b: bb                                        ; f64.promote_f32
0000b6c: 20                                        ; local.get
0000b6d: 12                                        ; local index
0000b6e: bb                                        ; f64.promote_f32
0000b6f: 20                                        ; local.get
0000b70: 1a                                        ; local index
0000b71: a2                                        ; f64.mul
0000b72: a0                                        ; f64.add
0000b73: b6                                        ; f32.demote_f64
0000b74: 38                                        ; f32.store
0000b75: 02                                        ; alignment
0000b76: 00                                        ; store offset
0000b77: 23                                        ; global.get
0000b78: 0f                                        ; global index
0000b79: 41                                        ; i32.const
0000b7a: 08                                        ; i32 literal
0000b7b: 6a                                        ; i32.add
0000b7c: 20                                        ; local.get
0000b7d: 0b                                        ; local index
0000b7e: 41                                        ; i32.const
0000b7f: 04                                        ; i32 literal
0000b80: 6c                                        ; i32.mul
0000b81: 6a                                        ; i32.add
0000b82: 28                                        ; i32.load
0000b83: 02                                        ; alignment
0000b84: 00                                        ; load offset
0000b85: 41                                        ; i32.const
0000b86: 00                                        ; i32 literal
0000b87: 6a                                        ; i32.add
0000b88: 20                                        ; local.get
0000b89: 0f                                        ; local index
0000b8a: bb                                        ; f64.promote_f32
0000b8b: 20                                        ; local.get
0000b8c: 11                                        ; local index
0000b8d: bb                                        ; f64.promote_f32
0000b8e: 20                                        ; local.get
0000b8f: 1b                                        ; local index
0000b90: a2                                        ; f64.mul
0000b91: a0                                        ; f64.add
0000b92: b6                                        ; f32.demote_f64
0000b93: 38                                        ; f32.store
0000b94: 02                                        ; alignment
0000b95: 00                                        ; store offset
0000b96: 23                                        ; global.get
0000b97: 0f                                        ; global index
0000b98: 41                                        ; i32.const
0000b99: 08                                        ; i32 literal
0000b9a: 6a                                        ; i32.add
0000b9b: 20                                        ; local.get
0000b9c: 0b                                        ; local index
0000b9d: 41                                        ; i32.const
0000b9e: 04                                        ; i32 literal
0000b9f: 6c                                        ; i32.mul
0000ba0: 6a                                        ; i32.add
0000ba1: 28                                        ; i32.load
0000ba2: 02                                        ; alignment
0000ba3: 00                                        ; load offset
0000ba4: 41                                        ; i32.const
0000ba5: 04                                        ; i32 literal
0000ba6: 6a                                        ; i32.add
0000ba7: 20                                        ; local.get
0000ba8: 10                                        ; local index
0000ba9: bb                                        ; f64.promote_f32
0000baa: 20                                        ; local.get
0000bab: 12                                        ; local index
0000bac: bb                                        ; f64.promote_f32
0000bad: 20                                        ; local.get
0000bae: 1b                                        ; local index
0000baf: a2                                        ; f64.mul
0000bb0: a0                                        ; f64.add
0000bb1: b6                                        ; f32.demote_f64
0000bb2: 38                                        ; f32.store
0000bb3: 02                                        ; alignment
0000bb4: 00                                        ; store offset
0000bb5: 20                                        ; local.get
0000bb6: 0a                                        ; local index
0000bb7: 41                                        ; i32.const
0000bb8: 00                                        ; i32 literal
0000bb9: 6a                                        ; i32.add
0000bba: 28                                        ; i32.load
0000bbb: 02                                        ; alignment
0000bbc: 00                                        ; load offset
0000bbd: 21                                        ; local.set
0000bbe: 0a                                        ; local index
0000bbf: 0b                                        ; end
0000bc0: 05                                        ; else
0000bc1: 20                                        ; local.get
0000bc2: 0a                                        ; local index
0000bc3: 41                                        ; i32.const
0000bc4: 00                                        ; i32 literal
0000bc5: 6a                                        ; i32.add
0000bc6: 28                                        ; i32.load
0000bc7: 02                                        ; alignment
0000bc8: 00                                        ; load offset
0000bc9: 21                                        ; local.set
0000bca: 0a                                        ; local index
0000bcb: 0b                                        ; end
0000bcc: 0c                                        ; br
0000bcd: 00                                        ; break depth
0000bce: 0b                                        ; end
0000bcf: 0b                                        ; end
0000bd0: 20                                        ; local.get
0000bd1: 03                                        ; local index
0000bd2: 41                                        ; i32.const
0000bd3: 00                                        ; i32 literal
0000bd4: 6a                                        ; i32.add
0000bd5: 28                                        ; i32.load
0000bd6: 02                                        ; alignment
0000bd7: 00                                        ; load offset
0000bd8: 21                                        ; local.set
0000bd9: 03                                        ; local index
0000bda: 0c                                        ; br
0000bdb: 00                                        ; break depth
0000bdc: 0b                                        ; end
0000bdd: 0b                                        ; end
0000bde: 20                                        ; local.get
0000bdf: 02                                        ; local index
0000be0: 41                                        ; i32.const
0000be1: 01                                        ; i32 literal
0000be2: 6a                                        ; i32.add
0000be3: 21                                        ; local.set
0000be4: 02                                        ; local index
0000be5: 0c                                        ; br
0000be6: 00                                        ; break depth
0000be7: 0b                                        ; end
0000be8: 0b                                        ; end
0000be9: 20                                        ; local.get
0000bea: 00                                        ; local index
0000beb: 41                                        ; i32.const
0000bec: 01                                        ; i32 literal
0000bed: 6a                                        ; i32.add
0000bee: 21                                        ; local.set
0000bef: 00                                        ; local index
0000bf0: 0c                                        ; br
0000bf1: 00                                        ; break depth
0000bf2: 0b                                        ; end
0000bf3: 0b                                        ; end
0000bf4: 0b                                        ; end
; move data: [91e, bf5) -> [91f, bf6)
000091d: d705                                      ; FIXUP func body size
; function body 11
0000bf6: 00                                        ; func body size (guess)
0000bf7: 00                                        ; local decl count
0000bf8: 10                                        ; call
0000bf9: 16                                        ; function index
0000bfa: 20                                        ; local.get
0000bfb: 00                                        ; local index
0000bfc: 20                                        ; local.get
0000bfd: 01                                        ; local index
0000bfe: 10                                        ; call
0000bff: 17                                        ; function index
0000c00: 10                                        ; call
0000c01: 18                                        ; function index
0000c02: 0b                                        ; end
0000bf6: 0c                                        ; FIXUP func body size
; function body 12
0000c03: 00                                        ; func body size (guess)
0000c04: 01                                        ; local decl count
0000c05: 05                                        ; local type count
0000c06: 7f                                        ; i32
0000c07: 20                                        ; local.get
0000c08: 00                                        ; local index
0000c09: 20                                        ; local.get
0000c0a: 02                                        ; local index
0000c0b: 92                                        ; f32.add
0000c0c: 20                                        ; local.get
0000c0d: 03                                        ; local index
0000c0e: 20                                        ; local.get
0000c0f: 05                                        ; local index
0000c10: 93                                        ; f32.sub
0000c11: 5d                                        ; f32.lt
0000c12: 20                                        ; local.get
0000c13: 00                                        ; local index
0000c14: 20                                        ; local.get
0000c15: 02                                        ; local index
0000c16: 93                                        ; f32.sub
0000c17: 20                                        ; local.get
0000c18: 03                                        ; local index
0000c19: 20                                        ; local.get
0000c1a: 05                                        ; local index
0000c1b: 92                                        ; f32.add
0000c1c: 5e                                        ; f32.gt
0000c1d: 6a                                        ; i32.add
0000c1e: 20                                        ; local.get
0000c1f: 01                                        ; local index
0000c20: 20                                        ; local.get
0000c21: 02                                        ; local index
0000c22: 92                                        ; f32.add
0000c23: 20                                        ; local.get
0000c24: 04                                        ; local index
0000c25: 20                                        ; local.get
0000c26: 05                                        ; local index
0000c27: 93                                        ; f32.sub
0000c28: 5d                                        ; f32.lt
0000c29: 6a                                        ; i32.add
0000c2a: 20                                        ; local.get
0000c2b: 01                                        ; local index
0000c2c: 20                                        ; local.get
0000c2d: 02                                        ; local index
0000c2e: 93                                        ; f32.sub
0000c2f: 20                                        ; local.get
0000c30: 04                                        ; local index
0000c31: 20                                        ; local.get
0000c32: 05                                        ; local index
0000c33: 92                                        ; f32.add
0000c34: 5e                                        ; f32.gt
0000c35: 6a                                        ; i32.add
0000c36: 04                                        ; if
0000c37: 40                                        ; void
0000c38: 41                                        ; i32.const
0000c39: 00                                        ; i32 literal
0000c3a: 0f                                        ; return
0000c3b: 0b                                        ; end
0000c3c: 20                                        ; local.get
0000c3d: 03                                        ; local index
0000c3e: 20                                        ; local.get
0000c3f: 00                                        ; local index
0000c40: 93                                        ; f32.sub
0000c41: bb                                        ; f64.promote_f32
0000c42: 41                                        ; i32.const
0000c43: 02                                        ; i32 literal
0000c44: b2                                        ; f32.convert_i32_s
0000c45: bb                                        ; f64.promote_f32
0000c46: 10                                        ; call
0000c47: 00                                        ; function index
0000c48: 20                                        ; local.get
0000c49: 04                                        ; local index
0000c4a: 20                                        ; local.get
0000c4b: 01                                        ; local index
0000c4c: 93                                        ; f32.sub
0000c4d: bb                                        ; f64.promote_f32
0000c4e: 41                                        ; i32.const
0000c4f: 02                                        ; i32 literal
0000c50: b2                                        ; f32.convert_i32_s
0000c51: bb                                        ; f64.promote_f32
0000c52: 10                                        ; call
0000c53: 00                                        ; function index
0000c54: a0                                        ; f64.add
0000c55: 10                                        ; call
0000c56: 01                                        ; function index
0000c57: 20                                        ; local.get
0000c58: 02                                        ; local index
0000c59: 20                                        ; local.get
0000c5a: 05                                        ; local index
0000c5b: 92                                        ; f32.add
0000c5c: bb                                        ; f64.promote_f32
0000c5d: 65                                        ; f64.le
0000c5e: 0f                                        ; return
0000c5f: 0b                                        ; end
0000c03: 5c                                        ; FIXUP func body size
; function body 13
0000c60: 00                                        ; func body size (guess)
0000c61: 00                                        ; local decl count
0000c62: 41                                        ; i32.const
0000c63: c808                                      ; i32 literal
0000c65: 0f                                        ; return
0000c66: 0b                                        ; end
0000c60: 06                                        ; FIXUP func body size
; function body 14
0000c67: 00                                        ; func body size (guess)
0000c68: 00                                        ; local decl count
0000c69: 41                                        ; i32.const
0000c6a: d808                                      ; i32 literal
0000c6c: 0f                                        ; return
0000c6d: 0b                                        ; end
0000c67: 06                                        ; FIXUP func body size
; function body 15
0000c6e: 00                                        ; func body size (guess)
0000c6f: 00                                        ; local decl count
0000c70: 41                                        ; i32.const
0000c71: b009                                      ; i32 literal
0000c73: 0f                                        ; return
0000c74: 0b                                        ; end
0000c6e: 06                                        ; FIXUP func body size
; function body 16
0000c75: 00                                        ; func body size (guess)
0000c76: 00                                        ; local decl count
0000c77: 41                                        ; i32.const
0000c78: b809                                      ; i32 literal
0000c7a: 0f                                        ; return
0000c7b: 0b                                        ; end
0000c75: 06                                        ; FIXUP func body size
; function body 17
0000c7c: 00                                        ; func body size (guess)
0000c7d: 00                                        ; local decl count
0000c7e: 41                                        ; i32.const
0000c7f: c809                                      ; i32 literal
0000c81: 0f                                        ; return
0000c82: 0b                                        ; end
0000c7c: 06                                        ; FIXUP func body size
; function body 18
0000c83: 00                                        ; func body size (guess)
0000c84: 00                                        ; local decl count
0000c85: 41                                        ; i32.const
0000c86: 900a                                      ; i32 literal
0000c88: 0f                                        ; return
0000c89: 0b                                        ; end
0000c83: 06                                        ; FIXUP func body size
; function body 19
0000c8a: 00                                        ; func body size (guess)
0000c8b: 00                                        ; local decl count
0000c8c: 41                                        ; i32.const
0000c8d: a00a                                      ; i32 literal
0000c8f: 0f                                        ; return
0000c90: 0b                                        ; end
0000c8a: 06                                        ; FIXUP func body size
; function body 20
0000c91: 00                                        ; func body size (guess)
0000c92: 00                                        ; local decl count
0000c93: 41                                        ; i32.const
0000c94: c80a                                      ; i32 literal
0000c96: 0f                                        ; return
0000c97: 0b                                        ; end
0000c91: 06                                        ; FIXUP func body size
; function body 21
0000c98: 00                                        ; func body size (guess)
0000c99: 00                                        ; local decl count
0000c9a: 41                                        ; i32.const
0000c9b: d00a                                      ; i32 literal
0000c9d: 0f                                        ; return
0000c9e: 0b                                        ; end
0000c98: 06                                        ; FIXUP func body size
; function body 22
0000c9f: 00                                        ; func body size (guess)
0000ca0: 00                                        ; local decl count
0000ca1: 10                                        ; call
0000ca2: 25                                        ; function index
0000ca3: 10                                        ; call
0000ca4: 26                                        ; function index
0000ca5: 10                                        ; call
0000ca6: 27                                        ; function index
0000ca7: 10                                        ; call
0000ca8: 28                                        ; function index
0000ca9: 10                                        ; call
0000caa: 29                                        ; function index
0000cab: 0b                                        ; end
0000c9f: 0c                                        ; FIXUP func body size
; function body 23
0000cac: 00                                        ; func body size (guess)
0000cad: 01                                        ; local decl count
0000cae: 04                                        ; local type count
0000caf: 7f                                        ; i32
0000cb0: 41                                        ; i32.const
0000cb1: 08                                        ; i32 literal
0000cb2: 23                                        ; global.get
0000cb3: 0d                                        ; global index
0000cb4: 41                                        ; i32.const
0000cb5: 01                                        ; i32 literal
0000cb6: 6b                                        ; i32.sub
0000cb7: 41                                        ; i32.const
0000cb8: 0c                                        ; i32 literal
0000cb9: 6c                                        ; i32.mul
0000cba: 6a                                        ; i32.add
0000cbb: 41                                        ; i32.const
0000cbc: 07                                        ; i32 literal
0000cbd: 10                                        ; call
0000cbe: 0e                                        ; function index
0000cbf: 21                                        ; local.set
0000cc0: 00                                        ; local index
0000cc1: 20                                        ; local.get
0000cc2: 00                                        ; local index
0000cc3: 41                                        ; i32.const
0000cc4: d804                                      ; i32 literal
0000cc6: 36                                        ; i32.store
0000cc7: 02                                        ; alignment
0000cc8: 00                                        ; store offset
0000cc9: 20                                        ; local.get
0000cca: 00                                        ; local index
0000ccb: 41                                        ; i32.const
0000ccc: 04                                        ; i32 literal
0000ccd: 6a                                        ; i32.add
0000cce: 23                                        ; global.get
0000ccf: 0d                                        ; global index
0000cd0: 41                                        ; i32.const
0000cd1: 01                                        ; i32 literal
0000cd2: 6b                                        ; i32.sub
0000cd3: 36                                        ; i32.store
0000cd4: 02                                        ; alignment
0000cd5: 00                                        ; store offset
0000cd6: 20                                        ; local.get
0000cd7: 00                                        ; local index
0000cd8: 24                                        ; global.set
0000cd9: 0e                                        ; global index
0000cda: 41                                        ; i32.const
0000cdb: 08                                        ; i32 literal
0000cdc: 23                                        ; global.get
0000cdd: 0d                                        ; global index
0000cde: 41                                        ; i32.const
0000cdf: 01                                        ; i32 literal
0000ce0: 6b                                        ; i32.sub
0000ce1: 41                                        ; i32.const
0000ce2: 04                                        ; i32 literal
0000ce3: 6c                                        ; i32.mul
0000ce4: 6a                                        ; i32.add
0000ce5: 41                                        ; i32.const
0000ce6: 07                                        ; i32 literal
0000ce7: 10                                        ; call
0000ce8: 0e                                        ; function index
0000ce9: 21                                        ; local.set
0000cea: 01                                        ; local index
0000ceb: 20                                        ; local.get
0000cec: 01                                        ; local index
0000ced: 41                                        ; i32.const
0000cee: 0d                                        ; i32 literal
0000cef: 36                                        ; i32.store
0000cf0: 02                                        ; alignment
0000cf1: 00                                        ; store offset
0000cf2: 20                                        ; local.get
0000cf3: 01                                        ; local index
0000cf4: 41                                        ; i32.const
0000cf5: 04                                        ; i32 literal
0000cf6: 6a                                        ; i32.add
0000cf7: 23                                        ; global.get
0000cf8: 0d                                        ; global index
0000cf9: 41                                        ; i32.const
0000cfa: 01                                        ; i32 literal
0000cfb: 6b                                        ; i32.sub
0000cfc: 36                                        ; i32.store
0000cfd: 02                                        ; alignment
0000cfe: 00                                        ; store offset
0000cff: 20                                        ; local.get
0000d00: 01                                        ; local index
0000d01: 24                                        ; global.set
0000d02: 0f                                        ; global index
0000d03: 41                                        ; i32.const
0000d04: 08                                        ; i32 literal
0000d05: 23                                        ; global.get
0000d06: 0d                                        ; global index
0000d07: 41                                        ; i32.const
0000d08: 04                                        ; i32 literal
0000d09: 6c                                        ; i32.mul
0000d0a: 41                                        ; i32.const
0000d0b: 01                                        ; i32 literal
0000d0c: 6b                                        ; i32.sub
0000d0d: 41                                        ; i32.const
0000d0e: 04                                        ; i32 literal
0000d0f: 6c                                        ; i32.mul
0000d10: 6a                                        ; i32.add
0000d11: 41                                        ; i32.const
0000d12: 07                                        ; i32 literal
0000d13: 10                                        ; call
0000d14: 0e                                        ; function index
0000d15: 21                                        ; local.set
0000d16: 02                                        ; local index
0000d17: 20                                        ; local.get
0000d18: 02                                        ; local index
0000d19: 41                                        ; i32.const
0000d1a: 9002                                      ; i32 literal
0000d1c: 36                                        ; i32.store
0000d1d: 02                                        ; alignment
0000d1e: 00                                        ; store offset
0000d1f: 20                                        ; local.get
0000d20: 02                                        ; local index
0000d21: 41                                        ; i32.const
0000d22: 04                                        ; i32 literal
0000d23: 6a                                        ; i32.add
0000d24: 23                                        ; global.get
0000d25: 0d                                        ; global index
0000d26: 41                                        ; i32.const
0000d27: 04                                        ; i32 literal
0000d28: 6c                                        ; i32.mul
0000d29: 41                                        ; i32.const
0000d2a: 01                                        ; i32 literal
0000d2b: 6b                                        ; i32.sub
0000d2c: 36                                        ; i32.store
0000d2d: 02                                        ; alignment
0000d2e: 00                                        ; store offset
0000d2f: 20                                        ; local.get
0000d30: 02                                        ; local index
0000d31: 24                                        ; global.set
0000d32: 10                                        ; global index
0000d33: 41                                        ; i32.const
0000d34: 08                                        ; i32 literal
0000d35: 23                                        ; global.get
0000d36: 0c                                        ; global index
0000d37: 41                                        ; i32.const
0000d38: 01                                        ; i32 literal
0000d39: 6b                                        ; i32.sub
0000d3a: 41                                        ; i32.const
0000d3b: 04                                        ; i32 literal
0000d3c: 6c                                        ; i32.mul
0000d3d: 6a                                        ; i32.add
0000d3e: 41                                        ; i32.const
0000d3f: 07                                        ; i32 literal
0000d40: 10                                        ; call
0000d41: 0e                                        ; function index
0000d42: 21                                        ; local.set
0000d43: 03                                        ; local index
0000d44: 20                                        ; local.get
0000d45: 03                                        ; local index
0000d46: 41                                        ; i32.const
0000d47: 9002                                      ; i32 literal
0000d49: 36                                        ; i32.store
0000d4a: 02                                        ; alignment
0000d4b: 00                                        ; store offset
0000d4c: 20                                        ; local.get
0000d4d: 03                                        ; local index
0000d4e: 41                                        ; i32.const
0000d4f: 04                                        ; i32 literal
0000d50: 6a                                        ; i32.add
0000d51: 23                                        ; global.get
0000d52: 0c                                        ; global index
0000d53: 41                                        ; i32.const
0000d54: 01                                        ; i32 literal
0000d55: 6b                                        ; i32.sub
0000d56: 36                                        ; i32.store
0000d57: 02                                        ; alignment
0000d58: 00                                        ; store offset
0000d59: 20                                        ; local.get
0000d5a: 03                                        ; local index
0000d5b: 24                                        ; global.set
0000d5c: 11                                        ; global index
0000d5d: 0b                                        ; end
; move data: [cad, d5e) -> [cae, d5f)
0000cac: b101                                      ; FIXUP func body size
; function body 24
0000d5f: 00                                        ; func body size (guess)
0000d60: 00                                        ; local decl count
0000d61: 0b                                        ; end
0000d5f: 02                                        ; FIXUP func body size
; function body 25
0000d62: 00                                        ; func body size (guess)
0000d63: 01                                        ; local decl count
0000d64: 05                                        ; local type count
0000d65: 7f                                        ; i32
0000d66: 41                                        ; i32.const
0000d67: 00                                        ; i32 literal
0000d68: 21                                        ; local.set
0000d69: 00                                        ; local index
0000d6a: 41                                        ; i32.const
0000d6b: d007                                      ; i32 literal
0000d6d: 10                                        ; call
0000d6e: 08                                        ; function index
0000d6f: 41                                        ; i32.const
0000d70: 00                                        ; i32 literal
0000d71: 21                                        ; local.set
0000d72: 01                                        ; local index
0000d73: 02                                        ; block
0000d74: 40                                        ; void
0000d75: 03                                        ; loop
0000d76: 40                                        ; void
0000d77: 20                                        ; local.get
0000d78: 01                                        ; local index
0000d79: 23                                        ; global.get
0000d7a: 11                                        ; global index
0000d7b: 41                                        ; i32.const
0000d7c: 04                                        ; i32 literal
0000d7d: 6a                                        ; i32.add
0000d7e: 28                                        ; i32.load
0000d7f: 02                                        ; alignment
0000d80: 00                                        ; load offset
0000d81: 41                                        ; i32.const
0000d82: 01                                        ; i32 literal
0000d83: 6b                                        ; i32.sub
0000d84: 4a                                        ; i32.gt_s
0000d85: 0d                                        ; br_if
0000d86: 01                                        ; break depth
0000d87: 10                                        ; call
0000d88: 10                                        ; function index
0000d89: 21                                        ; local.set
0000d8a: 00                                        ; local index
0000d8b: 23                                        ; global.get
0000d8c: 11                                        ; global index
0000d8d: 41                                        ; i32.const
0000d8e: 08                                        ; i32 literal
0000d8f: 6a                                        ; i32.add
0000d90: 20                                        ; local.get
0000d91: 01                                        ; local index
0000d92: 41                                        ; i32.const
0000d93: 04                                        ; i32 literal
0000d94: 6c                                        ; i32.mul
0000d95: 6a                                        ; i32.add
0000d96: 20                                        ; local.get
0000d97: 00                                        ; local index
0000d98: 36                                        ; i32.store
0000d99: 02                                        ; alignment
0000d9a: 00                                        ; store offset
0000d9b: 41                                        ; i32.const
0000d9c: e807                                      ; i32 literal
0000d9e: 20                                        ; local.get
0000d9f: 01                                        ; local index
0000da0: 10                                        ; call
0000da1: 0d                                        ; function index
0000da2: 10                                        ; call
0000da3: 0a                                        ; function index
0000da4: 41                                        ; i32.const
0000da5: f007                                      ; i32 literal
0000da7: 10                                        ; call
0000da8: 0a                                        ; function index
0000da9: 20                                        ; local.get
0000daa: 00                                        ; local index
0000dab: 10                                        ; call
0000dac: 0d                                        ; function index
0000dad: 10                                        ; call
0000dae: 0a                                        ; function index
0000daf: 10                                        ; call
0000db0: 08                                        ; function index
0000db1: 41                                        ; i32.const
0000db2: 00                                        ; i32 literal
0000db3: 21                                        ; local.set
0000db4: 02                                        ; local index
0000db5: 02                                        ; block
0000db6: 40                                        ; void
0000db7: 03                                        ; loop
0000db8: 40                                        ; void
0000db9: 20                                        ; local.get
0000dba: 02                                        ; local index
0000dbb: 20                                        ; local.get
0000dbc: 00                                        ; local index
0000dbd: 41                                        ; i32.const
0000dbe: 04                                        ; i32 literal
0000dbf: 6a                                        ; i32.add
0000dc0: 28                                        ; i32.load
0000dc1: 02                                        ; alignment
0000dc2: 00                                        ; load offset
0000dc3: 41                                        ; i32.const
0000dc4: 01                                        ; i32 literal
0000dc5: 6b                                        ; i32.sub
0000dc6: 4a                                        ; i32.gt_s
0000dc7: 0d                                        ; br_if
0000dc8: 01                                        ; break depth
0000dc9: 20                                        ; local.get
0000dca: 00                                        ; local index
0000dcb: 41                                        ; i32.const
0000dcc: 08                                        ; i32 literal
0000dcd: 6a                                        ; i32.add
0000dce: 20                                        ; local.get
0000dcf: 02                                        ; local index
0000dd0: 41                                        ; i32.const
0000dd1: 04                                        ; i32 literal
0000dd2: 6c                                        ; i32.mul
0000dd3: 6a                                        ; i32.add
0000dd4: 10                                        ; call
0000dd5: 11                                        ; function index
0000dd6: 36                                        ; i32.store
0000dd7: 02                                        ; alignment
0000dd8: 00                                        ; store offset
0000dd9: 20                                        ; local.get
0000dda: 02                                        ; local index
0000ddb: 41                                        ; i32.const
0000ddc: 01                                        ; i32 literal
0000ddd: 6a                                        ; i32.add
0000dde: 21                                        ; local.set
0000ddf: 02                                        ; local index
0000de0: 0c                                        ; br
0000de1: 00                                        ; break depth
0000de2: 0b                                        ; end
0000de3: 0b                                        ; end
0000de4: 20                                        ; local.get
0000de5: 01                                        ; local index
0000de6: 41                                        ; i32.const
0000de7: 01                                        ; i32 literal
0000de8: 6a                                        ; i32.add
0000de9: 21                                        ; local.set
0000dea: 01                                        ; local index
0000deb: 0c                                        ; br
0000dec: 00                                        ; break depth
0000ded: 0b                                        ; end
0000dee: 0b                                        ; end
0000def: 41                                        ; i32.const
0000df0: 00                                        ; i32 literal
0000df1: 21                                        ; local.set
0000df2: 03                                        ; local index
0000df3: 02                                        ; block
0000df4: 40                                        ; void
0000df5: 03                                        ; loop
0000df6: 40                                        ; void
0000df7: 20                                        ; local.get
0000df8: 03                                        ; local index
0000df9: 23                                        ; global.get
0000dfa: 0f                                        ; global index
0000dfb: 41                                        ; i32.const
0000dfc: 04                                        ; i32 literal
0000dfd: 6a                                        ; i32.add
0000dfe: 28                                        ; i32.load
0000dff: 02                                        ; alignment
0000e00: 00                                        ; load offset
0000e01: 41                                        ; i32.const
0000e02: 01                                        ; i32 literal
0000e03: 6b                                        ; i32.sub
0000e04: 4a                                        ; i32.gt_s
0000e05: 0d                                        ; br_if
0000e06: 01                                        ; break depth
0000e07: 23                                        ; global.get
0000e08: 0f                                        ; global index
0000e09: 41                                        ; i32.const
0000e0a: 08                                        ; i32 literal
0000e0b: 6a                                        ; i32.add
0000e0c: 20                                        ; local.get
0000e0d: 03                                        ; local index
0000e0e: 41                                        ; i32.const
0000e0f: 04                                        ; i32 literal
0000e10: 6c                                        ; i32.mul
0000e11: 6a                                        ; i32.add
0000e12: 10                                        ; call
0000e13: 12                                        ; function index
0000e14: 36                                        ; i32.store
0000e15: 02                                        ; alignment
0000e16: 00                                        ; store offset
0000e17: 20                                        ; local.get
0000e18: 03                                        ; local index
0000e19: 41                                        ; i32.const
0000e1a: 01                                        ; i32 literal
0000e1b: 6a                                        ; i32.add
0000e1c: 21                                        ; local.set
0000e1d: 03                                        ; local index
0000e1e: 0c                                        ; br
0000e1f: 00                                        ; break depth
0000e20: 0b                                        ; end
0000e21: 0b                                        ; end
0000e22: 41                                        ; i32.const
0000e23: f807                                      ; i32 literal
0000e25: 23                                        ; global.get
0000e26: 0f                                        ; global index
0000e27: 10                                        ; call
0000e28: 0d                                        ; function index
0000e29: 10                                        ; call
0000e2a: 0a                                        ; function index
0000e2b: 10                                        ; call
0000e2c: 08                                        ; function index
0000e2d: 41                                        ; i32.const
0000e2e: 00                                        ; i32 literal
0000e2f: 21                                        ; local.set
0000e30: 04                                        ; local index
0000e31: 02                                        ; block
0000e32: 40                                        ; void
0000e33: 03                                        ; loop
0000e34: 40                                        ; void
0000e35: 20                                        ; local.get
0000e36: 04                                        ; local index
0000e37: 23                                        ; global.get
0000e38: 10                                        ; global index
0000e39: 41                                        ; i32.const
0000e3a: 04                                        ; i32 literal
0000e3b: 6a                                        ; i32.add
0000e3c: 28                                        ; i32.load
0000e3d: 02                                        ; alignment
0000e3e: 00                                        ; load offset
0000e3f: 41                                        ; i32.const
0000e40: 01                                        ; i32 literal
0000e41: 6b                                        ; i32.sub
0000e42: 4a                                        ; i32.gt_s
0000e43: 0d                                        ; br_if
0000e44: 01                                        ; break depth
0000e45: 23                                        ; global.get
0000e46: 10                                        ; global index
0000e47: 41                                        ; i32.const
0000e48: 08                                        ; i32 literal
0000e49: 6a                                        ; i32.add
0000e4a: 20                                        ; local.get
0000e4b: 04                                        ; local index
0000e4c: 41                                        ; i32.const
0000e4d: 04                                        ; i32 literal
0000e4e: 6c                                        ; i32.mul
0000e4f: 6a                                        ; i32.add
0000e50: 10                                        ; call
0000e51: 11                                        ; function index
0000e52: 36                                        ; i32.store
0000e53: 02                                        ; alignment
0000e54: 00                                        ; store offset
0000e55: 41                                        ; i32.const
0000e56: 9008                                      ; i32 literal
0000e58: 20                                        ; local.get
0000e59: 04                                        ; local index
0000e5a: 10                                        ; call
0000e5b: 0d                                        ; function index
0000e5c: 10                                        ; call
0000e5d: 0a                                        ; function index
0000e5e: 41                                        ; i32.const
0000e5f: a808                                      ; i32 literal
0000e61: 10                                        ; call
0000e62: 0a                                        ; function index
0000e63: 23                                        ; global.get
0000e64: 10                                        ; global index
0000e65: 41                                        ; i32.const
0000e66: 08                                        ; i32 literal
0000e67: 6a                                        ; i32.add
0000e68: 20                                        ; local.get
0000e69: 04                                        ; local index
0000e6a: 41                                        ; i32.const
0000e6b: 04                                        ; i32 literal
0000e6c: 6c                                        ; i32.mul
0000e6d: 6a                                        ; i32.add
0000e6e: 28                                        ; i32.load
0000e6f: 02                                        ; alignment
0000e70: 00                                        ; load offset
0000e71: 10                                        ; call
0000e72: 0d                                        ; function index
0000e73: 10                                        ; call
0000e74: 0a                                        ; function index
0000e75: 10                                        ; call
0000e76: 08                                        ; function index
0000e77: 20                                        ; local.get
0000e78: 04                                        ; local index
0000e79: 41                                        ; i32.const
0000e7a: 01                                        ; i32 literal
0000e7b: 6a                                        ; i32.add
0000e7c: 21                                        ; local.set
0000e7d: 04                                        ; local index
0000e7e: 0c                                        ; br
0000e7f: 00                                        ; break depth
0000e80: 0b                                        ; end
0000e81: 0b                                        ; end
0000e82: 41                                        ; i32.const
0000e83: b008                                      ; i32 literal
0000e85: 23                                        ; global.get
0000e86: 10                                        ; global index
0000e87: 10                                        ; call
0000e88: 0d                                        ; function index
0000e89: 10                                        ; call
0000e8a: 0a                                        ; function index
0000e8b: 10                                        ; call
0000e8c: 08                                        ; function index
0000e8d: 0b                                        ; end
; move data: [d63, e8e) -> [d64, e8f)
0000d62: ab02                                      ; FIXUP func body size
; function body 26
0000e8f: 00                                        ; func body size (guess)
0000e90: 00                                        ; local decl count
0000e91: 0b                                        ; end
0000e8f: 02                                        ; FIXUP func body size
; function body 27
0000e92: 00                                        ; func body size (guess)
0000e93: 00                                        ; local decl count
0000e94: 0b                                        ; end
0000e92: 02                                        ; FIXUP func body size
; move data: [394, e95) -> [395, e96)
0000393: 8116                                      ; FIXUP section size
; section "Data" (11)
0000e96: 0b                                        ; section code
0000e97: 00                                        ; section size (guess)
0000e98: 18                                        ; num data segments
; data segment header 0
0000e99: 00                                      
0000e9a: 41                                        ; i32.const
0000e9b: 8807                                      ; i32 literal
0000e9d: 0b                                        ; end
0000e9e: 15                                        ; data segment size
; data segment data 0
0000e9f: 6172 7261 7928 6f66 2063 6972 636c 6529 
0000eaf: 203d 2026 00                              ; data segment data
; data segment header 1
0000eb4: 00                                      
0000eb5: 41                                        ; i32.const
0000eb6: a007                                      ; i32 literal
0000eb8: 0b                                        ; end
0000eb9: 0b                                        ; data segment size
; data segment data 1
0000eba: 6369 7263 6c65 203d 2023 00               ; data segment data
; data segment header 2
0000ec5: 00                                      
0000ec6: 41                                        ; i32.const
0000ec7: b007                                      ; i32 literal
0000ec9: 0b                                        ; end
0000eca: 04                                        ; data segment size
; data segment data 2
0000ecb: 2028 2600                                 ; data segment data
; data segment header 3
0000ecf: 00                                      
0000ed0: 41                                        ; i32.const
0000ed1: b807                                      ; i32 literal
0000ed3: 0b                                        ; end
0000ed4: 02                                        ; data segment size
; data segment data 3
0000ed5: 2900                                      ; data segment data
; data segment header 4
0000ed7: 00                                      
0000ed8: 41                                        ; i32.const
0000ed9: c007                                      ; i32 literal
0000edb: 0b                                        ; end
0000edc: 0c                                        ; data segment size
; data segment data 4
0000edd: 6369 7263 6c65 5620 3d20 2600             ; data segment data
; data segment header 5
0000ee9: 00                                      
0000eea: 41                                        ; i32.const
0000eeb: d007                                      ; i32 literal
0000eed: 0b                                        ; end
0000eee: 17                                        ; data segment size
; data segment data 5
0000eef: 496e 6974 6961 6c69 7a65 2061 7070 6c69 
0000eff: 6361 7469 6f6e 00                         ; data segment data
; data segment header 6
0000f06: 00                                      
0000f07: 41                                        ; i32.const
0000f08: e807                                      ; i32 literal
0000f0a: 0b                                        ; end
0000f0b: 06                                        ; data segment size
; data segment data 6
0000f0c: 726f 7720 2300                            ; data segment data
; data segment header 7
0000f12: 00                                      
0000f13: 41                                        ; i32.const
0000f14: f007                                      ; i32 literal
0000f16: 0b                                        ; end
0000f17: 05                                        ; data segment size
; data segment data 7
0000f18: 203d 2026 00                              ; data segment data
; data segment header 8
0000f1d: 00                                      
0000f1e: 41                                        ; i32.const
0000f1f: f807                                      ; i32 literal
0000f21: 0b                                        ; end
0000f22: 11                                        ; data segment size
; data segment data 8
0000f23: 6369 7263 6c65 7664 6174 6120 3d3e 2026 
0000f33: 00                                        ; data segment data
; data segment header 9
0000f34: 00                                      
0000f35: 41                                        ; i32.const
0000f36: 9008                                      ; i32 literal
0000f38: 0b                                        ; end
0000f39: 16                                        ; data segment size
; data segment data 9
0000f3a: 6e65 7720 6365 6c6c 2063 6972 636c 6520 
0000f4a: 666f 7220 2300                            ; data segment data
; data segment header 10
0000f50: 00                                      
0000f51: 41                                        ; i32.const
0000f52: a808                                      ; i32 literal
0000f54: 0b                                        ; end
0000f55: 06                                        ; data segment size
; data segment data 10
0000f56: 2061 7420 2600                            ; data segment data
; data segment header 11
0000f5c: 00                                      
0000f5d: 41                                        ; i32.const
0000f5e: b008                                      ; i32 literal
0000f60: 0b                                        ; end
0000f61: 11                                        ; data segment size
; data segment data 11
0000f62: 6365 6c6c 6369 7263 6c65 7320 3d3e 2026 
0000f72: 00                                        ; data segment data
; data segment header 12
0000f73: 00                                      
0000f74: 41                                        ; i32.const
0000f75: c808                                      ; i32 literal
0000f77: 0b                                        ; end
0000f78: 0b                                        ; data segment size
; data segment data 12
0000f79: 5765 6247 4c2d 4465 6d6f 00               ; data segment data
; data segment header 13
0000f84: 00                                      
0000f85: 41                                        ; i32.const
0000f86: d808                                      ; i32 literal
0000f88: 0b                                        ; end
0000f89: 51                                        ; data segment size
; data segment data 13
0000f8a: 5765 6241 7373 656d 626c 7920 636f 6e76 
0000f9a: 6572 7369 6f6e 2064 656d 6f6e 7374 7261 
0000faa: 7469 6e67 2074 6865 2066 6173 7465 722d 
0000fba: 7065 7266 6f72 6d69 6e67 2067 7269 6420 
0000fca: 6f66 206c 696e 6b65 642d 6c69 7374 732e 
0000fda: 00                                        ; data segment data
; data segment header 14
0000fdb: 00                                      
0000fdc: 41                                        ; i32.const
0000fdd: b009                                      ; i32 literal
0000fdf: 0b                                        ; end
0000fe0: 04                                        ; data segment size
; data segment data 14
0000fe1: 4d49 5400                                 ; data segment data
; data segment header 15
0000fe5: 00                                      
0000fe6: 41                                        ; i32.const
0000fe7: b809                                      ; i32 literal
0000fe9: 0b                                        ; end
0000fea: 0b                                        ; data segment size
; data segment data 15
0000feb: 5765 6247 4c2d 4465 6d6f 00               ; data segment data
; data segment header 16
0000ff6: 00                                      
0000ff7: 41                                        ; i32.const
0000ff8: c809                                      ; i32 literal
0000ffa: 0b                                        ; end
0000ffb: 46                                        ; data segment size
; data segment data 16
0000ffc: 6874 7470 733a 2f2f 6769 7468 7562 2e63 
000100c: 6f6d 2f67 7579 6265 6466 6f72 642f 7761 
000101c: 736d 2d64 656d 6f2f 626c 6f62 2f6d 6173 
000102c: 7465 722f 6e61 7469 7665 2f64 656d 6f2d 
000103c: 6f70 742e 6300                            ; data segment data
; data segment header 17
0001042: 00                                      
0001043: 41                                        ; i32.const
0001044: 900a                                      ; i32 literal
0001046: 0b                                        ; end
0001047: 0e                                        ; data segment size
; data segment data 17
0001048: 7661 6e69 6c6c 6176 622e 6170 7000        ; data segment data
; data segment header 18
0001056: 00                                      
0001057: 41                                        ; i32.const
0001058: a00a                                      ; i32 literal
000105a: 0b                                        ; end
000105b: 25                                        ; data segment size
; data segment data 18
000105c: 3833 6361 3262 3933 2d34 6535 372d 3464 
000106c: 3434 2d62 3262 632d 3136 3332 3532 6139 
000107c: 3330 3564 00                              ; data segment data
; data segment header 19
0001081: 00                                      
0001082: 41                                        ; i32.const
0001083: c80a                                      ; i32 literal
0001085: 0b                                        ; end
0001086: 08                                        ; data segment size
; data segment data 19
0001087: 312e 302e 302e 3000                       ; data segment data
; data segment header 20
000108f: 00                                      
0001090: 41                                        ; i32.const
0001091: d00a                                      ; i32 literal
0001093: 0b                                        ; end
0001094: 08                                        ; data segment size
; data segment data 20
0001095: 312e 302e 302e 3000                       ; data segment data
; data segment header 21
000109d: 00                                      
000109e: 41                                        ; i32.const
000109f: 0d                                        ; i32 literal
00010a0: 0b                                        ; end
00010a1: fd01                                      ; data segment size
; data segment data 21
00010a3: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
00010b3: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
00010c3: 496b 4e70 636d 4e73 5a56 5969 4c43 4a6a 
00010d3: 6247 467a 6331 3970 5a43 4936 4d54 4d73 
00010e3: 496d 5a70 5a57 786b 6379 4936 6579 4a32 
00010f3: 6543 4936 6579 4a6e 5a57 356c 636d 6c6a 
0001103: 496a 7062 5853 7769 636d 4633 496a 6f69 
0001113: 5a6a 4d79 4969 7769 6448 6c77 5a53 4936 
0001123: 4d33 3073 496e 5a35 496a 7037 496d 646c 
0001133: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
0001143: 5958 6369 4f69 4a6d 4d7a 4969 4c43 4a30 
0001153: 6558 426c 496a 6f7a 6658 3073 496d 6c7a 
0001163: 5533 5279 6457 4e30 496a 706d 5957 787a 
0001173: 5a53 7769 6257 5630 6147 396b 6379 4936 
0001183: 6533 3073 496d 3568 6257 567a 6347 466a 
0001193: 5a53 4936 626e 5673 6248 303d 00          ; data segment data
; data segment header 22
00011a0: 00                                      
00011a1: 41                                        ; i32.const
00011a2: 9002                                      ; i32 literal
00011a4: 0b                                        ; end
00011a5: a102                                      ; data segment size
; data segment data 22
00011a7: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
00011b7: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
00011c7: 496b 4e6c 6247 7844 6158 4a6a 6247 5569 
00011d7: 4c43 4a6a 6247 467a 6331 3970 5a43 4936 
00011e7: 4d6a 6379 4c43 4a6d 6157 5673 5a48 4d69 
00011f7: 4f6e 7369 626d 5634 6443 4936 6579 4a6e 
0001207: 5a57 356c 636d 6c6a 496a 7062 5853 7769 
0001217: 636d 4633 496a 6f69 577a 4933 4d6c 3144 
0001227: 5a57 7873 5132 6c79 5932 786c 4969 7769 
0001237: 6448 6c77 5a53 4936 4d54 4239 4c43 4a6a 
0001247: 6158 4a6a 6247 564a 626d 526c 6543 4936 
0001257: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
0001267: 5853 7769 636d 4633 496a 6f69 6154 4d79 
0001277: 4969 7769 6448 6c77 5a53 4936 4d58 3139 
0001287: 4c43 4a70 6331 4e30 636e 566a 6443 4936 
0001297: 5a6d 4673 6332 5573 496d 316c 6447 6876 
00012a7: 5a48 4d69 4f6e 7439 4c43 4a75 5957 316c 
00012b7: 6333 4268 5932 5569 4f6d 3531 6247 7839 
00012c7: 00                                        ; data segment data
; data segment header 23
00012c8: 00                                      
00012c9: 41                                        ; i32.const
00012ca: d804                                      ; i32 literal
00012cc: 0b                                        ; end
00012cd: ad02                                      ; data segment size
; data segment data 23
00012cf: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
00012df: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
00012ef: 496b 4e70 636d 4e73 5a53 4973 496d 4e73 
00012ff: 5958 4e7a 5832 6c6b 496a 6f32 4d44 4173 
000130f: 496d 5a70 5a57 786b 6379 4936 6579 4a35 
000131f: 496a 7037 496d 646c 626d 5679 6157 4d69 
000132f: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a6d 
000133f: 4d7a 4969 4c43 4a30 6558 426c 496a 6f7a 
000134f: 6653 7769 6543 4936 6579 4a6e 5a57 356c 
000135f: 636d 6c6a 496a 7062 5853 7769 636d 4633 
000136f: 496a 6f69 5a6a 4d79 4969 7769 6448 6c77 
000137f: 5a53 4936 4d33 3073 496e 4969 4f6e 7369 
000138f: 5a32 5675 5a58 4a70 5979 4936 5731 3073 
000139f: 496e 4a68 6479 4936 496d 597a 4d69 4973 
00013af: 496e 5235 6347 5569 4f6a 4e39 6653 7769 
00013bf: 6158 4e54 6448 4a31 5933 5169 4f6e 5279 
00013cf: 6457 5573 496d 316c 6447 6876 5a48 4d69 
00013df: 4f6e 7439 4c43 4a75 5957 316c 6333 4268 
00013ef: 5932 5569 4f6d 3531 6247 7839 00          ; data segment data
; move data: [e98, 13fc) -> [e99, 13fd)
0000e97: e40a                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0141 0c60 027c 7c01 
0000010: 7c60 017c 017c 6000 017c 6002 7f7f 0060 
0000020: 017f 0060 037f 7f7f 017f 6002 7f7f 017f 
0000030: 6001 7f01 7f60 0001 7f60 027d 7d00 6000 
0000040: 0060 067d 7d7d 7d7d 7d01 7f02 d501 0f04 
0000050: 4d61 7468 0370 6f77 0000 044d 6174 6804 
0000060: 7371 7274 0001 044d 6174 6803 6578 7000 
0000070: 0104 4d61 7468 0363 6f73 0001 044d 6174 
0000080: 6806 7261 6e64 6f6d 0002 044d 6174 6804 
0000090: 6365 696c 0001 044d 6174 6805 666c 6f6f 
00000a0: 7200 0102 4743 0961 6464 4f62 6a65 6374 
00000b0: 0003 0763 6f6e 736f 6c65 036c 6f67 0004 
00000c0: 0673 7472 696e 6707 7265 706c 6163 6500 
00000d0: 0506 7374 7269 6e67 0361 6464 0006 0673 
00000e0: 7472 696e 6706 6c65 6e67 7468 0007 0673 
00000f0: 7472 696e 6707 696e 6465 784f 6600 0606 
0000100: 7374 7269 6e67 0874 6f53 7472 696e 6700 
0000110: 0703 656e 760a 6279 7465 6368 756e 6b73 
0000120: 0200 0103 1d1c 0608 0808 0808 0809 0a09 
0000130: 0a09 0b08 0808 0808 0808 0808 0a0a 0a0a 
0000140: 0a0a 069b 0112 7f01 41d8 0a0b 7c01 4469 
0000150: 5714 8b0a bf05 400b 7c01 4418 2d44 54fb 
0000160: 2109 400b 7f01 41ff ffff ff07 0b7e 0142 
0000170: ffff ffff ffff ffff ff00 0b7d 0143 ffff 
0000180: 7f7f 0b7c 0144 ffff ffff ffff ef7f 0b7f 
0000190: 0141 8080 8080 780b 7e01 4280 8080 8080 
00001a0: 8080 8080 7f0b 7d01 43ff ff7f ff0b 7c01 
00001b0: 44ff ffff ffff ffef ff0b 7f01 41f8 000b 
00001c0: 7f01 41c6 000b 7f01 41e4 000b 7f01 4100 
00001d0: 0b7f 0141 000b 7f01 4100 0b7f 0141 000b 
00001e0: 07ac 030f 1467 6c6f 6261 6c2e 4765 744d 
00001f0: 656d 6f72 7953 697a 6500 0f18 416c 676f 
0000200: 7269 7468 6d2e 6765 7443 6972 636c 6543 
0000210: 6f75 6e74 0013 1d41 6c67 6f72 6974 686d 
0000220: 2e67 6574 4369 7263 6c65 4461 7461 4f66 
0000230: 6673 6574 0014 0e41 6c67 6f72 6974 686d 
0000240: 2e69 6e69 7400 1512 416c 676f 7269 7468 
0000250: 6d2e 7469 6d65 5374 6570 0019 1a4d 6174 
0000260: 682e 6465 7465 6374 4369 7263 6c65 436f 
0000270: 6c6c 6973 696f 6e00 1a1a 4173 7365 6d62 
0000280: 6c79 496e 666f 2e41 7373 656d 626c 7954 
0000290: 6974 6c65 001b 2041 7373 656d 626c 7949 
00002a0: 6e66 6f2e 4173 7365 6d62 6c79 4465 7363 
00002b0: 7269 7074 696f 6e00 1c1c 4173 7365 6d62 
00002c0: 6c79 496e 666f 2e41 7373 656d 626c 7943 
00002d0: 6f6d 7061 6e79 001d 1c41 7373 656d 626c 
00002e0: 7949 6e66 6f2e 4173 7365 6d62 6c79 5072 
00002f0: 6f64 7563 7400 1e1e 4173 7365 6d62 6c79 
0000300: 496e 666f 2e41 7373 656d 626c 7943 6f70 
0000310: 7972 6967 6874 001f 1e41 7373 656d 626c 
0000320: 7949 6e66 6f2e 4173 7365 6d62 6c79 5472 
0000330: 6164 656d 6172 6b00 2011 4173 7365 6d62 
0000340: 6c79 496e 666f 2e47 7569 6400 211c 4173 
0000350: 7365 6d62 6c79 496e 666f 2e41 7373 656d 
0000360: 626c 7956 6572 7369 6f6e 0022 2041 7373 
0000370: 656d 626c 7949 6e66 6f2e 4173 7365 6d62 
0000380: 6c79 4669 6c65 5665 7273 696f 6e00 2308 
0000390: 0124 0a81 161c 3a01 027f 2300 2102 2002 
00003a0: 2000 6a24 0023 0041 086f 2103 2003 0440 
00003b0: 4108 2003 6b21 0323 0020 036a 2400 0523 
00003c0: 0041 086a 2400 0b20 0220 0110 0720 020f 
00003d0: 0b05 0023 000f 0b2d 0105 7f41 0823 0b41 
00003e0: 016b 4104 6c6a 4107 100e 2104 2004 4190 
00003f0: 0236 0200 2004 4104 6a23 0b41 016b 3602 
0000400: 0020 040f 0b24 0101 7f41 0841 9002 100e 
0000410: 2100 2000 4100 6a41 0036 0200 2000 4104 
0000420: 6a41 0036 0200 2000 0f0b 2501 017f 4108 
0000430: 410d 100e 2100 2000 4100 6a10 04b6 3802 
0000440: 0020 0041 046a 1004 b638 0200 2000 0f0b 
0000450: 0500 230d 0f0b 0500 230e 0f0b f103 0302 
0000460: 7f03 7d01 7f41 8807 230e 100d 100a 1008 
0000470: 4100 2102 0240 0340 2002 230d 4101 6b4a 
0000480: 0d01 4100 2103 4300 0000 0021 0443 0000 
0000490: 0000 2105 4300 0000 0021 0602 4003 4041 
00004a0: 0021 0320 00bb 1004 a2b6 2104 2001 bb10 
00004b0: 04a2 b621 0510 0441 08b7 a210 0244 ee5a 
00004c0: 423e e849 3740 a310 05b6 2106 2000 2004 
00004d0: 2006 9293 4100 b25d 2004 2006 9341 00b2 
00004e0: 5d6a 2001 2005 2006 9293 4100 b25d 6a20 
00004f0: 0520 0693 4100 b25d 6a04 4041 0121 0305 
0000500: 4100 2107 0240 0340 2007 2002 4101 6b4a 
0000510: 0d01 2004 2005 2006 230e 4108 6a20 0741 
0000520: 0c6c 6a28 0200 4104 6a2a 0200 230e 4108 
0000530: 6a20 0741 0c6c 6a28 0200 4100 6a2a 0200 
0000540: 230e 4108 6a20 0741 0c6c 6a28 0200 4108 
0000550: 6a2a 0200 101a 0440 4101 2103 4101 0d05 
0000560: 0b20 0741 016a 2107 0c00 0b0b 0b20 0345 
0000570: 0d01 0c00 0b0b 230e 4108 6a20 0241 0c6c 
0000580: 6a41 046a 2004 3802 0023 0e41 086a 2002 
0000590: 410c 6c6a 4100 6a20 0538 0200 230e 4108 
00005a0: 6a20 0241 0c6c 6a41 086a 2006 3802 0041 
00005b0: a007 2002 100d 100a 41b0 0710 0a23 0e41 
00005c0: 086a 2002 410c 6c6a 2802 0010 0d10 0a41 
00005d0: b807 100a 1008 41c0 0723 0f41 086a 2002 
00005e0: 4104 6c6a 2802 0010 0d10 0a10 0823 0f41 
00005f0: 086a 2002 4104 6c6a 2802 0041 006a 1004 
0000600: 4400 0000 0000 00e0 3fa1 449a 9999 9999 
0000610: 99b9 3fa2 b638 0200 230f 4108 6a20 0241 
0000620: 046c 6a28 0200 4104 6a10 0444 0000 0000 
0000630: 0000 e03f a144 9a99 9999 9999 b93f a2b6 
0000640: 3802 0020 0241 016a 2102 0c00 0b0b 0b5e 
0000650: 0103 7f41 0021 0002 4003 4020 0023 0c41 
0000660: 016b 4a0d 0123 1141 086a 2000 4104 6c6a 
0000670: 2802 0021 0141 0021 0202 4003 4020 0223 
0000680: 0b41 016b 4a0d 0120 0141 086a 2002 4104 
0000690: 6c6a 4100 3602 0020 0241 016a 2102 0c00 
00006a0: 0b0b 2000 4101 6a21 000c 000b 0b0b ee04 
00006b0: 0302 7f05 7d08 7f41 0021 0241 0021 0302 
00006c0: 4003 4020 0323 0d41 016b 4a0d 0123 0e41 
00006d0: 086a 2003 410c 6c6a 2802 0041 046a 2a02 
00006e0: 0021 0423 0e41 086a 2003 410c 6c6a 2802 
00006f0: 0041 006a 2a02 0021 0523 0e41 086a 2003 
0000700: 410c 6c6a 2802 0041 086a 2a02 0021 0623 
0000710: 0f41 086a 2003 4104 6c6a 2802 0041 006a 
0000720: 2a02 0021 0723 0f41 086a 2003 4104 6c6a 
0000730: 2802 0041 046a 2a02 0021 0820 08bb 442d 
0000740: 431c ebe2 361a 3fa0 b621 0820 0020 0420 
0000750: 0692 9341 00b2 5d20 0741 00b2 5e6c 2004 
0000760: 2006 9341 00b2 5d20 0741 00b2 5d6c 6a04 
0000770: 4043 0000 0000 2007 9321 070b 2001 2005 
0000780: 2006 9293 4100 b25d 2008 4100 b25e 6c20 
0000790: 0520 0693 4100 b25d 2008 4100 b25d 6c6a 
00007a0: 0440 4300 0000 0020 0893 2108 0b23 0e41 
00007b0: 086a 2003 410c 6c6a 4104 6a20 0420 0792 
00007c0: 3802 0023 0e41 086a 2003 410c 6c6a 4100 
00007d0: 6a20 0520 0892 3802 0023 0f41 086a 2003 
00007e0: 4104 6c6a 2802 0041 006a 2007 3802 0023 
00007f0: 0f41 086a 2003 4104 6c6a 2802 0041 046a 
0000800: 2008 3802 0020 0420 0693 bb20 00bb a323 
0000810: 0cb7 a210 06aa 2109 2004 2006 92bb 2000 
0000820: bba3 230c b7a2 1006 aa21 0a20 0520 0693 
0000830: bb20 01bb a323 0bb7 a210 06aa 210b 2005 
0000840: 2006 92bb 2001 bba3 230b b7a2 1006 aa21 
0000850: 0c20 0941 0048 0440 4100 2109 0b20 0a23 
0000860: 0c4e 0440 230c 4101 6b21 0a0b 200b 4100 
0000870: 4804 4041 0021 0b0b 200c 230b 4e04 4023 
0000880: 0b41 016b 210c 0b20 0921 0d02 4003 4020 
0000890: 0d20 0a4a 0d01 2311 4108 6a20 0d41 046c 
00008a0: 6a28 0200 210e 200b 210f 0240 0340 200f 
00008b0: 200c 4a0d 0123 1041 086a 2002 4104 6c6a 
00008c0: 2802 0021 1020 0241 016a 2102 2010 4104 
00008d0: 6a20 0336 0200 2010 4100 6a20 0e41 086a 
00008e0: 200f 4104 6c6a 2802 0036 0200 200e 4108 
00008f0: 6a20 0f41 046c 6a20 1036 0200 200f 4101 
0000900: 6a21 0f0c 000b 0b20 0d41 016a 210d 0c00 
0000910: 0b0b 2003 4101 6a21 030c 000b 0b0b d705 
0000920: 0705 7f05 7d02 7f07 7d01 7c04 7d04 7c41 
0000930: 0021 0002 4003 4020 0023 0c41 016b 4a0d 
0000940: 0123 1141 086a 2000 4104 6c6a 2802 0021 
0000950: 0141 0021 0202 4003 4020 0223 0b41 016b 
0000960: 4a0d 0120 0141 086a 2002 4104 6c6a 2802 
0000970: 0021 0302 4003 4020 0341 0046 4545 0d01 
0000980: 2003 4104 6a28 0200 2104 230e 4108 6a20 
0000990: 0441 0c6c 6a28 0200 4104 6a2a 0200 2105 
00009a0: 230e 4108 6a20 0441 0c6c 6a28 0200 4100 
00009b0: 6a2a 0200 2106 230e 4108 6a20 0441 0c6c 
00009c0: 6a28 0200 4108 6a2a 0200 2107 230f 4108 
00009d0: 6a20 0441 046c 6a28 0200 4100 6a2a 0200 
00009e0: 2108 230f 4108 6a20 0441 046c 6a28 0200 
00009f0: 4104 6a2a 0200 2109 2003 210a 200a 4100 
0000a00: 6a28 0200 210a 0240 0340 200a 4100 4645 
0000a10: 450d 0120 0a41 046a 2802 0021 0b23 0e41 
0000a20: 086a 200b 410c 6c6a 2802 0041 046a 2a02 
0000a30: 0021 0c23 0e41 086a 200b 410c 6c6a 2802 
0000a40: 0041 006a 2a02 0021 0d23 0e41 086a 200b 
0000a50: 410c 6c6a 2802 0041 086a 2a02 0021 0e20 
0000a60: 0520 0620 0720 0c20 0d20 0e10 1a04 4023 
0000a70: 0f41 086a 200b 4104 6c6a 2802 0041 006a 
0000a80: 2a02 0021 0f23 0f41 086a 200b 4104 6c6a 
0000a90: 2802 0041 046a 2a02 0021 1020 0c20 0593 
0000aa0: 2111 200d 2006 9321 1220 1120 1194 2012 
0000ab0: 2012 9492 bb10 0121 1320 11bb 2013 a3b6 
0000ac0: 2111 2012 bb20 13a3 b621 1220 1120 0894 
0000ad0: 2012 2009 9492 2114 2011 200f 9420 1220 
0000ae0: 1094 9221 1520 1420 1593 4100 b25f 4504 
0000af0: 4020 0720 0e92 2116 2007 200e 9321 1720 
0000b00: 1420 1794 4102 b220 0e94 2015 9492 bb20 
0000b10: 16bb a321 1841 02b2 2007 9420 1494 2015 
0000b20: 2017 9493 bb20 16bb a321 1920 1820 14bb 
0000b30: a121 1a20 1920 15bb a121 1b23 0f41 086a 
0000b40: 2004 4104 6c6a 2802 0041 006a 2008 bb20 
0000b50: 11bb 201a a2a0 b638 0200 230f 4108 6a20 
0000b60: 0441 046c 6a28 0200 4104 6a20 09bb 2012 
0000b70: bb20 1aa2 a0b6 3802 0023 0f41 086a 200b 
0000b80: 4104 6c6a 2802 0041 006a 200f bb20 11bb 
0000b90: 201b a2a0 b638 0200 230f 4108 6a20 0b41 
0000ba0: 046c 6a28 0200 4104 6a20 10bb 2012 bb20 
0000bb0: 1ba2 a0b6 3802 0020 0a41 006a 2802 0021 
0000bc0: 0a0b 0520 0a41 006a 2802 0021 0a0b 0c00 
0000bd0: 0b0b 2003 4100 6a28 0200 2103 0c00 0b0b 
0000be0: 2002 4101 6a21 020c 000b 0b20 0041 016a 
0000bf0: 2100 0c00 0b0b 0b0c 0010 1620 0020 0110 
0000c00: 1710 180b 5c01 057f 2000 2002 9220 0320 
0000c10: 0593 5d20 0020 0293 2003 2005 925e 6a20 
0000c20: 0120 0292 2004 2005 935d 6a20 0120 0293 
0000c30: 2004 2005 925e 6a04 4041 000f 0b20 0320 
0000c40: 0093 bb41 02b2 bb10 0020 0420 0193 bb41 
0000c50: 02b2 bb10 00a0 1001 2002 2005 92bb 650f 
0000c60: 0b06 0041 c808 0f0b 0600 41d8 080f 0b06 
0000c70: 0041 b009 0f0b 0600 41b8 090f 0b06 0041 
0000c80: c809 0f0b 0600 4190 0a0f 0b06 0041 a00a 
0000c90: 0f0b 0600 41c8 0a0f 0b06 0041 d00a 0f0b 
0000ca0: 0c00 1025 1026 1027 1028 1029 0bb1 0101 
0000cb0: 047f 4108 230d 4101 6b41 0c6c 6a41 0710 
0000cc0: 0e21 0020 0041 d804 3602 0020 0041 046a 
0000cd0: 230d 4101 6b36 0200 2000 240e 4108 230d 
0000ce0: 4101 6b41 046c 6a41 0710 0e21 0120 0141 
0000cf0: 0d36 0200 2001 4104 6a23 0d41 016b 3602 
0000d00: 0020 0124 0f41 0823 0d41 046c 4101 6b41 
0000d10: 046c 6a41 0710 0e21 0220 0241 9002 3602 
0000d20: 0020 0241 046a 230d 4104 6c41 016b 3602 
0000d30: 0020 0224 1041 0823 0c41 016b 4104 6c6a 
0000d40: 4107 100e 2103 2003 4190 0236 0200 2003 
0000d50: 4104 6a23 0c41 016b 3602 0020 0324 110b 
0000d60: 0200 0bab 0201 057f 4100 2100 41d0 0710 
0000d70: 0841 0021 0102 4003 4020 0123 1141 046a 
0000d80: 2802 0041 016b 4a0d 0110 1021 0023 1141 
0000d90: 086a 2001 4104 6c6a 2000 3602 0041 e807 
0000da0: 2001 100d 100a 41f0 0710 0a20 0010 0d10 
0000db0: 0a10 0841 0021 0202 4003 4020 0220 0041 
0000dc0: 046a 2802 0041 016b 4a0d 0120 0041 086a 
0000dd0: 2002 4104 6c6a 1011 3602 0020 0241 016a 
0000de0: 2102 0c00 0b0b 2001 4101 6a21 010c 000b 
0000df0: 0b41 0021 0302 4003 4020 0323 0f41 046a 
0000e00: 2802 0041 016b 4a0d 0123 0f41 086a 2003 
0000e10: 4104 6c6a 1012 3602 0020 0341 016a 2103 
0000e20: 0c00 0b0b 41f8 0723 0f10 0d10 0a10 0841 
0000e30: 0021 0402 4003 4020 0423 1041 046a 2802 
0000e40: 0041 016b 4a0d 0123 1041 086a 2004 4104 
0000e50: 6c6a 1011 3602 0041 9008 2004 100d 100a 
0000e60: 41a8 0810 0a23 1041 086a 2004 4104 6c6a 
0000e70: 2802 0010 0d10 0a10 0820 0441 016a 2104 
0000e80: 0c00 0b0b 41b0 0823 1010 0d10 0a10 080b 
0000e90: 0200 0b02 000b 0be4 0a18 0041 8807 0b15 
0000ea0: 6172 7261 7928 6f66 2063 6972 636c 6529 
0000eb0: 203d 2026 0000 41a0 070b 0b63 6972 636c 
0000ec0: 6520 3d20 2300 0041 b007 0b04 2028 2600 
0000ed0: 0041 b807 0b02 2900 0041 c007 0b0c 6369 
0000ee0: 7263 6c65 5620 3d20 2600 0041 d007 0b17 
0000ef0: 496e 6974 6961 6c69 7a65 2061 7070 6c69 
0000f00: 6361 7469 6f6e 0000 41e8 070b 0672 6f77 
0000f10: 2023 0000 41f0 070b 0520 3d20 2600 0041 
0000f20: f807 0b11 6369 7263 6c65 7664 6174 6120 
0000f30: 3d3e 2026 0000 4190 080b 166e 6577 2063 
0000f40: 656c 6c20 6369 7263 6c65 2066 6f72 2023 
0000f50: 0000 41a8 080b 0620 6174 2026 0000 41b0 
0000f60: 080b 1163 656c 6c63 6972 636c 6573 203d 
0000f70: 3e20 2600 0041 c808 0b0b 5765 6247 4c2d 
0000f80: 4465 6d6f 0000 41d8 080b 5157 6562 4173 
0000f90: 7365 6d62 6c79 2063 6f6e 7665 7273 696f 
0000fa0: 6e20 6465 6d6f 6e73 7472 6174 696e 6720 
0000fb0: 7468 6520 6661 7374 6572 2d70 6572 666f 
0000fc0: 726d 696e 6720 6772 6964 206f 6620 6c69 
0000fd0: 6e6b 6564 2d6c 6973 7473 2e00 0041 b009 
0000fe0: 0b04 4d49 5400 0041 b809 0b0b 5765 6247 
0000ff0: 4c2d 4465 6d6f 0000 41c8 090b 4668 7474 
0001000: 7073 3a2f 2f67 6974 6875 622e 636f 6d2f 
0001010: 6775 7962 6564 666f 7264 2f77 6173 6d2d 
0001020: 6465 6d6f 2f62 6c6f 622f 6d61 7374 6572 
0001030: 2f6e 6174 6976 652f 6465 6d6f 2d6f 7074 
0001040: 2e63 0000 4190 0a0b 0e76 616e 696c 6c61 
0001050: 7662 2e61 7070 0000 41a0 0a0b 2538 3363 
0001060: 6132 6239 332d 3465 3537 2d34 6434 342d 
0001070: 6232 6263 2d31 3633 3235 3261 3933 3035 
0001080: 6400 0041 c80a 0b08 312e 302e 302e 3000 
0001090: 0041 d00a 0b08 312e 302e 302e 3000 0041 
00010a0: 0d0b fd01 6579 4a6a 6232 3174 5a57 3530 
00010b0: 496a 7075 6457 7873 4c43 4a6a 6247 467a 
00010c0: 6379 4936 496b 4e70 636d 4e73 5a56 5969 
00010d0: 4c43 4a6a 6247 467a 6331 3970 5a43 4936 
00010e0: 4d54 4d73 496d 5a70 5a57 786b 6379 4936 
00010f0: 6579 4a32 6543 4936 6579 4a6e 5a57 356c 
0001100: 636d 6c6a 496a 7062 5853 7769 636d 4633 
0001110: 496a 6f69 5a6a 4d79 4969 7769 6448 6c77 
0001120: 5a53 4936 4d33 3073 496e 5a35 496a 7037 
0001130: 496d 646c 626d 5679 6157 4d69 4f6c 7464 
0001140: 4c43 4a79 5958 6369 4f69 4a6d 4d7a 4969 
0001150: 4c43 4a30 6558 426c 496a 6f7a 6658 3073 
0001160: 496d 6c7a 5533 5279 6457 4e30 496a 706d 
0001170: 5957 787a 5a53 7769 6257 5630 6147 396b 
0001180: 6379 4936 6533 3073 496d 3568 6257 567a 
0001190: 6347 466a 5a53 4936 626e 5673 6248 303d 
00011a0: 0000 4190 020b a102 6579 4a6a 6232 3174 
00011b0: 5a57 3530 496a 7075 6457 7873 4c43 4a6a 
00011c0: 6247 467a 6379 4936 496b 4e6c 6247 7844 
00011d0: 6158 4a6a 6247 5569 4c43 4a6a 6247 467a 
00011e0: 6331 3970 5a43 4936 4d6a 6379 4c43 4a6d 
00011f0: 6157 5673 5a48 4d69 4f6e 7369 626d 5634 
0001200: 6443 4936 6579 4a6e 5a57 356c 636d 6c6a 
0001210: 496a 7062 5853 7769 636d 4633 496a 6f69 
0001220: 577a 4933 4d6c 3144 5a57 7873 5132 6c79 
0001230: 5932 786c 4969 7769 6448 6c77 5a53 4936 
0001240: 4d54 4239 4c43 4a6a 6158 4a6a 6247 564a 
0001250: 626d 526c 6543 4936 6579 4a6e 5a57 356c 
0001260: 636d 6c6a 496a 7062 5853 7769 636d 4633 
0001270: 496a 6f69 6154 4d79 4969 7769 6448 6c77 
0001280: 5a53 4936 4d58 3139 4c43 4a70 6331 4e30 
0001290: 636e 566a 6443 4936 5a6d 4673 6332 5573 
00012a0: 496d 316c 6447 6876 5a48 4d69 4f6e 7439 
00012b0: 4c43 4a75 5957 316c 6333 4268 5932 5569 
00012c0: 4f6d 3531 6247 7839 0000 41d8 040b ad02 
00012d0: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
00012e0: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
00012f0: 496b 4e70 636d 4e73 5a53 4973 496d 4e73 
0001300: 5958 4e7a 5832 6c6b 496a 6f32 4d44 4173 
0001310: 496d 5a70 5a57 786b 6379 4936 6579 4a35 
0001320: 496a 7037 496d 646c 626d 5679 6157 4d69 
0001330: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a6d 
0001340: 4d7a 4969 4c43 4a30 6558 426c 496a 6f7a 
0001350: 6653 7769 6543 4936 6579 4a6e 5a57 356c 
0001360: 636d 6c6a 496a 7062 5853 7769 636d 4633 
0001370: 496a 6f69 5a6a 4d79 4969 7769 6448 6c77 
0001380: 5a53 4936 4d33 3073 496e 4969 4f6e 7369 
0001390: 5a32 5675 5a58 4a70 5979 4936 5731 3073 
00013a0: 496e 4a68 6479 4936 496d 597a 4d69 4973 
00013b0: 496e 5235 6347 5569 4f6a 4e39 6653 7769 
00013c0: 6158 4e54 6448 4a31 5933 5169 4f6e 5279 
00013d0: 6457 5573 496d 316c 6447 6876 5a48 4d69 
00013e0: 4f6e 7439 4c43 4a75 5957 316c 6333 4268 
00013f0: 5932 5569 4f6d 3531 6247 7839 00        
