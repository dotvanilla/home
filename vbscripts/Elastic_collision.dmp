0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 09                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7c                                        ; f64
000000e: 7c                                        ; f64
000000f: 01                                        ; num results
0000010: 7c                                        ; f64
; type 1
0000011: 60                                        ; func
0000012: 01                                        ; num params
0000013: 7c                                        ; f64
0000014: 01                                        ; num results
0000015: 7c                                        ; f64
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 00                                        ; num results
; type 4
000001f: 60                                        ; func
0000020: 02                                        ; num params
0000021: 7f                                        ; i32
0000022: 7f                                        ; i32
0000023: 01                                        ; num results
0000024: 7f                                        ; i32
; type 5
0000025: 60                                        ; func
0000026: 00                                        ; num params
0000027: 01                                        ; num results
0000028: 7f                                        ; i32
; type 6
0000029: 60                                        ; func
000002a: 02                                        ; num params
000002b: 7d                                        ; f32
000002c: 7d                                        ; f32
000002d: 00                                        ; num results
; type 7
000002e: 60                                        ; func
000002f: 00                                        ; num params
0000030: 00                                        ; num results
; type 8
0000031: 60                                        ; func
0000032: 06                                        ; num params
0000033: 7d                                        ; f32
0000034: 7d                                        ; f32
0000035: 7d                                        ; f32
0000036: 7d                                        ; f32
0000037: 7d                                        ; f32
0000038: 7d                                        ; f32
0000039: 01                                        ; num results
000003a: 7f                                        ; i32
0000009: 31                                        ; FIXUP section size
; section "Import" (2)
000003b: 02                                        ; section code
000003c: 00                                        ; section size (guess)
000003d: 09                                        ; num imports
; import header 0
000003e: 04                                        ; string length
000003f: 4d61 7468                                Math  ; import module name
0000043: 03                                        ; string length
0000044: 706f 77                                  pow  ; import field name
0000047: 00                                        ; import kind
0000048: 00                                        ; import signature index
; import header 1
0000049: 04                                        ; string length
000004a: 4d61 7468                                Math  ; import module name
000004e: 04                                        ; string length
000004f: 7371 7274                                sqrt  ; import field name
0000053: 00                                        ; import kind
0000054: 01                                        ; import signature index
; import header 2
0000055: 04                                        ; string length
0000056: 4d61 7468                                Math  ; import module name
000005a: 03                                        ; string length
000005b: 6578 70                                  exp  ; import field name
000005e: 00                                        ; import kind
000005f: 01                                        ; import signature index
; import header 3
0000060: 04                                        ; string length
0000061: 4d61 7468                                Math  ; import module name
0000065: 03                                        ; string length
0000066: 636f 73                                  cos  ; import field name
0000069: 00                                        ; import kind
000006a: 01                                        ; import signature index
; import header 4
000006b: 04                                        ; string length
000006c: 4d61 7468                                Math  ; import module name
0000070: 06                                        ; string length
0000071: 7261 6e64 6f6d                           random  ; import field name
0000077: 00                                        ; import kind
0000078: 02                                        ; import signature index
; import header 5
0000079: 04                                        ; string length
000007a: 4d61 7468                                Math  ; import module name
000007e: 04                                        ; string length
000007f: 6365 696c                                ceil  ; import field name
0000083: 00                                        ; import kind
0000084: 01                                        ; import signature index
; import header 6
0000085: 04                                        ; string length
0000086: 4d61 7468                                Math  ; import module name
000008a: 05                                        ; string length
000008b: 666c 6f6f 72                             floor  ; import field name
0000090: 00                                        ; import kind
0000091: 01                                        ; import signature index
; import header 7
0000092: 02                                        ; string length
0000093: 4743                                     GC  ; import module name
0000095: 09                                        ; string length
0000096: 6164 644f 626a 6563 74                   addObject  ; import field name
000009f: 00                                        ; import kind
00000a0: 03                                        ; import signature index
; import header 8
00000a1: 03                                        ; string length
00000a2: 656e 76                                  env  ; import module name
00000a5: 0a                                        ; string length
00000a6: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000b0: 02                                        ; import kind
00000b1: 00                                        ; limits: flags
00000b2: 01                                        ; limits: initial
000003c: 76                                        ; FIXUP section size
; section "Function" (3)
00000b3: 03                                        ; section code
00000b4: 00                                        ; section size (guess)
00000b5: 18                                        ; num functions
00000b6: 04                                        ; function 0 signature index
00000b7: 05                                        ; function 1 signature index
00000b8: 05                                        ; function 2 signature index
00000b9: 05                                        ; function 3 signature index
00000ba: 06                                        ; function 4 signature index
00000bb: 07                                        ; function 5 signature index
00000bc: 06                                        ; function 6 signature index
00000bd: 07                                        ; function 7 signature index
00000be: 06                                        ; function 8 signature index
00000bf: 08                                        ; function 9 signature index
00000c0: 05                                        ; function 10 signature index
00000c1: 05                                        ; function 11 signature index
00000c2: 05                                        ; function 12 signature index
00000c3: 05                                        ; function 13 signature index
00000c4: 05                                        ; function 14 signature index
00000c5: 05                                        ; function 15 signature index
00000c6: 05                                        ; function 16 signature index
00000c7: 05                                        ; function 17 signature index
00000c8: 05                                        ; function 18 signature index
00000c9: 07                                        ; function 19 signature index
00000ca: 07                                        ; function 20 signature index
00000cb: 07                                        ; function 21 signature index
00000cc: 07                                        ; function 22 signature index
00000cd: 07                                        ; function 23 signature index
00000b4: 19                                        ; FIXUP section size
; section "Global" (6)
00000ce: 06                                        ; section code
00000cf: 00                                        ; section size (guess)
00000d0: 12                                        ; num globals
00000d1: 7f                                        ; i32
00000d2: 01                                        ; global mutability
00000d3: 41                                        ; i32.const
00000d4: 9809                                      ; i32 literal
00000d6: 0b                                        ; end
00000d7: 7c                                        ; f64
00000d8: 01                                        ; global mutability
00000d9: 44                                        ; f64.const
00000da: 6957 148b 0abf 0540                       ; f64 literal
00000e2: 0b                                        ; end
00000e3: 7c                                        ; f64
00000e4: 01                                        ; global mutability
00000e5: 44                                        ; f64.const
00000e6: 182d 4454 fb21 0940                       ; f64 literal
00000ee: 0b                                        ; end
00000ef: 7f                                        ; i32
00000f0: 01                                        ; global mutability
00000f1: 41                                        ; i32.const
00000f2: ffff ffff 07                              ; i32 literal
00000f7: 0b                                        ; end
00000f8: 7e                                        ; i64
00000f9: 01                                        ; global mutability
00000fa: 42                                        ; i64.const
00000fb: ffff ffff ffff ffff ff00                  ; i64 literal
0000105: 0b                                        ; end
0000106: 7d                                        ; f32
0000107: 01                                        ; global mutability
0000108: 43                                        ; f32.const
0000109: ffff 7f7f                                 ; f32 literal
000010d: 0b                                        ; end
000010e: 7c                                        ; f64
000010f: 01                                        ; global mutability
0000110: 44                                        ; f64.const
0000111: ffff ffff ffff ef7f                       ; f64 literal
0000119: 0b                                        ; end
000011a: 7f                                        ; i32
000011b: 01                                        ; global mutability
000011c: 41                                        ; i32.const
000011d: 8080 8080 78                              ; i32 literal
0000122: 0b                                        ; end
0000123: 7e                                        ; i64
0000124: 01                                        ; global mutability
0000125: 42                                        ; i64.const
0000126: 8080 8080 8080 8080 807f                  ; i64 literal
0000130: 0b                                        ; end
0000131: 7d                                        ; f32
0000132: 01                                        ; global mutability
0000133: 43                                        ; f32.const
0000134: ffff 7fff                                 ; f32 literal
0000138: 0b                                        ; end
0000139: 7c                                        ; f64
000013a: 01                                        ; global mutability
000013b: 44                                        ; f64.const
000013c: ffff ffff ffff efff                       ; f64 literal
0000144: 0b                                        ; end
0000145: 7f                                        ; i32
0000146: 01                                        ; global mutability
0000147: 41                                        ; i32.const
0000148: f800                                      ; i32 literal
000014a: 0b                                        ; end
000014b: 7f                                        ; i32
000014c: 01                                        ; global mutability
000014d: 41                                        ; i32.const
000014e: c600                                      ; i32 literal
0000150: 0b                                        ; end
0000151: 7f                                        ; i32
0000152: 01                                        ; global mutability
0000153: 41                                        ; i32.const
0000154: 90ce 00                                   ; i32 literal
0000157: 0b                                        ; end
0000158: 7f                                        ; i32
0000159: 01                                        ; global mutability
000015a: 41                                        ; i32.const
000015b: 00                                        ; i32 literal
000015c: 0b                                        ; end
000015d: 7f                                        ; i32
000015e: 01                                        ; global mutability
000015f: 41                                        ; i32.const
0000160: 00                                        ; i32 literal
0000161: 0b                                        ; end
0000162: 7f                                        ; i32
0000163: 01                                        ; global mutability
0000164: 41                                        ; i32.const
0000165: 00                                        ; i32 literal
0000166: 0b                                        ; end
0000167: 7f                                        ; i32
0000168: 01                                        ; global mutability
0000169: 41                                        ; i32.const
000016a: 00                                        ; i32 literal
000016b: 0b                                        ; end
; move data: [d0, 16c) -> [d1, 16d)
00000cf: 9c01                                      ; FIXUP section size
; section "Export" (7)
000016d: 07                                        ; section code
000016e: 00                                        ; section size (guess)
000016f: 0f                                        ; num exports
0000170: 14                                        ; string length
0000171: 676c 6f62 616c 2e47 6574 4d65 6d6f 7279  global.GetMemory
0000181: 5369 7a65                                Size  ; export name
0000185: 00                                        ; export kind
0000186: 09                                        ; export func index
0000187: 18                                        ; string length
0000188: 416c 676f 7269 7468 6d2e 6765 7443 6972  Algorithm.getCir
0000198: 636c 6543 6f75 6e74                      cleCount  ; export name
00001a0: 00                                        ; export kind
00001a1: 0a                                        ; export func index
00001a2: 1d                                        ; string length
00001a3: 416c 676f 7269 7468 6d2e 6765 7443 6972  Algorithm.getCir
00001b3: 636c 6544 6174 614f 6666 7365 74         cleDataOffset  ; export name
00001c0: 00                                        ; export kind
00001c1: 0b                                        ; export func index
00001c2: 0e                                        ; string length
00001c3: 416c 676f 7269 7468 6d2e 696e 6974       Algorithm.init  ; export name
00001d1: 00                                        ; export kind
00001d2: 0c                                        ; export func index
00001d3: 12                                        ; string length
00001d4: 416c 676f 7269 7468 6d2e 7469 6d65 5374  Algorithm.timeSt
00001e4: 6570                                     ep  ; export name
00001e6: 00                                        ; export kind
00001e7: 10                                        ; export func index
00001e8: 1a                                        ; string length
00001e9: 4d61 7468 2e64 6574 6563 7443 6972 636c  Math.detectCircl
00001f9: 6543 6f6c 6c69 7369 6f6e                 eCollision  ; export name
0000203: 00                                        ; export kind
0000204: 11                                        ; export func index
0000205: 1a                                        ; string length
0000206: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000216: 656d 626c 7954 6974 6c65                 emblyTitle  ; export name
0000220: 00                                        ; export kind
0000221: 12                                        ; export func index
0000222: 20                                        ; string length
0000223: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000233: 656d 626c 7944 6573 6372 6970 7469 6f6e  emblyDescription  ; export name
0000243: 00                                        ; export kind
0000244: 13                                        ; export func index
0000245: 1c                                        ; string length
0000246: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000256: 656d 626c 7943 6f6d 7061 6e79            emblyCompany  ; export name
0000262: 00                                        ; export kind
0000263: 14                                        ; export func index
0000264: 1c                                        ; string length
0000265: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000275: 656d 626c 7950 726f 6475 6374            emblyProduct  ; export name
0000281: 00                                        ; export kind
0000282: 15                                        ; export func index
0000283: 1e                                        ; string length
0000284: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000294: 656d 626c 7943 6f70 7972 6967 6874       emblyCopyright  ; export name
00002a2: 00                                        ; export kind
00002a3: 16                                        ; export func index
00002a4: 1e                                        ; string length
00002a5: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002b5: 656d 626c 7954 7261 6465 6d61 726b       emblyTrademark  ; export name
00002c3: 00                                        ; export kind
00002c4: 17                                        ; export func index
00002c5: 11                                        ; string length
00002c6: 4173 7365 6d62 6c79 496e 666f 2e47 7569  AssemblyInfo.Gui
00002d6: 64                                       d  ; export name
00002d7: 00                                        ; export kind
00002d8: 18                                        ; export func index
00002d9: 1c                                        ; string length
00002da: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002ea: 656d 626c 7956 6572 7369 6f6e            emblyVersion  ; export name
00002f6: 00                                        ; export kind
00002f7: 19                                        ; export func index
00002f8: 20                                        ; string length
00002f9: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000309: 656d 626c 7946 696c 6556 6572 7369 6f6e  emblyFileVersion  ; export name
0000319: 00                                        ; export kind
000031a: 1a                                        ; export func index
; move data: [16f, 31b) -> [170, 31c)
000016e: ac03                                      ; FIXUP section size
; section "Start" (8)
000031c: 08                                        ; section code
000031d: 00                                        ; section size (guess)
000031e: 1b                                        ; start func index
000031d: 01                                        ; FIXUP section size
; section "Code" (10)
000031f: 0a                                        ; section code
0000320: 00                                        ; section size (guess)
0000321: 18                                        ; num functions
; function body 0
0000322: 00                                        ; func body size (guess)
0000323: 01                                        ; local decl count
0000324: 02                                        ; local type count
0000325: 7f                                        ; i32
0000326: 23                                        ; global.get
0000327: 00                                        ; global index
0000328: 21                                        ; local.set
0000329: 02                                        ; local index
000032a: 20                                        ; local.get
000032b: 02                                        ; local index
000032c: 20                                        ; local.get
000032d: 00                                        ; local index
000032e: 6a                                        ; i32.add
000032f: 24                                        ; global.set
0000330: 00                                        ; global index
0000331: 23                                        ; global.get
0000332: 00                                        ; global index
0000333: 41                                        ; i32.const
0000334: 08                                        ; i32 literal
0000335: 6f                                        ; i32.rem_s
0000336: 21                                        ; local.set
0000337: 03                                        ; local index
0000338: 20                                        ; local.get
0000339: 03                                        ; local index
000033a: 04                                        ; if
000033b: 40                                        ; void
000033c: 41                                        ; i32.const
000033d: 08                                        ; i32 literal
000033e: 20                                        ; local.get
000033f: 03                                        ; local index
0000340: 6b                                        ; i32.sub
0000341: 21                                        ; local.set
0000342: 03                                        ; local index
0000343: 23                                        ; global.get
0000344: 00                                        ; global index
0000345: 20                                        ; local.get
0000346: 03                                        ; local index
0000347: 6a                                        ; i32.add
0000348: 24                                        ; global.set
0000349: 00                                        ; global index
000034a: 05                                        ; else
000034b: 23                                        ; global.get
000034c: 00                                        ; global index
000034d: 41                                        ; i32.const
000034e: 08                                        ; i32 literal
000034f: 6a                                        ; i32.add
0000350: 24                                        ; global.set
0000351: 00                                        ; global index
0000352: 0b                                        ; end
0000353: 20                                        ; local.get
0000354: 02                                        ; local index
0000355: 20                                        ; local.get
0000356: 01                                        ; local index
0000357: 10                                        ; call
0000358: 07                                        ; function index
0000359: 20                                        ; local.get
000035a: 02                                        ; local index
000035b: 0f                                        ; return
000035c: 0b                                        ; end
0000322: 3a                                        ; FIXUP func body size
; function body 1
000035d: 00                                        ; func body size (guess)
000035e: 00                                        ; local decl count
000035f: 23                                        ; global.get
0000360: 00                                        ; global index
0000361: 0f                                        ; return
0000362: 0b                                        ; end
000035d: 05                                        ; FIXUP func body size
; function body 2
0000363: 00                                        ; func body size (guess)
0000364: 01                                        ; local decl count
0000365: 04                                        ; local type count
0000366: 7f                                        ; i32
0000367: 23                                        ; global.get
0000368: 0d                                        ; global index
0000369: 0f                                        ; return
000036a: 0b                                        ; end
0000363: 07                                        ; FIXUP func body size
; function body 3
000036b: 00                                        ; func body size (guess)
000036c: 00                                        ; local decl count
000036d: 23                                        ; global.get
000036e: 0e                                        ; global index
000036f: 0f                                        ; return
0000370: 0b                                        ; end
000036b: 05                                        ; FIXUP func body size
; function body 4
0000371: 00                                        ; func body size (guess)
0000372: 03                                        ; local decl count
0000373: 02                                        ; local type count
0000374: 7f                                        ; i32
0000375: 03                                        ; local type count
0000376: 7d                                        ; f32
0000377: 01                                        ; local type count
0000378: 7f                                        ; i32
0000379: 41                                        ; i32.const
000037a: 00                                        ; i32 literal
000037b: 21                                        ; local.set
000037c: 02                                        ; local index
000037d: 02                                        ; block
000037e: 40                                        ; void
000037f: 03                                        ; loop
0000380: 40                                        ; void
0000381: 20                                        ; local.get
0000382: 02                                        ; local index
0000383: 23                                        ; global.get
0000384: 0d                                        ; global index
0000385: 41                                        ; i32.const
0000386: 01                                        ; i32 literal
0000387: 6b                                        ; i32.sub
0000388: 4a                                        ; i32.gt_s
0000389: 0d                                        ; br_if
000038a: 01                                        ; break depth
000038b: 41                                        ; i32.const
000038c: 00                                        ; i32 literal
000038d: 21                                        ; local.set
000038e: 03                                        ; local index
000038f: 43                                        ; f32.const
0000390: 0000 0000                                 ; f32 literal
0000394: 21                                        ; local.set
0000395: 04                                        ; local index
0000396: 43                                        ; f32.const
0000397: 0000 0000                                 ; f32 literal
000039b: 21                                        ; local.set
000039c: 05                                        ; local index
000039d: 43                                        ; f32.const
000039e: 0000 0000                                 ; f32 literal
00003a2: 21                                        ; local.set
00003a3: 06                                        ; local index
00003a4: 02                                        ; block
00003a5: 40                                        ; void
00003a6: 03                                        ; loop
00003a7: 40                                        ; void
00003a8: 41                                        ; i32.const
00003a9: 00                                        ; i32 literal
00003aa: 21                                        ; local.set
00003ab: 03                                        ; local index
00003ac: 20                                        ; local.get
00003ad: 00                                        ; local index
00003ae: bb                                        ; f64.promote_f32
00003af: 10                                        ; call
00003b0: 04                                        ; function index
00003b1: a2                                        ; f64.mul
00003b2: b6                                        ; f32.demote_f64
00003b3: 21                                        ; local.set
00003b4: 04                                        ; local index
00003b5: 20                                        ; local.get
00003b6: 01                                        ; local index
00003b7: bb                                        ; f64.promote_f32
00003b8: 10                                        ; call
00003b9: 04                                        ; function index
00003ba: a2                                        ; f64.mul
00003bb: b6                                        ; f32.demote_f64
00003bc: 21                                        ; local.set
00003bd: 05                                        ; local index
00003be: 10                                        ; call
00003bf: 04                                        ; function index
00003c0: 41                                        ; i32.const
00003c1: 08                                        ; i32 literal
00003c2: b7                                        ; f64.convert_i32_s
00003c3: a2                                        ; f64.mul
00003c4: 10                                        ; call
00003c5: 02                                        ; function index
00003c6: 44                                        ; f64.const
00003c7: ee5a 423e e849 3740                       ; f64 literal
00003cf: a3                                        ; f64.div
00003d0: 10                                        ; call
00003d1: 05                                        ; function index
00003d2: b6                                        ; f32.demote_f64
00003d3: 21                                        ; local.set
00003d4: 06                                        ; local index
00003d5: 20                                        ; local.get
00003d6: 00                                        ; local index
00003d7: 20                                        ; local.get
00003d8: 04                                        ; local index
00003d9: 20                                        ; local.get
00003da: 06                                        ; local index
00003db: 92                                        ; f32.add
00003dc: 93                                        ; f32.sub
00003dd: 41                                        ; i32.const
00003de: 00                                        ; i32 literal
00003df: b2                                        ; f32.convert_i32_s
00003e0: 5d                                        ; f32.lt
00003e1: 20                                        ; local.get
00003e2: 04                                        ; local index
00003e3: 20                                        ; local.get
00003e4: 06                                        ; local index
00003e5: 93                                        ; f32.sub
00003e6: 41                                        ; i32.const
00003e7: 00                                        ; i32 literal
00003e8: b2                                        ; f32.convert_i32_s
00003e9: 5d                                        ; f32.lt
00003ea: 6a                                        ; i32.add
00003eb: 20                                        ; local.get
00003ec: 01                                        ; local index
00003ed: 20                                        ; local.get
00003ee: 05                                        ; local index
00003ef: 20                                        ; local.get
00003f0: 06                                        ; local index
00003f1: 92                                        ; f32.add
00003f2: 93                                        ; f32.sub
00003f3: 41                                        ; i32.const
00003f4: 00                                        ; i32 literal
00003f5: b2                                        ; f32.convert_i32_s
00003f6: 5d                                        ; f32.lt
00003f7: 6a                                        ; i32.add
00003f8: 20                                        ; local.get
00003f9: 05                                        ; local index
00003fa: 20                                        ; local.get
00003fb: 06                                        ; local index
00003fc: 93                                        ; f32.sub
00003fd: 41                                        ; i32.const
00003fe: 00                                        ; i32 literal
00003ff: b2                                        ; f32.convert_i32_s
0000400: 5d                                        ; f32.lt
0000401: 6a                                        ; i32.add
0000402: 04                                        ; if
0000403: 40                                        ; void
0000404: 41                                        ; i32.const
0000405: 01                                        ; i32 literal
0000406: 21                                        ; local.set
0000407: 03                                        ; local index
0000408: 05                                        ; else
0000409: 41                                        ; i32.const
000040a: 00                                        ; i32 literal
000040b: 21                                        ; local.set
000040c: 07                                        ; local index
000040d: 02                                        ; block
000040e: 40                                        ; void
000040f: 03                                        ; loop
0000410: 40                                        ; void
0000411: 20                                        ; local.get
0000412: 07                                        ; local index
0000413: 20                                        ; local.get
0000414: 02                                        ; local index
0000415: 41                                        ; i32.const
0000416: 01                                        ; i32 literal
0000417: 6b                                        ; i32.sub
0000418: 4a                                        ; i32.gt_s
0000419: 0d                                        ; br_if
000041a: 01                                        ; break depth
000041b: 20                                        ; local.get
000041c: 04                                        ; local index
000041d: 20                                        ; local.get
000041e: 05                                        ; local index
000041f: 20                                        ; local.get
0000420: 06                                        ; local index
0000421: 23                                        ; global.get
0000422: 0e                                        ; global index
0000423: 41                                        ; i32.const
0000424: 08                                        ; i32 literal
0000425: 6a                                        ; i32.add
0000426: 20                                        ; local.get
0000427: 07                                        ; local index
0000428: 41                                        ; i32.const
0000429: 0c                                        ; i32 literal
000042a: 6c                                        ; i32.mul
000042b: 6a                                        ; i32.add
000042c: 28                                        ; i32.load
000042d: 02                                        ; alignment
000042e: 00                                        ; load offset
000042f: 41                                        ; i32.const
0000430: 04                                        ; i32 literal
0000431: 6a                                        ; i32.add
0000432: 2a                                        ; f32.load
0000433: 02                                        ; alignment
0000434: 00                                        ; load offset
0000435: 23                                        ; global.get
0000436: 0e                                        ; global index
0000437: 41                                        ; i32.const
0000438: 08                                        ; i32 literal
0000439: 6a                                        ; i32.add
000043a: 20                                        ; local.get
000043b: 07                                        ; local index
000043c: 41                                        ; i32.const
000043d: 0c                                        ; i32 literal
000043e: 6c                                        ; i32.mul
000043f: 6a                                        ; i32.add
0000440: 28                                        ; i32.load
0000441: 02                                        ; alignment
0000442: 00                                        ; load offset
0000443: 41                                        ; i32.const
0000444: 00                                        ; i32 literal
0000445: 6a                                        ; i32.add
0000446: 2a                                        ; f32.load
0000447: 02                                        ; alignment
0000448: 00                                        ; load offset
0000449: 23                                        ; global.get
000044a: 0e                                        ; global index
000044b: 41                                        ; i32.const
000044c: 08                                        ; i32 literal
000044d: 6a                                        ; i32.add
000044e: 20                                        ; local.get
000044f: 07                                        ; local index
0000450: 41                                        ; i32.const
0000451: 0c                                        ; i32 literal
0000452: 6c                                        ; i32.mul
0000453: 6a                                        ; i32.add
0000454: 28                                        ; i32.load
0000455: 02                                        ; alignment
0000456: 00                                        ; load offset
0000457: 41                                        ; i32.const
0000458: 08                                        ; i32 literal
0000459: 6a                                        ; i32.add
000045a: 2a                                        ; f32.load
000045b: 02                                        ; alignment
000045c: 00                                        ; load offset
000045d: 10                                        ; call
000045e: 11                                        ; function index
000045f: 04                                        ; if
0000460: 40                                        ; void
0000461: 41                                        ; i32.const
0000462: 01                                        ; i32 literal
0000463: 21                                        ; local.set
0000464: 03                                        ; local index
0000465: 41                                        ; i32.const
0000466: 01                                        ; i32 literal
0000467: 0d                                        ; br_if
0000468: 05                                        ; break depth
0000469: 0b                                        ; end
000046a: 20                                        ; local.get
000046b: 07                                        ; local index
000046c: 41                                        ; i32.const
000046d: 01                                        ; i32 literal
000046e: 6a                                        ; i32.add
000046f: 21                                        ; local.set
0000470: 07                                        ; local index
0000471: 0c                                        ; br
0000472: 00                                        ; break depth
0000473: 0b                                        ; end
0000474: 0b                                        ; end
0000475: 0b                                        ; end
0000476: 20                                        ; local.get
0000477: 03                                        ; local index
0000478: 45                                        ; i32.eqz
0000479: 0d                                        ; br_if
000047a: 01                                        ; break depth
000047b: 0c                                        ; br
000047c: 00                                        ; break depth
000047d: 0b                                        ; end
000047e: 0b                                        ; end
000047f: 23                                        ; global.get
0000480: 0e                                        ; global index
0000481: 41                                        ; i32.const
0000482: 08                                        ; i32 literal
0000483: 6a                                        ; i32.add
0000484: 20                                        ; local.get
0000485: 02                                        ; local index
0000486: 41                                        ; i32.const
0000487: 0c                                        ; i32 literal
0000488: 6c                                        ; i32.mul
0000489: 6a                                        ; i32.add
000048a: 41                                        ; i32.const
000048b: 04                                        ; i32 literal
000048c: 6a                                        ; i32.add
000048d: 20                                        ; local.get
000048e: 04                                        ; local index
000048f: 38                                        ; f32.store
0000490: 02                                        ; alignment
0000491: 00                                        ; store offset
0000492: 23                                        ; global.get
0000493: 0e                                        ; global index
0000494: 41                                        ; i32.const
0000495: 08                                        ; i32 literal
0000496: 6a                                        ; i32.add
0000497: 20                                        ; local.get
0000498: 02                                        ; local index
0000499: 41                                        ; i32.const
000049a: 0c                                        ; i32 literal
000049b: 6c                                        ; i32.mul
000049c: 6a                                        ; i32.add
000049d: 41                                        ; i32.const
000049e: 00                                        ; i32 literal
000049f: 6a                                        ; i32.add
00004a0: 20                                        ; local.get
00004a1: 05                                        ; local index
00004a2: 38                                        ; f32.store
00004a3: 02                                        ; alignment
00004a4: 00                                        ; store offset
00004a5: 23                                        ; global.get
00004a6: 0e                                        ; global index
00004a7: 41                                        ; i32.const
00004a8: 08                                        ; i32 literal
00004a9: 6a                                        ; i32.add
00004aa: 20                                        ; local.get
00004ab: 02                                        ; local index
00004ac: 41                                        ; i32.const
00004ad: 0c                                        ; i32 literal
00004ae: 6c                                        ; i32.mul
00004af: 6a                                        ; i32.add
00004b0: 41                                        ; i32.const
00004b1: 08                                        ; i32 literal
00004b2: 6a                                        ; i32.add
00004b3: 20                                        ; local.get
00004b4: 06                                        ; local index
00004b5: 38                                        ; f32.store
00004b6: 02                                        ; alignment
00004b7: 00                                        ; store offset
00004b8: 23                                        ; global.get
00004b9: 0f                                        ; global index
00004ba: 41                                        ; i32.const
00004bb: 08                                        ; i32 literal
00004bc: 6a                                        ; i32.add
00004bd: 20                                        ; local.get
00004be: 02                                        ; local index
00004bf: 41                                        ; i32.const
00004c0: 04                                        ; i32 literal
00004c1: 6c                                        ; i32.mul
00004c2: 6a                                        ; i32.add
00004c3: 28                                        ; i32.load
00004c4: 02                                        ; alignment
00004c5: 00                                        ; load offset
00004c6: 41                                        ; i32.const
00004c7: 00                                        ; i32 literal
00004c8: 6a                                        ; i32.add
00004c9: 10                                        ; call
00004ca: 04                                        ; function index
00004cb: 44                                        ; f64.const
00004cc: 0000 0000 0000 e03f                       ; f64 literal
00004d4: a1                                        ; f64.sub
00004d5: 44                                        ; f64.const
00004d6: 9a99 9999 9999 b93f                       ; f64 literal
00004de: a2                                        ; f64.mul
00004df: b6                                        ; f32.demote_f64
00004e0: 38                                        ; f32.store
00004e1: 02                                        ; alignment
00004e2: 00                                        ; store offset
00004e3: 23                                        ; global.get
00004e4: 0f                                        ; global index
00004e5: 41                                        ; i32.const
00004e6: 08                                        ; i32 literal
00004e7: 6a                                        ; i32.add
00004e8: 20                                        ; local.get
00004e9: 02                                        ; local index
00004ea: 41                                        ; i32.const
00004eb: 04                                        ; i32 literal
00004ec: 6c                                        ; i32.mul
00004ed: 6a                                        ; i32.add
00004ee: 28                                        ; i32.load
00004ef: 02                                        ; alignment
00004f0: 00                                        ; load offset
00004f1: 41                                        ; i32.const
00004f2: 04                                        ; i32 literal
00004f3: 6a                                        ; i32.add
00004f4: 10                                        ; call
00004f5: 04                                        ; function index
00004f6: 44                                        ; f64.const
00004f7: 0000 0000 0000 e03f                       ; f64 literal
00004ff: a1                                        ; f64.sub
0000500: 44                                        ; f64.const
0000501: 9a99 9999 9999 b93f                       ; f64 literal
0000509: a2                                        ; f64.mul
000050a: b6                                        ; f32.demote_f64
000050b: 38                                        ; f32.store
000050c: 02                                        ; alignment
000050d: 00                                        ; store offset
000050e: 20                                        ; local.get
000050f: 02                                        ; local index
0000510: 41                                        ; i32.const
0000511: 01                                        ; i32 literal
0000512: 6a                                        ; i32.add
0000513: 21                                        ; local.set
0000514: 02                                        ; local index
0000515: 0c                                        ; br
0000516: 00                                        ; break depth
0000517: 0b                                        ; end
0000518: 0b                                        ; end
0000519: 0b                                        ; end
; move data: [372, 51a) -> [373, 51b)
0000371: a803                                      ; FIXUP func body size
; function body 5
000051b: 00                                        ; func body size (guess)
000051c: 01                                        ; local decl count
000051d: 03                                        ; local type count
000051e: 7f                                        ; i32
000051f: 41                                        ; i32.const
0000520: 00                                        ; i32 literal
0000521: 21                                        ; local.set
0000522: 00                                        ; local index
0000523: 02                                        ; block
0000524: 40                                        ; void
0000525: 03                                        ; loop
0000526: 40                                        ; void
0000527: 20                                        ; local.get
0000528: 00                                        ; local index
0000529: 23                                        ; global.get
000052a: 0c                                        ; global index
000052b: 41                                        ; i32.const
000052c: 01                                        ; i32 literal
000052d: 6b                                        ; i32.sub
000052e: 4a                                        ; i32.gt_s
000052f: 0d                                        ; br_if
0000530: 01                                        ; break depth
0000531: 23                                        ; global.get
0000532: 11                                        ; global index
0000533: 41                                        ; i32.const
0000534: 08                                        ; i32 literal
0000535: 6a                                        ; i32.add
0000536: 20                                        ; local.get
0000537: 00                                        ; local index
0000538: 41                                        ; i32.const
0000539: 04                                        ; i32 literal
000053a: 6c                                        ; i32.mul
000053b: 6a                                        ; i32.add
000053c: 28                                        ; i32.load
000053d: 02                                        ; alignment
000053e: 00                                        ; load offset
000053f: 21                                        ; local.set
0000540: 01                                        ; local index
0000541: 41                                        ; i32.const
0000542: 00                                        ; i32 literal
0000543: 21                                        ; local.set
0000544: 02                                        ; local index
0000545: 02                                        ; block
0000546: 40                                        ; void
0000547: 03                                        ; loop
0000548: 40                                        ; void
0000549: 20                                        ; local.get
000054a: 02                                        ; local index
000054b: 23                                        ; global.get
000054c: 0b                                        ; global index
000054d: 41                                        ; i32.const
000054e: 01                                        ; i32 literal
000054f: 6b                                        ; i32.sub
0000550: 4a                                        ; i32.gt_s
0000551: 0d                                        ; br_if
0000552: 01                                        ; break depth
0000553: 20                                        ; local.get
0000554: 01                                        ; local index
0000555: 41                                        ; i32.const
0000556: 08                                        ; i32 literal
0000557: 6a                                        ; i32.add
0000558: 20                                        ; local.get
0000559: 02                                        ; local index
000055a: 41                                        ; i32.const
000055b: 04                                        ; i32 literal
000055c: 6c                                        ; i32.mul
000055d: 6a                                        ; i32.add
000055e: 41                                        ; i32.const
000055f: 00                                        ; i32 literal
0000560: 36                                        ; i32.store
0000561: 02                                        ; alignment
0000562: 00                                        ; store offset
0000563: 20                                        ; local.get
0000564: 02                                        ; local index
0000565: 41                                        ; i32.const
0000566: 01                                        ; i32 literal
0000567: 6a                                        ; i32.add
0000568: 21                                        ; local.set
0000569: 02                                        ; local index
000056a: 0c                                        ; br
000056b: 00                                        ; break depth
000056c: 0b                                        ; end
000056d: 0b                                        ; end
000056e: 20                                        ; local.get
000056f: 00                                        ; local index
0000570: 41                                        ; i32.const
0000571: 01                                        ; i32 literal
0000572: 6a                                        ; i32.add
0000573: 21                                        ; local.set
0000574: 00                                        ; local index
0000575: 0c                                        ; br
0000576: 00                                        ; break depth
0000577: 0b                                        ; end
0000578: 0b                                        ; end
0000579: 0b                                        ; end
000051b: 5e                                        ; FIXUP func body size
; function body 6
000057a: 00                                        ; func body size (guess)
000057b: 03                                        ; local decl count
000057c: 02                                        ; local type count
000057d: 7f                                        ; i32
000057e: 05                                        ; local type count
000057f: 7d                                        ; f32
0000580: 08                                        ; local type count
0000581: 7f                                        ; i32
0000582: 41                                        ; i32.const
0000583: 00                                        ; i32 literal
0000584: 21                                        ; local.set
0000585: 02                                        ; local index
0000586: 41                                        ; i32.const
0000587: 00                                        ; i32 literal
0000588: 21                                        ; local.set
0000589: 03                                        ; local index
000058a: 02                                        ; block
000058b: 40                                        ; void
000058c: 03                                        ; loop
000058d: 40                                        ; void
000058e: 20                                        ; local.get
000058f: 03                                        ; local index
0000590: 23                                        ; global.get
0000591: 0d                                        ; global index
0000592: 41                                        ; i32.const
0000593: 01                                        ; i32 literal
0000594: 6b                                        ; i32.sub
0000595: 4a                                        ; i32.gt_s
0000596: 0d                                        ; br_if
0000597: 01                                        ; break depth
0000598: 23                                        ; global.get
0000599: 0e                                        ; global index
000059a: 41                                        ; i32.const
000059b: 08                                        ; i32 literal
000059c: 6a                                        ; i32.add
000059d: 20                                        ; local.get
000059e: 03                                        ; local index
000059f: 41                                        ; i32.const
00005a0: 0c                                        ; i32 literal
00005a1: 6c                                        ; i32.mul
00005a2: 6a                                        ; i32.add
00005a3: 28                                        ; i32.load
00005a4: 02                                        ; alignment
00005a5: 00                                        ; load offset
00005a6: 41                                        ; i32.const
00005a7: 04                                        ; i32 literal
00005a8: 6a                                        ; i32.add
00005a9: 2a                                        ; f32.load
00005aa: 02                                        ; alignment
00005ab: 00                                        ; load offset
00005ac: 21                                        ; local.set
00005ad: 04                                        ; local index
00005ae: 23                                        ; global.get
00005af: 0e                                        ; global index
00005b0: 41                                        ; i32.const
00005b1: 08                                        ; i32 literal
00005b2: 6a                                        ; i32.add
00005b3: 20                                        ; local.get
00005b4: 03                                        ; local index
00005b5: 41                                        ; i32.const
00005b6: 0c                                        ; i32 literal
00005b7: 6c                                        ; i32.mul
00005b8: 6a                                        ; i32.add
00005b9: 28                                        ; i32.load
00005ba: 02                                        ; alignment
00005bb: 00                                        ; load offset
00005bc: 41                                        ; i32.const
00005bd: 00                                        ; i32 literal
00005be: 6a                                        ; i32.add
00005bf: 2a                                        ; f32.load
00005c0: 02                                        ; alignment
00005c1: 00                                        ; load offset
00005c2: 21                                        ; local.set
00005c3: 05                                        ; local index
00005c4: 23                                        ; global.get
00005c5: 0e                                        ; global index
00005c6: 41                                        ; i32.const
00005c7: 08                                        ; i32 literal
00005c8: 6a                                        ; i32.add
00005c9: 20                                        ; local.get
00005ca: 03                                        ; local index
00005cb: 41                                        ; i32.const
00005cc: 0c                                        ; i32 literal
00005cd: 6c                                        ; i32.mul
00005ce: 6a                                        ; i32.add
00005cf: 28                                        ; i32.load
00005d0: 02                                        ; alignment
00005d1: 00                                        ; load offset
00005d2: 41                                        ; i32.const
00005d3: 08                                        ; i32 literal
00005d4: 6a                                        ; i32.add
00005d5: 2a                                        ; f32.load
00005d6: 02                                        ; alignment
00005d7: 00                                        ; load offset
00005d8: 21                                        ; local.set
00005d9: 06                                        ; local index
00005da: 23                                        ; global.get
00005db: 0f                                        ; global index
00005dc: 41                                        ; i32.const
00005dd: 08                                        ; i32 literal
00005de: 6a                                        ; i32.add
00005df: 20                                        ; local.get
00005e0: 03                                        ; local index
00005e1: 41                                        ; i32.const
00005e2: 04                                        ; i32 literal
00005e3: 6c                                        ; i32.mul
00005e4: 6a                                        ; i32.add
00005e5: 28                                        ; i32.load
00005e6: 02                                        ; alignment
00005e7: 00                                        ; load offset
00005e8: 41                                        ; i32.const
00005e9: 00                                        ; i32 literal
00005ea: 6a                                        ; i32.add
00005eb: 2a                                        ; f32.load
00005ec: 02                                        ; alignment
00005ed: 00                                        ; load offset
00005ee: 21                                        ; local.set
00005ef: 07                                        ; local index
00005f0: 23                                        ; global.get
00005f1: 0f                                        ; global index
00005f2: 41                                        ; i32.const
00005f3: 08                                        ; i32 literal
00005f4: 6a                                        ; i32.add
00005f5: 20                                        ; local.get
00005f6: 03                                        ; local index
00005f7: 41                                        ; i32.const
00005f8: 04                                        ; i32 literal
00005f9: 6c                                        ; i32.mul
00005fa: 6a                                        ; i32.add
00005fb: 28                                        ; i32.load
00005fc: 02                                        ; alignment
00005fd: 00                                        ; load offset
00005fe: 41                                        ; i32.const
00005ff: 04                                        ; i32 literal
0000600: 6a                                        ; i32.add
0000601: 2a                                        ; f32.load
0000602: 02                                        ; alignment
0000603: 00                                        ; load offset
0000604: 21                                        ; local.set
0000605: 08                                        ; local index
0000606: 20                                        ; local.get
0000607: 08                                        ; local index
0000608: bb                                        ; f64.promote_f32
0000609: 44                                        ; f64.const
000060a: 2d43 1ceb e236 1a3f                       ; f64 literal
0000612: a0                                        ; f64.add
0000613: b6                                        ; f32.demote_f64
0000614: 21                                        ; local.set
0000615: 08                                        ; local index
0000616: 20                                        ; local.get
0000617: 00                                        ; local index
0000618: 20                                        ; local.get
0000619: 04                                        ; local index
000061a: 20                                        ; local.get
000061b: 06                                        ; local index
000061c: 92                                        ; f32.add
000061d: 93                                        ; f32.sub
000061e: 41                                        ; i32.const
000061f: 00                                        ; i32 literal
0000620: b2                                        ; f32.convert_i32_s
0000621: 5d                                        ; f32.lt
0000622: 20                                        ; local.get
0000623: 07                                        ; local index
0000624: 41                                        ; i32.const
0000625: 00                                        ; i32 literal
0000626: b2                                        ; f32.convert_i32_s
0000627: 5e                                        ; f32.gt
0000628: 6c                                        ; i32.mul
0000629: 20                                        ; local.get
000062a: 04                                        ; local index
000062b: 20                                        ; local.get
000062c: 06                                        ; local index
000062d: 93                                        ; f32.sub
000062e: 41                                        ; i32.const
000062f: 00                                        ; i32 literal
0000630: b2                                        ; f32.convert_i32_s
0000631: 5d                                        ; f32.lt
0000632: 20                                        ; local.get
0000633: 07                                        ; local index
0000634: 41                                        ; i32.const
0000635: 00                                        ; i32 literal
0000636: b2                                        ; f32.convert_i32_s
0000637: 5d                                        ; f32.lt
0000638: 6c                                        ; i32.mul
0000639: 6a                                        ; i32.add
000063a: 04                                        ; if
000063b: 40                                        ; void
000063c: 43                                        ; f32.const
000063d: 0000 0000                                 ; f32 literal
0000641: 20                                        ; local.get
0000642: 07                                        ; local index
0000643: 93                                        ; f32.sub
0000644: 21                                        ; local.set
0000645: 07                                        ; local index
0000646: 0b                                        ; end
0000647: 20                                        ; local.get
0000648: 01                                        ; local index
0000649: 20                                        ; local.get
000064a: 05                                        ; local index
000064b: 20                                        ; local.get
000064c: 06                                        ; local index
000064d: 92                                        ; f32.add
000064e: 93                                        ; f32.sub
000064f: 41                                        ; i32.const
0000650: 00                                        ; i32 literal
0000651: b2                                        ; f32.convert_i32_s
0000652: 5d                                        ; f32.lt
0000653: 20                                        ; local.get
0000654: 08                                        ; local index
0000655: 41                                        ; i32.const
0000656: 00                                        ; i32 literal
0000657: b2                                        ; f32.convert_i32_s
0000658: 5e                                        ; f32.gt
0000659: 6c                                        ; i32.mul
000065a: 20                                        ; local.get
000065b: 05                                        ; local index
000065c: 20                                        ; local.get
000065d: 06                                        ; local index
000065e: 93                                        ; f32.sub
000065f: 41                                        ; i32.const
0000660: 00                                        ; i32 literal
0000661: b2                                        ; f32.convert_i32_s
0000662: 5d                                        ; f32.lt
0000663: 20                                        ; local.get
0000664: 08                                        ; local index
0000665: 41                                        ; i32.const
0000666: 00                                        ; i32 literal
0000667: b2                                        ; f32.convert_i32_s
0000668: 5d                                        ; f32.lt
0000669: 6c                                        ; i32.mul
000066a: 6a                                        ; i32.add
000066b: 04                                        ; if
000066c: 40                                        ; void
000066d: 43                                        ; f32.const
000066e: 0000 0000                                 ; f32 literal
0000672: 20                                        ; local.get
0000673: 08                                        ; local index
0000674: 93                                        ; f32.sub
0000675: 21                                        ; local.set
0000676: 08                                        ; local index
0000677: 0b                                        ; end
0000678: 23                                        ; global.get
0000679: 0e                                        ; global index
000067a: 41                                        ; i32.const
000067b: 08                                        ; i32 literal
000067c: 6a                                        ; i32.add
000067d: 20                                        ; local.get
000067e: 03                                        ; local index
000067f: 41                                        ; i32.const
0000680: 0c                                        ; i32 literal
0000681: 6c                                        ; i32.mul
0000682: 6a                                        ; i32.add
0000683: 41                                        ; i32.const
0000684: 04                                        ; i32 literal
0000685: 6a                                        ; i32.add
0000686: 20                                        ; local.get
0000687: 04                                        ; local index
0000688: 20                                        ; local.get
0000689: 07                                        ; local index
000068a: 92                                        ; f32.add
000068b: 38                                        ; f32.store
000068c: 02                                        ; alignment
000068d: 00                                        ; store offset
000068e: 23                                        ; global.get
000068f: 0e                                        ; global index
0000690: 41                                        ; i32.const
0000691: 08                                        ; i32 literal
0000692: 6a                                        ; i32.add
0000693: 20                                        ; local.get
0000694: 03                                        ; local index
0000695: 41                                        ; i32.const
0000696: 0c                                        ; i32 literal
0000697: 6c                                        ; i32.mul
0000698: 6a                                        ; i32.add
0000699: 41                                        ; i32.const
000069a: 00                                        ; i32 literal
000069b: 6a                                        ; i32.add
000069c: 20                                        ; local.get
000069d: 05                                        ; local index
000069e: 20                                        ; local.get
000069f: 08                                        ; local index
00006a0: 92                                        ; f32.add
00006a1: 38                                        ; f32.store
00006a2: 02                                        ; alignment
00006a3: 00                                        ; store offset
00006a4: 23                                        ; global.get
00006a5: 0f                                        ; global index
00006a6: 41                                        ; i32.const
00006a7: 08                                        ; i32 literal
00006a8: 6a                                        ; i32.add
00006a9: 20                                        ; local.get
00006aa: 03                                        ; local index
00006ab: 41                                        ; i32.const
00006ac: 04                                        ; i32 literal
00006ad: 6c                                        ; i32.mul
00006ae: 6a                                        ; i32.add
00006af: 28                                        ; i32.load
00006b0: 02                                        ; alignment
00006b1: 00                                        ; load offset
00006b2: 41                                        ; i32.const
00006b3: 00                                        ; i32 literal
00006b4: 6a                                        ; i32.add
00006b5: 20                                        ; local.get
00006b6: 07                                        ; local index
00006b7: 38                                        ; f32.store
00006b8: 02                                        ; alignment
00006b9: 00                                        ; store offset
00006ba: 23                                        ; global.get
00006bb: 0f                                        ; global index
00006bc: 41                                        ; i32.const
00006bd: 08                                        ; i32 literal
00006be: 6a                                        ; i32.add
00006bf: 20                                        ; local.get
00006c0: 03                                        ; local index
00006c1: 41                                        ; i32.const
00006c2: 04                                        ; i32 literal
00006c3: 6c                                        ; i32.mul
00006c4: 6a                                        ; i32.add
00006c5: 28                                        ; i32.load
00006c6: 02                                        ; alignment
00006c7: 00                                        ; load offset
00006c8: 41                                        ; i32.const
00006c9: 04                                        ; i32 literal
00006ca: 6a                                        ; i32.add
00006cb: 20                                        ; local.get
00006cc: 08                                        ; local index
00006cd: 38                                        ; f32.store
00006ce: 02                                        ; alignment
00006cf: 00                                        ; store offset
00006d0: 20                                        ; local.get
00006d1: 04                                        ; local index
00006d2: 20                                        ; local.get
00006d3: 06                                        ; local index
00006d4: 93                                        ; f32.sub
00006d5: bb                                        ; f64.promote_f32
00006d6: 20                                        ; local.get
00006d7: 00                                        ; local index
00006d8: bb                                        ; f64.promote_f32
00006d9: a3                                        ; f64.div
00006da: 23                                        ; global.get
00006db: 0c                                        ; global index
00006dc: b7                                        ; f64.convert_i32_s
00006dd: a2                                        ; f64.mul
00006de: 10                                        ; call
00006df: 06                                        ; function index
00006e0: aa                                        ; i32.trunc_f64_s
00006e1: 21                                        ; local.set
00006e2: 09                                        ; local index
00006e3: 20                                        ; local.get
00006e4: 04                                        ; local index
00006e5: 20                                        ; local.get
00006e6: 06                                        ; local index
00006e7: 92                                        ; f32.add
00006e8: bb                                        ; f64.promote_f32
00006e9: 20                                        ; local.get
00006ea: 00                                        ; local index
00006eb: bb                                        ; f64.promote_f32
00006ec: a3                                        ; f64.div
00006ed: 23                                        ; global.get
00006ee: 0c                                        ; global index
00006ef: b7                                        ; f64.convert_i32_s
00006f0: a2                                        ; f64.mul
00006f1: 10                                        ; call
00006f2: 06                                        ; function index
00006f3: aa                                        ; i32.trunc_f64_s
00006f4: 21                                        ; local.set
00006f5: 0a                                        ; local index
00006f6: 20                                        ; local.get
00006f7: 05                                        ; local index
00006f8: 20                                        ; local.get
00006f9: 06                                        ; local index
00006fa: 93                                        ; f32.sub
00006fb: bb                                        ; f64.promote_f32
00006fc: 20                                        ; local.get
00006fd: 01                                        ; local index
00006fe: bb                                        ; f64.promote_f32
00006ff: a3                                        ; f64.div
0000700: 23                                        ; global.get
0000701: 0b                                        ; global index
0000702: b7                                        ; f64.convert_i32_s
0000703: a2                                        ; f64.mul
0000704: 10                                        ; call
0000705: 06                                        ; function index
0000706: aa                                        ; i32.trunc_f64_s
0000707: 21                                        ; local.set
0000708: 0b                                        ; local index
0000709: 20                                        ; local.get
000070a: 05                                        ; local index
000070b: 20                                        ; local.get
000070c: 06                                        ; local index
000070d: 92                                        ; f32.add
000070e: bb                                        ; f64.promote_f32
000070f: 20                                        ; local.get
0000710: 01                                        ; local index
0000711: bb                                        ; f64.promote_f32
0000712: a3                                        ; f64.div
0000713: 23                                        ; global.get
0000714: 0b                                        ; global index
0000715: b7                                        ; f64.convert_i32_s
0000716: a2                                        ; f64.mul
0000717: 10                                        ; call
0000718: 06                                        ; function index
0000719: aa                                        ; i32.trunc_f64_s
000071a: 21                                        ; local.set
000071b: 0c                                        ; local index
000071c: 20                                        ; local.get
000071d: 09                                        ; local index
000071e: 41                                        ; i32.const
000071f: 00                                        ; i32 literal
0000720: 48                                        ; i32.lt_s
0000721: 04                                        ; if
0000722: 40                                        ; void
0000723: 41                                        ; i32.const
0000724: 00                                        ; i32 literal
0000725: 21                                        ; local.set
0000726: 09                                        ; local index
0000727: 0b                                        ; end
0000728: 20                                        ; local.get
0000729: 0a                                        ; local index
000072a: 23                                        ; global.get
000072b: 0c                                        ; global index
000072c: 4e                                        ; i32.ge_s
000072d: 04                                        ; if
000072e: 40                                        ; void
000072f: 23                                        ; global.get
0000730: 0c                                        ; global index
0000731: 41                                        ; i32.const
0000732: 01                                        ; i32 literal
0000733: 6b                                        ; i32.sub
0000734: 21                                        ; local.set
0000735: 0a                                        ; local index
0000736: 0b                                        ; end
0000737: 20                                        ; local.get
0000738: 0b                                        ; local index
0000739: 41                                        ; i32.const
000073a: 00                                        ; i32 literal
000073b: 48                                        ; i32.lt_s
000073c: 04                                        ; if
000073d: 40                                        ; void
000073e: 41                                        ; i32.const
000073f: 00                                        ; i32 literal
0000740: 21                                        ; local.set
0000741: 0b                                        ; local index
0000742: 0b                                        ; end
0000743: 20                                        ; local.get
0000744: 0c                                        ; local index
0000745: 23                                        ; global.get
0000746: 0b                                        ; global index
0000747: 4e                                        ; i32.ge_s
0000748: 04                                        ; if
0000749: 40                                        ; void
000074a: 23                                        ; global.get
000074b: 0b                                        ; global index
000074c: 41                                        ; i32.const
000074d: 01                                        ; i32 literal
000074e: 6b                                        ; i32.sub
000074f: 21                                        ; local.set
0000750: 0c                                        ; local index
0000751: 0b                                        ; end
0000752: 20                                        ; local.get
0000753: 09                                        ; local index
0000754: 21                                        ; local.set
0000755: 0d                                        ; local index
0000756: 02                                        ; block
0000757: 40                                        ; void
0000758: 03                                        ; loop
0000759: 40                                        ; void
000075a: 20                                        ; local.get
000075b: 0d                                        ; local index
000075c: 20                                        ; local.get
000075d: 0a                                        ; local index
000075e: 4a                                        ; i32.gt_s
000075f: 0d                                        ; br_if
0000760: 01                                        ; break depth
0000761: 23                                        ; global.get
0000762: 11                                        ; global index
0000763: 41                                        ; i32.const
0000764: 08                                        ; i32 literal
0000765: 6a                                        ; i32.add
0000766: 20                                        ; local.get
0000767: 0d                                        ; local index
0000768: 41                                        ; i32.const
0000769: 04                                        ; i32 literal
000076a: 6c                                        ; i32.mul
000076b: 6a                                        ; i32.add
000076c: 28                                        ; i32.load
000076d: 02                                        ; alignment
000076e: 00                                        ; load offset
000076f: 21                                        ; local.set
0000770: 0e                                        ; local index
0000771: 20                                        ; local.get
0000772: 0b                                        ; local index
0000773: 21                                        ; local.set
0000774: 0f                                        ; local index
0000775: 02                                        ; block
0000776: 40                                        ; void
0000777: 03                                        ; loop
0000778: 40                                        ; void
0000779: 20                                        ; local.get
000077a: 0f                                        ; local index
000077b: 20                                        ; local.get
000077c: 0c                                        ; local index
000077d: 4a                                        ; i32.gt_s
000077e: 0d                                        ; br_if
000077f: 01                                        ; break depth
0000780: 23                                        ; global.get
0000781: 10                                        ; global index
0000782: 41                                        ; i32.const
0000783: 08                                        ; i32 literal
0000784: 6a                                        ; i32.add
0000785: 20                                        ; local.get
0000786: 02                                        ; local index
0000787: 41                                        ; i32.const
0000788: 04                                        ; i32 literal
0000789: 6c                                        ; i32.mul
000078a: 6a                                        ; i32.add
000078b: 28                                        ; i32.load
000078c: 02                                        ; alignment
000078d: 00                                        ; load offset
000078e: 21                                        ; local.set
000078f: 10                                        ; local index
0000790: 20                                        ; local.get
0000791: 02                                        ; local index
0000792: 41                                        ; i32.const
0000793: 01                                        ; i32 literal
0000794: 6a                                        ; i32.add
0000795: 21                                        ; local.set
0000796: 02                                        ; local index
0000797: 20                                        ; local.get
0000798: 10                                        ; local index
0000799: 41                                        ; i32.const
000079a: 04                                        ; i32 literal
000079b: 6a                                        ; i32.add
000079c: 20                                        ; local.get
000079d: 03                                        ; local index
000079e: 36                                        ; i32.store
000079f: 02                                        ; alignment
00007a0: 00                                        ; store offset
00007a1: 20                                        ; local.get
00007a2: 10                                        ; local index
00007a3: 41                                        ; i32.const
00007a4: 00                                        ; i32 literal
00007a5: 6a                                        ; i32.add
00007a6: 20                                        ; local.get
00007a7: 0e                                        ; local index
00007a8: 41                                        ; i32.const
00007a9: 08                                        ; i32 literal
00007aa: 6a                                        ; i32.add
00007ab: 20                                        ; local.get
00007ac: 0f                                        ; local index
00007ad: 41                                        ; i32.const
00007ae: 04                                        ; i32 literal
00007af: 6c                                        ; i32.mul
00007b0: 6a                                        ; i32.add
00007b1: 28                                        ; i32.load
00007b2: 02                                        ; alignment
00007b3: 00                                        ; load offset
00007b4: 36                                        ; i32.store
00007b5: 02                                        ; alignment
00007b6: 00                                        ; store offset
00007b7: 20                                        ; local.get
00007b8: 0e                                        ; local index
00007b9: 41                                        ; i32.const
00007ba: 08                                        ; i32 literal
00007bb: 6a                                        ; i32.add
00007bc: 20                                        ; local.get
00007bd: 0f                                        ; local index
00007be: 41                                        ; i32.const
00007bf: 04                                        ; i32 literal
00007c0: 6c                                        ; i32.mul
00007c1: 6a                                        ; i32.add
00007c2: 20                                        ; local.get
00007c3: 10                                        ; local index
00007c4: 36                                        ; i32.store
00007c5: 02                                        ; alignment
00007c6: 00                                        ; store offset
00007c7: 20                                        ; local.get
00007c8: 0f                                        ; local index
00007c9: 41                                        ; i32.const
00007ca: 01                                        ; i32 literal
00007cb: 6a                                        ; i32.add
00007cc: 21                                        ; local.set
00007cd: 0f                                        ; local index
00007ce: 0c                                        ; br
00007cf: 00                                        ; break depth
00007d0: 0b                                        ; end
00007d1: 0b                                        ; end
00007d2: 20                                        ; local.get
00007d3: 0d                                        ; local index
00007d4: 41                                        ; i32.const
00007d5: 01                                        ; i32 literal
00007d6: 6a                                        ; i32.add
00007d7: 21                                        ; local.set
00007d8: 0d                                        ; local index
00007d9: 0c                                        ; br
00007da: 00                                        ; break depth
00007db: 0b                                        ; end
00007dc: 0b                                        ; end
00007dd: 20                                        ; local.get
00007de: 03                                        ; local index
00007df: 41                                        ; i32.const
00007e0: 01                                        ; i32 literal
00007e1: 6a                                        ; i32.add
00007e2: 21                                        ; local.set
00007e3: 03                                        ; local index
00007e4: 0c                                        ; br
00007e5: 00                                        ; break depth
00007e6: 0b                                        ; end
00007e7: 0b                                        ; end
00007e8: 0b                                        ; end
; move data: [57b, 7e9) -> [57c, 7ea)
000057a: ee04                                      ; FIXUP func body size
; function body 7
00007ea: 00                                        ; func body size (guess)
00007eb: 07                                        ; local decl count
00007ec: 05                                        ; local type count
00007ed: 7f                                        ; i32
00007ee: 05                                        ; local type count
00007ef: 7d                                        ; f32
00007f0: 02                                        ; local type count
00007f1: 7f                                        ; i32
00007f2: 07                                        ; local type count
00007f3: 7d                                        ; f32
00007f4: 01                                        ; local type count
00007f5: 7c                                        ; f64
00007f6: 04                                        ; local type count
00007f7: 7d                                        ; f32
00007f8: 04                                        ; local type count
00007f9: 7c                                        ; f64
00007fa: 41                                        ; i32.const
00007fb: 00                                        ; i32 literal
00007fc: 21                                        ; local.set
00007fd: 00                                        ; local index
00007fe: 02                                        ; block
00007ff: 40                                        ; void
0000800: 03                                        ; loop
0000801: 40                                        ; void
0000802: 20                                        ; local.get
0000803: 00                                        ; local index
0000804: 23                                        ; global.get
0000805: 0c                                        ; global index
0000806: 41                                        ; i32.const
0000807: 01                                        ; i32 literal
0000808: 6b                                        ; i32.sub
0000809: 4a                                        ; i32.gt_s
000080a: 0d                                        ; br_if
000080b: 01                                        ; break depth
000080c: 23                                        ; global.get
000080d: 11                                        ; global index
000080e: 41                                        ; i32.const
000080f: 08                                        ; i32 literal
0000810: 6a                                        ; i32.add
0000811: 20                                        ; local.get
0000812: 00                                        ; local index
0000813: 41                                        ; i32.const
0000814: 04                                        ; i32 literal
0000815: 6c                                        ; i32.mul
0000816: 6a                                        ; i32.add
0000817: 28                                        ; i32.load
0000818: 02                                        ; alignment
0000819: 00                                        ; load offset
000081a: 21                                        ; local.set
000081b: 01                                        ; local index
000081c: 41                                        ; i32.const
000081d: 00                                        ; i32 literal
000081e: 21                                        ; local.set
000081f: 02                                        ; local index
0000820: 02                                        ; block
0000821: 40                                        ; void
0000822: 03                                        ; loop
0000823: 40                                        ; void
0000824: 20                                        ; local.get
0000825: 02                                        ; local index
0000826: 23                                        ; global.get
0000827: 0b                                        ; global index
0000828: 41                                        ; i32.const
0000829: 01                                        ; i32 literal
000082a: 6b                                        ; i32.sub
000082b: 4a                                        ; i32.gt_s
000082c: 0d                                        ; br_if
000082d: 01                                        ; break depth
000082e: 20                                        ; local.get
000082f: 01                                        ; local index
0000830: 41                                        ; i32.const
0000831: 08                                        ; i32 literal
0000832: 6a                                        ; i32.add
0000833: 20                                        ; local.get
0000834: 02                                        ; local index
0000835: 41                                        ; i32.const
0000836: 04                                        ; i32 literal
0000837: 6c                                        ; i32.mul
0000838: 6a                                        ; i32.add
0000839: 28                                        ; i32.load
000083a: 02                                        ; alignment
000083b: 00                                        ; load offset
000083c: 21                                        ; local.set
000083d: 03                                        ; local index
000083e: 02                                        ; block
000083f: 40                                        ; void
0000840: 03                                        ; loop
0000841: 40                                        ; void
0000842: 20                                        ; local.get
0000843: 03                                        ; local index
0000844: 41                                        ; i32.const
0000845: 00                                        ; i32 literal
0000846: 46                                        ; i32.eq
0000847: 45                                        ; i32.eqz
0000848: 45                                        ; i32.eqz
0000849: 0d                                        ; br_if
000084a: 01                                        ; break depth
000084b: 20                                        ; local.get
000084c: 03                                        ; local index
000084d: 41                                        ; i32.const
000084e: 04                                        ; i32 literal
000084f: 6a                                        ; i32.add
0000850: 28                                        ; i32.load
0000851: 02                                        ; alignment
0000852: 00                                        ; load offset
0000853: 21                                        ; local.set
0000854: 04                                        ; local index
0000855: 23                                        ; global.get
0000856: 0e                                        ; global index
0000857: 41                                        ; i32.const
0000858: 08                                        ; i32 literal
0000859: 6a                                        ; i32.add
000085a: 20                                        ; local.get
000085b: 04                                        ; local index
000085c: 41                                        ; i32.const
000085d: 0c                                        ; i32 literal
000085e: 6c                                        ; i32.mul
000085f: 6a                                        ; i32.add
0000860: 28                                        ; i32.load
0000861: 02                                        ; alignment
0000862: 00                                        ; load offset
0000863: 41                                        ; i32.const
0000864: 04                                        ; i32 literal
0000865: 6a                                        ; i32.add
0000866: 2a                                        ; f32.load
0000867: 02                                        ; alignment
0000868: 00                                        ; load offset
0000869: 21                                        ; local.set
000086a: 05                                        ; local index
000086b: 23                                        ; global.get
000086c: 0e                                        ; global index
000086d: 41                                        ; i32.const
000086e: 08                                        ; i32 literal
000086f: 6a                                        ; i32.add
0000870: 20                                        ; local.get
0000871: 04                                        ; local index
0000872: 41                                        ; i32.const
0000873: 0c                                        ; i32 literal
0000874: 6c                                        ; i32.mul
0000875: 6a                                        ; i32.add
0000876: 28                                        ; i32.load
0000877: 02                                        ; alignment
0000878: 00                                        ; load offset
0000879: 41                                        ; i32.const
000087a: 00                                        ; i32 literal
000087b: 6a                                        ; i32.add
000087c: 2a                                        ; f32.load
000087d: 02                                        ; alignment
000087e: 00                                        ; load offset
000087f: 21                                        ; local.set
0000880: 06                                        ; local index
0000881: 23                                        ; global.get
0000882: 0e                                        ; global index
0000883: 41                                        ; i32.const
0000884: 08                                        ; i32 literal
0000885: 6a                                        ; i32.add
0000886: 20                                        ; local.get
0000887: 04                                        ; local index
0000888: 41                                        ; i32.const
0000889: 0c                                        ; i32 literal
000088a: 6c                                        ; i32.mul
000088b: 6a                                        ; i32.add
000088c: 28                                        ; i32.load
000088d: 02                                        ; alignment
000088e: 00                                        ; load offset
000088f: 41                                        ; i32.const
0000890: 08                                        ; i32 literal
0000891: 6a                                        ; i32.add
0000892: 2a                                        ; f32.load
0000893: 02                                        ; alignment
0000894: 00                                        ; load offset
0000895: 21                                        ; local.set
0000896: 07                                        ; local index
0000897: 23                                        ; global.get
0000898: 0f                                        ; global index
0000899: 41                                        ; i32.const
000089a: 08                                        ; i32 literal
000089b: 6a                                        ; i32.add
000089c: 20                                        ; local.get
000089d: 04                                        ; local index
000089e: 41                                        ; i32.const
000089f: 04                                        ; i32 literal
00008a0: 6c                                        ; i32.mul
00008a1: 6a                                        ; i32.add
00008a2: 28                                        ; i32.load
00008a3: 02                                        ; alignment
00008a4: 00                                        ; load offset
00008a5: 41                                        ; i32.const
00008a6: 00                                        ; i32 literal
00008a7: 6a                                        ; i32.add
00008a8: 2a                                        ; f32.load
00008a9: 02                                        ; alignment
00008aa: 00                                        ; load offset
00008ab: 21                                        ; local.set
00008ac: 08                                        ; local index
00008ad: 23                                        ; global.get
00008ae: 0f                                        ; global index
00008af: 41                                        ; i32.const
00008b0: 08                                        ; i32 literal
00008b1: 6a                                        ; i32.add
00008b2: 20                                        ; local.get
00008b3: 04                                        ; local index
00008b4: 41                                        ; i32.const
00008b5: 04                                        ; i32 literal
00008b6: 6c                                        ; i32.mul
00008b7: 6a                                        ; i32.add
00008b8: 28                                        ; i32.load
00008b9: 02                                        ; alignment
00008ba: 00                                        ; load offset
00008bb: 41                                        ; i32.const
00008bc: 04                                        ; i32 literal
00008bd: 6a                                        ; i32.add
00008be: 2a                                        ; f32.load
00008bf: 02                                        ; alignment
00008c0: 00                                        ; load offset
00008c1: 21                                        ; local.set
00008c2: 09                                        ; local index
00008c3: 20                                        ; local.get
00008c4: 03                                        ; local index
00008c5: 21                                        ; local.set
00008c6: 0a                                        ; local index
00008c7: 20                                        ; local.get
00008c8: 0a                                        ; local index
00008c9: 41                                        ; i32.const
00008ca: 00                                        ; i32 literal
00008cb: 6a                                        ; i32.add
00008cc: 28                                        ; i32.load
00008cd: 02                                        ; alignment
00008ce: 00                                        ; load offset
00008cf: 21                                        ; local.set
00008d0: 0a                                        ; local index
00008d1: 02                                        ; block
00008d2: 40                                        ; void
00008d3: 03                                        ; loop
00008d4: 40                                        ; void
00008d5: 20                                        ; local.get
00008d6: 0a                                        ; local index
00008d7: 41                                        ; i32.const
00008d8: 00                                        ; i32 literal
00008d9: 46                                        ; i32.eq
00008da: 45                                        ; i32.eqz
00008db: 45                                        ; i32.eqz
00008dc: 0d                                        ; br_if
00008dd: 01                                        ; break depth
00008de: 20                                        ; local.get
00008df: 0a                                        ; local index
00008e0: 41                                        ; i32.const
00008e1: 04                                        ; i32 literal
00008e2: 6a                                        ; i32.add
00008e3: 28                                        ; i32.load
00008e4: 02                                        ; alignment
00008e5: 00                                        ; load offset
00008e6: 21                                        ; local.set
00008e7: 0b                                        ; local index
00008e8: 23                                        ; global.get
00008e9: 0e                                        ; global index
00008ea: 41                                        ; i32.const
00008eb: 08                                        ; i32 literal
00008ec: 6a                                        ; i32.add
00008ed: 20                                        ; local.get
00008ee: 0b                                        ; local index
00008ef: 41                                        ; i32.const
00008f0: 0c                                        ; i32 literal
00008f1: 6c                                        ; i32.mul
00008f2: 6a                                        ; i32.add
00008f3: 28                                        ; i32.load
00008f4: 02                                        ; alignment
00008f5: 00                                        ; load offset
00008f6: 41                                        ; i32.const
00008f7: 04                                        ; i32 literal
00008f8: 6a                                        ; i32.add
00008f9: 2a                                        ; f32.load
00008fa: 02                                        ; alignment
00008fb: 00                                        ; load offset
00008fc: 21                                        ; local.set
00008fd: 0c                                        ; local index
00008fe: 23                                        ; global.get
00008ff: 0e                                        ; global index
0000900: 41                                        ; i32.const
0000901: 08                                        ; i32 literal
0000902: 6a                                        ; i32.add
0000903: 20                                        ; local.get
0000904: 0b                                        ; local index
0000905: 41                                        ; i32.const
0000906: 0c                                        ; i32 literal
0000907: 6c                                        ; i32.mul
0000908: 6a                                        ; i32.add
0000909: 28                                        ; i32.load
000090a: 02                                        ; alignment
000090b: 00                                        ; load offset
000090c: 41                                        ; i32.const
000090d: 00                                        ; i32 literal
000090e: 6a                                        ; i32.add
000090f: 2a                                        ; f32.load
0000910: 02                                        ; alignment
0000911: 00                                        ; load offset
0000912: 21                                        ; local.set
0000913: 0d                                        ; local index
0000914: 23                                        ; global.get
0000915: 0e                                        ; global index
0000916: 41                                        ; i32.const
0000917: 08                                        ; i32 literal
0000918: 6a                                        ; i32.add
0000919: 20                                        ; local.get
000091a: 0b                                        ; local index
000091b: 41                                        ; i32.const
000091c: 0c                                        ; i32 literal
000091d: 6c                                        ; i32.mul
000091e: 6a                                        ; i32.add
000091f: 28                                        ; i32.load
0000920: 02                                        ; alignment
0000921: 00                                        ; load offset
0000922: 41                                        ; i32.const
0000923: 08                                        ; i32 literal
0000924: 6a                                        ; i32.add
0000925: 2a                                        ; f32.load
0000926: 02                                        ; alignment
0000927: 00                                        ; load offset
0000928: 21                                        ; local.set
0000929: 0e                                        ; local index
000092a: 20                                        ; local.get
000092b: 05                                        ; local index
000092c: 20                                        ; local.get
000092d: 06                                        ; local index
000092e: 20                                        ; local.get
000092f: 07                                        ; local index
0000930: 20                                        ; local.get
0000931: 0c                                        ; local index
0000932: 20                                        ; local.get
0000933: 0d                                        ; local index
0000934: 20                                        ; local.get
0000935: 0e                                        ; local index
0000936: 10                                        ; call
0000937: 11                                        ; function index
0000938: 04                                        ; if
0000939: 40                                        ; void
000093a: 23                                        ; global.get
000093b: 0f                                        ; global index
000093c: 41                                        ; i32.const
000093d: 08                                        ; i32 literal
000093e: 6a                                        ; i32.add
000093f: 20                                        ; local.get
0000940: 0b                                        ; local index
0000941: 41                                        ; i32.const
0000942: 04                                        ; i32 literal
0000943: 6c                                        ; i32.mul
0000944: 6a                                        ; i32.add
0000945: 28                                        ; i32.load
0000946: 02                                        ; alignment
0000947: 00                                        ; load offset
0000948: 41                                        ; i32.const
0000949: 00                                        ; i32 literal
000094a: 6a                                        ; i32.add
000094b: 2a                                        ; f32.load
000094c: 02                                        ; alignment
000094d: 00                                        ; load offset
000094e: 21                                        ; local.set
000094f: 0f                                        ; local index
0000950: 23                                        ; global.get
0000951: 0f                                        ; global index
0000952: 41                                        ; i32.const
0000953: 08                                        ; i32 literal
0000954: 6a                                        ; i32.add
0000955: 20                                        ; local.get
0000956: 0b                                        ; local index
0000957: 41                                        ; i32.const
0000958: 04                                        ; i32 literal
0000959: 6c                                        ; i32.mul
000095a: 6a                                        ; i32.add
000095b: 28                                        ; i32.load
000095c: 02                                        ; alignment
000095d: 00                                        ; load offset
000095e: 41                                        ; i32.const
000095f: 04                                        ; i32 literal
0000960: 6a                                        ; i32.add
0000961: 2a                                        ; f32.load
0000962: 02                                        ; alignment
0000963: 00                                        ; load offset
0000964: 21                                        ; local.set
0000965: 10                                        ; local index
0000966: 20                                        ; local.get
0000967: 0c                                        ; local index
0000968: 20                                        ; local.get
0000969: 05                                        ; local index
000096a: 93                                        ; f32.sub
000096b: 21                                        ; local.set
000096c: 11                                        ; local index
000096d: 20                                        ; local.get
000096e: 0d                                        ; local index
000096f: 20                                        ; local.get
0000970: 06                                        ; local index
0000971: 93                                        ; f32.sub
0000972: 21                                        ; local.set
0000973: 12                                        ; local index
0000974: 20                                        ; local.get
0000975: 11                                        ; local index
0000976: 20                                        ; local.get
0000977: 11                                        ; local index
0000978: 94                                        ; f32.mul
0000979: 20                                        ; local.get
000097a: 12                                        ; local index
000097b: 20                                        ; local.get
000097c: 12                                        ; local index
000097d: 94                                        ; f32.mul
000097e: 92                                        ; f32.add
000097f: bb                                        ; f64.promote_f32
0000980: 10                                        ; call
0000981: 01                                        ; function index
0000982: 21                                        ; local.set
0000983: 13                                        ; local index
0000984: 20                                        ; local.get
0000985: 11                                        ; local index
0000986: bb                                        ; f64.promote_f32
0000987: 20                                        ; local.get
0000988: 13                                        ; local index
0000989: a3                                        ; f64.div
000098a: b6                                        ; f32.demote_f64
000098b: 21                                        ; local.set
000098c: 11                                        ; local index
000098d: 20                                        ; local.get
000098e: 12                                        ; local index
000098f: bb                                        ; f64.promote_f32
0000990: 20                                        ; local.get
0000991: 13                                        ; local index
0000992: a3                                        ; f64.div
0000993: b6                                        ; f32.demote_f64
0000994: 21                                        ; local.set
0000995: 12                                        ; local index
0000996: 20                                        ; local.get
0000997: 11                                        ; local index
0000998: 20                                        ; local.get
0000999: 08                                        ; local index
000099a: 94                                        ; f32.mul
000099b: 20                                        ; local.get
000099c: 12                                        ; local index
000099d: 20                                        ; local.get
000099e: 09                                        ; local index
000099f: 94                                        ; f32.mul
00009a0: 92                                        ; f32.add
00009a1: 21                                        ; local.set
00009a2: 14                                        ; local index
00009a3: 20                                        ; local.get
00009a4: 11                                        ; local index
00009a5: 20                                        ; local.get
00009a6: 0f                                        ; local index
00009a7: 94                                        ; f32.mul
00009a8: 20                                        ; local.get
00009a9: 12                                        ; local index
00009aa: 20                                        ; local.get
00009ab: 10                                        ; local index
00009ac: 94                                        ; f32.mul
00009ad: 92                                        ; f32.add
00009ae: 21                                        ; local.set
00009af: 15                                        ; local index
00009b0: 20                                        ; local.get
00009b1: 14                                        ; local index
00009b2: 20                                        ; local.get
00009b3: 15                                        ; local index
00009b4: 93                                        ; f32.sub
00009b5: 41                                        ; i32.const
00009b6: 00                                        ; i32 literal
00009b7: b2                                        ; f32.convert_i32_s
00009b8: 5f                                        ; f32.le
00009b9: 45                                        ; i32.eqz
00009ba: 04                                        ; if
00009bb: 40                                        ; void
00009bc: 20                                        ; local.get
00009bd: 07                                        ; local index
00009be: 20                                        ; local.get
00009bf: 0e                                        ; local index
00009c0: 92                                        ; f32.add
00009c1: 21                                        ; local.set
00009c2: 16                                        ; local index
00009c3: 20                                        ; local.get
00009c4: 07                                        ; local index
00009c5: 20                                        ; local.get
00009c6: 0e                                        ; local index
00009c7: 93                                        ; f32.sub
00009c8: 21                                        ; local.set
00009c9: 17                                        ; local index
00009ca: 20                                        ; local.get
00009cb: 14                                        ; local index
00009cc: 20                                        ; local.get
00009cd: 17                                        ; local index
00009ce: 94                                        ; f32.mul
00009cf: 41                                        ; i32.const
00009d0: 02                                        ; i32 literal
00009d1: b2                                        ; f32.convert_i32_s
00009d2: 20                                        ; local.get
00009d3: 0e                                        ; local index
00009d4: 94                                        ; f32.mul
00009d5: 20                                        ; local.get
00009d6: 15                                        ; local index
00009d7: 94                                        ; f32.mul
00009d8: 92                                        ; f32.add
00009d9: bb                                        ; f64.promote_f32
00009da: 20                                        ; local.get
00009db: 16                                        ; local index
00009dc: bb                                        ; f64.promote_f32
00009dd: a3                                        ; f64.div
00009de: 21                                        ; local.set
00009df: 18                                        ; local index
00009e0: 41                                        ; i32.const
00009e1: 02                                        ; i32 literal
00009e2: b2                                        ; f32.convert_i32_s
00009e3: 20                                        ; local.get
00009e4: 07                                        ; local index
00009e5: 94                                        ; f32.mul
00009e6: 20                                        ; local.get
00009e7: 14                                        ; local index
00009e8: 94                                        ; f32.mul
00009e9: 20                                        ; local.get
00009ea: 15                                        ; local index
00009eb: 20                                        ; local.get
00009ec: 17                                        ; local index
00009ed: 94                                        ; f32.mul
00009ee: 93                                        ; f32.sub
00009ef: bb                                        ; f64.promote_f32
00009f0: 20                                        ; local.get
00009f1: 16                                        ; local index
00009f2: bb                                        ; f64.promote_f32
00009f3: a3                                        ; f64.div
00009f4: 21                                        ; local.set
00009f5: 19                                        ; local index
00009f6: 20                                        ; local.get
00009f7: 18                                        ; local index
00009f8: 20                                        ; local.get
00009f9: 14                                        ; local index
00009fa: bb                                        ; f64.promote_f32
00009fb: a1                                        ; f64.sub
00009fc: 21                                        ; local.set
00009fd: 1a                                        ; local index
00009fe: 20                                        ; local.get
00009ff: 19                                        ; local index
0000a00: 20                                        ; local.get
0000a01: 15                                        ; local index
0000a02: bb                                        ; f64.promote_f32
0000a03: a1                                        ; f64.sub
0000a04: 21                                        ; local.set
0000a05: 1b                                        ; local index
0000a06: 23                                        ; global.get
0000a07: 0f                                        ; global index
0000a08: 41                                        ; i32.const
0000a09: 08                                        ; i32 literal
0000a0a: 6a                                        ; i32.add
0000a0b: 20                                        ; local.get
0000a0c: 04                                        ; local index
0000a0d: 41                                        ; i32.const
0000a0e: 04                                        ; i32 literal
0000a0f: 6c                                        ; i32.mul
0000a10: 6a                                        ; i32.add
0000a11: 28                                        ; i32.load
0000a12: 02                                        ; alignment
0000a13: 00                                        ; load offset
0000a14: 41                                        ; i32.const
0000a15: 00                                        ; i32 literal
0000a16: 6a                                        ; i32.add
0000a17: 20                                        ; local.get
0000a18: 08                                        ; local index
0000a19: bb                                        ; f64.promote_f32
0000a1a: 20                                        ; local.get
0000a1b: 11                                        ; local index
0000a1c: bb                                        ; f64.promote_f32
0000a1d: 20                                        ; local.get
0000a1e: 1a                                        ; local index
0000a1f: a2                                        ; f64.mul
0000a20: a0                                        ; f64.add
0000a21: b6                                        ; f32.demote_f64
0000a22: 38                                        ; f32.store
0000a23: 02                                        ; alignment
0000a24: 00                                        ; store offset
0000a25: 23                                        ; global.get
0000a26: 0f                                        ; global index
0000a27: 41                                        ; i32.const
0000a28: 08                                        ; i32 literal
0000a29: 6a                                        ; i32.add
0000a2a: 20                                        ; local.get
0000a2b: 04                                        ; local index
0000a2c: 41                                        ; i32.const
0000a2d: 04                                        ; i32 literal
0000a2e: 6c                                        ; i32.mul
0000a2f: 6a                                        ; i32.add
0000a30: 28                                        ; i32.load
0000a31: 02                                        ; alignment
0000a32: 00                                        ; load offset
0000a33: 41                                        ; i32.const
0000a34: 04                                        ; i32 literal
0000a35: 6a                                        ; i32.add
0000a36: 20                                        ; local.get
0000a37: 09                                        ; local index
0000a38: bb                                        ; f64.promote_f32
0000a39: 20                                        ; local.get
0000a3a: 12                                        ; local index
0000a3b: bb                                        ; f64.promote_f32
0000a3c: 20                                        ; local.get
0000a3d: 1a                                        ; local index
0000a3e: a2                                        ; f64.mul
0000a3f: a0                                        ; f64.add
0000a40: b6                                        ; f32.demote_f64
0000a41: 38                                        ; f32.store
0000a42: 02                                        ; alignment
0000a43: 00                                        ; store offset
0000a44: 23                                        ; global.get
0000a45: 0f                                        ; global index
0000a46: 41                                        ; i32.const
0000a47: 08                                        ; i32 literal
0000a48: 6a                                        ; i32.add
0000a49: 20                                        ; local.get
0000a4a: 0b                                        ; local index
0000a4b: 41                                        ; i32.const
0000a4c: 04                                        ; i32 literal
0000a4d: 6c                                        ; i32.mul
0000a4e: 6a                                        ; i32.add
0000a4f: 28                                        ; i32.load
0000a50: 02                                        ; alignment
0000a51: 00                                        ; load offset
0000a52: 41                                        ; i32.const
0000a53: 00                                        ; i32 literal
0000a54: 6a                                        ; i32.add
0000a55: 20                                        ; local.get
0000a56: 0f                                        ; local index
0000a57: bb                                        ; f64.promote_f32
0000a58: 20                                        ; local.get
0000a59: 11                                        ; local index
0000a5a: bb                                        ; f64.promote_f32
0000a5b: 20                                        ; local.get
0000a5c: 1b                                        ; local index
0000a5d: a2                                        ; f64.mul
0000a5e: a0                                        ; f64.add
0000a5f: b6                                        ; f32.demote_f64
0000a60: 38                                        ; f32.store
0000a61: 02                                        ; alignment
0000a62: 00                                        ; store offset
0000a63: 23                                        ; global.get
0000a64: 0f                                        ; global index
0000a65: 41                                        ; i32.const
0000a66: 08                                        ; i32 literal
0000a67: 6a                                        ; i32.add
0000a68: 20                                        ; local.get
0000a69: 0b                                        ; local index
0000a6a: 41                                        ; i32.const
0000a6b: 04                                        ; i32 literal
0000a6c: 6c                                        ; i32.mul
0000a6d: 6a                                        ; i32.add
0000a6e: 28                                        ; i32.load
0000a6f: 02                                        ; alignment
0000a70: 00                                        ; load offset
0000a71: 41                                        ; i32.const
0000a72: 04                                        ; i32 literal
0000a73: 6a                                        ; i32.add
0000a74: 20                                        ; local.get
0000a75: 10                                        ; local index
0000a76: bb                                        ; f64.promote_f32
0000a77: 20                                        ; local.get
0000a78: 12                                        ; local index
0000a79: bb                                        ; f64.promote_f32
0000a7a: 20                                        ; local.get
0000a7b: 1b                                        ; local index
0000a7c: a2                                        ; f64.mul
0000a7d: a0                                        ; f64.add
0000a7e: b6                                        ; f32.demote_f64
0000a7f: 38                                        ; f32.store
0000a80: 02                                        ; alignment
0000a81: 00                                        ; store offset
0000a82: 20                                        ; local.get
0000a83: 0a                                        ; local index
0000a84: 41                                        ; i32.const
0000a85: 00                                        ; i32 literal
0000a86: 6a                                        ; i32.add
0000a87: 28                                        ; i32.load
0000a88: 02                                        ; alignment
0000a89: 00                                        ; load offset
0000a8a: 21                                        ; local.set
0000a8b: 0a                                        ; local index
0000a8c: 0b                                        ; end
0000a8d: 05                                        ; else
0000a8e: 20                                        ; local.get
0000a8f: 0a                                        ; local index
0000a90: 41                                        ; i32.const
0000a91: 00                                        ; i32 literal
0000a92: 6a                                        ; i32.add
0000a93: 28                                        ; i32.load
0000a94: 02                                        ; alignment
0000a95: 00                                        ; load offset
0000a96: 21                                        ; local.set
0000a97: 0a                                        ; local index
0000a98: 0b                                        ; end
0000a99: 0c                                        ; br
0000a9a: 00                                        ; break depth
0000a9b: 0b                                        ; end
0000a9c: 0b                                        ; end
0000a9d: 20                                        ; local.get
0000a9e: 03                                        ; local index
0000a9f: 41                                        ; i32.const
0000aa0: 00                                        ; i32 literal
0000aa1: 6a                                        ; i32.add
0000aa2: 28                                        ; i32.load
0000aa3: 02                                        ; alignment
0000aa4: 00                                        ; load offset
0000aa5: 21                                        ; local.set
0000aa6: 03                                        ; local index
0000aa7: 0c                                        ; br
0000aa8: 00                                        ; break depth
0000aa9: 0b                                        ; end
0000aaa: 0b                                        ; end
0000aab: 20                                        ; local.get
0000aac: 02                                        ; local index
0000aad: 41                                        ; i32.const
0000aae: 01                                        ; i32 literal
0000aaf: 6a                                        ; i32.add
0000ab0: 21                                        ; local.set
0000ab1: 02                                        ; local index
0000ab2: 0c                                        ; br
0000ab3: 00                                        ; break depth
0000ab4: 0b                                        ; end
0000ab5: 0b                                        ; end
0000ab6: 20                                        ; local.get
0000ab7: 00                                        ; local index
0000ab8: 41                                        ; i32.const
0000ab9: 01                                        ; i32 literal
0000aba: 6a                                        ; i32.add
0000abb: 21                                        ; local.set
0000abc: 00                                        ; local index
0000abd: 0c                                        ; br
0000abe: 00                                        ; break depth
0000abf: 0b                                        ; end
0000ac0: 0b                                        ; end
0000ac1: 0b                                        ; end
; move data: [7eb, ac2) -> [7ec, ac3)
00007ea: d705                                      ; FIXUP func body size
; function body 8
0000ac3: 00                                        ; func body size (guess)
0000ac4: 00                                        ; local decl count
0000ac5: 10                                        ; call
0000ac6: 0d                                        ; function index
0000ac7: 20                                        ; local.get
0000ac8: 00                                        ; local index
0000ac9: 20                                        ; local.get
0000aca: 01                                        ; local index
0000acb: 10                                        ; call
0000acc: 0e                                        ; function index
0000acd: 10                                        ; call
0000ace: 0f                                        ; function index
0000acf: 0b                                        ; end
0000ac3: 0c                                        ; FIXUP func body size
; function body 9
0000ad0: 00                                        ; func body size (guess)
0000ad1: 01                                        ; local decl count
0000ad2: 02                                        ; local type count
0000ad3: 7f                                        ; i32
0000ad4: 20                                        ; local.get
0000ad5: 00                                        ; local index
0000ad6: 20                                        ; local.get
0000ad7: 02                                        ; local index
0000ad8: 92                                        ; f32.add
0000ad9: 20                                        ; local.get
0000ada: 03                                        ; local index
0000adb: 20                                        ; local.get
0000adc: 05                                        ; local index
0000add: 93                                        ; f32.sub
0000ade: 5d                                        ; f32.lt
0000adf: 20                                        ; local.get
0000ae0: 00                                        ; local index
0000ae1: 20                                        ; local.get
0000ae2: 02                                        ; local index
0000ae3: 93                                        ; f32.sub
0000ae4: 20                                        ; local.get
0000ae5: 03                                        ; local index
0000ae6: 20                                        ; local.get
0000ae7: 05                                        ; local index
0000ae8: 92                                        ; f32.add
0000ae9: 5e                                        ; f32.gt
0000aea: 6a                                        ; i32.add
0000aeb: 20                                        ; local.get
0000aec: 01                                        ; local index
0000aed: 20                                        ; local.get
0000aee: 02                                        ; local index
0000aef: 92                                        ; f32.add
0000af0: 20                                        ; local.get
0000af1: 04                                        ; local index
0000af2: 20                                        ; local.get
0000af3: 05                                        ; local index
0000af4: 93                                        ; f32.sub
0000af5: 5d                                        ; f32.lt
0000af6: 6a                                        ; i32.add
0000af7: 20                                        ; local.get
0000af8: 01                                        ; local index
0000af9: 20                                        ; local.get
0000afa: 02                                        ; local index
0000afb: 93                                        ; f32.sub
0000afc: 20                                        ; local.get
0000afd: 04                                        ; local index
0000afe: 20                                        ; local.get
0000aff: 05                                        ; local index
0000b00: 92                                        ; f32.add
0000b01: 5e                                        ; f32.gt
0000b02: 6a                                        ; i32.add
0000b03: 04                                        ; if
0000b04: 40                                        ; void
0000b05: 41                                        ; i32.const
0000b06: 00                                        ; i32 literal
0000b07: 0f                                        ; return
0000b08: 0b                                        ; end
0000b09: 20                                        ; local.get
0000b0a: 03                                        ; local index
0000b0b: 20                                        ; local.get
0000b0c: 00                                        ; local index
0000b0d: 93                                        ; f32.sub
0000b0e: bb                                        ; f64.promote_f32
0000b0f: 41                                        ; i32.const
0000b10: 02                                        ; i32 literal
0000b11: b2                                        ; f32.convert_i32_s
0000b12: bb                                        ; f64.promote_f32
0000b13: 10                                        ; call
0000b14: 00                                        ; function index
0000b15: 20                                        ; local.get
0000b16: 04                                        ; local index
0000b17: 20                                        ; local.get
0000b18: 01                                        ; local index
0000b19: 93                                        ; f32.sub
0000b1a: bb                                        ; f64.promote_f32
0000b1b: 41                                        ; i32.const
0000b1c: 02                                        ; i32 literal
0000b1d: b2                                        ; f32.convert_i32_s
0000b1e: bb                                        ; f64.promote_f32
0000b1f: 10                                        ; call
0000b20: 00                                        ; function index
0000b21: a0                                        ; f64.add
0000b22: 10                                        ; call
0000b23: 01                                        ; function index
0000b24: 20                                        ; local.get
0000b25: 02                                        ; local index
0000b26: 20                                        ; local.get
0000b27: 05                                        ; local index
0000b28: 92                                        ; f32.add
0000b29: bb                                        ; f64.promote_f32
0000b2a: 65                                        ; f64.le
0000b2b: 0f                                        ; return
0000b2c: 0b                                        ; end
0000ad0: 5c                                        ; FIXUP func body size
; function body 10
0000b2d: 00                                        ; func body size (guess)
0000b2e: 00                                        ; local decl count
0000b2f: 41                                        ; i32.const
0000b30: 8807                                      ; i32 literal
0000b32: 0f                                        ; return
0000b33: 0b                                        ; end
0000b2d: 06                                        ; FIXUP func body size
; function body 11
0000b34: 00                                        ; func body size (guess)
0000b35: 00                                        ; local decl count
0000b36: 41                                        ; i32.const
0000b37: 9807                                      ; i32 literal
0000b39: 0f                                        ; return
0000b3a: 0b                                        ; end
0000b34: 06                                        ; FIXUP func body size
; function body 12
0000b3b: 00                                        ; func body size (guess)
0000b3c: 00                                        ; local decl count
0000b3d: 41                                        ; i32.const
0000b3e: f007                                      ; i32 literal
0000b40: 0f                                        ; return
0000b41: 0b                                        ; end
0000b3b: 06                                        ; FIXUP func body size
; function body 13
0000b42: 00                                        ; func body size (guess)
0000b43: 00                                        ; local decl count
0000b44: 41                                        ; i32.const
0000b45: f807                                      ; i32 literal
0000b47: 0f                                        ; return
0000b48: 0b                                        ; end
0000b42: 06                                        ; FIXUP func body size
; function body 14
0000b49: 00                                        ; func body size (guess)
0000b4a: 00                                        ; local decl count
0000b4b: 41                                        ; i32.const
0000b4c: 8808                                      ; i32 literal
0000b4e: 0f                                        ; return
0000b4f: 0b                                        ; end
0000b49: 06                                        ; FIXUP func body size
; function body 15
0000b50: 00                                        ; func body size (guess)
0000b51: 00                                        ; local decl count
0000b52: 41                                        ; i32.const
0000b53: d008                                      ; i32 literal
0000b55: 0f                                        ; return
0000b56: 0b                                        ; end
0000b50: 06                                        ; FIXUP func body size
; function body 16
0000b57: 00                                        ; func body size (guess)
0000b58: 00                                        ; local decl count
0000b59: 41                                        ; i32.const
0000b5a: e008                                      ; i32 literal
0000b5c: 0f                                        ; return
0000b5d: 0b                                        ; end
0000b57: 06                                        ; FIXUP func body size
; function body 17
0000b5e: 00                                        ; func body size (guess)
0000b5f: 00                                        ; local decl count
0000b60: 41                                        ; i32.const
0000b61: 8809                                      ; i32 literal
0000b63: 0f                                        ; return
0000b64: 0b                                        ; end
0000b5e: 06                                        ; FIXUP func body size
; function body 18
0000b65: 00                                        ; func body size (guess)
0000b66: 00                                        ; local decl count
0000b67: 41                                        ; i32.const
0000b68: 9009                                      ; i32 literal
0000b6a: 0f                                        ; return
0000b6b: 0b                                        ; end
0000b65: 06                                        ; FIXUP func body size
; function body 19
0000b6c: 00                                        ; func body size (guess)
0000b6d: 00                                        ; local decl count
0000b6e: 10                                        ; call
0000b6f: 1c                                        ; function index
0000b70: 10                                        ; call
0000b71: 1d                                        ; function index
0000b72: 10                                        ; call
0000b73: 1e                                        ; function index
0000b74: 10                                        ; call
0000b75: 1f                                        ; function index
0000b76: 0b                                        ; end
0000b6c: 0a                                        ; FIXUP func body size
; function body 20
0000b77: 00                                        ; func body size (guess)
0000b78: 01                                        ; local decl count
0000b79: 04                                        ; local type count
0000b7a: 7f                                        ; i32
0000b7b: 41                                        ; i32.const
0000b7c: 08                                        ; i32 literal
0000b7d: 23                                        ; global.get
0000b7e: 0d                                        ; global index
0000b7f: 41                                        ; i32.const
0000b80: 01                                        ; i32 literal
0000b81: 6b                                        ; i32.sub
0000b82: 41                                        ; i32.const
0000b83: 0c                                        ; i32 literal
0000b84: 6c                                        ; i32.mul
0000b85: 6a                                        ; i32.add
0000b86: 41                                        ; i32.const
0000b87: 07                                        ; i32 literal
0000b88: 10                                        ; call
0000b89: 08                                        ; function index
0000b8a: 21                                        ; local.set
0000b8b: 00                                        ; local index
0000b8c: 20                                        ; local.get
0000b8d: 00                                        ; local index
0000b8e: 41                                        ; i32.const
0000b8f: d804                                      ; i32 literal
0000b91: 36                                        ; i32.store
0000b92: 02                                        ; alignment
0000b93: 00                                        ; store offset
0000b94: 20                                        ; local.get
0000b95: 00                                        ; local index
0000b96: 41                                        ; i32.const
0000b97: 04                                        ; i32 literal
0000b98: 6a                                        ; i32.add
0000b99: 23                                        ; global.get
0000b9a: 0d                                        ; global index
0000b9b: 41                                        ; i32.const
0000b9c: 01                                        ; i32 literal
0000b9d: 6b                                        ; i32.sub
0000b9e: 36                                        ; i32.store
0000b9f: 02                                        ; alignment
0000ba0: 00                                        ; store offset
0000ba1: 20                                        ; local.get
0000ba2: 00                                        ; local index
0000ba3: 24                                        ; global.set
0000ba4: 0e                                        ; global index
0000ba5: 41                                        ; i32.const
0000ba6: 08                                        ; i32 literal
0000ba7: 23                                        ; global.get
0000ba8: 0d                                        ; global index
0000ba9: 41                                        ; i32.const
0000baa: 01                                        ; i32 literal
0000bab: 6b                                        ; i32.sub
0000bac: 41                                        ; i32.const
0000bad: 04                                        ; i32 literal
0000bae: 6c                                        ; i32.mul
0000baf: 6a                                        ; i32.add
0000bb0: 41                                        ; i32.const
0000bb1: 07                                        ; i32 literal
0000bb2: 10                                        ; call
0000bb3: 08                                        ; function index
0000bb4: 21                                        ; local.set
0000bb5: 01                                        ; local index
0000bb6: 20                                        ; local.get
0000bb7: 01                                        ; local index
0000bb8: 41                                        ; i32.const
0000bb9: 0d                                        ; i32 literal
0000bba: 36                                        ; i32.store
0000bbb: 02                                        ; alignment
0000bbc: 00                                        ; store offset
0000bbd: 20                                        ; local.get
0000bbe: 01                                        ; local index
0000bbf: 41                                        ; i32.const
0000bc0: 04                                        ; i32 literal
0000bc1: 6a                                        ; i32.add
0000bc2: 23                                        ; global.get
0000bc3: 0d                                        ; global index
0000bc4: 41                                        ; i32.const
0000bc5: 01                                        ; i32 literal
0000bc6: 6b                                        ; i32.sub
0000bc7: 36                                        ; i32.store
0000bc8: 02                                        ; alignment
0000bc9: 00                                        ; store offset
0000bca: 20                                        ; local.get
0000bcb: 01                                        ; local index
0000bcc: 24                                        ; global.set
0000bcd: 0f                                        ; global index
0000bce: 41                                        ; i32.const
0000bcf: 08                                        ; i32 literal
0000bd0: 23                                        ; global.get
0000bd1: 0d                                        ; global index
0000bd2: 41                                        ; i32.const
0000bd3: 04                                        ; i32 literal
0000bd4: 6c                                        ; i32.mul
0000bd5: 41                                        ; i32.const
0000bd6: 01                                        ; i32 literal
0000bd7: 6b                                        ; i32.sub
0000bd8: 41                                        ; i32.const
0000bd9: 04                                        ; i32 literal
0000bda: 6c                                        ; i32.mul
0000bdb: 6a                                        ; i32.add
0000bdc: 41                                        ; i32.const
0000bdd: 07                                        ; i32 literal
0000bde: 10                                        ; call
0000bdf: 08                                        ; function index
0000be0: 21                                        ; local.set
0000be1: 02                                        ; local index
0000be2: 20                                        ; local.get
0000be3: 02                                        ; local index
0000be4: 41                                        ; i32.const
0000be5: 9002                                      ; i32 literal
0000be7: 36                                        ; i32.store
0000be8: 02                                        ; alignment
0000be9: 00                                        ; store offset
0000bea: 20                                        ; local.get
0000beb: 02                                        ; local index
0000bec: 41                                        ; i32.const
0000bed: 04                                        ; i32 literal
0000bee: 6a                                        ; i32.add
0000bef: 23                                        ; global.get
0000bf0: 0d                                        ; global index
0000bf1: 41                                        ; i32.const
0000bf2: 04                                        ; i32 literal
0000bf3: 6c                                        ; i32.mul
0000bf4: 41                                        ; i32.const
0000bf5: 01                                        ; i32 literal
0000bf6: 6b                                        ; i32.sub
0000bf7: 36                                        ; i32.store
0000bf8: 02                                        ; alignment
0000bf9: 00                                        ; store offset
0000bfa: 20                                        ; local.get
0000bfb: 02                                        ; local index
0000bfc: 24                                        ; global.set
0000bfd: 10                                        ; global index
0000bfe: 41                                        ; i32.const
0000bff: 08                                        ; i32 literal
0000c00: 23                                        ; global.get
0000c01: 0c                                        ; global index
0000c02: 41                                        ; i32.const
0000c03: 01                                        ; i32 literal
0000c04: 6b                                        ; i32.sub
0000c05: 41                                        ; i32.const
0000c06: 04                                        ; i32 literal
0000c07: 6c                                        ; i32.mul
0000c08: 6a                                        ; i32.add
0000c09: 41                                        ; i32.const
0000c0a: 07                                        ; i32 literal
0000c0b: 10                                        ; call
0000c0c: 08                                        ; function index
0000c0d: 21                                        ; local.set
0000c0e: 03                                        ; local index
0000c0f: 20                                        ; local.get
0000c10: 03                                        ; local index
0000c11: 41                                        ; i32.const
0000c12: 9002                                      ; i32 literal
0000c14: 36                                        ; i32.store
0000c15: 02                                        ; alignment
0000c16: 00                                        ; store offset
0000c17: 20                                        ; local.get
0000c18: 03                                        ; local index
0000c19: 41                                        ; i32.const
0000c1a: 04                                        ; i32 literal
0000c1b: 6a                                        ; i32.add
0000c1c: 23                                        ; global.get
0000c1d: 0c                                        ; global index
0000c1e: 41                                        ; i32.const
0000c1f: 01                                        ; i32 literal
0000c20: 6b                                        ; i32.sub
0000c21: 36                                        ; i32.store
0000c22: 02                                        ; alignment
0000c23: 00                                        ; store offset
0000c24: 20                                        ; local.get
0000c25: 03                                        ; local index
0000c26: 24                                        ; global.set
0000c27: 11                                        ; global index
0000c28: 0b                                        ; end
; move data: [b78, c29) -> [b79, c2a)
0000b77: b101                                      ; FIXUP func body size
; function body 21
0000c2a: 00                                        ; func body size (guess)
0000c2b: 00                                        ; local decl count
0000c2c: 0b                                        ; end
0000c2a: 02                                        ; FIXUP func body size
; function body 22
0000c2d: 00                                        ; func body size (guess)
0000c2e: 01                                        ; local decl count
0000c2f: 02                                        ; local type count
0000c30: 7f                                        ; i32
0000c31: 41                                        ; i32.const
0000c32: 00                                        ; i32 literal
0000c33: 21                                        ; local.set
0000c34: 00                                        ; local index
0000c35: 02                                        ; block
0000c36: 40                                        ; void
0000c37: 03                                        ; loop
0000c38: 40                                        ; void
0000c39: 20                                        ; local.get
0000c3a: 00                                        ; local index
0000c3b: 23                                        ; global.get
0000c3c: 11                                        ; global index
0000c3d: 41                                        ; i32.const
0000c3e: 04                                        ; i32 literal
0000c3f: 6a                                        ; i32.add
0000c40: 28                                        ; i32.load
0000c41: 02                                        ; alignment
0000c42: 00                                        ; load offset
0000c43: 41                                        ; i32.const
0000c44: 01                                        ; i32 literal
0000c45: 6b                                        ; i32.sub
0000c46: 4a                                        ; i32.gt_s
0000c47: 0d                                        ; br_if
0000c48: 01                                        ; break depth
0000c49: 23                                        ; global.get
0000c4a: 11                                        ; global index
0000c4b: 41                                        ; i32.const
0000c4c: 08                                        ; i32 literal
0000c4d: 6a                                        ; i32.add
0000c4e: 20                                        ; local.get
0000c4f: 00                                        ; local index
0000c50: 41                                        ; i32.const
0000c51: 04                                        ; i32 literal
0000c52: 6c                                        ; i32.mul
0000c53: 6a                                        ; i32.add
0000c54: 20                                        ; local.get
0000c55: 01                                        ; local index
0000c56: 36                                        ; i32.store
0000c57: 02                                        ; alignment
0000c58: 00                                        ; store offset
0000c59: 20                                        ; local.get
0000c5a: 00                                        ; local index
0000c5b: 41                                        ; i32.const
0000c5c: 01                                        ; i32 literal
0000c5d: 6a                                        ; i32.add
0000c5e: 21                                        ; local.set
0000c5f: 00                                        ; local index
0000c60: 0c                                        ; br
0000c61: 00                                        ; break depth
0000c62: 0b                                        ; end
0000c63: 0b                                        ; end
0000c64: 0b                                        ; end
0000c2d: 37                                        ; FIXUP func body size
; function body 23
0000c65: 00                                        ; func body size (guess)
0000c66: 00                                        ; local decl count
0000c67: 0b                                        ; end
0000c65: 02                                        ; FIXUP func body size
; move data: [321, c68) -> [322, c69)
0000320: c712                                      ; FIXUP section size
; section "Data" (11)
0000c69: 0b                                        ; section code
0000c6a: 00                                        ; section size (guess)
0000c6b: 0c                                        ; num data segments
; data segment header 0
0000c6c: 00                                      
0000c6d: 41                                        ; i32.const
0000c6e: 8807                                      ; i32 literal
0000c70: 0b                                        ; end
0000c71: 0b                                        ; data segment size
; data segment data 0
0000c72: 5765 6247 4c2d 4465 6d6f 00               ; data segment data
; data segment header 1
0000c7d: 00                                      
0000c7e: 41                                        ; i32.const
0000c7f: 9807                                      ; i32 literal
0000c81: 0b                                        ; end
0000c82: 51                                        ; data segment size
; data segment data 1
0000c83: 5765 6241 7373 656d 626c 7920 636f 6e76 
0000c93: 6572 7369 6f6e 2064 656d 6f6e 7374 7261 
0000ca3: 7469 6e67 2074 6865 2066 6173 7465 722d 
0000cb3: 7065 7266 6f72 6d69 6e67 2067 7269 6420 
0000cc3: 6f66 206c 696e 6b65 642d 6c69 7374 732e 
0000cd3: 00                                        ; data segment data
; data segment header 2
0000cd4: 00                                      
0000cd5: 41                                        ; i32.const
0000cd6: f007                                      ; i32 literal
0000cd8: 0b                                        ; end
0000cd9: 04                                        ; data segment size
; data segment data 2
0000cda: 4d49 5400                                 ; data segment data
; data segment header 3
0000cde: 00                                      
0000cdf: 41                                        ; i32.const
0000ce0: f807                                      ; i32 literal
0000ce2: 0b                                        ; end
0000ce3: 0b                                        ; data segment size
; data segment data 3
0000ce4: 5765 6247 4c2d 4465 6d6f 00               ; data segment data
; data segment header 4
0000cef: 00                                      
0000cf0: 41                                        ; i32.const
0000cf1: 8808                                      ; i32 literal
0000cf3: 0b                                        ; end
0000cf4: 46                                        ; data segment size
; data segment data 4
0000cf5: 6874 7470 733a 2f2f 6769 7468 7562 2e63 
0000d05: 6f6d 2f67 7579 6265 6466 6f72 642f 7761 
0000d15: 736d 2d64 656d 6f2f 626c 6f62 2f6d 6173 
0000d25: 7465 722f 6e61 7469 7665 2f64 656d 6f2d 
0000d35: 6f70 742e 6300                            ; data segment data
; data segment header 5
0000d3b: 00                                      
0000d3c: 41                                        ; i32.const
0000d3d: d008                                      ; i32 literal
0000d3f: 0b                                        ; end
0000d40: 0e                                        ; data segment size
; data segment data 5
0000d41: 7661 6e69 6c6c 6176 622e 6170 7000        ; data segment data
; data segment header 6
0000d4f: 00                                      
0000d50: 41                                        ; i32.const
0000d51: e008                                      ; i32 literal
0000d53: 0b                                        ; end
0000d54: 25                                        ; data segment size
; data segment data 6
0000d55: 3833 6361 3262 3933 2d34 6535 372d 3464 
0000d65: 3434 2d62 3262 632d 3136 3332 3532 6139 
0000d75: 3330 3564 00                              ; data segment data
; data segment header 7
0000d7a: 00                                      
0000d7b: 41                                        ; i32.const
0000d7c: 8809                                      ; i32 literal
0000d7e: 0b                                        ; end
0000d7f: 08                                        ; data segment size
; data segment data 7
0000d80: 312e 302e 302e 3000                       ; data segment data
; data segment header 8
0000d88: 00                                      
0000d89: 41                                        ; i32.const
0000d8a: 9009                                      ; i32 literal
0000d8c: 0b                                        ; end
0000d8d: 08                                        ; data segment size
; data segment data 8
0000d8e: 312e 302e 302e 3000                       ; data segment data
; data segment header 9
0000d96: 00                                      
0000d97: 41                                        ; i32.const
0000d98: 0d                                        ; i32 literal
0000d99: 0b                                        ; end
0000d9a: fd01                                      ; data segment size
; data segment data 9
0000d9c: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000dac: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0000dbc: 496b 4e70 636d 4e73 5a56 5969 4c43 4a6a 
0000dcc: 6247 467a 6331 3970 5a43 4936 4d54 4d73 
0000ddc: 496d 5a70 5a57 786b 6379 4936 6579 4a32 
0000dec: 6543 4936 6579 4a6e 5a57 356c 636d 6c6a 
0000dfc: 496a 7062 5853 7769 636d 4633 496a 6f69 
0000e0c: 5a6a 4d79 4969 7769 6448 6c77 5a53 4936 
0000e1c: 4d33 3073 496e 5a35 496a 7037 496d 646c 
0000e2c: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
0000e3c: 5958 6369 4f69 4a6d 4d7a 4969 4c43 4a30 
0000e4c: 6558 426c 496a 6f7a 6658 3073 496d 6c7a 
0000e5c: 5533 5279 6457 4e30 496a 706d 5957 787a 
0000e6c: 5a53 7769 6257 5630 6147 396b 6379 4936 
0000e7c: 6533 3073 496d 3568 6257 567a 6347 466a 
0000e8c: 5a53 4936 626e 5673 6248 303d 00          ; data segment data
; data segment header 10
0000e99: 00                                      
0000e9a: 41                                        ; i32.const
0000e9b: 9002                                      ; i32 literal
0000e9d: 0b                                        ; end
0000e9e: a102                                      ; data segment size
; data segment data 10
0000ea0: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000eb0: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0000ec0: 496b 4e6c 6247 7844 6158 4a6a 6247 5569 
0000ed0: 4c43 4a6a 6247 467a 6331 3970 5a43 4936 
0000ee0: 4d6a 6379 4c43 4a6d 6157 5673 5a48 4d69 
0000ef0: 4f6e 7369 626d 5634 6443 4936 6579 4a6e 
0000f00: 5a57 356c 636d 6c6a 496a 7062 5853 7769 
0000f10: 636d 4633 496a 6f69 577a 4933 4d6c 3144 
0000f20: 5a57 7873 5132 6c79 5932 786c 4969 7769 
0000f30: 6448 6c77 5a53 4936 4d54 4239 4c43 4a6a 
0000f40: 6158 4a6a 6247 564a 626d 526c 6543 4936 
0000f50: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
0000f60: 5853 7769 636d 4633 496a 6f69 6154 4d79 
0000f70: 4969 7769 6448 6c77 5a53 4936 4d58 3139 
0000f80: 4c43 4a70 6331 4e30 636e 566a 6443 4936 
0000f90: 5a6d 4673 6332 5573 496d 316c 6447 6876 
0000fa0: 5a48 4d69 4f6e 7439 4c43 4a75 5957 316c 
0000fb0: 6333 4268 5932 5569 4f6d 3531 6247 7839 
0000fc0: 00                                        ; data segment data
; data segment header 11
0000fc1: 00                                      
0000fc2: 41                                        ; i32.const
0000fc3: d804                                      ; i32 literal
0000fc5: 0b                                        ; end
0000fc6: ad02                                      ; data segment size
; data segment data 11
0000fc8: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000fd8: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0000fe8: 496b 4e70 636d 4e73 5a53 4973 496d 4e73 
0000ff8: 5958 4e7a 5832 6c6b 496a 6f32 4d44 4173 
0001008: 496d 5a70 5a57 786b 6379 4936 6579 4a35 
0001018: 496a 7037 496d 646c 626d 5679 6157 4d69 
0001028: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a6d 
0001038: 4d7a 4969 4c43 4a30 6558 426c 496a 6f7a 
0001048: 6653 7769 6543 4936 6579 4a6e 5a57 356c 
0001058: 636d 6c6a 496a 7062 5853 7769 636d 4633 
0001068: 496a 6f69 5a6a 4d79 4969 7769 6448 6c77 
0001078: 5a53 4936 4d33 3073 496e 4969 4f6e 7369 
0001088: 5a32 5675 5a58 4a70 5979 4936 5731 3073 
0001098: 496e 4a68 6479 4936 496d 597a 4d69 4973 
00010a8: 496e 5235 6347 5569 4f6a 4e39 6653 7769 
00010b8: 6158 4e54 6448 4a31 5933 5169 4f6e 5279 
00010c8: 6457 5573 496d 316c 6447 6876 5a48 4d69 
00010d8: 4f6e 7439 4c43 4a75 5957 316c 6333 4268 
00010e8: 5932 5569 4f6d 3531 6247 7839 00          ; data segment data
; move data: [c6b, 10f5) -> [c6c, 10f6)
0000c6a: 8a09                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0131 0960 027c 7c01 
0000010: 7c60 017c 017c 6000 017c 6002 7f7f 0060 
0000020: 027f 7f01 7f60 0001 7f60 027d 7d00 6000 
0000030: 0060 067d 7d7d 7d7d 7d01 7f02 7609 044d 
0000040: 6174 6803 706f 7700 0004 4d61 7468 0473 
0000050: 7172 7400 0104 4d61 7468 0365 7870 0001 
0000060: 044d 6174 6803 636f 7300 0104 4d61 7468 
0000070: 0672 616e 646f 6d00 0204 4d61 7468 0463 
0000080: 6569 6c00 0104 4d61 7468 0566 6c6f 6f72 
0000090: 0001 0247 4309 6164 644f 626a 6563 7400 
00000a0: 0303 656e 760a 6279 7465 6368 756e 6b73 
00000b0: 0200 0103 1918 0405 0505 0607 0607 0608 
00000c0: 0505 0505 0505 0505 0507 0707 0707 069c 
00000d0: 0112 7f01 4198 090b 7c01 4469 5714 8b0a 
00000e0: bf05 400b 7c01 4418 2d44 54fb 2109 400b 
00000f0: 7f01 41ff ffff ff07 0b7e 0142 ffff ffff 
0000100: ffff ffff ff00 0b7d 0143 ffff 7f7f 0b7c 
0000110: 0144 ffff ffff ffff ef7f 0b7f 0141 8080 
0000120: 8080 780b 7e01 4280 8080 8080 8080 8080 
0000130: 7f0b 7d01 43ff ff7f ff0b 7c01 44ff ffff 
0000140: ffff ffef ff0b 7f01 41f8 000b 7f01 41c6 
0000150: 000b 7f01 4190 ce00 0b7f 0141 000b 7f01 
0000160: 4100 0b7f 0141 000b 7f01 4100 0b07 ac03 
0000170: 0f14 676c 6f62 616c 2e47 6574 4d65 6d6f 
0000180: 7279 5369 7a65 0009 1841 6c67 6f72 6974 
0000190: 686d 2e67 6574 4369 7263 6c65 436f 756e 
00001a0: 7400 0a1d 416c 676f 7269 7468 6d2e 6765 
00001b0: 7443 6972 636c 6544 6174 614f 6666 7365 
00001c0: 7400 0b0e 416c 676f 7269 7468 6d2e 696e 
00001d0: 6974 000c 1241 6c67 6f72 6974 686d 2e74 
00001e0: 696d 6553 7465 7000 101a 4d61 7468 2e64 
00001f0: 6574 6563 7443 6972 636c 6543 6f6c 6c69 
0000200: 7369 6f6e 0011 1a41 7373 656d 626c 7949 
0000210: 6e66 6f2e 4173 7365 6d62 6c79 5469 746c 
0000220: 6500 1220 4173 7365 6d62 6c79 496e 666f 
0000230: 2e41 7373 656d 626c 7944 6573 6372 6970 
0000240: 7469 6f6e 0013 1c41 7373 656d 626c 7949 
0000250: 6e66 6f2e 4173 7365 6d62 6c79 436f 6d70 
0000260: 616e 7900 141c 4173 7365 6d62 6c79 496e 
0000270: 666f 2e41 7373 656d 626c 7950 726f 6475 
0000280: 6374 0015 1e41 7373 656d 626c 7949 6e66 
0000290: 6f2e 4173 7365 6d62 6c79 436f 7079 7269 
00002a0: 6768 7400 161e 4173 7365 6d62 6c79 496e 
00002b0: 666f 2e41 7373 656d 626c 7954 7261 6465 
00002c0: 6d61 726b 0017 1141 7373 656d 626c 7949 
00002d0: 6e66 6f2e 4775 6964 0018 1c41 7373 656d 
00002e0: 626c 7949 6e66 6f2e 4173 7365 6d62 6c79 
00002f0: 5665 7273 696f 6e00 1920 4173 7365 6d62 
0000300: 6c79 496e 666f 2e41 7373 656d 626c 7946 
0000310: 696c 6556 6572 7369 6f6e 001a 0801 1b0a 
0000320: c712 183a 0102 7f23 0021 0220 0220 006a 
0000330: 2400 2300 4108 6f21 0320 0304 4041 0820 
0000340: 036b 2103 2300 2003 6a24 0005 2300 4108 
0000350: 6a24 000b 2002 2001 1007 2002 0f0b 0500 
0000360: 2300 0f0b 0701 047f 230d 0f0b 0500 230e 
0000370: 0f0b a803 0302 7f03 7d01 7f41 0021 0202 
0000380: 4003 4020 0223 0d41 016b 4a0d 0141 0021 
0000390: 0343 0000 0000 2104 4300 0000 0021 0543 
00003a0: 0000 0000 2106 0240 0340 4100 2103 2000 
00003b0: bb10 04a2 b621 0420 01bb 1004 a2b6 2105 
00003c0: 1004 4108 b7a2 1002 44ee 5a42 3ee8 4937 
00003d0: 40a3 1005 b621 0620 0020 0420 0692 9341 
00003e0: 00b2 5d20 0420 0693 4100 b25d 6a20 0120 
00003f0: 0520 0692 9341 00b2 5d6a 2005 2006 9341 
0000400: 00b2 5d6a 0440 4101 2103 0541 0021 0702 
0000410: 4003 4020 0720 0241 016b 4a0d 0120 0420 
0000420: 0520 0623 0e41 086a 2007 410c 6c6a 2802 
0000430: 0041 046a 2a02 0023 0e41 086a 2007 410c 
0000440: 6c6a 2802 0041 006a 2a02 0023 0e41 086a 
0000450: 2007 410c 6c6a 2802 0041 086a 2a02 0010 
0000460: 1104 4041 0121 0341 010d 050b 2007 4101 
0000470: 6a21 070c 000b 0b0b 2003 450d 010c 000b 
0000480: 0b23 0e41 086a 2002 410c 6c6a 4104 6a20 
0000490: 0438 0200 230e 4108 6a20 0241 0c6c 6a41 
00004a0: 006a 2005 3802 0023 0e41 086a 2002 410c 
00004b0: 6c6a 4108 6a20 0638 0200 230f 4108 6a20 
00004c0: 0241 046c 6a28 0200 4100 6a10 0444 0000 
00004d0: 0000 0000 e03f a144 9a99 9999 9999 b93f 
00004e0: a2b6 3802 0023 0f41 086a 2002 4104 6c6a 
00004f0: 2802 0041 046a 1004 4400 0000 0000 00e0 
0000500: 3fa1 449a 9999 9999 99b9 3fa2 b638 0200 
0000510: 2002 4101 6a21 020c 000b 0b0b 5e01 037f 
0000520: 4100 2100 0240 0340 2000 230c 4101 6b4a 
0000530: 0d01 2311 4108 6a20 0041 046c 6a28 0200 
0000540: 2101 4100 2102 0240 0340 2002 230b 4101 
0000550: 6b4a 0d01 2001 4108 6a20 0241 046c 6a41 
0000560: 0036 0200 2002 4101 6a21 020c 000b 0b20 
0000570: 0041 016a 2100 0c00 0b0b 0bee 0403 027f 
0000580: 057d 087f 4100 2102 4100 2103 0240 0340 
0000590: 2003 230d 4101 6b4a 0d01 230e 4108 6a20 
00005a0: 0341 0c6c 6a28 0200 4104 6a2a 0200 2104 
00005b0: 230e 4108 6a20 0341 0c6c 6a28 0200 4100 
00005c0: 6a2a 0200 2105 230e 4108 6a20 0341 0c6c 
00005d0: 6a28 0200 4108 6a2a 0200 2106 230f 4108 
00005e0: 6a20 0341 046c 6a28 0200 4100 6a2a 0200 
00005f0: 2107 230f 4108 6a20 0341 046c 6a28 0200 
0000600: 4104 6a2a 0200 2108 2008 bb44 2d43 1ceb 
0000610: e236 1a3f a0b6 2108 2000 2004 2006 9293 
0000620: 4100 b25d 2007 4100 b25e 6c20 0420 0693 
0000630: 4100 b25d 2007 4100 b25d 6c6a 0440 4300 
0000640: 0000 0020 0793 2107 0b20 0120 0520 0692 
0000650: 9341 00b2 5d20 0841 00b2 5e6c 2005 2006 
0000660: 9341 00b2 5d20 0841 00b2 5d6c 6a04 4043 
0000670: 0000 0000 2008 9321 080b 230e 4108 6a20 
0000680: 0341 0c6c 6a41 046a 2004 2007 9238 0200 
0000690: 230e 4108 6a20 0341 0c6c 6a41 006a 2005 
00006a0: 2008 9238 0200 230f 4108 6a20 0341 046c 
00006b0: 6a28 0200 4100 6a20 0738 0200 230f 4108 
00006c0: 6a20 0341 046c 6a28 0200 4104 6a20 0838 
00006d0: 0200 2004 2006 93bb 2000 bba3 230c b7a2 
00006e0: 1006 aa21 0920 0420 0692 bb20 00bb a323 
00006f0: 0cb7 a210 06aa 210a 2005 2006 93bb 2001 
0000700: bba3 230b b7a2 1006 aa21 0b20 0520 0692 
0000710: bb20 01bb a323 0bb7 a210 06aa 210c 2009 
0000720: 4100 4804 4041 0021 090b 200a 230c 4e04 
0000730: 4023 0c41 016b 210a 0b20 0b41 0048 0440 
0000740: 4100 210b 0b20 0c23 0b4e 0440 230b 4101 
0000750: 6b21 0c0b 2009 210d 0240 0340 200d 200a 
0000760: 4a0d 0123 1141 086a 200d 4104 6c6a 2802 
0000770: 0021 0e20 0b21 0f02 4003 4020 0f20 0c4a 
0000780: 0d01 2310 4108 6a20 0241 046c 6a28 0200 
0000790: 2110 2002 4101 6a21 0220 1041 046a 2003 
00007a0: 3602 0020 1041 006a 200e 4108 6a20 0f41 
00007b0: 046c 6a28 0200 3602 0020 0e41 086a 200f 
00007c0: 4104 6c6a 2010 3602 0020 0f41 016a 210f 
00007d0: 0c00 0b0b 200d 4101 6a21 0d0c 000b 0b20 
00007e0: 0341 016a 2103 0c00 0b0b 0bd7 0507 057f 
00007f0: 057d 027f 077d 017c 047d 047c 4100 2100 
0000800: 0240 0340 2000 230c 4101 6b4a 0d01 2311 
0000810: 4108 6a20 0041 046c 6a28 0200 2101 4100 
0000820: 2102 0240 0340 2002 230b 4101 6b4a 0d01 
0000830: 2001 4108 6a20 0241 046c 6a28 0200 2103 
0000840: 0240 0340 2003 4100 4645 450d 0120 0341 
0000850: 046a 2802 0021 0423 0e41 086a 2004 410c 
0000860: 6c6a 2802 0041 046a 2a02 0021 0523 0e41 
0000870: 086a 2004 410c 6c6a 2802 0041 006a 2a02 
0000880: 0021 0623 0e41 086a 2004 410c 6c6a 2802 
0000890: 0041 086a 2a02 0021 0723 0f41 086a 2004 
00008a0: 4104 6c6a 2802 0041 006a 2a02 0021 0823 
00008b0: 0f41 086a 2004 4104 6c6a 2802 0041 046a 
00008c0: 2a02 0021 0920 0321 0a20 0a41 006a 2802 
00008d0: 0021 0a02 4003 4020 0a41 0046 4545 0d01 
00008e0: 200a 4104 6a28 0200 210b 230e 4108 6a20 
00008f0: 0b41 0c6c 6a28 0200 4104 6a2a 0200 210c 
0000900: 230e 4108 6a20 0b41 0c6c 6a28 0200 4100 
0000910: 6a2a 0200 210d 230e 4108 6a20 0b41 0c6c 
0000920: 6a28 0200 4108 6a2a 0200 210e 2005 2006 
0000930: 2007 200c 200d 200e 1011 0440 230f 4108 
0000940: 6a20 0b41 046c 6a28 0200 4100 6a2a 0200 
0000950: 210f 230f 4108 6a20 0b41 046c 6a28 0200 
0000960: 4104 6a2a 0200 2110 200c 2005 9321 1120 
0000970: 0d20 0693 2112 2011 2011 9420 1220 1294 
0000980: 92bb 1001 2113 2011 bb20 13a3 b621 1120 
0000990: 12bb 2013 a3b6 2112 2011 2008 9420 1220 
00009a0: 0994 9221 1420 1120 0f94 2012 2010 9492 
00009b0: 2115 2014 2015 9341 00b2 5f45 0440 2007 
00009c0: 200e 9221 1620 0720 0e93 2117 2014 2017 
00009d0: 9441 02b2 200e 9420 1594 92bb 2016 bba3 
00009e0: 2118 4102 b220 0794 2014 9420 1520 1794 
00009f0: 93bb 2016 bba3 2119 2018 2014 bba1 211a 
0000a00: 2019 2015 bba1 211b 230f 4108 6a20 0441 
0000a10: 046c 6a28 0200 4100 6a20 08bb 2011 bb20 
0000a20: 1aa2 a0b6 3802 0023 0f41 086a 2004 4104 
0000a30: 6c6a 2802 0041 046a 2009 bb20 12bb 201a 
0000a40: a2a0 b638 0200 230f 4108 6a20 0b41 046c 
0000a50: 6a28 0200 4100 6a20 0fbb 2011 bb20 1ba2 
0000a60: a0b6 3802 0023 0f41 086a 200b 4104 6c6a 
0000a70: 2802 0041 046a 2010 bb20 12bb 201b a2a0 
0000a80: b638 0200 200a 4100 6a28 0200 210a 0b05 
0000a90: 200a 4100 6a28 0200 210a 0b0c 000b 0b20 
0000aa0: 0341 006a 2802 0021 030c 000b 0b20 0241 
0000ab0: 016a 2102 0c00 0b0b 2000 4101 6a21 000c 
0000ac0: 000b 0b0b 0c00 100d 2000 2001 100e 100f 
0000ad0: 0b5c 0102 7f20 0020 0292 2003 2005 935d 
0000ae0: 2000 2002 9320 0320 0592 5e6a 2001 2002 
0000af0: 9220 0420 0593 5d6a 2001 2002 9320 0420 
0000b00: 0592 5e6a 0440 4100 0f0b 2003 2000 93bb 
0000b10: 4102 b2bb 1000 2004 2001 93bb 4102 b2bb 
0000b20: 1000 a010 0120 0220 0592 bb65 0f0b 0600 
0000b30: 4188 070f 0b06 0041 9807 0f0b 0600 41f0 
0000b40: 070f 0b06 0041 f807 0f0b 0600 4188 080f 
0000b50: 0b06 0041 d008 0f0b 0600 41e0 080f 0b06 
0000b60: 0041 8809 0f0b 0600 4190 090f 0b0a 0010 
0000b70: 1c10 1d10 1e10 1f0b b101 0104 7f41 0823 
0000b80: 0d41 016b 410c 6c6a 4107 1008 2100 2000 
0000b90: 41d8 0436 0200 2000 4104 6a23 0d41 016b 
0000ba0: 3602 0020 0024 0e41 0823 0d41 016b 4104 
0000bb0: 6c6a 4107 1008 2101 2001 410d 3602 0020 
0000bc0: 0141 046a 230d 4101 6b36 0200 2001 240f 
0000bd0: 4108 230d 4104 6c41 016b 4104 6c6a 4107 
0000be0: 1008 2102 2002 4190 0236 0200 2002 4104 
0000bf0: 6a23 0d41 046c 4101 6b36 0200 2002 2410 
0000c00: 4108 230c 4101 6b41 046c 6a41 0710 0821 
0000c10: 0320 0341 9002 3602 0020 0341 046a 230c 
0000c20: 4101 6b36 0200 2003 2411 0b02 000b 3701 
0000c30: 027f 4100 2100 0240 0340 2000 2311 4104 
0000c40: 6a28 0200 4101 6b4a 0d01 2311 4108 6a20 
0000c50: 0041 046c 6a20 0136 0200 2000 4101 6a21 
0000c60: 000c 000b 0b0b 0200 0b0b 8a09 0c00 4188 
0000c70: 070b 0b57 6562 474c 2d44 656d 6f00 0041 
0000c80: 9807 0b51 5765 6241 7373 656d 626c 7920 
0000c90: 636f 6e76 6572 7369 6f6e 2064 656d 6f6e 
0000ca0: 7374 7261 7469 6e67 2074 6865 2066 6173 
0000cb0: 7465 722d 7065 7266 6f72 6d69 6e67 2067 
0000cc0: 7269 6420 6f66 206c 696e 6b65 642d 6c69 
0000cd0: 7374 732e 0000 41f0 070b 044d 4954 0000 
0000ce0: 41f8 070b 0b57 6562 474c 2d44 656d 6f00 
0000cf0: 0041 8808 0b46 6874 7470 733a 2f2f 6769 
0000d00: 7468 7562 2e63 6f6d 2f67 7579 6265 6466 
0000d10: 6f72 642f 7761 736d 2d64 656d 6f2f 626c 
0000d20: 6f62 2f6d 6173 7465 722f 6e61 7469 7665 
0000d30: 2f64 656d 6f2d 6f70 742e 6300 0041 d008 
0000d40: 0b0e 7661 6e69 6c6c 6176 622e 6170 7000 
0000d50: 0041 e008 0b25 3833 6361 3262 3933 2d34 
0000d60: 6535 372d 3464 3434 2d62 3262 632d 3136 
0000d70: 3332 3532 6139 3330 3564 0000 4188 090b 
0000d80: 0831 2e30 2e30 2e30 0000 4190 090b 0831 
0000d90: 2e30 2e30 2e30 0000 410d 0bfd 0165 794a 
0000da0: 6a62 3231 745a 5735 3049 6a70 7564 5778 
0000db0: 734c 434a 6a62 4746 7a63 7949 3649 6b4e 
0000dc0: 7063 6d4e 735a 5659 694c 434a 6a62 4746 
0000dd0: 7a63 3139 705a 4349 364d 544d 7349 6d5a 
0000de0: 705a 5778 6b63 7949 3665 794a 3265 4349 
0000df0: 3665 794a 6e5a 5735 6c63 6d6c 6a49 6a70 
0000e00: 6258 5377 6963 6d46 3349 6a6f 695a 6a4d 
0000e10: 7949 6977 6964 486c 775a 5349 364d 3330 
0000e20: 7349 6e5a 3549 6a70 3749 6d64 6c62 6d56 
0000e30: 7961 574d 694f 6c74 644c 434a 7959 5863 
0000e40: 694f 694a 6d4d 7a49 694c 434a 3065 5842 
0000e50: 6c49 6a6f 7a66 5830 7349 6d6c 7a55 3352 
0000e60: 7964 574e 3049 6a70 6d59 5778 7a5a 5377 
0000e70: 6962 5756 3061 4739 6b63 7949 3665 3330 
0000e80: 7349 6d35 6862 5756 7a63 4746 6a5a 5349 
0000e90: 3662 6e56 7362 4830 3d00 0041 9002 0ba1 
0000ea0: 0265 794a 6a62 3231 745a 5735 3049 6a70 
0000eb0: 7564 5778 734c 434a 6a62 4746 7a63 7949 
0000ec0: 3649 6b4e 6c62 4778 4461 584a 6a62 4755 
0000ed0: 694c 434a 6a62 4746 7a63 3139 705a 4349 
0000ee0: 364d 6a63 794c 434a 6d61 5756 735a 484d 
0000ef0: 694f 6e73 6962 6d56 3464 4349 3665 794a 
0000f00: 6e5a 5735 6c63 6d6c 6a49 6a70 6258 5377 
0000f10: 6963 6d46 3349 6a6f 6957 7a49 334d 6c31 
0000f20: 445a 5778 7351 326c 7959 3278 6c49 6977 
0000f30: 6964 486c 775a 5349 364d 5442 394c 434a 
0000f40: 6a61 584a 6a62 4756 4a62 6d52 6c65 4349 
0000f50: 3665 794a 6e5a 5735 6c63 6d6c 6a49 6a70 
0000f60: 6258 5377 6963 6d46 3349 6a6f 6961 544d 
0000f70: 7949 6977 6964 486c 775a 5349 364d 5831 
0000f80: 394c 434a 7063 314e 3063 6e56 6a64 4349 
0000f90: 365a 6d46 7363 3255 7349 6d31 6c64 4768 
0000fa0: 765a 484d 694f 6e74 394c 434a 7559 5731 
0000fb0: 6c63 3342 6859 3255 694f 6d35 3162 4778 
0000fc0: 3900 0041 d804 0bad 0265 794a 6a62 3231 
0000fd0: 745a 5735 3049 6a70 7564 5778 734c 434a 
0000fe0: 6a62 4746 7a63 7949 3649 6b4e 7063 6d4e 
0000ff0: 735a 5349 7349 6d4e 7359 584e 7a58 326c 
0001000: 6b49 6a6f 324d 4441 7349 6d5a 705a 5778 
0001010: 6b63 7949 3665 794a 3549 6a70 3749 6d64 
0001020: 6c62 6d56 7961 574d 694f 6c74 644c 434a 
0001030: 7959 5863 694f 694a 6d4d 7a49 694c 434a 
0001040: 3065 5842 6c49 6a6f 7a66 5377 6965 4349 
0001050: 3665 794a 6e5a 5735 6c63 6d6c 6a49 6a70 
0001060: 6258 5377 6963 6d46 3349 6a6f 695a 6a4d 
0001070: 7949 6977 6964 486c 775a 5349 364d 3330 
0001080: 7349 6e49 694f 6e73 695a 3256 755a 584a 
0001090: 7059 7949 3657 3130 7349 6e4a 6864 7949 
00010a0: 3649 6d59 7a4d 6949 7349 6e52 3563 4755 
00010b0: 694f 6a4e 3966 5377 6961 584e 5464 484a 
00010c0: 3159 3351 694f 6e52 7964 5755 7349 6d31 
00010d0: 6c64 4768 765a 484d 694f 6e74 394c 434a 
00010e0: 7559 5731 6c63 3342 6859 3255 694f 6d35 
00010f0: 3162 4778 3900                          
