0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 0c                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7c                                        ; f64
000000e: 7c                                        ; f64
000000f: 01                                        ; num results
0000010: 7c                                        ; f64
; type 1
0000011: 60                                        ; func
0000012: 01                                        ; num params
0000013: 7c                                        ; f64
0000014: 01                                        ; num results
0000015: 7c                                        ; f64
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 00                                        ; num results
; type 4
000001f: 60                                        ; func
0000020: 01                                        ; num params
0000021: 7f                                        ; i32
0000022: 00                                        ; num results
; type 5
0000023: 60                                        ; func
0000024: 03                                        ; num params
0000025: 7f                                        ; i32
0000026: 7f                                        ; i32
0000027: 7f                                        ; i32
0000028: 01                                        ; num results
0000029: 7f                                        ; i32
; type 6
000002a: 60                                        ; func
000002b: 02                                        ; num params
000002c: 7f                                        ; i32
000002d: 7f                                        ; i32
000002e: 01                                        ; num results
000002f: 7f                                        ; i32
; type 7
0000030: 60                                        ; func
0000031: 01                                        ; num params
0000032: 7f                                        ; i32
0000033: 01                                        ; num results
0000034: 7f                                        ; i32
; type 8
0000035: 60                                        ; func
0000036: 00                                        ; num params
0000037: 01                                        ; num results
0000038: 7f                                        ; i32
; type 9
0000039: 60                                        ; func
000003a: 02                                        ; num params
000003b: 7d                                        ; f32
000003c: 7d                                        ; f32
000003d: 00                                        ; num results
; type 10
000003e: 60                                        ; func
000003f: 00                                        ; num params
0000040: 00                                        ; num results
; type 11
0000041: 60                                        ; func
0000042: 06                                        ; num params
0000043: 7d                                        ; f32
0000044: 7d                                        ; f32
0000045: 7d                                        ; f32
0000046: 7d                                        ; f32
0000047: 7d                                        ; f32
0000048: 7d                                        ; f32
0000049: 01                                        ; num results
000004a: 7f                                        ; i32
0000009: 41                                        ; FIXUP section size
; section "Import" (2)
000004b: 02                                        ; section code
000004c: 00                                        ; section size (guess)
000004d: 0f                                        ; num imports
; import header 0
000004e: 04                                        ; string length
000004f: 4d61 7468                                Math  ; import module name
0000053: 03                                        ; string length
0000054: 706f 77                                  pow  ; import field name
0000057: 00                                        ; import kind
0000058: 00                                        ; import signature index
; import header 1
0000059: 04                                        ; string length
000005a: 4d61 7468                                Math  ; import module name
000005e: 04                                        ; string length
000005f: 7371 7274                                sqrt  ; import field name
0000063: 00                                        ; import kind
0000064: 01                                        ; import signature index
; import header 2
0000065: 04                                        ; string length
0000066: 4d61 7468                                Math  ; import module name
000006a: 03                                        ; string length
000006b: 6578 70                                  exp  ; import field name
000006e: 00                                        ; import kind
000006f: 01                                        ; import signature index
; import header 3
0000070: 04                                        ; string length
0000071: 4d61 7468                                Math  ; import module name
0000075: 03                                        ; string length
0000076: 636f 73                                  cos  ; import field name
0000079: 00                                        ; import kind
000007a: 01                                        ; import signature index
; import header 4
000007b: 04                                        ; string length
000007c: 4d61 7468                                Math  ; import module name
0000080: 06                                        ; string length
0000081: 7261 6e64 6f6d                           random  ; import field name
0000087: 00                                        ; import kind
0000088: 02                                        ; import signature index
; import header 5
0000089: 04                                        ; string length
000008a: 4d61 7468                                Math  ; import module name
000008e: 04                                        ; string length
000008f: 6365 696c                                ceil  ; import field name
0000093: 00                                        ; import kind
0000094: 01                                        ; import signature index
; import header 6
0000095: 04                                        ; string length
0000096: 4d61 7468                                Math  ; import module name
000009a: 05                                        ; string length
000009b: 666c 6f6f 72                             floor  ; import field name
00000a0: 00                                        ; import kind
00000a1: 01                                        ; import signature index
; import header 7
00000a2: 02                                        ; string length
00000a3: 4743                                     GC  ; import module name
00000a5: 09                                        ; string length
00000a6: 6164 644f 626a 6563 74                   addObject  ; import field name
00000af: 00                                        ; import kind
00000b0: 03                                        ; import signature index
; import header 8
00000b1: 07                                        ; string length
00000b2: 636f 6e73 6f6c 65                        console  ; import module name
00000b9: 03                                        ; string length
00000ba: 6c6f 67                                  log  ; import field name
00000bd: 00                                        ; import kind
00000be: 04                                        ; import signature index
; import header 9
00000bf: 06                                        ; string length
00000c0: 7374 7269 6e67                           string  ; import module name
00000c6: 07                                        ; string length
00000c7: 7265 706c 6163 65                        replace  ; import field name
00000ce: 00                                        ; import kind
00000cf: 05                                        ; import signature index
; import header 10
00000d0: 06                                        ; string length
00000d1: 7374 7269 6e67                           string  ; import module name
00000d7: 03                                        ; string length
00000d8: 6164 64                                  add  ; import field name
00000db: 00                                        ; import kind
00000dc: 06                                        ; import signature index
; import header 11
00000dd: 06                                        ; string length
00000de: 7374 7269 6e67                           string  ; import module name
00000e4: 06                                        ; string length
00000e5: 6c65 6e67 7468                           length  ; import field name
00000eb: 00                                        ; import kind
00000ec: 07                                        ; import signature index
; import header 12
00000ed: 06                                        ; string length
00000ee: 7374 7269 6e67                           string  ; import module name
00000f4: 07                                        ; string length
00000f5: 696e 6465 784f 66                        indexOf  ; import field name
00000fc: 00                                        ; import kind
00000fd: 06                                        ; import signature index
; import header 13
00000fe: 06                                        ; string length
00000ff: 7374 7269 6e67                           string  ; import module name
0000105: 08                                        ; string length
0000106: 746f 5374 7269 6e67                      toString  ; import field name
000010e: 00                                        ; import kind
000010f: 07                                        ; import signature index
; import header 14
0000110: 03                                        ; string length
0000111: 656e 76                                  env  ; import module name
0000114: 0a                                        ; string length
0000115: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
000011f: 02                                        ; import kind
0000120: 00                                        ; limits: flags
0000121: 01                                        ; limits: initial
; move data: [4d, 122) -> [4e, 123)
000004c: d501                                      ; FIXUP section size
; section "Function" (3)
0000123: 03                                        ; section code
0000124: 00                                        ; section size (guess)
0000125: 19                                        ; num functions
0000126: 06                                        ; function 0 signature index
0000127: 08                                        ; function 1 signature index
0000128: 08                                        ; function 2 signature index
0000129: 08                                        ; function 3 signature index
000012a: 09                                        ; function 4 signature index
000012b: 0a                                        ; function 5 signature index
000012c: 09                                        ; function 6 signature index
000012d: 0a                                        ; function 7 signature index
000012e: 09                                        ; function 8 signature index
000012f: 0b                                        ; function 9 signature index
0000130: 08                                        ; function 10 signature index
0000131: 08                                        ; function 11 signature index
0000132: 08                                        ; function 12 signature index
0000133: 08                                        ; function 13 signature index
0000134: 08                                        ; function 14 signature index
0000135: 08                                        ; function 15 signature index
0000136: 08                                        ; function 16 signature index
0000137: 08                                        ; function 17 signature index
0000138: 08                                        ; function 18 signature index
0000139: 0a                                        ; function 19 signature index
000013a: 0a                                        ; function 20 signature index
000013b: 0a                                        ; function 21 signature index
000013c: 0a                                        ; function 22 signature index
000013d: 0a                                        ; function 23 signature index
000013e: 0a                                        ; function 24 signature index
0000124: 1a                                        ; FIXUP section size
; section "Global" (6)
000013f: 06                                        ; section code
0000140: 00                                        ; section size (guess)
0000141: 12                                        ; num globals
0000142: 7f                                        ; i32
0000143: 01                                        ; global mutability
0000144: 41                                        ; i32.const
0000145: e009                                      ; i32 literal
0000147: 0b                                        ; end
0000148: 7c                                        ; f64
0000149: 01                                        ; global mutability
000014a: 44                                        ; f64.const
000014b: 6957 148b 0abf 0540                       ; f64 literal
0000153: 0b                                        ; end
0000154: 7c                                        ; f64
0000155: 01                                        ; global mutability
0000156: 44                                        ; f64.const
0000157: 182d 4454 fb21 0940                       ; f64 literal
000015f: 0b                                        ; end
0000160: 7f                                        ; i32
0000161: 01                                        ; global mutability
0000162: 41                                        ; i32.const
0000163: ffff ffff 07                              ; i32 literal
0000168: 0b                                        ; end
0000169: 7e                                        ; i64
000016a: 01                                        ; global mutability
000016b: 42                                        ; i64.const
000016c: ffff ffff ffff ffff ff00                  ; i64 literal
0000176: 0b                                        ; end
0000177: 7d                                        ; f32
0000178: 01                                        ; global mutability
0000179: 43                                        ; f32.const
000017a: ffff 7f7f                                 ; f32 literal
000017e: 0b                                        ; end
000017f: 7c                                        ; f64
0000180: 01                                        ; global mutability
0000181: 44                                        ; f64.const
0000182: ffff ffff ffff ef7f                       ; f64 literal
000018a: 0b                                        ; end
000018b: 7f                                        ; i32
000018c: 01                                        ; global mutability
000018d: 41                                        ; i32.const
000018e: 8080 8080 78                              ; i32 literal
0000193: 0b                                        ; end
0000194: 7e                                        ; i64
0000195: 01                                        ; global mutability
0000196: 42                                        ; i64.const
0000197: 8080 8080 8080 8080 807f                  ; i64 literal
00001a1: 0b                                        ; end
00001a2: 7d                                        ; f32
00001a3: 01                                        ; global mutability
00001a4: 43                                        ; f32.const
00001a5: ffff 7fff                                 ; f32 literal
00001a9: 0b                                        ; end
00001aa: 7c                                        ; f64
00001ab: 01                                        ; global mutability
00001ac: 44                                        ; f64.const
00001ad: ffff ffff ffff efff                       ; f64 literal
00001b5: 0b                                        ; end
00001b6: 7f                                        ; i32
00001b7: 01                                        ; global mutability
00001b8: 41                                        ; i32.const
00001b9: f800                                      ; i32 literal
00001bb: 0b                                        ; end
00001bc: 7f                                        ; i32
00001bd: 01                                        ; global mutability
00001be: 41                                        ; i32.const
00001bf: c600                                      ; i32 literal
00001c1: 0b                                        ; end
00001c2: 7f                                        ; i32
00001c3: 01                                        ; global mutability
00001c4: 41                                        ; i32.const
00001c5: 90ce 00                                   ; i32 literal
00001c8: 0b                                        ; end
00001c9: 7f                                        ; i32
00001ca: 01                                        ; global mutability
00001cb: 41                                        ; i32.const
00001cc: 00                                        ; i32 literal
00001cd: 0b                                        ; end
00001ce: 7f                                        ; i32
00001cf: 01                                        ; global mutability
00001d0: 41                                        ; i32.const
00001d1: 00                                        ; i32 literal
00001d2: 0b                                        ; end
00001d3: 7f                                        ; i32
00001d4: 01                                        ; global mutability
00001d5: 41                                        ; i32.const
00001d6: 00                                        ; i32 literal
00001d7: 0b                                        ; end
00001d8: 7f                                        ; i32
00001d9: 01                                        ; global mutability
00001da: 41                                        ; i32.const
00001db: 00                                        ; i32 literal
00001dc: 0b                                        ; end
; move data: [141, 1dd) -> [142, 1de)
0000140: 9c01                                      ; FIXUP section size
; section "Export" (7)
00001de: 07                                        ; section code
00001df: 00                                        ; section size (guess)
00001e0: 0f                                        ; num exports
00001e1: 14                                        ; string length
00001e2: 676c 6f62 616c 2e47 6574 4d65 6d6f 7279  global.GetMemory
00001f2: 5369 7a65                                Size  ; export name
00001f6: 00                                        ; export kind
00001f7: 0f                                        ; export func index
00001f8: 18                                        ; string length
00001f9: 416c 676f 7269 7468 6d2e 6765 7443 6972  Algorithm.getCir
0000209: 636c 6543 6f75 6e74                      cleCount  ; export name
0000211: 00                                        ; export kind
0000212: 10                                        ; export func index
0000213: 1d                                        ; string length
0000214: 416c 676f 7269 7468 6d2e 6765 7443 6972  Algorithm.getCir
0000224: 636c 6544 6174 614f 6666 7365 74         cleDataOffset  ; export name
0000231: 00                                        ; export kind
0000232: 11                                        ; export func index
0000233: 0e                                        ; string length
0000234: 416c 676f 7269 7468 6d2e 696e 6974       Algorithm.init  ; export name
0000242: 00                                        ; export kind
0000243: 12                                        ; export func index
0000244: 12                                        ; string length
0000245: 416c 676f 7269 7468 6d2e 7469 6d65 5374  Algorithm.timeSt
0000255: 6570                                     ep  ; export name
0000257: 00                                        ; export kind
0000258: 16                                        ; export func index
0000259: 1a                                        ; string length
000025a: 4d61 7468 2e64 6574 6563 7443 6972 636c  Math.detectCircl
000026a: 6543 6f6c 6c69 7369 6f6e                 eCollision  ; export name
0000274: 00                                        ; export kind
0000275: 17                                        ; export func index
0000276: 1a                                        ; string length
0000277: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000287: 656d 626c 7954 6974 6c65                 emblyTitle  ; export name
0000291: 00                                        ; export kind
0000292: 18                                        ; export func index
0000293: 20                                        ; string length
0000294: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002a4: 656d 626c 7944 6573 6372 6970 7469 6f6e  emblyDescription  ; export name
00002b4: 00                                        ; export kind
00002b5: 19                                        ; export func index
00002b6: 1c                                        ; string length
00002b7: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002c7: 656d 626c 7943 6f6d 7061 6e79            emblyCompany  ; export name
00002d3: 00                                        ; export kind
00002d4: 1a                                        ; export func index
00002d5: 1c                                        ; string length
00002d6: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002e6: 656d 626c 7950 726f 6475 6374            emblyProduct  ; export name
00002f2: 00                                        ; export kind
00002f3: 1b                                        ; export func index
00002f4: 1e                                        ; string length
00002f5: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000305: 656d 626c 7943 6f70 7972 6967 6874       emblyCopyright  ; export name
0000313: 00                                        ; export kind
0000314: 1c                                        ; export func index
0000315: 1e                                        ; string length
0000316: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000326: 656d 626c 7954 7261 6465 6d61 726b       emblyTrademark  ; export name
0000334: 00                                        ; export kind
0000335: 1d                                        ; export func index
0000336: 11                                        ; string length
0000337: 4173 7365 6d62 6c79 496e 666f 2e47 7569  AssemblyInfo.Gui
0000347: 64                                       d  ; export name
0000348: 00                                        ; export kind
0000349: 1e                                        ; export func index
000034a: 1c                                        ; string length
000034b: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000035b: 656d 626c 7956 6572 7369 6f6e            emblyVersion  ; export name
0000367: 00                                        ; export kind
0000368: 1f                                        ; export func index
0000369: 20                                        ; string length
000036a: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000037a: 656d 626c 7946 696c 6556 6572 7369 6f6e  emblyFileVersion  ; export name
000038a: 00                                        ; export kind
000038b: 20                                        ; export func index
; move data: [1e0, 38c) -> [1e1, 38d)
00001df: ac03                                      ; FIXUP section size
; section "Start" (8)
000038d: 08                                        ; section code
000038e: 00                                        ; section size (guess)
000038f: 21                                        ; start func index
000038e: 01                                        ; FIXUP section size
; section "Code" (10)
0000390: 0a                                        ; section code
0000391: 00                                        ; section size (guess)
0000392: 19                                        ; num functions
; function body 0
0000393: 00                                        ; func body size (guess)
0000394: 01                                        ; local decl count
0000395: 02                                        ; local type count
0000396: 7f                                        ; i32
0000397: 23                                        ; global.get
0000398: 00                                        ; global index
0000399: 21                                        ; local.set
000039a: 02                                        ; local index
000039b: 20                                        ; local.get
000039c: 02                                        ; local index
000039d: 20                                        ; local.get
000039e: 00                                        ; local index
000039f: 6a                                        ; i32.add
00003a0: 24                                        ; global.set
00003a1: 00                                        ; global index
00003a2: 23                                        ; global.get
00003a3: 00                                        ; global index
00003a4: 41                                        ; i32.const
00003a5: 08                                        ; i32 literal
00003a6: 6f                                        ; i32.rem_s
00003a7: 21                                        ; local.set
00003a8: 03                                        ; local index
00003a9: 20                                        ; local.get
00003aa: 03                                        ; local index
00003ab: 04                                        ; if
00003ac: 40                                        ; void
00003ad: 41                                        ; i32.const
00003ae: 08                                        ; i32 literal
00003af: 20                                        ; local.get
00003b0: 03                                        ; local index
00003b1: 6b                                        ; i32.sub
00003b2: 21                                        ; local.set
00003b3: 03                                        ; local index
00003b4: 23                                        ; global.get
00003b5: 00                                        ; global index
00003b6: 20                                        ; local.get
00003b7: 03                                        ; local index
00003b8: 6a                                        ; i32.add
00003b9: 24                                        ; global.set
00003ba: 00                                        ; global index
00003bb: 05                                        ; else
00003bc: 23                                        ; global.get
00003bd: 00                                        ; global index
00003be: 41                                        ; i32.const
00003bf: 08                                        ; i32 literal
00003c0: 6a                                        ; i32.add
00003c1: 24                                        ; global.set
00003c2: 00                                        ; global index
00003c3: 0b                                        ; end
00003c4: 20                                        ; local.get
00003c5: 02                                        ; local index
00003c6: 20                                        ; local.get
00003c7: 01                                        ; local index
00003c8: 10                                        ; call
00003c9: 07                                        ; function index
00003ca: 20                                        ; local.get
00003cb: 02                                        ; local index
00003cc: 0f                                        ; return
00003cd: 0b                                        ; end
0000393: 3a                                        ; FIXUP func body size
; function body 1
00003ce: 00                                        ; func body size (guess)
00003cf: 00                                        ; local decl count
00003d0: 23                                        ; global.get
00003d1: 00                                        ; global index
00003d2: 0f                                        ; return
00003d3: 0b                                        ; end
00003ce: 05                                        ; FIXUP func body size
; function body 2
00003d4: 00                                        ; func body size (guess)
00003d5: 01                                        ; local decl count
00003d6: 04                                        ; local type count
00003d7: 7f                                        ; i32
00003d8: 23                                        ; global.get
00003d9: 0d                                        ; global index
00003da: 0f                                        ; return
00003db: 0b                                        ; end
00003d4: 07                                        ; FIXUP func body size
; function body 3
00003dc: 00                                        ; func body size (guess)
00003dd: 00                                        ; local decl count
00003de: 23                                        ; global.get
00003df: 0e                                        ; global index
00003e0: 0f                                        ; return
00003e1: 0b                                        ; end
00003dc: 05                                        ; FIXUP func body size
; function body 4
00003e2: 00                                        ; func body size (guess)
00003e3: 03                                        ; local decl count
00003e4: 02                                        ; local type count
00003e5: 7f                                        ; i32
00003e6: 03                                        ; local type count
00003e7: 7d                                        ; f32
00003e8: 01                                        ; local type count
00003e9: 7f                                        ; i32
00003ea: 41                                        ; i32.const
00003eb: 8807                                      ; i32 literal
00003ed: 23                                        ; global.get
00003ee: 0e                                        ; global index
00003ef: 10                                        ; call
00003f0: 0d                                        ; function index
00003f1: 10                                        ; call
00003f2: 0a                                        ; function index
00003f3: 10                                        ; call
00003f4: 08                                        ; function index
00003f5: 41                                        ; i32.const
00003f6: 00                                        ; i32 literal
00003f7: 21                                        ; local.set
00003f8: 02                                        ; local index
00003f9: 02                                        ; block
00003fa: 40                                        ; void
00003fb: 03                                        ; loop
00003fc: 40                                        ; void
00003fd: 20                                        ; local.get
00003fe: 02                                        ; local index
00003ff: 23                                        ; global.get
0000400: 0d                                        ; global index
0000401: 41                                        ; i32.const
0000402: 01                                        ; i32 literal
0000403: 6b                                        ; i32.sub
0000404: 4a                                        ; i32.gt_s
0000405: 0d                                        ; br_if
0000406: 01                                        ; break depth
0000407: 41                                        ; i32.const
0000408: 00                                        ; i32 literal
0000409: 21                                        ; local.set
000040a: 03                                        ; local index
000040b: 43                                        ; f32.const
000040c: 0000 0000                                 ; f32 literal
0000410: 21                                        ; local.set
0000411: 04                                        ; local index
0000412: 43                                        ; f32.const
0000413: 0000 0000                                 ; f32 literal
0000417: 21                                        ; local.set
0000418: 05                                        ; local index
0000419: 43                                        ; f32.const
000041a: 0000 0000                                 ; f32 literal
000041e: 21                                        ; local.set
000041f: 06                                        ; local index
0000420: 02                                        ; block
0000421: 40                                        ; void
0000422: 03                                        ; loop
0000423: 40                                        ; void
0000424: 41                                        ; i32.const
0000425: 00                                        ; i32 literal
0000426: 21                                        ; local.set
0000427: 03                                        ; local index
0000428: 20                                        ; local.get
0000429: 00                                        ; local index
000042a: bb                                        ; f64.promote_f32
000042b: 10                                        ; call
000042c: 04                                        ; function index
000042d: a2                                        ; f64.mul
000042e: b6                                        ; f32.demote_f64
000042f: 21                                        ; local.set
0000430: 04                                        ; local index
0000431: 20                                        ; local.get
0000432: 01                                        ; local index
0000433: bb                                        ; f64.promote_f32
0000434: 10                                        ; call
0000435: 04                                        ; function index
0000436: a2                                        ; f64.mul
0000437: b6                                        ; f32.demote_f64
0000438: 21                                        ; local.set
0000439: 05                                        ; local index
000043a: 10                                        ; call
000043b: 04                                        ; function index
000043c: 41                                        ; i32.const
000043d: 08                                        ; i32 literal
000043e: b7                                        ; f64.convert_i32_s
000043f: a2                                        ; f64.mul
0000440: 10                                        ; call
0000441: 02                                        ; function index
0000442: 44                                        ; f64.const
0000443: ee5a 423e e849 3740                       ; f64 literal
000044b: a3                                        ; f64.div
000044c: 10                                        ; call
000044d: 05                                        ; function index
000044e: b6                                        ; f32.demote_f64
000044f: 21                                        ; local.set
0000450: 06                                        ; local index
0000451: 20                                        ; local.get
0000452: 00                                        ; local index
0000453: 20                                        ; local.get
0000454: 04                                        ; local index
0000455: 20                                        ; local.get
0000456: 06                                        ; local index
0000457: 92                                        ; f32.add
0000458: 93                                        ; f32.sub
0000459: 41                                        ; i32.const
000045a: 00                                        ; i32 literal
000045b: b2                                        ; f32.convert_i32_s
000045c: 5d                                        ; f32.lt
000045d: 20                                        ; local.get
000045e: 04                                        ; local index
000045f: 20                                        ; local.get
0000460: 06                                        ; local index
0000461: 93                                        ; f32.sub
0000462: 41                                        ; i32.const
0000463: 00                                        ; i32 literal
0000464: b2                                        ; f32.convert_i32_s
0000465: 5d                                        ; f32.lt
0000466: 6a                                        ; i32.add
0000467: 20                                        ; local.get
0000468: 01                                        ; local index
0000469: 20                                        ; local.get
000046a: 05                                        ; local index
000046b: 20                                        ; local.get
000046c: 06                                        ; local index
000046d: 92                                        ; f32.add
000046e: 93                                        ; f32.sub
000046f: 41                                        ; i32.const
0000470: 00                                        ; i32 literal
0000471: b2                                        ; f32.convert_i32_s
0000472: 5d                                        ; f32.lt
0000473: 6a                                        ; i32.add
0000474: 20                                        ; local.get
0000475: 05                                        ; local index
0000476: 20                                        ; local.get
0000477: 06                                        ; local index
0000478: 93                                        ; f32.sub
0000479: 41                                        ; i32.const
000047a: 00                                        ; i32 literal
000047b: b2                                        ; f32.convert_i32_s
000047c: 5d                                        ; f32.lt
000047d: 6a                                        ; i32.add
000047e: 04                                        ; if
000047f: 40                                        ; void
0000480: 41                                        ; i32.const
0000481: 01                                        ; i32 literal
0000482: 21                                        ; local.set
0000483: 03                                        ; local index
0000484: 05                                        ; else
0000485: 41                                        ; i32.const
0000486: 00                                        ; i32 literal
0000487: 21                                        ; local.set
0000488: 07                                        ; local index
0000489: 02                                        ; block
000048a: 40                                        ; void
000048b: 03                                        ; loop
000048c: 40                                        ; void
000048d: 20                                        ; local.get
000048e: 07                                        ; local index
000048f: 20                                        ; local.get
0000490: 02                                        ; local index
0000491: 41                                        ; i32.const
0000492: 01                                        ; i32 literal
0000493: 6b                                        ; i32.sub
0000494: 4a                                        ; i32.gt_s
0000495: 0d                                        ; br_if
0000496: 01                                        ; break depth
0000497: 20                                        ; local.get
0000498: 04                                        ; local index
0000499: 20                                        ; local.get
000049a: 05                                        ; local index
000049b: 20                                        ; local.get
000049c: 06                                        ; local index
000049d: 23                                        ; global.get
000049e: 0e                                        ; global index
000049f: 41                                        ; i32.const
00004a0: 08                                        ; i32 literal
00004a1: 6a                                        ; i32.add
00004a2: 20                                        ; local.get
00004a3: 07                                        ; local index
00004a4: 41                                        ; i32.const
00004a5: 0c                                        ; i32 literal
00004a6: 6c                                        ; i32.mul
00004a7: 6a                                        ; i32.add
00004a8: 28                                        ; i32.load
00004a9: 02                                        ; alignment
00004aa: 00                                        ; load offset
00004ab: 41                                        ; i32.const
00004ac: 04                                        ; i32 literal
00004ad: 6a                                        ; i32.add
00004ae: 2a                                        ; f32.load
00004af: 02                                        ; alignment
00004b0: 00                                        ; load offset
00004b1: 23                                        ; global.get
00004b2: 0e                                        ; global index
00004b3: 41                                        ; i32.const
00004b4: 08                                        ; i32 literal
00004b5: 6a                                        ; i32.add
00004b6: 20                                        ; local.get
00004b7: 07                                        ; local index
00004b8: 41                                        ; i32.const
00004b9: 0c                                        ; i32 literal
00004ba: 6c                                        ; i32.mul
00004bb: 6a                                        ; i32.add
00004bc: 28                                        ; i32.load
00004bd: 02                                        ; alignment
00004be: 00                                        ; load offset
00004bf: 41                                        ; i32.const
00004c0: 00                                        ; i32 literal
00004c1: 6a                                        ; i32.add
00004c2: 2a                                        ; f32.load
00004c3: 02                                        ; alignment
00004c4: 00                                        ; load offset
00004c5: 23                                        ; global.get
00004c6: 0e                                        ; global index
00004c7: 41                                        ; i32.const
00004c8: 08                                        ; i32 literal
00004c9: 6a                                        ; i32.add
00004ca: 20                                        ; local.get
00004cb: 07                                        ; local index
00004cc: 41                                        ; i32.const
00004cd: 0c                                        ; i32 literal
00004ce: 6c                                        ; i32.mul
00004cf: 6a                                        ; i32.add
00004d0: 28                                        ; i32.load
00004d1: 02                                        ; alignment
00004d2: 00                                        ; load offset
00004d3: 41                                        ; i32.const
00004d4: 08                                        ; i32 literal
00004d5: 6a                                        ; i32.add
00004d6: 2a                                        ; f32.load
00004d7: 02                                        ; alignment
00004d8: 00                                        ; load offset
00004d9: 10                                        ; call
00004da: 17                                        ; function index
00004db: 04                                        ; if
00004dc: 40                                        ; void
00004dd: 41                                        ; i32.const
00004de: 01                                        ; i32 literal
00004df: 21                                        ; local.set
00004e0: 03                                        ; local index
00004e1: 41                                        ; i32.const
00004e2: 01                                        ; i32 literal
00004e3: 0d                                        ; br_if
00004e4: 05                                        ; break depth
00004e5: 0b                                        ; end
00004e6: 20                                        ; local.get
00004e7: 07                                        ; local index
00004e8: 41                                        ; i32.const
00004e9: 01                                        ; i32 literal
00004ea: 6a                                        ; i32.add
00004eb: 21                                        ; local.set
00004ec: 07                                        ; local index
00004ed: 0c                                        ; br
00004ee: 00                                        ; break depth
00004ef: 0b                                        ; end
00004f0: 0b                                        ; end
00004f1: 0b                                        ; end
00004f2: 20                                        ; local.get
00004f3: 03                                        ; local index
00004f4: 45                                        ; i32.eqz
00004f5: 0d                                        ; br_if
00004f6: 01                                        ; break depth
00004f7: 0c                                        ; br
00004f8: 00                                        ; break depth
00004f9: 0b                                        ; end
00004fa: 0b                                        ; end
00004fb: 23                                        ; global.get
00004fc: 0e                                        ; global index
00004fd: 41                                        ; i32.const
00004fe: 08                                        ; i32 literal
00004ff: 6a                                        ; i32.add
0000500: 20                                        ; local.get
0000501: 02                                        ; local index
0000502: 41                                        ; i32.const
0000503: 0c                                        ; i32 literal
0000504: 6c                                        ; i32.mul
0000505: 6a                                        ; i32.add
0000506: 41                                        ; i32.const
0000507: 04                                        ; i32 literal
0000508: 6a                                        ; i32.add
0000509: 20                                        ; local.get
000050a: 04                                        ; local index
000050b: 38                                        ; f32.store
000050c: 02                                        ; alignment
000050d: 00                                        ; store offset
000050e: 23                                        ; global.get
000050f: 0e                                        ; global index
0000510: 41                                        ; i32.const
0000511: 08                                        ; i32 literal
0000512: 6a                                        ; i32.add
0000513: 20                                        ; local.get
0000514: 02                                        ; local index
0000515: 41                                        ; i32.const
0000516: 0c                                        ; i32 literal
0000517: 6c                                        ; i32.mul
0000518: 6a                                        ; i32.add
0000519: 41                                        ; i32.const
000051a: 00                                        ; i32 literal
000051b: 6a                                        ; i32.add
000051c: 20                                        ; local.get
000051d: 05                                        ; local index
000051e: 38                                        ; f32.store
000051f: 02                                        ; alignment
0000520: 00                                        ; store offset
0000521: 23                                        ; global.get
0000522: 0e                                        ; global index
0000523: 41                                        ; i32.const
0000524: 08                                        ; i32 literal
0000525: 6a                                        ; i32.add
0000526: 20                                        ; local.get
0000527: 02                                        ; local index
0000528: 41                                        ; i32.const
0000529: 0c                                        ; i32 literal
000052a: 6c                                        ; i32.mul
000052b: 6a                                        ; i32.add
000052c: 41                                        ; i32.const
000052d: 08                                        ; i32 literal
000052e: 6a                                        ; i32.add
000052f: 20                                        ; local.get
0000530: 06                                        ; local index
0000531: 38                                        ; f32.store
0000532: 02                                        ; alignment
0000533: 00                                        ; store offset
0000534: 41                                        ; i32.const
0000535: a007                                      ; i32 literal
0000537: 20                                        ; local.get
0000538: 02                                        ; local index
0000539: 10                                        ; call
000053a: 0d                                        ; function index
000053b: 10                                        ; call
000053c: 0a                                        ; function index
000053d: 41                                        ; i32.const
000053e: b007                                      ; i32 literal
0000540: 10                                        ; call
0000541: 0a                                        ; function index
0000542: 23                                        ; global.get
0000543: 0e                                        ; global index
0000544: 41                                        ; i32.const
0000545: 08                                        ; i32 literal
0000546: 6a                                        ; i32.add
0000547: 20                                        ; local.get
0000548: 02                                        ; local index
0000549: 41                                        ; i32.const
000054a: 0c                                        ; i32 literal
000054b: 6c                                        ; i32.mul
000054c: 6a                                        ; i32.add
000054d: 28                                        ; i32.load
000054e: 02                                        ; alignment
000054f: 00                                        ; load offset
0000550: 10                                        ; call
0000551: 0d                                        ; function index
0000552: 10                                        ; call
0000553: 0a                                        ; function index
0000554: 41                                        ; i32.const
0000555: b807                                      ; i32 literal
0000557: 10                                        ; call
0000558: 0a                                        ; function index
0000559: 10                                        ; call
000055a: 08                                        ; function index
000055b: 41                                        ; i32.const
000055c: c007                                      ; i32 literal
000055e: 23                                        ; global.get
000055f: 0f                                        ; global index
0000560: 41                                        ; i32.const
0000561: 08                                        ; i32 literal
0000562: 6a                                        ; i32.add
0000563: 20                                        ; local.get
0000564: 02                                        ; local index
0000565: 41                                        ; i32.const
0000566: 04                                        ; i32 literal
0000567: 6c                                        ; i32.mul
0000568: 6a                                        ; i32.add
0000569: 28                                        ; i32.load
000056a: 02                                        ; alignment
000056b: 00                                        ; load offset
000056c: 10                                        ; call
000056d: 0d                                        ; function index
000056e: 10                                        ; call
000056f: 0a                                        ; function index
0000570: 10                                        ; call
0000571: 08                                        ; function index
0000572: 23                                        ; global.get
0000573: 0f                                        ; global index
0000574: 41                                        ; i32.const
0000575: 08                                        ; i32 literal
0000576: 6a                                        ; i32.add
0000577: 20                                        ; local.get
0000578: 02                                        ; local index
0000579: 41                                        ; i32.const
000057a: 04                                        ; i32 literal
000057b: 6c                                        ; i32.mul
000057c: 6a                                        ; i32.add
000057d: 28                                        ; i32.load
000057e: 02                                        ; alignment
000057f: 00                                        ; load offset
0000580: 41                                        ; i32.const
0000581: 00                                        ; i32 literal
0000582: 6a                                        ; i32.add
0000583: 10                                        ; call
0000584: 04                                        ; function index
0000585: 44                                        ; f64.const
0000586: 0000 0000 0000 e03f                       ; f64 literal
000058e: a1                                        ; f64.sub
000058f: 44                                        ; f64.const
0000590: 9a99 9999 9999 b93f                       ; f64 literal
0000598: a2                                        ; f64.mul
0000599: b6                                        ; f32.demote_f64
000059a: 38                                        ; f32.store
000059b: 02                                        ; alignment
000059c: 00                                        ; store offset
000059d: 23                                        ; global.get
000059e: 0f                                        ; global index
000059f: 41                                        ; i32.const
00005a0: 08                                        ; i32 literal
00005a1: 6a                                        ; i32.add
00005a2: 20                                        ; local.get
00005a3: 02                                        ; local index
00005a4: 41                                        ; i32.const
00005a5: 04                                        ; i32 literal
00005a6: 6c                                        ; i32.mul
00005a7: 6a                                        ; i32.add
00005a8: 28                                        ; i32.load
00005a9: 02                                        ; alignment
00005aa: 00                                        ; load offset
00005ab: 41                                        ; i32.const
00005ac: 04                                        ; i32 literal
00005ad: 6a                                        ; i32.add
00005ae: 10                                        ; call
00005af: 04                                        ; function index
00005b0: 44                                        ; f64.const
00005b1: 0000 0000 0000 e03f                       ; f64 literal
00005b9: a1                                        ; f64.sub
00005ba: 44                                        ; f64.const
00005bb: 9a99 9999 9999 b93f                       ; f64 literal
00005c3: a2                                        ; f64.mul
00005c4: b6                                        ; f32.demote_f64
00005c5: 38                                        ; f32.store
00005c6: 02                                        ; alignment
00005c7: 00                                        ; store offset
00005c8: 20                                        ; local.get
00005c9: 02                                        ; local index
00005ca: 41                                        ; i32.const
00005cb: 01                                        ; i32 literal
00005cc: 6a                                        ; i32.add
00005cd: 21                                        ; local.set
00005ce: 02                                        ; local index
00005cf: 0c                                        ; br
00005d0: 00                                        ; break depth
00005d1: 0b                                        ; end
00005d2: 0b                                        ; end
00005d3: 0b                                        ; end
; move data: [3e3, 5d4) -> [3e4, 5d5)
00003e2: f103                                      ; FIXUP func body size
; function body 5
00005d5: 00                                        ; func body size (guess)
00005d6: 01                                        ; local decl count
00005d7: 03                                        ; local type count
00005d8: 7f                                        ; i32
00005d9: 41                                        ; i32.const
00005da: 00                                        ; i32 literal
00005db: 21                                        ; local.set
00005dc: 00                                        ; local index
00005dd: 02                                        ; block
00005de: 40                                        ; void
00005df: 03                                        ; loop
00005e0: 40                                        ; void
00005e1: 20                                        ; local.get
00005e2: 00                                        ; local index
00005e3: 23                                        ; global.get
00005e4: 0c                                        ; global index
00005e5: 41                                        ; i32.const
00005e6: 01                                        ; i32 literal
00005e7: 6b                                        ; i32.sub
00005e8: 4a                                        ; i32.gt_s
00005e9: 0d                                        ; br_if
00005ea: 01                                        ; break depth
00005eb: 23                                        ; global.get
00005ec: 11                                        ; global index
00005ed: 41                                        ; i32.const
00005ee: 08                                        ; i32 literal
00005ef: 6a                                        ; i32.add
00005f0: 20                                        ; local.get
00005f1: 00                                        ; local index
00005f2: 41                                        ; i32.const
00005f3: 04                                        ; i32 literal
00005f4: 6c                                        ; i32.mul
00005f5: 6a                                        ; i32.add
00005f6: 28                                        ; i32.load
00005f7: 02                                        ; alignment
00005f8: 00                                        ; load offset
00005f9: 21                                        ; local.set
00005fa: 01                                        ; local index
00005fb: 41                                        ; i32.const
00005fc: 00                                        ; i32 literal
00005fd: 21                                        ; local.set
00005fe: 02                                        ; local index
00005ff: 02                                        ; block
0000600: 40                                        ; void
0000601: 03                                        ; loop
0000602: 40                                        ; void
0000603: 20                                        ; local.get
0000604: 02                                        ; local index
0000605: 23                                        ; global.get
0000606: 0b                                        ; global index
0000607: 41                                        ; i32.const
0000608: 01                                        ; i32 literal
0000609: 6b                                        ; i32.sub
000060a: 4a                                        ; i32.gt_s
000060b: 0d                                        ; br_if
000060c: 01                                        ; break depth
000060d: 20                                        ; local.get
000060e: 01                                        ; local index
000060f: 41                                        ; i32.const
0000610: 08                                        ; i32 literal
0000611: 6a                                        ; i32.add
0000612: 20                                        ; local.get
0000613: 02                                        ; local index
0000614: 41                                        ; i32.const
0000615: 04                                        ; i32 literal
0000616: 6c                                        ; i32.mul
0000617: 6a                                        ; i32.add
0000618: 41                                        ; i32.const
0000619: 00                                        ; i32 literal
000061a: 36                                        ; i32.store
000061b: 02                                        ; alignment
000061c: 00                                        ; store offset
000061d: 20                                        ; local.get
000061e: 02                                        ; local index
000061f: 41                                        ; i32.const
0000620: 01                                        ; i32 literal
0000621: 6a                                        ; i32.add
0000622: 21                                        ; local.set
0000623: 02                                        ; local index
0000624: 0c                                        ; br
0000625: 00                                        ; break depth
0000626: 0b                                        ; end
0000627: 0b                                        ; end
0000628: 20                                        ; local.get
0000629: 00                                        ; local index
000062a: 41                                        ; i32.const
000062b: 01                                        ; i32 literal
000062c: 6a                                        ; i32.add
000062d: 21                                        ; local.set
000062e: 00                                        ; local index
000062f: 0c                                        ; br
0000630: 00                                        ; break depth
0000631: 0b                                        ; end
0000632: 0b                                        ; end
0000633: 0b                                        ; end
00005d5: 5e                                        ; FIXUP func body size
; function body 6
0000634: 00                                        ; func body size (guess)
0000635: 03                                        ; local decl count
0000636: 02                                        ; local type count
0000637: 7f                                        ; i32
0000638: 05                                        ; local type count
0000639: 7d                                        ; f32
000063a: 08                                        ; local type count
000063b: 7f                                        ; i32
000063c: 41                                        ; i32.const
000063d: 00                                        ; i32 literal
000063e: 21                                        ; local.set
000063f: 02                                        ; local index
0000640: 41                                        ; i32.const
0000641: 00                                        ; i32 literal
0000642: 21                                        ; local.set
0000643: 03                                        ; local index
0000644: 02                                        ; block
0000645: 40                                        ; void
0000646: 03                                        ; loop
0000647: 40                                        ; void
0000648: 20                                        ; local.get
0000649: 03                                        ; local index
000064a: 23                                        ; global.get
000064b: 0d                                        ; global index
000064c: 41                                        ; i32.const
000064d: 01                                        ; i32 literal
000064e: 6b                                        ; i32.sub
000064f: 4a                                        ; i32.gt_s
0000650: 0d                                        ; br_if
0000651: 01                                        ; break depth
0000652: 23                                        ; global.get
0000653: 0e                                        ; global index
0000654: 41                                        ; i32.const
0000655: 08                                        ; i32 literal
0000656: 6a                                        ; i32.add
0000657: 20                                        ; local.get
0000658: 03                                        ; local index
0000659: 41                                        ; i32.const
000065a: 0c                                        ; i32 literal
000065b: 6c                                        ; i32.mul
000065c: 6a                                        ; i32.add
000065d: 28                                        ; i32.load
000065e: 02                                        ; alignment
000065f: 00                                        ; load offset
0000660: 41                                        ; i32.const
0000661: 04                                        ; i32 literal
0000662: 6a                                        ; i32.add
0000663: 2a                                        ; f32.load
0000664: 02                                        ; alignment
0000665: 00                                        ; load offset
0000666: 21                                        ; local.set
0000667: 04                                        ; local index
0000668: 23                                        ; global.get
0000669: 0e                                        ; global index
000066a: 41                                        ; i32.const
000066b: 08                                        ; i32 literal
000066c: 6a                                        ; i32.add
000066d: 20                                        ; local.get
000066e: 03                                        ; local index
000066f: 41                                        ; i32.const
0000670: 0c                                        ; i32 literal
0000671: 6c                                        ; i32.mul
0000672: 6a                                        ; i32.add
0000673: 28                                        ; i32.load
0000674: 02                                        ; alignment
0000675: 00                                        ; load offset
0000676: 41                                        ; i32.const
0000677: 00                                        ; i32 literal
0000678: 6a                                        ; i32.add
0000679: 2a                                        ; f32.load
000067a: 02                                        ; alignment
000067b: 00                                        ; load offset
000067c: 21                                        ; local.set
000067d: 05                                        ; local index
000067e: 23                                        ; global.get
000067f: 0e                                        ; global index
0000680: 41                                        ; i32.const
0000681: 08                                        ; i32 literal
0000682: 6a                                        ; i32.add
0000683: 20                                        ; local.get
0000684: 03                                        ; local index
0000685: 41                                        ; i32.const
0000686: 0c                                        ; i32 literal
0000687: 6c                                        ; i32.mul
0000688: 6a                                        ; i32.add
0000689: 28                                        ; i32.load
000068a: 02                                        ; alignment
000068b: 00                                        ; load offset
000068c: 41                                        ; i32.const
000068d: 08                                        ; i32 literal
000068e: 6a                                        ; i32.add
000068f: 2a                                        ; f32.load
0000690: 02                                        ; alignment
0000691: 00                                        ; load offset
0000692: 21                                        ; local.set
0000693: 06                                        ; local index
0000694: 23                                        ; global.get
0000695: 0f                                        ; global index
0000696: 41                                        ; i32.const
0000697: 08                                        ; i32 literal
0000698: 6a                                        ; i32.add
0000699: 20                                        ; local.get
000069a: 03                                        ; local index
000069b: 41                                        ; i32.const
000069c: 04                                        ; i32 literal
000069d: 6c                                        ; i32.mul
000069e: 6a                                        ; i32.add
000069f: 28                                        ; i32.load
00006a0: 02                                        ; alignment
00006a1: 00                                        ; load offset
00006a2: 41                                        ; i32.const
00006a3: 00                                        ; i32 literal
00006a4: 6a                                        ; i32.add
00006a5: 2a                                        ; f32.load
00006a6: 02                                        ; alignment
00006a7: 00                                        ; load offset
00006a8: 21                                        ; local.set
00006a9: 07                                        ; local index
00006aa: 23                                        ; global.get
00006ab: 0f                                        ; global index
00006ac: 41                                        ; i32.const
00006ad: 08                                        ; i32 literal
00006ae: 6a                                        ; i32.add
00006af: 20                                        ; local.get
00006b0: 03                                        ; local index
00006b1: 41                                        ; i32.const
00006b2: 04                                        ; i32 literal
00006b3: 6c                                        ; i32.mul
00006b4: 6a                                        ; i32.add
00006b5: 28                                        ; i32.load
00006b6: 02                                        ; alignment
00006b7: 00                                        ; load offset
00006b8: 41                                        ; i32.const
00006b9: 04                                        ; i32 literal
00006ba: 6a                                        ; i32.add
00006bb: 2a                                        ; f32.load
00006bc: 02                                        ; alignment
00006bd: 00                                        ; load offset
00006be: 21                                        ; local.set
00006bf: 08                                        ; local index
00006c0: 20                                        ; local.get
00006c1: 08                                        ; local index
00006c2: bb                                        ; f64.promote_f32
00006c3: 44                                        ; f64.const
00006c4: 2d43 1ceb e236 1a3f                       ; f64 literal
00006cc: a0                                        ; f64.add
00006cd: b6                                        ; f32.demote_f64
00006ce: 21                                        ; local.set
00006cf: 08                                        ; local index
00006d0: 20                                        ; local.get
00006d1: 00                                        ; local index
00006d2: 20                                        ; local.get
00006d3: 04                                        ; local index
00006d4: 20                                        ; local.get
00006d5: 06                                        ; local index
00006d6: 92                                        ; f32.add
00006d7: 93                                        ; f32.sub
00006d8: 41                                        ; i32.const
00006d9: 00                                        ; i32 literal
00006da: b2                                        ; f32.convert_i32_s
00006db: 5d                                        ; f32.lt
00006dc: 20                                        ; local.get
00006dd: 07                                        ; local index
00006de: 41                                        ; i32.const
00006df: 00                                        ; i32 literal
00006e0: b2                                        ; f32.convert_i32_s
00006e1: 5e                                        ; f32.gt
00006e2: 6c                                        ; i32.mul
00006e3: 20                                        ; local.get
00006e4: 04                                        ; local index
00006e5: 20                                        ; local.get
00006e6: 06                                        ; local index
00006e7: 93                                        ; f32.sub
00006e8: 41                                        ; i32.const
00006e9: 00                                        ; i32 literal
00006ea: b2                                        ; f32.convert_i32_s
00006eb: 5d                                        ; f32.lt
00006ec: 20                                        ; local.get
00006ed: 07                                        ; local index
00006ee: 41                                        ; i32.const
00006ef: 00                                        ; i32 literal
00006f0: b2                                        ; f32.convert_i32_s
00006f1: 5d                                        ; f32.lt
00006f2: 6c                                        ; i32.mul
00006f3: 6a                                        ; i32.add
00006f4: 04                                        ; if
00006f5: 40                                        ; void
00006f6: 43                                        ; f32.const
00006f7: 0000 0000                                 ; f32 literal
00006fb: 20                                        ; local.get
00006fc: 07                                        ; local index
00006fd: 93                                        ; f32.sub
00006fe: 21                                        ; local.set
00006ff: 07                                        ; local index
0000700: 0b                                        ; end
0000701: 20                                        ; local.get
0000702: 01                                        ; local index
0000703: 20                                        ; local.get
0000704: 05                                        ; local index
0000705: 20                                        ; local.get
0000706: 06                                        ; local index
0000707: 92                                        ; f32.add
0000708: 93                                        ; f32.sub
0000709: 41                                        ; i32.const
000070a: 00                                        ; i32 literal
000070b: b2                                        ; f32.convert_i32_s
000070c: 5d                                        ; f32.lt
000070d: 20                                        ; local.get
000070e: 08                                        ; local index
000070f: 41                                        ; i32.const
0000710: 00                                        ; i32 literal
0000711: b2                                        ; f32.convert_i32_s
0000712: 5e                                        ; f32.gt
0000713: 6c                                        ; i32.mul
0000714: 20                                        ; local.get
0000715: 05                                        ; local index
0000716: 20                                        ; local.get
0000717: 06                                        ; local index
0000718: 93                                        ; f32.sub
0000719: 41                                        ; i32.const
000071a: 00                                        ; i32 literal
000071b: b2                                        ; f32.convert_i32_s
000071c: 5d                                        ; f32.lt
000071d: 20                                        ; local.get
000071e: 08                                        ; local index
000071f: 41                                        ; i32.const
0000720: 00                                        ; i32 literal
0000721: b2                                        ; f32.convert_i32_s
0000722: 5d                                        ; f32.lt
0000723: 6c                                        ; i32.mul
0000724: 6a                                        ; i32.add
0000725: 04                                        ; if
0000726: 40                                        ; void
0000727: 43                                        ; f32.const
0000728: 0000 0000                                 ; f32 literal
000072c: 20                                        ; local.get
000072d: 08                                        ; local index
000072e: 93                                        ; f32.sub
000072f: 21                                        ; local.set
0000730: 08                                        ; local index
0000731: 0b                                        ; end
0000732: 23                                        ; global.get
0000733: 0e                                        ; global index
0000734: 41                                        ; i32.const
0000735: 08                                        ; i32 literal
0000736: 6a                                        ; i32.add
0000737: 20                                        ; local.get
0000738: 03                                        ; local index
0000739: 41                                        ; i32.const
000073a: 0c                                        ; i32 literal
000073b: 6c                                        ; i32.mul
000073c: 6a                                        ; i32.add
000073d: 41                                        ; i32.const
000073e: 04                                        ; i32 literal
000073f: 6a                                        ; i32.add
0000740: 20                                        ; local.get
0000741: 04                                        ; local index
0000742: 20                                        ; local.get
0000743: 07                                        ; local index
0000744: 92                                        ; f32.add
0000745: 38                                        ; f32.store
0000746: 02                                        ; alignment
0000747: 00                                        ; store offset
0000748: 23                                        ; global.get
0000749: 0e                                        ; global index
000074a: 41                                        ; i32.const
000074b: 08                                        ; i32 literal
000074c: 6a                                        ; i32.add
000074d: 20                                        ; local.get
000074e: 03                                        ; local index
000074f: 41                                        ; i32.const
0000750: 0c                                        ; i32 literal
0000751: 6c                                        ; i32.mul
0000752: 6a                                        ; i32.add
0000753: 41                                        ; i32.const
0000754: 00                                        ; i32 literal
0000755: 6a                                        ; i32.add
0000756: 20                                        ; local.get
0000757: 05                                        ; local index
0000758: 20                                        ; local.get
0000759: 08                                        ; local index
000075a: 92                                        ; f32.add
000075b: 38                                        ; f32.store
000075c: 02                                        ; alignment
000075d: 00                                        ; store offset
000075e: 23                                        ; global.get
000075f: 0f                                        ; global index
0000760: 41                                        ; i32.const
0000761: 08                                        ; i32 literal
0000762: 6a                                        ; i32.add
0000763: 20                                        ; local.get
0000764: 03                                        ; local index
0000765: 41                                        ; i32.const
0000766: 04                                        ; i32 literal
0000767: 6c                                        ; i32.mul
0000768: 6a                                        ; i32.add
0000769: 28                                        ; i32.load
000076a: 02                                        ; alignment
000076b: 00                                        ; load offset
000076c: 41                                        ; i32.const
000076d: 00                                        ; i32 literal
000076e: 6a                                        ; i32.add
000076f: 20                                        ; local.get
0000770: 07                                        ; local index
0000771: 38                                        ; f32.store
0000772: 02                                        ; alignment
0000773: 00                                        ; store offset
0000774: 23                                        ; global.get
0000775: 0f                                        ; global index
0000776: 41                                        ; i32.const
0000777: 08                                        ; i32 literal
0000778: 6a                                        ; i32.add
0000779: 20                                        ; local.get
000077a: 03                                        ; local index
000077b: 41                                        ; i32.const
000077c: 04                                        ; i32 literal
000077d: 6c                                        ; i32.mul
000077e: 6a                                        ; i32.add
000077f: 28                                        ; i32.load
0000780: 02                                        ; alignment
0000781: 00                                        ; load offset
0000782: 41                                        ; i32.const
0000783: 04                                        ; i32 literal
0000784: 6a                                        ; i32.add
0000785: 20                                        ; local.get
0000786: 08                                        ; local index
0000787: 38                                        ; f32.store
0000788: 02                                        ; alignment
0000789: 00                                        ; store offset
000078a: 20                                        ; local.get
000078b: 04                                        ; local index
000078c: 20                                        ; local.get
000078d: 06                                        ; local index
000078e: 93                                        ; f32.sub
000078f: bb                                        ; f64.promote_f32
0000790: 20                                        ; local.get
0000791: 00                                        ; local index
0000792: bb                                        ; f64.promote_f32
0000793: a3                                        ; f64.div
0000794: 23                                        ; global.get
0000795: 0c                                        ; global index
0000796: b7                                        ; f64.convert_i32_s
0000797: a2                                        ; f64.mul
0000798: 10                                        ; call
0000799: 06                                        ; function index
000079a: aa                                        ; i32.trunc_f64_s
000079b: 21                                        ; local.set
000079c: 09                                        ; local index
000079d: 20                                        ; local.get
000079e: 04                                        ; local index
000079f: 20                                        ; local.get
00007a0: 06                                        ; local index
00007a1: 92                                        ; f32.add
00007a2: bb                                        ; f64.promote_f32
00007a3: 20                                        ; local.get
00007a4: 00                                        ; local index
00007a5: bb                                        ; f64.promote_f32
00007a6: a3                                        ; f64.div
00007a7: 23                                        ; global.get
00007a8: 0c                                        ; global index
00007a9: b7                                        ; f64.convert_i32_s
00007aa: a2                                        ; f64.mul
00007ab: 10                                        ; call
00007ac: 06                                        ; function index
00007ad: aa                                        ; i32.trunc_f64_s
00007ae: 21                                        ; local.set
00007af: 0a                                        ; local index
00007b0: 20                                        ; local.get
00007b1: 05                                        ; local index
00007b2: 20                                        ; local.get
00007b3: 06                                        ; local index
00007b4: 93                                        ; f32.sub
00007b5: bb                                        ; f64.promote_f32
00007b6: 20                                        ; local.get
00007b7: 01                                        ; local index
00007b8: bb                                        ; f64.promote_f32
00007b9: a3                                        ; f64.div
00007ba: 23                                        ; global.get
00007bb: 0b                                        ; global index
00007bc: b7                                        ; f64.convert_i32_s
00007bd: a2                                        ; f64.mul
00007be: 10                                        ; call
00007bf: 06                                        ; function index
00007c0: aa                                        ; i32.trunc_f64_s
00007c1: 21                                        ; local.set
00007c2: 0b                                        ; local index
00007c3: 20                                        ; local.get
00007c4: 05                                        ; local index
00007c5: 20                                        ; local.get
00007c6: 06                                        ; local index
00007c7: 92                                        ; f32.add
00007c8: bb                                        ; f64.promote_f32
00007c9: 20                                        ; local.get
00007ca: 01                                        ; local index
00007cb: bb                                        ; f64.promote_f32
00007cc: a3                                        ; f64.div
00007cd: 23                                        ; global.get
00007ce: 0b                                        ; global index
00007cf: b7                                        ; f64.convert_i32_s
00007d0: a2                                        ; f64.mul
00007d1: 10                                        ; call
00007d2: 06                                        ; function index
00007d3: aa                                        ; i32.trunc_f64_s
00007d4: 21                                        ; local.set
00007d5: 0c                                        ; local index
00007d6: 20                                        ; local.get
00007d7: 09                                        ; local index
00007d8: 41                                        ; i32.const
00007d9: 00                                        ; i32 literal
00007da: 48                                        ; i32.lt_s
00007db: 04                                        ; if
00007dc: 40                                        ; void
00007dd: 41                                        ; i32.const
00007de: 00                                        ; i32 literal
00007df: 21                                        ; local.set
00007e0: 09                                        ; local index
00007e1: 0b                                        ; end
00007e2: 20                                        ; local.get
00007e3: 0a                                        ; local index
00007e4: 23                                        ; global.get
00007e5: 0c                                        ; global index
00007e6: 4e                                        ; i32.ge_s
00007e7: 04                                        ; if
00007e8: 40                                        ; void
00007e9: 23                                        ; global.get
00007ea: 0c                                        ; global index
00007eb: 41                                        ; i32.const
00007ec: 01                                        ; i32 literal
00007ed: 6b                                        ; i32.sub
00007ee: 21                                        ; local.set
00007ef: 0a                                        ; local index
00007f0: 0b                                        ; end
00007f1: 20                                        ; local.get
00007f2: 0b                                        ; local index
00007f3: 41                                        ; i32.const
00007f4: 00                                        ; i32 literal
00007f5: 48                                        ; i32.lt_s
00007f6: 04                                        ; if
00007f7: 40                                        ; void
00007f8: 41                                        ; i32.const
00007f9: 00                                        ; i32 literal
00007fa: 21                                        ; local.set
00007fb: 0b                                        ; local index
00007fc: 0b                                        ; end
00007fd: 20                                        ; local.get
00007fe: 0c                                        ; local index
00007ff: 23                                        ; global.get
0000800: 0b                                        ; global index
0000801: 4e                                        ; i32.ge_s
0000802: 04                                        ; if
0000803: 40                                        ; void
0000804: 23                                        ; global.get
0000805: 0b                                        ; global index
0000806: 41                                        ; i32.const
0000807: 01                                        ; i32 literal
0000808: 6b                                        ; i32.sub
0000809: 21                                        ; local.set
000080a: 0c                                        ; local index
000080b: 0b                                        ; end
000080c: 20                                        ; local.get
000080d: 09                                        ; local index
000080e: 21                                        ; local.set
000080f: 0d                                        ; local index
0000810: 02                                        ; block
0000811: 40                                        ; void
0000812: 03                                        ; loop
0000813: 40                                        ; void
0000814: 20                                        ; local.get
0000815: 0d                                        ; local index
0000816: 20                                        ; local.get
0000817: 0a                                        ; local index
0000818: 4a                                        ; i32.gt_s
0000819: 0d                                        ; br_if
000081a: 01                                        ; break depth
000081b: 23                                        ; global.get
000081c: 11                                        ; global index
000081d: 41                                        ; i32.const
000081e: 08                                        ; i32 literal
000081f: 6a                                        ; i32.add
0000820: 20                                        ; local.get
0000821: 0d                                        ; local index
0000822: 41                                        ; i32.const
0000823: 04                                        ; i32 literal
0000824: 6c                                        ; i32.mul
0000825: 6a                                        ; i32.add
0000826: 28                                        ; i32.load
0000827: 02                                        ; alignment
0000828: 00                                        ; load offset
0000829: 21                                        ; local.set
000082a: 0e                                        ; local index
000082b: 20                                        ; local.get
000082c: 0b                                        ; local index
000082d: 21                                        ; local.set
000082e: 0f                                        ; local index
000082f: 02                                        ; block
0000830: 40                                        ; void
0000831: 03                                        ; loop
0000832: 40                                        ; void
0000833: 20                                        ; local.get
0000834: 0f                                        ; local index
0000835: 20                                        ; local.get
0000836: 0c                                        ; local index
0000837: 4a                                        ; i32.gt_s
0000838: 0d                                        ; br_if
0000839: 01                                        ; break depth
000083a: 23                                        ; global.get
000083b: 10                                        ; global index
000083c: 41                                        ; i32.const
000083d: 08                                        ; i32 literal
000083e: 6a                                        ; i32.add
000083f: 20                                        ; local.get
0000840: 02                                        ; local index
0000841: 41                                        ; i32.const
0000842: 04                                        ; i32 literal
0000843: 6c                                        ; i32.mul
0000844: 6a                                        ; i32.add
0000845: 28                                        ; i32.load
0000846: 02                                        ; alignment
0000847: 00                                        ; load offset
0000848: 21                                        ; local.set
0000849: 10                                        ; local index
000084a: 20                                        ; local.get
000084b: 02                                        ; local index
000084c: 41                                        ; i32.const
000084d: 01                                        ; i32 literal
000084e: 6a                                        ; i32.add
000084f: 21                                        ; local.set
0000850: 02                                        ; local index
0000851: 20                                        ; local.get
0000852: 10                                        ; local index
0000853: 41                                        ; i32.const
0000854: 04                                        ; i32 literal
0000855: 6a                                        ; i32.add
0000856: 20                                        ; local.get
0000857: 03                                        ; local index
0000858: 36                                        ; i32.store
0000859: 02                                        ; alignment
000085a: 00                                        ; store offset
000085b: 20                                        ; local.get
000085c: 10                                        ; local index
000085d: 41                                        ; i32.const
000085e: 00                                        ; i32 literal
000085f: 6a                                        ; i32.add
0000860: 20                                        ; local.get
0000861: 0e                                        ; local index
0000862: 41                                        ; i32.const
0000863: 08                                        ; i32 literal
0000864: 6a                                        ; i32.add
0000865: 20                                        ; local.get
0000866: 0f                                        ; local index
0000867: 41                                        ; i32.const
0000868: 04                                        ; i32 literal
0000869: 6c                                        ; i32.mul
000086a: 6a                                        ; i32.add
000086b: 28                                        ; i32.load
000086c: 02                                        ; alignment
000086d: 00                                        ; load offset
000086e: 36                                        ; i32.store
000086f: 02                                        ; alignment
0000870: 00                                        ; store offset
0000871: 20                                        ; local.get
0000872: 0e                                        ; local index
0000873: 41                                        ; i32.const
0000874: 08                                        ; i32 literal
0000875: 6a                                        ; i32.add
0000876: 20                                        ; local.get
0000877: 0f                                        ; local index
0000878: 41                                        ; i32.const
0000879: 04                                        ; i32 literal
000087a: 6c                                        ; i32.mul
000087b: 6a                                        ; i32.add
000087c: 20                                        ; local.get
000087d: 10                                        ; local index
000087e: 36                                        ; i32.store
000087f: 02                                        ; alignment
0000880: 00                                        ; store offset
0000881: 20                                        ; local.get
0000882: 0f                                        ; local index
0000883: 41                                        ; i32.const
0000884: 01                                        ; i32 literal
0000885: 6a                                        ; i32.add
0000886: 21                                        ; local.set
0000887: 0f                                        ; local index
0000888: 0c                                        ; br
0000889: 00                                        ; break depth
000088a: 0b                                        ; end
000088b: 0b                                        ; end
000088c: 20                                        ; local.get
000088d: 0d                                        ; local index
000088e: 41                                        ; i32.const
000088f: 01                                        ; i32 literal
0000890: 6a                                        ; i32.add
0000891: 21                                        ; local.set
0000892: 0d                                        ; local index
0000893: 0c                                        ; br
0000894: 00                                        ; break depth
0000895: 0b                                        ; end
0000896: 0b                                        ; end
0000897: 20                                        ; local.get
0000898: 03                                        ; local index
0000899: 41                                        ; i32.const
000089a: 01                                        ; i32 literal
000089b: 6a                                        ; i32.add
000089c: 21                                        ; local.set
000089d: 03                                        ; local index
000089e: 0c                                        ; br
000089f: 00                                        ; break depth
00008a0: 0b                                        ; end
00008a1: 0b                                        ; end
00008a2: 0b                                        ; end
; move data: [635, 8a3) -> [636, 8a4)
0000634: ee04                                      ; FIXUP func body size
; function body 7
00008a4: 00                                        ; func body size (guess)
00008a5: 07                                        ; local decl count
00008a6: 05                                        ; local type count
00008a7: 7f                                        ; i32
00008a8: 05                                        ; local type count
00008a9: 7d                                        ; f32
00008aa: 02                                        ; local type count
00008ab: 7f                                        ; i32
00008ac: 07                                        ; local type count
00008ad: 7d                                        ; f32
00008ae: 01                                        ; local type count
00008af: 7c                                        ; f64
00008b0: 04                                        ; local type count
00008b1: 7d                                        ; f32
00008b2: 04                                        ; local type count
00008b3: 7c                                        ; f64
00008b4: 41                                        ; i32.const
00008b5: 00                                        ; i32 literal
00008b6: 21                                        ; local.set
00008b7: 00                                        ; local index
00008b8: 02                                        ; block
00008b9: 40                                        ; void
00008ba: 03                                        ; loop
00008bb: 40                                        ; void
00008bc: 20                                        ; local.get
00008bd: 00                                        ; local index
00008be: 23                                        ; global.get
00008bf: 0c                                        ; global index
00008c0: 41                                        ; i32.const
00008c1: 01                                        ; i32 literal
00008c2: 6b                                        ; i32.sub
00008c3: 4a                                        ; i32.gt_s
00008c4: 0d                                        ; br_if
00008c5: 01                                        ; break depth
00008c6: 23                                        ; global.get
00008c7: 11                                        ; global index
00008c8: 41                                        ; i32.const
00008c9: 08                                        ; i32 literal
00008ca: 6a                                        ; i32.add
00008cb: 20                                        ; local.get
00008cc: 00                                        ; local index
00008cd: 41                                        ; i32.const
00008ce: 04                                        ; i32 literal
00008cf: 6c                                        ; i32.mul
00008d0: 6a                                        ; i32.add
00008d1: 28                                        ; i32.load
00008d2: 02                                        ; alignment
00008d3: 00                                        ; load offset
00008d4: 21                                        ; local.set
00008d5: 01                                        ; local index
00008d6: 41                                        ; i32.const
00008d7: 00                                        ; i32 literal
00008d8: 21                                        ; local.set
00008d9: 02                                        ; local index
00008da: 02                                        ; block
00008db: 40                                        ; void
00008dc: 03                                        ; loop
00008dd: 40                                        ; void
00008de: 20                                        ; local.get
00008df: 02                                        ; local index
00008e0: 23                                        ; global.get
00008e1: 0b                                        ; global index
00008e2: 41                                        ; i32.const
00008e3: 01                                        ; i32 literal
00008e4: 6b                                        ; i32.sub
00008e5: 4a                                        ; i32.gt_s
00008e6: 0d                                        ; br_if
00008e7: 01                                        ; break depth
00008e8: 20                                        ; local.get
00008e9: 01                                        ; local index
00008ea: 41                                        ; i32.const
00008eb: 08                                        ; i32 literal
00008ec: 6a                                        ; i32.add
00008ed: 20                                        ; local.get
00008ee: 02                                        ; local index
00008ef: 41                                        ; i32.const
00008f0: 04                                        ; i32 literal
00008f1: 6c                                        ; i32.mul
00008f2: 6a                                        ; i32.add
00008f3: 28                                        ; i32.load
00008f4: 02                                        ; alignment
00008f5: 00                                        ; load offset
00008f6: 21                                        ; local.set
00008f7: 03                                        ; local index
00008f8: 02                                        ; block
00008f9: 40                                        ; void
00008fa: 03                                        ; loop
00008fb: 40                                        ; void
00008fc: 20                                        ; local.get
00008fd: 03                                        ; local index
00008fe: 41                                        ; i32.const
00008ff: 00                                        ; i32 literal
0000900: 46                                        ; i32.eq
0000901: 45                                        ; i32.eqz
0000902: 45                                        ; i32.eqz
0000903: 0d                                        ; br_if
0000904: 01                                        ; break depth
0000905: 20                                        ; local.get
0000906: 03                                        ; local index
0000907: 41                                        ; i32.const
0000908: 04                                        ; i32 literal
0000909: 6a                                        ; i32.add
000090a: 28                                        ; i32.load
000090b: 02                                        ; alignment
000090c: 00                                        ; load offset
000090d: 21                                        ; local.set
000090e: 04                                        ; local index
000090f: 23                                        ; global.get
0000910: 0e                                        ; global index
0000911: 41                                        ; i32.const
0000912: 08                                        ; i32 literal
0000913: 6a                                        ; i32.add
0000914: 20                                        ; local.get
0000915: 04                                        ; local index
0000916: 41                                        ; i32.const
0000917: 0c                                        ; i32 literal
0000918: 6c                                        ; i32.mul
0000919: 6a                                        ; i32.add
000091a: 28                                        ; i32.load
000091b: 02                                        ; alignment
000091c: 00                                        ; load offset
000091d: 41                                        ; i32.const
000091e: 04                                        ; i32 literal
000091f: 6a                                        ; i32.add
0000920: 2a                                        ; f32.load
0000921: 02                                        ; alignment
0000922: 00                                        ; load offset
0000923: 21                                        ; local.set
0000924: 05                                        ; local index
0000925: 23                                        ; global.get
0000926: 0e                                        ; global index
0000927: 41                                        ; i32.const
0000928: 08                                        ; i32 literal
0000929: 6a                                        ; i32.add
000092a: 20                                        ; local.get
000092b: 04                                        ; local index
000092c: 41                                        ; i32.const
000092d: 0c                                        ; i32 literal
000092e: 6c                                        ; i32.mul
000092f: 6a                                        ; i32.add
0000930: 28                                        ; i32.load
0000931: 02                                        ; alignment
0000932: 00                                        ; load offset
0000933: 41                                        ; i32.const
0000934: 00                                        ; i32 literal
0000935: 6a                                        ; i32.add
0000936: 2a                                        ; f32.load
0000937: 02                                        ; alignment
0000938: 00                                        ; load offset
0000939: 21                                        ; local.set
000093a: 06                                        ; local index
000093b: 23                                        ; global.get
000093c: 0e                                        ; global index
000093d: 41                                        ; i32.const
000093e: 08                                        ; i32 literal
000093f: 6a                                        ; i32.add
0000940: 20                                        ; local.get
0000941: 04                                        ; local index
0000942: 41                                        ; i32.const
0000943: 0c                                        ; i32 literal
0000944: 6c                                        ; i32.mul
0000945: 6a                                        ; i32.add
0000946: 28                                        ; i32.load
0000947: 02                                        ; alignment
0000948: 00                                        ; load offset
0000949: 41                                        ; i32.const
000094a: 08                                        ; i32 literal
000094b: 6a                                        ; i32.add
000094c: 2a                                        ; f32.load
000094d: 02                                        ; alignment
000094e: 00                                        ; load offset
000094f: 21                                        ; local.set
0000950: 07                                        ; local index
0000951: 23                                        ; global.get
0000952: 0f                                        ; global index
0000953: 41                                        ; i32.const
0000954: 08                                        ; i32 literal
0000955: 6a                                        ; i32.add
0000956: 20                                        ; local.get
0000957: 04                                        ; local index
0000958: 41                                        ; i32.const
0000959: 04                                        ; i32 literal
000095a: 6c                                        ; i32.mul
000095b: 6a                                        ; i32.add
000095c: 28                                        ; i32.load
000095d: 02                                        ; alignment
000095e: 00                                        ; load offset
000095f: 41                                        ; i32.const
0000960: 00                                        ; i32 literal
0000961: 6a                                        ; i32.add
0000962: 2a                                        ; f32.load
0000963: 02                                        ; alignment
0000964: 00                                        ; load offset
0000965: 21                                        ; local.set
0000966: 08                                        ; local index
0000967: 23                                        ; global.get
0000968: 0f                                        ; global index
0000969: 41                                        ; i32.const
000096a: 08                                        ; i32 literal
000096b: 6a                                        ; i32.add
000096c: 20                                        ; local.get
000096d: 04                                        ; local index
000096e: 41                                        ; i32.const
000096f: 04                                        ; i32 literal
0000970: 6c                                        ; i32.mul
0000971: 6a                                        ; i32.add
0000972: 28                                        ; i32.load
0000973: 02                                        ; alignment
0000974: 00                                        ; load offset
0000975: 41                                        ; i32.const
0000976: 04                                        ; i32 literal
0000977: 6a                                        ; i32.add
0000978: 2a                                        ; f32.load
0000979: 02                                        ; alignment
000097a: 00                                        ; load offset
000097b: 21                                        ; local.set
000097c: 09                                        ; local index
000097d: 20                                        ; local.get
000097e: 03                                        ; local index
000097f: 21                                        ; local.set
0000980: 0a                                        ; local index
0000981: 20                                        ; local.get
0000982: 0a                                        ; local index
0000983: 41                                        ; i32.const
0000984: 00                                        ; i32 literal
0000985: 6a                                        ; i32.add
0000986: 28                                        ; i32.load
0000987: 02                                        ; alignment
0000988: 00                                        ; load offset
0000989: 21                                        ; local.set
000098a: 0a                                        ; local index
000098b: 02                                        ; block
000098c: 40                                        ; void
000098d: 03                                        ; loop
000098e: 40                                        ; void
000098f: 20                                        ; local.get
0000990: 0a                                        ; local index
0000991: 41                                        ; i32.const
0000992: 00                                        ; i32 literal
0000993: 46                                        ; i32.eq
0000994: 45                                        ; i32.eqz
0000995: 45                                        ; i32.eqz
0000996: 0d                                        ; br_if
0000997: 01                                        ; break depth
0000998: 20                                        ; local.get
0000999: 0a                                        ; local index
000099a: 41                                        ; i32.const
000099b: 04                                        ; i32 literal
000099c: 6a                                        ; i32.add
000099d: 28                                        ; i32.load
000099e: 02                                        ; alignment
000099f: 00                                        ; load offset
00009a0: 21                                        ; local.set
00009a1: 0b                                        ; local index
00009a2: 23                                        ; global.get
00009a3: 0e                                        ; global index
00009a4: 41                                        ; i32.const
00009a5: 08                                        ; i32 literal
00009a6: 6a                                        ; i32.add
00009a7: 20                                        ; local.get
00009a8: 0b                                        ; local index
00009a9: 41                                        ; i32.const
00009aa: 0c                                        ; i32 literal
00009ab: 6c                                        ; i32.mul
00009ac: 6a                                        ; i32.add
00009ad: 28                                        ; i32.load
00009ae: 02                                        ; alignment
00009af: 00                                        ; load offset
00009b0: 41                                        ; i32.const
00009b1: 04                                        ; i32 literal
00009b2: 6a                                        ; i32.add
00009b3: 2a                                        ; f32.load
00009b4: 02                                        ; alignment
00009b5: 00                                        ; load offset
00009b6: 21                                        ; local.set
00009b7: 0c                                        ; local index
00009b8: 23                                        ; global.get
00009b9: 0e                                        ; global index
00009ba: 41                                        ; i32.const
00009bb: 08                                        ; i32 literal
00009bc: 6a                                        ; i32.add
00009bd: 20                                        ; local.get
00009be: 0b                                        ; local index
00009bf: 41                                        ; i32.const
00009c0: 0c                                        ; i32 literal
00009c1: 6c                                        ; i32.mul
00009c2: 6a                                        ; i32.add
00009c3: 28                                        ; i32.load
00009c4: 02                                        ; alignment
00009c5: 00                                        ; load offset
00009c6: 41                                        ; i32.const
00009c7: 00                                        ; i32 literal
00009c8: 6a                                        ; i32.add
00009c9: 2a                                        ; f32.load
00009ca: 02                                        ; alignment
00009cb: 00                                        ; load offset
00009cc: 21                                        ; local.set
00009cd: 0d                                        ; local index
00009ce: 23                                        ; global.get
00009cf: 0e                                        ; global index
00009d0: 41                                        ; i32.const
00009d1: 08                                        ; i32 literal
00009d2: 6a                                        ; i32.add
00009d3: 20                                        ; local.get
00009d4: 0b                                        ; local index
00009d5: 41                                        ; i32.const
00009d6: 0c                                        ; i32 literal
00009d7: 6c                                        ; i32.mul
00009d8: 6a                                        ; i32.add
00009d9: 28                                        ; i32.load
00009da: 02                                        ; alignment
00009db: 00                                        ; load offset
00009dc: 41                                        ; i32.const
00009dd: 08                                        ; i32 literal
00009de: 6a                                        ; i32.add
00009df: 2a                                        ; f32.load
00009e0: 02                                        ; alignment
00009e1: 00                                        ; load offset
00009e2: 21                                        ; local.set
00009e3: 0e                                        ; local index
00009e4: 20                                        ; local.get
00009e5: 05                                        ; local index
00009e6: 20                                        ; local.get
00009e7: 06                                        ; local index
00009e8: 20                                        ; local.get
00009e9: 07                                        ; local index
00009ea: 20                                        ; local.get
00009eb: 0c                                        ; local index
00009ec: 20                                        ; local.get
00009ed: 0d                                        ; local index
00009ee: 20                                        ; local.get
00009ef: 0e                                        ; local index
00009f0: 10                                        ; call
00009f1: 17                                        ; function index
00009f2: 04                                        ; if
00009f3: 40                                        ; void
00009f4: 23                                        ; global.get
00009f5: 0f                                        ; global index
00009f6: 41                                        ; i32.const
00009f7: 08                                        ; i32 literal
00009f8: 6a                                        ; i32.add
00009f9: 20                                        ; local.get
00009fa: 0b                                        ; local index
00009fb: 41                                        ; i32.const
00009fc: 04                                        ; i32 literal
00009fd: 6c                                        ; i32.mul
00009fe: 6a                                        ; i32.add
00009ff: 28                                        ; i32.load
0000a00: 02                                        ; alignment
0000a01: 00                                        ; load offset
0000a02: 41                                        ; i32.const
0000a03: 00                                        ; i32 literal
0000a04: 6a                                        ; i32.add
0000a05: 2a                                        ; f32.load
0000a06: 02                                        ; alignment
0000a07: 00                                        ; load offset
0000a08: 21                                        ; local.set
0000a09: 0f                                        ; local index
0000a0a: 23                                        ; global.get
0000a0b: 0f                                        ; global index
0000a0c: 41                                        ; i32.const
0000a0d: 08                                        ; i32 literal
0000a0e: 6a                                        ; i32.add
0000a0f: 20                                        ; local.get
0000a10: 0b                                        ; local index
0000a11: 41                                        ; i32.const
0000a12: 04                                        ; i32 literal
0000a13: 6c                                        ; i32.mul
0000a14: 6a                                        ; i32.add
0000a15: 28                                        ; i32.load
0000a16: 02                                        ; alignment
0000a17: 00                                        ; load offset
0000a18: 41                                        ; i32.const
0000a19: 04                                        ; i32 literal
0000a1a: 6a                                        ; i32.add
0000a1b: 2a                                        ; f32.load
0000a1c: 02                                        ; alignment
0000a1d: 00                                        ; load offset
0000a1e: 21                                        ; local.set
0000a1f: 10                                        ; local index
0000a20: 20                                        ; local.get
0000a21: 0c                                        ; local index
0000a22: 20                                        ; local.get
0000a23: 05                                        ; local index
0000a24: 93                                        ; f32.sub
0000a25: 21                                        ; local.set
0000a26: 11                                        ; local index
0000a27: 20                                        ; local.get
0000a28: 0d                                        ; local index
0000a29: 20                                        ; local.get
0000a2a: 06                                        ; local index
0000a2b: 93                                        ; f32.sub
0000a2c: 21                                        ; local.set
0000a2d: 12                                        ; local index
0000a2e: 20                                        ; local.get
0000a2f: 11                                        ; local index
0000a30: 20                                        ; local.get
0000a31: 11                                        ; local index
0000a32: 94                                        ; f32.mul
0000a33: 20                                        ; local.get
0000a34: 12                                        ; local index
0000a35: 20                                        ; local.get
0000a36: 12                                        ; local index
0000a37: 94                                        ; f32.mul
0000a38: 92                                        ; f32.add
0000a39: bb                                        ; f64.promote_f32
0000a3a: 10                                        ; call
0000a3b: 01                                        ; function index
0000a3c: 21                                        ; local.set
0000a3d: 13                                        ; local index
0000a3e: 20                                        ; local.get
0000a3f: 11                                        ; local index
0000a40: bb                                        ; f64.promote_f32
0000a41: 20                                        ; local.get
0000a42: 13                                        ; local index
0000a43: a3                                        ; f64.div
0000a44: b6                                        ; f32.demote_f64
0000a45: 21                                        ; local.set
0000a46: 11                                        ; local index
0000a47: 20                                        ; local.get
0000a48: 12                                        ; local index
0000a49: bb                                        ; f64.promote_f32
0000a4a: 20                                        ; local.get
0000a4b: 13                                        ; local index
0000a4c: a3                                        ; f64.div
0000a4d: b6                                        ; f32.demote_f64
0000a4e: 21                                        ; local.set
0000a4f: 12                                        ; local index
0000a50: 20                                        ; local.get
0000a51: 11                                        ; local index
0000a52: 20                                        ; local.get
0000a53: 08                                        ; local index
0000a54: 94                                        ; f32.mul
0000a55: 20                                        ; local.get
0000a56: 12                                        ; local index
0000a57: 20                                        ; local.get
0000a58: 09                                        ; local index
0000a59: 94                                        ; f32.mul
0000a5a: 92                                        ; f32.add
0000a5b: 21                                        ; local.set
0000a5c: 14                                        ; local index
0000a5d: 20                                        ; local.get
0000a5e: 11                                        ; local index
0000a5f: 20                                        ; local.get
0000a60: 0f                                        ; local index
0000a61: 94                                        ; f32.mul
0000a62: 20                                        ; local.get
0000a63: 12                                        ; local index
0000a64: 20                                        ; local.get
0000a65: 10                                        ; local index
0000a66: 94                                        ; f32.mul
0000a67: 92                                        ; f32.add
0000a68: 21                                        ; local.set
0000a69: 15                                        ; local index
0000a6a: 20                                        ; local.get
0000a6b: 14                                        ; local index
0000a6c: 20                                        ; local.get
0000a6d: 15                                        ; local index
0000a6e: 93                                        ; f32.sub
0000a6f: 41                                        ; i32.const
0000a70: 00                                        ; i32 literal
0000a71: b2                                        ; f32.convert_i32_s
0000a72: 5f                                        ; f32.le
0000a73: 45                                        ; i32.eqz
0000a74: 04                                        ; if
0000a75: 40                                        ; void
0000a76: 20                                        ; local.get
0000a77: 07                                        ; local index
0000a78: 20                                        ; local.get
0000a79: 0e                                        ; local index
0000a7a: 92                                        ; f32.add
0000a7b: 21                                        ; local.set
0000a7c: 16                                        ; local index
0000a7d: 20                                        ; local.get
0000a7e: 07                                        ; local index
0000a7f: 20                                        ; local.get
0000a80: 0e                                        ; local index
0000a81: 93                                        ; f32.sub
0000a82: 21                                        ; local.set
0000a83: 17                                        ; local index
0000a84: 20                                        ; local.get
0000a85: 14                                        ; local index
0000a86: 20                                        ; local.get
0000a87: 17                                        ; local index
0000a88: 94                                        ; f32.mul
0000a89: 41                                        ; i32.const
0000a8a: 02                                        ; i32 literal
0000a8b: b2                                        ; f32.convert_i32_s
0000a8c: 20                                        ; local.get
0000a8d: 0e                                        ; local index
0000a8e: 94                                        ; f32.mul
0000a8f: 20                                        ; local.get
0000a90: 15                                        ; local index
0000a91: 94                                        ; f32.mul
0000a92: 92                                        ; f32.add
0000a93: bb                                        ; f64.promote_f32
0000a94: 20                                        ; local.get
0000a95: 16                                        ; local index
0000a96: bb                                        ; f64.promote_f32
0000a97: a3                                        ; f64.div
0000a98: 21                                        ; local.set
0000a99: 18                                        ; local index
0000a9a: 41                                        ; i32.const
0000a9b: 02                                        ; i32 literal
0000a9c: b2                                        ; f32.convert_i32_s
0000a9d: 20                                        ; local.get
0000a9e: 07                                        ; local index
0000a9f: 94                                        ; f32.mul
0000aa0: 20                                        ; local.get
0000aa1: 14                                        ; local index
0000aa2: 94                                        ; f32.mul
0000aa3: 20                                        ; local.get
0000aa4: 15                                        ; local index
0000aa5: 20                                        ; local.get
0000aa6: 17                                        ; local index
0000aa7: 94                                        ; f32.mul
0000aa8: 93                                        ; f32.sub
0000aa9: bb                                        ; f64.promote_f32
0000aaa: 20                                        ; local.get
0000aab: 16                                        ; local index
0000aac: bb                                        ; f64.promote_f32
0000aad: a3                                        ; f64.div
0000aae: 21                                        ; local.set
0000aaf: 19                                        ; local index
0000ab0: 20                                        ; local.get
0000ab1: 18                                        ; local index
0000ab2: 20                                        ; local.get
0000ab3: 14                                        ; local index
0000ab4: bb                                        ; f64.promote_f32
0000ab5: a1                                        ; f64.sub
0000ab6: 21                                        ; local.set
0000ab7: 1a                                        ; local index
0000ab8: 20                                        ; local.get
0000ab9: 19                                        ; local index
0000aba: 20                                        ; local.get
0000abb: 15                                        ; local index
0000abc: bb                                        ; f64.promote_f32
0000abd: a1                                        ; f64.sub
0000abe: 21                                        ; local.set
0000abf: 1b                                        ; local index
0000ac0: 23                                        ; global.get
0000ac1: 0f                                        ; global index
0000ac2: 41                                        ; i32.const
0000ac3: 08                                        ; i32 literal
0000ac4: 6a                                        ; i32.add
0000ac5: 20                                        ; local.get
0000ac6: 04                                        ; local index
0000ac7: 41                                        ; i32.const
0000ac8: 04                                        ; i32 literal
0000ac9: 6c                                        ; i32.mul
0000aca: 6a                                        ; i32.add
0000acb: 28                                        ; i32.load
0000acc: 02                                        ; alignment
0000acd: 00                                        ; load offset
0000ace: 41                                        ; i32.const
0000acf: 00                                        ; i32 literal
0000ad0: 6a                                        ; i32.add
0000ad1: 20                                        ; local.get
0000ad2: 08                                        ; local index
0000ad3: bb                                        ; f64.promote_f32
0000ad4: 20                                        ; local.get
0000ad5: 11                                        ; local index
0000ad6: bb                                        ; f64.promote_f32
0000ad7: 20                                        ; local.get
0000ad8: 1a                                        ; local index
0000ad9: a2                                        ; f64.mul
0000ada: a0                                        ; f64.add
0000adb: b6                                        ; f32.demote_f64
0000adc: 38                                        ; f32.store
0000add: 02                                        ; alignment
0000ade: 00                                        ; store offset
0000adf: 23                                        ; global.get
0000ae0: 0f                                        ; global index
0000ae1: 41                                        ; i32.const
0000ae2: 08                                        ; i32 literal
0000ae3: 6a                                        ; i32.add
0000ae4: 20                                        ; local.get
0000ae5: 04                                        ; local index
0000ae6: 41                                        ; i32.const
0000ae7: 04                                        ; i32 literal
0000ae8: 6c                                        ; i32.mul
0000ae9: 6a                                        ; i32.add
0000aea: 28                                        ; i32.load
0000aeb: 02                                        ; alignment
0000aec: 00                                        ; load offset
0000aed: 41                                        ; i32.const
0000aee: 04                                        ; i32 literal
0000aef: 6a                                        ; i32.add
0000af0: 20                                        ; local.get
0000af1: 09                                        ; local index
0000af2: bb                                        ; f64.promote_f32
0000af3: 20                                        ; local.get
0000af4: 12                                        ; local index
0000af5: bb                                        ; f64.promote_f32
0000af6: 20                                        ; local.get
0000af7: 1a                                        ; local index
0000af8: a2                                        ; f64.mul
0000af9: a0                                        ; f64.add
0000afa: b6                                        ; f32.demote_f64
0000afb: 38                                        ; f32.store
0000afc: 02                                        ; alignment
0000afd: 00                                        ; store offset
0000afe: 23                                        ; global.get
0000aff: 0f                                        ; global index
0000b00: 41                                        ; i32.const
0000b01: 08                                        ; i32 literal
0000b02: 6a                                        ; i32.add
0000b03: 20                                        ; local.get
0000b04: 0b                                        ; local index
0000b05: 41                                        ; i32.const
0000b06: 04                                        ; i32 literal
0000b07: 6c                                        ; i32.mul
0000b08: 6a                                        ; i32.add
0000b09: 28                                        ; i32.load
0000b0a: 02                                        ; alignment
0000b0b: 00                                        ; load offset
0000b0c: 41                                        ; i32.const
0000b0d: 00                                        ; i32 literal
0000b0e: 6a                                        ; i32.add
0000b0f: 20                                        ; local.get
0000b10: 0f                                        ; local index
0000b11: bb                                        ; f64.promote_f32
0000b12: 20                                        ; local.get
0000b13: 11                                        ; local index
0000b14: bb                                        ; f64.promote_f32
0000b15: 20                                        ; local.get
0000b16: 1b                                        ; local index
0000b17: a2                                        ; f64.mul
0000b18: a0                                        ; f64.add
0000b19: b6                                        ; f32.demote_f64
0000b1a: 38                                        ; f32.store
0000b1b: 02                                        ; alignment
0000b1c: 00                                        ; store offset
0000b1d: 23                                        ; global.get
0000b1e: 0f                                        ; global index
0000b1f: 41                                        ; i32.const
0000b20: 08                                        ; i32 literal
0000b21: 6a                                        ; i32.add
0000b22: 20                                        ; local.get
0000b23: 0b                                        ; local index
0000b24: 41                                        ; i32.const
0000b25: 04                                        ; i32 literal
0000b26: 6c                                        ; i32.mul
0000b27: 6a                                        ; i32.add
0000b28: 28                                        ; i32.load
0000b29: 02                                        ; alignment
0000b2a: 00                                        ; load offset
0000b2b: 41                                        ; i32.const
0000b2c: 04                                        ; i32 literal
0000b2d: 6a                                        ; i32.add
0000b2e: 20                                        ; local.get
0000b2f: 10                                        ; local index
0000b30: bb                                        ; f64.promote_f32
0000b31: 20                                        ; local.get
0000b32: 12                                        ; local index
0000b33: bb                                        ; f64.promote_f32
0000b34: 20                                        ; local.get
0000b35: 1b                                        ; local index
0000b36: a2                                        ; f64.mul
0000b37: a0                                        ; f64.add
0000b38: b6                                        ; f32.demote_f64
0000b39: 38                                        ; f32.store
0000b3a: 02                                        ; alignment
0000b3b: 00                                        ; store offset
0000b3c: 20                                        ; local.get
0000b3d: 0a                                        ; local index
0000b3e: 41                                        ; i32.const
0000b3f: 00                                        ; i32 literal
0000b40: 6a                                        ; i32.add
0000b41: 28                                        ; i32.load
0000b42: 02                                        ; alignment
0000b43: 00                                        ; load offset
0000b44: 21                                        ; local.set
0000b45: 0a                                        ; local index
0000b46: 0b                                        ; end
0000b47: 05                                        ; else
0000b48: 20                                        ; local.get
0000b49: 0a                                        ; local index
0000b4a: 41                                        ; i32.const
0000b4b: 00                                        ; i32 literal
0000b4c: 6a                                        ; i32.add
0000b4d: 28                                        ; i32.load
0000b4e: 02                                        ; alignment
0000b4f: 00                                        ; load offset
0000b50: 21                                        ; local.set
0000b51: 0a                                        ; local index
0000b52: 0b                                        ; end
0000b53: 0c                                        ; br
0000b54: 00                                        ; break depth
0000b55: 0b                                        ; end
0000b56: 0b                                        ; end
0000b57: 20                                        ; local.get
0000b58: 03                                        ; local index
0000b59: 41                                        ; i32.const
0000b5a: 00                                        ; i32 literal
0000b5b: 6a                                        ; i32.add
0000b5c: 28                                        ; i32.load
0000b5d: 02                                        ; alignment
0000b5e: 00                                        ; load offset
0000b5f: 21                                        ; local.set
0000b60: 03                                        ; local index
0000b61: 0c                                        ; br
0000b62: 00                                        ; break depth
0000b63: 0b                                        ; end
0000b64: 0b                                        ; end
0000b65: 20                                        ; local.get
0000b66: 02                                        ; local index
0000b67: 41                                        ; i32.const
0000b68: 01                                        ; i32 literal
0000b69: 6a                                        ; i32.add
0000b6a: 21                                        ; local.set
0000b6b: 02                                        ; local index
0000b6c: 0c                                        ; br
0000b6d: 00                                        ; break depth
0000b6e: 0b                                        ; end
0000b6f: 0b                                        ; end
0000b70: 20                                        ; local.get
0000b71: 00                                        ; local index
0000b72: 41                                        ; i32.const
0000b73: 01                                        ; i32 literal
0000b74: 6a                                        ; i32.add
0000b75: 21                                        ; local.set
0000b76: 00                                        ; local index
0000b77: 0c                                        ; br
0000b78: 00                                        ; break depth
0000b79: 0b                                        ; end
0000b7a: 0b                                        ; end
0000b7b: 0b                                        ; end
; move data: [8a5, b7c) -> [8a6, b7d)
00008a4: d705                                      ; FIXUP func body size
; function body 8
0000b7d: 00                                        ; func body size (guess)
0000b7e: 00                                        ; local decl count
0000b7f: 10                                        ; call
0000b80: 13                                        ; function index
0000b81: 20                                        ; local.get
0000b82: 00                                        ; local index
0000b83: 20                                        ; local.get
0000b84: 01                                        ; local index
0000b85: 10                                        ; call
0000b86: 14                                        ; function index
0000b87: 10                                        ; call
0000b88: 15                                        ; function index
0000b89: 0b                                        ; end
0000b7d: 0c                                        ; FIXUP func body size
; function body 9
0000b8a: 00                                        ; func body size (guess)
0000b8b: 01                                        ; local decl count
0000b8c: 09                                        ; local type count
0000b8d: 7f                                        ; i32
0000b8e: 20                                        ; local.get
0000b8f: 00                                        ; local index
0000b90: 20                                        ; local.get
0000b91: 02                                        ; local index
0000b92: 92                                        ; f32.add
0000b93: 20                                        ; local.get
0000b94: 03                                        ; local index
0000b95: 20                                        ; local.get
0000b96: 05                                        ; local index
0000b97: 93                                        ; f32.sub
0000b98: 5d                                        ; f32.lt
0000b99: 20                                        ; local.get
0000b9a: 00                                        ; local index
0000b9b: 20                                        ; local.get
0000b9c: 02                                        ; local index
0000b9d: 93                                        ; f32.sub
0000b9e: 20                                        ; local.get
0000b9f: 03                                        ; local index
0000ba0: 20                                        ; local.get
0000ba1: 05                                        ; local index
0000ba2: 92                                        ; f32.add
0000ba3: 5e                                        ; f32.gt
0000ba4: 6a                                        ; i32.add
0000ba5: 20                                        ; local.get
0000ba6: 01                                        ; local index
0000ba7: 20                                        ; local.get
0000ba8: 02                                        ; local index
0000ba9: 92                                        ; f32.add
0000baa: 20                                        ; local.get
0000bab: 04                                        ; local index
0000bac: 20                                        ; local.get
0000bad: 05                                        ; local index
0000bae: 93                                        ; f32.sub
0000baf: 5d                                        ; f32.lt
0000bb0: 6a                                        ; i32.add
0000bb1: 20                                        ; local.get
0000bb2: 01                                        ; local index
0000bb3: 20                                        ; local.get
0000bb4: 02                                        ; local index
0000bb5: 93                                        ; f32.sub
0000bb6: 20                                        ; local.get
0000bb7: 04                                        ; local index
0000bb8: 20                                        ; local.get
0000bb9: 05                                        ; local index
0000bba: 92                                        ; f32.add
0000bbb: 5e                                        ; f32.gt
0000bbc: 6a                                        ; i32.add
0000bbd: 04                                        ; if
0000bbe: 40                                        ; void
0000bbf: 41                                        ; i32.const
0000bc0: 00                                        ; i32 literal
0000bc1: 0f                                        ; return
0000bc2: 0b                                        ; end
0000bc3: 20                                        ; local.get
0000bc4: 03                                        ; local index
0000bc5: 20                                        ; local.get
0000bc6: 00                                        ; local index
0000bc7: 93                                        ; f32.sub
0000bc8: bb                                        ; f64.promote_f32
0000bc9: 41                                        ; i32.const
0000bca: 02                                        ; i32 literal
0000bcb: b2                                        ; f32.convert_i32_s
0000bcc: bb                                        ; f64.promote_f32
0000bcd: 10                                        ; call
0000bce: 00                                        ; function index
0000bcf: 20                                        ; local.get
0000bd0: 04                                        ; local index
0000bd1: 20                                        ; local.get
0000bd2: 01                                        ; local index
0000bd3: 93                                        ; f32.sub
0000bd4: bb                                        ; f64.promote_f32
0000bd5: 41                                        ; i32.const
0000bd6: 02                                        ; i32 literal
0000bd7: b2                                        ; f32.convert_i32_s
0000bd8: bb                                        ; f64.promote_f32
0000bd9: 10                                        ; call
0000bda: 00                                        ; function index
0000bdb: a0                                        ; f64.add
0000bdc: 10                                        ; call
0000bdd: 01                                        ; function index
0000bde: 20                                        ; local.get
0000bdf: 02                                        ; local index
0000be0: 20                                        ; local.get
0000be1: 05                                        ; local index
0000be2: 92                                        ; f32.add
0000be3: bb                                        ; f64.promote_f32
0000be4: 65                                        ; f64.le
0000be5: 0f                                        ; return
0000be6: 0b                                        ; end
0000b8a: 5c                                        ; FIXUP func body size
; function body 10
0000be7: 00                                        ; func body size (guess)
0000be8: 00                                        ; local decl count
0000be9: 41                                        ; i32.const
0000bea: d007                                      ; i32 literal
0000bec: 0f                                        ; return
0000bed: 0b                                        ; end
0000be7: 06                                        ; FIXUP func body size
; function body 11
0000bee: 00                                        ; func body size (guess)
0000bef: 00                                        ; local decl count
0000bf0: 41                                        ; i32.const
0000bf1: e007                                      ; i32 literal
0000bf3: 0f                                        ; return
0000bf4: 0b                                        ; end
0000bee: 06                                        ; FIXUP func body size
; function body 12
0000bf5: 00                                        ; func body size (guess)
0000bf6: 00                                        ; local decl count
0000bf7: 41                                        ; i32.const
0000bf8: b808                                      ; i32 literal
0000bfa: 0f                                        ; return
0000bfb: 0b                                        ; end
0000bf5: 06                                        ; FIXUP func body size
; function body 13
0000bfc: 00                                        ; func body size (guess)
0000bfd: 00                                        ; local decl count
0000bfe: 41                                        ; i32.const
0000bff: c008                                      ; i32 literal
0000c01: 0f                                        ; return
0000c02: 0b                                        ; end
0000bfc: 06                                        ; FIXUP func body size
; function body 14
0000c03: 00                                        ; func body size (guess)
0000c04: 00                                        ; local decl count
0000c05: 41                                        ; i32.const
0000c06: d008                                      ; i32 literal
0000c08: 0f                                        ; return
0000c09: 0b                                        ; end
0000c03: 06                                        ; FIXUP func body size
; function body 15
0000c0a: 00                                        ; func body size (guess)
0000c0b: 00                                        ; local decl count
0000c0c: 41                                        ; i32.const
0000c0d: 9809                                      ; i32 literal
0000c0f: 0f                                        ; return
0000c10: 0b                                        ; end
0000c0a: 06                                        ; FIXUP func body size
; function body 16
0000c11: 00                                        ; func body size (guess)
0000c12: 00                                        ; local decl count
0000c13: 41                                        ; i32.const
0000c14: a809                                      ; i32 literal
0000c16: 0f                                        ; return
0000c17: 0b                                        ; end
0000c11: 06                                        ; FIXUP func body size
; function body 17
0000c18: 00                                        ; func body size (guess)
0000c19: 00                                        ; local decl count
0000c1a: 41                                        ; i32.const
0000c1b: d009                                      ; i32 literal
0000c1d: 0f                                        ; return
0000c1e: 0b                                        ; end
0000c18: 06                                        ; FIXUP func body size
; function body 18
0000c1f: 00                                        ; func body size (guess)
0000c20: 00                                        ; local decl count
0000c21: 41                                        ; i32.const
0000c22: d809                                      ; i32 literal
0000c24: 0f                                        ; return
0000c25: 0b                                        ; end
0000c1f: 06                                        ; FIXUP func body size
; function body 19
0000c26: 00                                        ; func body size (guess)
0000c27: 00                                        ; local decl count
0000c28: 10                                        ; call
0000c29: 22                                        ; function index
0000c2a: 10                                        ; call
0000c2b: 23                                        ; function index
0000c2c: 10                                        ; call
0000c2d: 24                                        ; function index
0000c2e: 10                                        ; call
0000c2f: 25                                        ; function index
0000c30: 10                                        ; call
0000c31: 26                                        ; function index
0000c32: 0b                                        ; end
0000c26: 0c                                        ; FIXUP func body size
; function body 20
0000c33: 00                                        ; func body size (guess)
0000c34: 01                                        ; local decl count
0000c35: 04                                        ; local type count
0000c36: 7f                                        ; i32
0000c37: 41                                        ; i32.const
0000c38: 08                                        ; i32 literal
0000c39: 23                                        ; global.get
0000c3a: 0d                                        ; global index
0000c3b: 41                                        ; i32.const
0000c3c: 01                                        ; i32 literal
0000c3d: 6b                                        ; i32.sub
0000c3e: 41                                        ; i32.const
0000c3f: 0c                                        ; i32 literal
0000c40: 6c                                        ; i32.mul
0000c41: 6a                                        ; i32.add
0000c42: 41                                        ; i32.const
0000c43: 07                                        ; i32 literal
0000c44: 10                                        ; call
0000c45: 0e                                        ; function index
0000c46: 21                                        ; local.set
0000c47: 00                                        ; local index
0000c48: 20                                        ; local.get
0000c49: 00                                        ; local index
0000c4a: 41                                        ; i32.const
0000c4b: d804                                      ; i32 literal
0000c4d: 36                                        ; i32.store
0000c4e: 02                                        ; alignment
0000c4f: 00                                        ; store offset
0000c50: 20                                        ; local.get
0000c51: 00                                        ; local index
0000c52: 41                                        ; i32.const
0000c53: 04                                        ; i32 literal
0000c54: 6a                                        ; i32.add
0000c55: 23                                        ; global.get
0000c56: 0d                                        ; global index
0000c57: 41                                        ; i32.const
0000c58: 01                                        ; i32 literal
0000c59: 6b                                        ; i32.sub
0000c5a: 36                                        ; i32.store
0000c5b: 02                                        ; alignment
0000c5c: 00                                        ; store offset
0000c5d: 20                                        ; local.get
0000c5e: 00                                        ; local index
0000c5f: 24                                        ; global.set
0000c60: 0e                                        ; global index
0000c61: 41                                        ; i32.const
0000c62: 08                                        ; i32 literal
0000c63: 23                                        ; global.get
0000c64: 0d                                        ; global index
0000c65: 41                                        ; i32.const
0000c66: 01                                        ; i32 literal
0000c67: 6b                                        ; i32.sub
0000c68: 41                                        ; i32.const
0000c69: 04                                        ; i32 literal
0000c6a: 6c                                        ; i32.mul
0000c6b: 6a                                        ; i32.add
0000c6c: 41                                        ; i32.const
0000c6d: 07                                        ; i32 literal
0000c6e: 10                                        ; call
0000c6f: 0e                                        ; function index
0000c70: 21                                        ; local.set
0000c71: 01                                        ; local index
0000c72: 20                                        ; local.get
0000c73: 01                                        ; local index
0000c74: 41                                        ; i32.const
0000c75: 0d                                        ; i32 literal
0000c76: 36                                        ; i32.store
0000c77: 02                                        ; alignment
0000c78: 00                                        ; store offset
0000c79: 20                                        ; local.get
0000c7a: 01                                        ; local index
0000c7b: 41                                        ; i32.const
0000c7c: 04                                        ; i32 literal
0000c7d: 6a                                        ; i32.add
0000c7e: 23                                        ; global.get
0000c7f: 0d                                        ; global index
0000c80: 41                                        ; i32.const
0000c81: 01                                        ; i32 literal
0000c82: 6b                                        ; i32.sub
0000c83: 36                                        ; i32.store
0000c84: 02                                        ; alignment
0000c85: 00                                        ; store offset
0000c86: 20                                        ; local.get
0000c87: 01                                        ; local index
0000c88: 24                                        ; global.set
0000c89: 0f                                        ; global index
0000c8a: 41                                        ; i32.const
0000c8b: 08                                        ; i32 literal
0000c8c: 23                                        ; global.get
0000c8d: 0d                                        ; global index
0000c8e: 41                                        ; i32.const
0000c8f: 04                                        ; i32 literal
0000c90: 6c                                        ; i32.mul
0000c91: 41                                        ; i32.const
0000c92: 01                                        ; i32 literal
0000c93: 6b                                        ; i32.sub
0000c94: 41                                        ; i32.const
0000c95: 04                                        ; i32 literal
0000c96: 6c                                        ; i32.mul
0000c97: 6a                                        ; i32.add
0000c98: 41                                        ; i32.const
0000c99: 07                                        ; i32 literal
0000c9a: 10                                        ; call
0000c9b: 0e                                        ; function index
0000c9c: 21                                        ; local.set
0000c9d: 02                                        ; local index
0000c9e: 20                                        ; local.get
0000c9f: 02                                        ; local index
0000ca0: 41                                        ; i32.const
0000ca1: 9002                                      ; i32 literal
0000ca3: 36                                        ; i32.store
0000ca4: 02                                        ; alignment
0000ca5: 00                                        ; store offset
0000ca6: 20                                        ; local.get
0000ca7: 02                                        ; local index
0000ca8: 41                                        ; i32.const
0000ca9: 04                                        ; i32 literal
0000caa: 6a                                        ; i32.add
0000cab: 23                                        ; global.get
0000cac: 0d                                        ; global index
0000cad: 41                                        ; i32.const
0000cae: 04                                        ; i32 literal
0000caf: 6c                                        ; i32.mul
0000cb0: 41                                        ; i32.const
0000cb1: 01                                        ; i32 literal
0000cb2: 6b                                        ; i32.sub
0000cb3: 36                                        ; i32.store
0000cb4: 02                                        ; alignment
0000cb5: 00                                        ; store offset
0000cb6: 20                                        ; local.get
0000cb7: 02                                        ; local index
0000cb8: 24                                        ; global.set
0000cb9: 10                                        ; global index
0000cba: 41                                        ; i32.const
0000cbb: 08                                        ; i32 literal
0000cbc: 23                                        ; global.get
0000cbd: 0c                                        ; global index
0000cbe: 41                                        ; i32.const
0000cbf: 01                                        ; i32 literal
0000cc0: 6b                                        ; i32.sub
0000cc1: 41                                        ; i32.const
0000cc2: 04                                        ; i32 literal
0000cc3: 6c                                        ; i32.mul
0000cc4: 6a                                        ; i32.add
0000cc5: 41                                        ; i32.const
0000cc6: 07                                        ; i32 literal
0000cc7: 10                                        ; call
0000cc8: 0e                                        ; function index
0000cc9: 21                                        ; local.set
0000cca: 03                                        ; local index
0000ccb: 20                                        ; local.get
0000ccc: 03                                        ; local index
0000ccd: 41                                        ; i32.const
0000cce: 9002                                      ; i32 literal
0000cd0: 36                                        ; i32.store
0000cd1: 02                                        ; alignment
0000cd2: 00                                        ; store offset
0000cd3: 20                                        ; local.get
0000cd4: 03                                        ; local index
0000cd5: 41                                        ; i32.const
0000cd6: 04                                        ; i32 literal
0000cd7: 6a                                        ; i32.add
0000cd8: 23                                        ; global.get
0000cd9: 0c                                        ; global index
0000cda: 41                                        ; i32.const
0000cdb: 01                                        ; i32 literal
0000cdc: 6b                                        ; i32.sub
0000cdd: 36                                        ; i32.store
0000cde: 02                                        ; alignment
0000cdf: 00                                        ; store offset
0000ce0: 20                                        ; local.get
0000ce1: 03                                        ; local index
0000ce2: 24                                        ; global.set
0000ce3: 11                                        ; global index
0000ce4: 0b                                        ; end
; move data: [c34, ce5) -> [c35, ce6)
0000c33: b101                                      ; FIXUP func body size
; function body 21
0000ce6: 00                                        ; func body size (guess)
0000ce7: 00                                        ; local decl count
0000ce8: 0b                                        ; end
0000ce6: 02                                        ; FIXUP func body size
; function body 22
0000ce9: 00                                        ; func body size (guess)
0000cea: 01                                        ; local decl count
0000ceb: 09                                        ; local type count
0000cec: 7f                                        ; i32
0000ced: 41                                        ; i32.const
0000cee: 00                                        ; i32 literal
0000cef: 21                                        ; local.set
0000cf0: 00                                        ; local index
0000cf1: 41                                        ; i32.const
0000cf2: 00                                        ; i32 literal
0000cf3: 21                                        ; local.set
0000cf4: 01                                        ; local index
0000cf5: 02                                        ; block
0000cf6: 40                                        ; void
0000cf7: 03                                        ; loop
0000cf8: 40                                        ; void
0000cf9: 20                                        ; local.get
0000cfa: 01                                        ; local index
0000cfb: 23                                        ; global.get
0000cfc: 11                                        ; global index
0000cfd: 41                                        ; i32.const
0000cfe: 04                                        ; i32 literal
0000cff: 6a                                        ; i32.add
0000d00: 28                                        ; i32.load
0000d01: 02                                        ; alignment
0000d02: 00                                        ; load offset
0000d03: 41                                        ; i32.const
0000d04: 01                                        ; i32 literal
0000d05: 6b                                        ; i32.sub
0000d06: 4a                                        ; i32.gt_s
0000d07: 0d                                        ; br_if
0000d08: 01                                        ; break depth
0000d09: 20                                        ; local.get
0000d0a: 02                                        ; local index
0000d0b: 21                                        ; local.set
0000d0c: 00                                        ; local index
0000d0d: 23                                        ; global.get
0000d0e: 11                                        ; global index
0000d0f: 41                                        ; i32.const
0000d10: 08                                        ; i32 literal
0000d11: 6a                                        ; i32.add
0000d12: 20                                        ; local.get
0000d13: 01                                        ; local index
0000d14: 41                                        ; i32.const
0000d15: 04                                        ; i32 literal
0000d16: 6c                                        ; i32.mul
0000d17: 6a                                        ; i32.add
0000d18: 20                                        ; local.get
0000d19: 00                                        ; local index
0000d1a: 36                                        ; i32.store
0000d1b: 02                                        ; alignment
0000d1c: 00                                        ; store offset
0000d1d: 41                                        ; i32.const
0000d1e: 00                                        ; i32 literal
0000d1f: 21                                        ; local.set
0000d20: 03                                        ; local index
0000d21: 02                                        ; block
0000d22: 40                                        ; void
0000d23: 03                                        ; loop
0000d24: 40                                        ; void
0000d25: 20                                        ; local.get
0000d26: 03                                        ; local index
0000d27: 20                                        ; local.get
0000d28: 00                                        ; local index
0000d29: 41                                        ; i32.const
0000d2a: 04                                        ; i32 literal
0000d2b: 6a                                        ; i32.add
0000d2c: 28                                        ; i32.load
0000d2d: 02                                        ; alignment
0000d2e: 00                                        ; load offset
0000d2f: 41                                        ; i32.const
0000d30: 01                                        ; i32 literal
0000d31: 6b                                        ; i32.sub
0000d32: 4a                                        ; i32.gt_s
0000d33: 0d                                        ; br_if
0000d34: 01                                        ; break depth
0000d35: 20                                        ; local.get
0000d36: 00                                        ; local index
0000d37: 41                                        ; i32.const
0000d38: 08                                        ; i32 literal
0000d39: 6a                                        ; i32.add
0000d3a: 20                                        ; local.get
0000d3b: 03                                        ; local index
0000d3c: 41                                        ; i32.const
0000d3d: 04                                        ; i32 literal
0000d3e: 6c                                        ; i32.mul
0000d3f: 6a                                        ; i32.add
0000d40: 20                                        ; local.get
0000d41: 04                                        ; local index
0000d42: 36                                        ; i32.store
0000d43: 02                                        ; alignment
0000d44: 00                                        ; store offset
0000d45: 20                                        ; local.get
0000d46: 03                                        ; local index
0000d47: 41                                        ; i32.const
0000d48: 01                                        ; i32 literal
0000d49: 6a                                        ; i32.add
0000d4a: 21                                        ; local.set
0000d4b: 03                                        ; local index
0000d4c: 0c                                        ; br
0000d4d: 00                                        ; break depth
0000d4e: 0b                                        ; end
0000d4f: 0b                                        ; end
0000d50: 20                                        ; local.get
0000d51: 01                                        ; local index
0000d52: 41                                        ; i32.const
0000d53: 01                                        ; i32 literal
0000d54: 6a                                        ; i32.add
0000d55: 21                                        ; local.set
0000d56: 01                                        ; local index
0000d57: 0c                                        ; br
0000d58: 00                                        ; break depth
0000d59: 0b                                        ; end
0000d5a: 0b                                        ; end
0000d5b: 41                                        ; i32.const
0000d5c: 00                                        ; i32 literal
0000d5d: 21                                        ; local.set
0000d5e: 05                                        ; local index
0000d5f: 02                                        ; block
0000d60: 40                                        ; void
0000d61: 03                                        ; loop
0000d62: 40                                        ; void
0000d63: 20                                        ; local.get
0000d64: 05                                        ; local index
0000d65: 23                                        ; global.get
0000d66: 0f                                        ; global index
0000d67: 41                                        ; i32.const
0000d68: 04                                        ; i32 literal
0000d69: 6a                                        ; i32.add
0000d6a: 28                                        ; i32.load
0000d6b: 02                                        ; alignment
0000d6c: 00                                        ; load offset
0000d6d: 41                                        ; i32.const
0000d6e: 01                                        ; i32 literal
0000d6f: 6b                                        ; i32.sub
0000d70: 4a                                        ; i32.gt_s
0000d71: 0d                                        ; br_if
0000d72: 01                                        ; break depth
0000d73: 23                                        ; global.get
0000d74: 0f                                        ; global index
0000d75: 41                                        ; i32.const
0000d76: 08                                        ; i32 literal
0000d77: 6a                                        ; i32.add
0000d78: 20                                        ; local.get
0000d79: 05                                        ; local index
0000d7a: 41                                        ; i32.const
0000d7b: 04                                        ; i32 literal
0000d7c: 6c                                        ; i32.mul
0000d7d: 6a                                        ; i32.add
0000d7e: 20                                        ; local.get
0000d7f: 06                                        ; local index
0000d80: 36                                        ; i32.store
0000d81: 02                                        ; alignment
0000d82: 00                                        ; store offset
0000d83: 20                                        ; local.get
0000d84: 05                                        ; local index
0000d85: 41                                        ; i32.const
0000d86: 01                                        ; i32 literal
0000d87: 6a                                        ; i32.add
0000d88: 21                                        ; local.set
0000d89: 05                                        ; local index
0000d8a: 0c                                        ; br
0000d8b: 00                                        ; break depth
0000d8c: 0b                                        ; end
0000d8d: 0b                                        ; end
0000d8e: 41                                        ; i32.const
0000d8f: 00                                        ; i32 literal
0000d90: 21                                        ; local.set
0000d91: 07                                        ; local index
0000d92: 02                                        ; block
0000d93: 40                                        ; void
0000d94: 03                                        ; loop
0000d95: 40                                        ; void
0000d96: 20                                        ; local.get
0000d97: 07                                        ; local index
0000d98: 23                                        ; global.get
0000d99: 10                                        ; global index
0000d9a: 41                                        ; i32.const
0000d9b: 04                                        ; i32 literal
0000d9c: 6a                                        ; i32.add
0000d9d: 28                                        ; i32.load
0000d9e: 02                                        ; alignment
0000d9f: 00                                        ; load offset
0000da0: 41                                        ; i32.const
0000da1: 01                                        ; i32 literal
0000da2: 6b                                        ; i32.sub
0000da3: 4a                                        ; i32.gt_s
0000da4: 0d                                        ; br_if
0000da5: 01                                        ; break depth
0000da6: 23                                        ; global.get
0000da7: 10                                        ; global index
0000da8: 41                                        ; i32.const
0000da9: 08                                        ; i32 literal
0000daa: 6a                                        ; i32.add
0000dab: 20                                        ; local.get
0000dac: 07                                        ; local index
0000dad: 41                                        ; i32.const
0000dae: 04                                        ; i32 literal
0000daf: 6c                                        ; i32.mul
0000db0: 6a                                        ; i32.add
0000db1: 20                                        ; local.get
0000db2: 08                                        ; local index
0000db3: 36                                        ; i32.store
0000db4: 02                                        ; alignment
0000db5: 00                                        ; store offset
0000db6: 20                                        ; local.get
0000db7: 07                                        ; local index
0000db8: 41                                        ; i32.const
0000db9: 01                                        ; i32 literal
0000dba: 6a                                        ; i32.add
0000dbb: 21                                        ; local.set
0000dbc: 07                                        ; local index
0000dbd: 0c                                        ; br
0000dbe: 00                                        ; break depth
0000dbf: 0b                                        ; end
0000dc0: 0b                                        ; end
0000dc1: 0b                                        ; end
; move data: [cea, dc2) -> [ceb, dc3)
0000ce9: d801                                      ; FIXUP func body size
; function body 23
0000dc3: 00                                        ; func body size (guess)
0000dc4: 00                                        ; local decl count
0000dc5: 0b                                        ; end
0000dc3: 02                                        ; FIXUP func body size
; function body 24
0000dc6: 00                                        ; func body size (guess)
0000dc7: 00                                        ; local decl count
0000dc8: 0b                                        ; end
0000dc6: 02                                        ; FIXUP func body size
; move data: [392, dc9) -> [393, dca)
0000391: b714                                      ; FIXUP section size
; section "Data" (11)
0000dca: 0b                                        ; section code
0000dcb: 00                                        ; section size (guess)
0000dcc: 11                                        ; num data segments
; data segment header 0
0000dcd: 00                                      
0000dce: 41                                        ; i32.const
0000dcf: 8807                                      ; i32 literal
0000dd1: 0b                                        ; end
0000dd2: 15                                        ; data segment size
; data segment data 0
0000dd3: 6172 7261 7928 6f66 2063 6972 636c 6529 
0000de3: 203d 2026 00                              ; data segment data
; data segment header 1
0000de8: 00                                      
0000de9: 41                                        ; i32.const
0000dea: a007                                      ; i32 literal
0000dec: 0b                                        ; end
0000ded: 0b                                        ; data segment size
; data segment data 1
0000dee: 6369 7263 6c65 203d 2023 00               ; data segment data
; data segment header 2
0000df9: 00                                      
0000dfa: 41                                        ; i32.const
0000dfb: b007                                      ; i32 literal
0000dfd: 0b                                        ; end
0000dfe: 04                                        ; data segment size
; data segment data 2
0000dff: 2028 2600                                 ; data segment data
; data segment header 3
0000e03: 00                                      
0000e04: 41                                        ; i32.const
0000e05: b807                                      ; i32 literal
0000e07: 0b                                        ; end
0000e08: 02                                        ; data segment size
; data segment data 3
0000e09: 2900                                      ; data segment data
; data segment header 4
0000e0b: 00                                      
0000e0c: 41                                        ; i32.const
0000e0d: c007                                      ; i32 literal
0000e0f: 0b                                        ; end
0000e10: 0c                                        ; data segment size
; data segment data 4
0000e11: 6369 7263 6c65 5620 3d20 2600             ; data segment data
; data segment header 5
0000e1d: 00                                      
0000e1e: 41                                        ; i32.const
0000e1f: d007                                      ; i32 literal
0000e21: 0b                                        ; end
0000e22: 0b                                        ; data segment size
; data segment data 5
0000e23: 5765 6247 4c2d 4465 6d6f 00               ; data segment data
; data segment header 6
0000e2e: 00                                      
0000e2f: 41                                        ; i32.const
0000e30: e007                                      ; i32 literal
0000e32: 0b                                        ; end
0000e33: 51                                        ; data segment size
; data segment data 6
0000e34: 5765 6241 7373 656d 626c 7920 636f 6e76 
0000e44: 6572 7369 6f6e 2064 656d 6f6e 7374 7261 
0000e54: 7469 6e67 2074 6865 2066 6173 7465 722d 
0000e64: 7065 7266 6f72 6d69 6e67 2067 7269 6420 
0000e74: 6f66 206c 696e 6b65 642d 6c69 7374 732e 
0000e84: 00                                        ; data segment data
; data segment header 7
0000e85: 00                                      
0000e86: 41                                        ; i32.const
0000e87: b808                                      ; i32 literal
0000e89: 0b                                        ; end
0000e8a: 04                                        ; data segment size
; data segment data 7
0000e8b: 4d49 5400                                 ; data segment data
; data segment header 8
0000e8f: 00                                      
0000e90: 41                                        ; i32.const
0000e91: c008                                      ; i32 literal
0000e93: 0b                                        ; end
0000e94: 0b                                        ; data segment size
; data segment data 8
0000e95: 5765 6247 4c2d 4465 6d6f 00               ; data segment data
; data segment header 9
0000ea0: 00                                      
0000ea1: 41                                        ; i32.const
0000ea2: d008                                      ; i32 literal
0000ea4: 0b                                        ; end
0000ea5: 46                                        ; data segment size
; data segment data 9
0000ea6: 6874 7470 733a 2f2f 6769 7468 7562 2e63 
0000eb6: 6f6d 2f67 7579 6265 6466 6f72 642f 7761 
0000ec6: 736d 2d64 656d 6f2f 626c 6f62 2f6d 6173 
0000ed6: 7465 722f 6e61 7469 7665 2f64 656d 6f2d 
0000ee6: 6f70 742e 6300                            ; data segment data
; data segment header 10
0000eec: 00                                      
0000eed: 41                                        ; i32.const
0000eee: 9809                                      ; i32 literal
0000ef0: 0b                                        ; end
0000ef1: 0e                                        ; data segment size
; data segment data 10
0000ef2: 7661 6e69 6c6c 6176 622e 6170 7000        ; data segment data
; data segment header 11
0000f00: 00                                      
0000f01: 41                                        ; i32.const
0000f02: a809                                      ; i32 literal
0000f04: 0b                                        ; end
0000f05: 25                                        ; data segment size
; data segment data 11
0000f06: 3833 6361 3262 3933 2d34 6535 372d 3464 
0000f16: 3434 2d62 3262 632d 3136 3332 3532 6139 
0000f26: 3330 3564 00                              ; data segment data
; data segment header 12
0000f2b: 00                                      
0000f2c: 41                                        ; i32.const
0000f2d: d009                                      ; i32 literal
0000f2f: 0b                                        ; end
0000f30: 08                                        ; data segment size
; data segment data 12
0000f31: 312e 302e 302e 3000                       ; data segment data
; data segment header 13
0000f39: 00                                      
0000f3a: 41                                        ; i32.const
0000f3b: d809                                      ; i32 literal
0000f3d: 0b                                        ; end
0000f3e: 08                                        ; data segment size
; data segment data 13
0000f3f: 312e 302e 302e 3000                       ; data segment data
; data segment header 14
0000f47: 00                                      
0000f48: 41                                        ; i32.const
0000f49: 0d                                        ; i32 literal
0000f4a: 0b                                        ; end
0000f4b: fd01                                      ; data segment size
; data segment data 14
0000f4d: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000f5d: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0000f6d: 496b 4e70 636d 4e73 5a56 5969 4c43 4a6a 
0000f7d: 6247 467a 6331 3970 5a43 4936 4d54 4d73 
0000f8d: 496d 5a70 5a57 786b 6379 4936 6579 4a32 
0000f9d: 6543 4936 6579 4a6e 5a57 356c 636d 6c6a 
0000fad: 496a 7062 5853 7769 636d 4633 496a 6f69 
0000fbd: 5a6a 4d79 4969 7769 6448 6c77 5a53 4936 
0000fcd: 4d33 3073 496e 5a35 496a 7037 496d 646c 
0000fdd: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
0000fed: 5958 6369 4f69 4a6d 4d7a 4969 4c43 4a30 
0000ffd: 6558 426c 496a 6f7a 6658 3073 496d 6c7a 
000100d: 5533 5279 6457 4e30 496a 706d 5957 787a 
000101d: 5a53 7769 6257 5630 6147 396b 6379 4936 
000102d: 6533 3073 496d 3568 6257 567a 6347 466a 
000103d: 5a53 4936 626e 5673 6248 303d 00          ; data segment data
; data segment header 15
000104a: 00                                      
000104b: 41                                        ; i32.const
000104c: 9002                                      ; i32 literal
000104e: 0b                                        ; end
000104f: a102                                      ; data segment size
; data segment data 15
0001051: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0001061: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0001071: 496b 4e6c 6247 7844 6158 4a6a 6247 5569 
0001081: 4c43 4a6a 6247 467a 6331 3970 5a43 4936 
0001091: 4d6a 6379 4c43 4a6d 6157 5673 5a48 4d69 
00010a1: 4f6e 7369 626d 5634 6443 4936 6579 4a6e 
00010b1: 5a57 356c 636d 6c6a 496a 7062 5853 7769 
00010c1: 636d 4633 496a 6f69 577a 4933 4d6c 3144 
00010d1: 5a57 7873 5132 6c79 5932 786c 4969 7769 
00010e1: 6448 6c77 5a53 4936 4d54 4239 4c43 4a6a 
00010f1: 6158 4a6a 6247 564a 626d 526c 6543 4936 
0001101: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
0001111: 5853 7769 636d 4633 496a 6f69 6154 4d79 
0001121: 4969 7769 6448 6c77 5a53 4936 4d58 3139 
0001131: 4c43 4a70 6331 4e30 636e 566a 6443 4936 
0001141: 5a6d 4673 6332 5573 496d 316c 6447 6876 
0001151: 5a48 4d69 4f6e 7439 4c43 4a75 5957 316c 
0001161: 6333 4268 5932 5569 4f6d 3531 6247 7839 
0001171: 00                                        ; data segment data
; data segment header 16
0001172: 00                                      
0001173: 41                                        ; i32.const
0001174: d804                                      ; i32 literal
0001176: 0b                                        ; end
0001177: ad02                                      ; data segment size
; data segment data 16
0001179: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0001189: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0001199: 496b 4e70 636d 4e73 5a53 4973 496d 4e73 
00011a9: 5958 4e7a 5832 6c6b 496a 6f32 4d44 4173 
00011b9: 496d 5a70 5a57 786b 6379 4936 6579 4a35 
00011c9: 496a 7037 496d 646c 626d 5679 6157 4d69 
00011d9: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a6d 
00011e9: 4d7a 4969 4c43 4a30 6558 426c 496a 6f7a 
00011f9: 6653 7769 6543 4936 6579 4a6e 5a57 356c 
0001209: 636d 6c6a 496a 7062 5853 7769 636d 4633 
0001219: 496a 6f69 5a6a 4d79 4969 7769 6448 6c77 
0001229: 5a53 4936 4d33 3073 496e 4969 4f6e 7369 
0001239: 5a32 5675 5a58 4a70 5979 4936 5731 3073 
0001249: 496e 4a68 6479 4936 496d 597a 4d69 4973 
0001259: 496e 5235 6347 5569 4f6a 4e39 6653 7769 
0001269: 6158 4e54 6448 4a31 5933 5169 4f6e 5279 
0001279: 6457 5573 496d 316c 6447 6876 5a48 4d69 
0001289: 4f6e 7439 4c43 4a75 5957 316c 6333 4268 
0001299: 5932 5569 4f6d 3531 6247 7839 00          ; data segment data
; move data: [dcc, 12a6) -> [dcd, 12a7)
0000dcb: da09                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0141 0c60 027c 7c01 
0000010: 7c60 017c 017c 6000 017c 6002 7f7f 0060 
0000020: 017f 0060 037f 7f7f 017f 6002 7f7f 017f 
0000030: 6001 7f01 7f60 0001 7f60 027d 7d00 6000 
0000040: 0060 067d 7d7d 7d7d 7d01 7f02 d501 0f04 
0000050: 4d61 7468 0370 6f77 0000 044d 6174 6804 
0000060: 7371 7274 0001 044d 6174 6803 6578 7000 
0000070: 0104 4d61 7468 0363 6f73 0001 044d 6174 
0000080: 6806 7261 6e64 6f6d 0002 044d 6174 6804 
0000090: 6365 696c 0001 044d 6174 6805 666c 6f6f 
00000a0: 7200 0102 4743 0961 6464 4f62 6a65 6374 
00000b0: 0003 0763 6f6e 736f 6c65 036c 6f67 0004 
00000c0: 0673 7472 696e 6707 7265 706c 6163 6500 
00000d0: 0506 7374 7269 6e67 0361 6464 0006 0673 
00000e0: 7472 696e 6706 6c65 6e67 7468 0007 0673 
00000f0: 7472 696e 6707 696e 6465 784f 6600 0606 
0000100: 7374 7269 6e67 0874 6f53 7472 696e 6700 
0000110: 0703 656e 760a 6279 7465 6368 756e 6b73 
0000120: 0200 0103 1a19 0608 0808 090a 090a 090b 
0000130: 0808 0808 0808 0808 080a 0a0a 0a0a 0a06 
0000140: 9c01 127f 0141 e009 0b7c 0144 6957 148b 
0000150: 0abf 0540 0b7c 0144 182d 4454 fb21 0940 
0000160: 0b7f 0141 ffff ffff 070b 7e01 42ff ffff 
0000170: ffff ffff ffff 000b 7d01 43ff ff7f 7f0b 
0000180: 7c01 44ff ffff ffff ffef 7f0b 7f01 4180 
0000190: 8080 8078 0b7e 0142 8080 8080 8080 8080 
00001a0: 807f 0b7d 0143 ffff 7fff 0b7c 0144 ffff 
00001b0: ffff ffff efff 0b7f 0141 f800 0b7f 0141 
00001c0: c600 0b7f 0141 90ce 000b 7f01 4100 0b7f 
00001d0: 0141 000b 7f01 4100 0b7f 0141 000b 07ac 
00001e0: 030f 1467 6c6f 6261 6c2e 4765 744d 656d 
00001f0: 6f72 7953 697a 6500 0f18 416c 676f 7269 
0000200: 7468 6d2e 6765 7443 6972 636c 6543 6f75 
0000210: 6e74 0010 1d41 6c67 6f72 6974 686d 2e67 
0000220: 6574 4369 7263 6c65 4461 7461 4f66 6673 
0000230: 6574 0011 0e41 6c67 6f72 6974 686d 2e69 
0000240: 6e69 7400 1212 416c 676f 7269 7468 6d2e 
0000250: 7469 6d65 5374 6570 0016 1a4d 6174 682e 
0000260: 6465 7465 6374 4369 7263 6c65 436f 6c6c 
0000270: 6973 696f 6e00 171a 4173 7365 6d62 6c79 
0000280: 496e 666f 2e41 7373 656d 626c 7954 6974 
0000290: 6c65 0018 2041 7373 656d 626c 7949 6e66 
00002a0: 6f2e 4173 7365 6d62 6c79 4465 7363 7269 
00002b0: 7074 696f 6e00 191c 4173 7365 6d62 6c79 
00002c0: 496e 666f 2e41 7373 656d 626c 7943 6f6d 
00002d0: 7061 6e79 001a 1c41 7373 656d 626c 7949 
00002e0: 6e66 6f2e 4173 7365 6d62 6c79 5072 6f64 
00002f0: 7563 7400 1b1e 4173 7365 6d62 6c79 496e 
0000300: 666f 2e41 7373 656d 626c 7943 6f70 7972 
0000310: 6967 6874 001c 1e41 7373 656d 626c 7949 
0000320: 6e66 6f2e 4173 7365 6d62 6c79 5472 6164 
0000330: 656d 6172 6b00 1d11 4173 7365 6d62 6c79 
0000340: 496e 666f 2e47 7569 6400 1e1c 4173 7365 
0000350: 6d62 6c79 496e 666f 2e41 7373 656d 626c 
0000360: 7956 6572 7369 6f6e 001f 2041 7373 656d 
0000370: 626c 7949 6e66 6f2e 4173 7365 6d62 6c79 
0000380: 4669 6c65 5665 7273 696f 6e00 2008 0121 
0000390: 0ab7 1419 3a01 027f 2300 2102 2002 2000 
00003a0: 6a24 0023 0041 086f 2103 2003 0440 4108 
00003b0: 2003 6b21 0323 0020 036a 2400 0523 0041 
00003c0: 086a 2400 0b20 0220 0110 0720 020f 0b05 
00003d0: 0023 000f 0b07 0104 7f23 0d0f 0b05 0023 
00003e0: 0e0f 0bf1 0303 027f 037d 017f 4188 0723 
00003f0: 0e10 0d10 0a10 0841 0021 0202 4003 4020 
0000400: 0223 0d41 016b 4a0d 0141 0021 0343 0000 
0000410: 0000 2104 4300 0000 0021 0543 0000 0000 
0000420: 2106 0240 0340 4100 2103 2000 bb10 04a2 
0000430: b621 0420 01bb 1004 a2b6 2105 1004 4108 
0000440: b7a2 1002 44ee 5a42 3ee8 4937 40a3 1005 
0000450: b621 0620 0020 0420 0692 9341 00b2 5d20 
0000460: 0420 0693 4100 b25d 6a20 0120 0520 0692 
0000470: 9341 00b2 5d6a 2005 2006 9341 00b2 5d6a 
0000480: 0440 4101 2103 0541 0021 0702 4003 4020 
0000490: 0720 0241 016b 4a0d 0120 0420 0520 0623 
00004a0: 0e41 086a 2007 410c 6c6a 2802 0041 046a 
00004b0: 2a02 0023 0e41 086a 2007 410c 6c6a 2802 
00004c0: 0041 006a 2a02 0023 0e41 086a 2007 410c 
00004d0: 6c6a 2802 0041 086a 2a02 0010 1704 4041 
00004e0: 0121 0341 010d 050b 2007 4101 6a21 070c 
00004f0: 000b 0b0b 2003 450d 010c 000b 0b23 0e41 
0000500: 086a 2002 410c 6c6a 4104 6a20 0438 0200 
0000510: 230e 4108 6a20 0241 0c6c 6a41 006a 2005 
0000520: 3802 0023 0e41 086a 2002 410c 6c6a 4108 
0000530: 6a20 0638 0200 41a0 0720 0210 0d10 0a41 
0000540: b007 100a 230e 4108 6a20 0241 0c6c 6a28 
0000550: 0200 100d 100a 41b8 0710 0a10 0841 c007 
0000560: 230f 4108 6a20 0241 046c 6a28 0200 100d 
0000570: 100a 1008 230f 4108 6a20 0241 046c 6a28 
0000580: 0200 4100 6a10 0444 0000 0000 0000 e03f 
0000590: a144 9a99 9999 9999 b93f a2b6 3802 0023 
00005a0: 0f41 086a 2002 4104 6c6a 2802 0041 046a 
00005b0: 1004 4400 0000 0000 00e0 3fa1 449a 9999 
00005c0: 9999 99b9 3fa2 b638 0200 2002 4101 6a21 
00005d0: 020c 000b 0b0b 5e01 037f 4100 2100 0240 
00005e0: 0340 2000 230c 4101 6b4a 0d01 2311 4108 
00005f0: 6a20 0041 046c 6a28 0200 2101 4100 2102 
0000600: 0240 0340 2002 230b 4101 6b4a 0d01 2001 
0000610: 4108 6a20 0241 046c 6a41 0036 0200 2002 
0000620: 4101 6a21 020c 000b 0b20 0041 016a 2100 
0000630: 0c00 0b0b 0bee 0403 027f 057d 087f 4100 
0000640: 2102 4100 2103 0240 0340 2003 230d 4101 
0000650: 6b4a 0d01 230e 4108 6a20 0341 0c6c 6a28 
0000660: 0200 4104 6a2a 0200 2104 230e 4108 6a20 
0000670: 0341 0c6c 6a28 0200 4100 6a2a 0200 2105 
0000680: 230e 4108 6a20 0341 0c6c 6a28 0200 4108 
0000690: 6a2a 0200 2106 230f 4108 6a20 0341 046c 
00006a0: 6a28 0200 4100 6a2a 0200 2107 230f 4108 
00006b0: 6a20 0341 046c 6a28 0200 4104 6a2a 0200 
00006c0: 2108 2008 bb44 2d43 1ceb e236 1a3f a0b6 
00006d0: 2108 2000 2004 2006 9293 4100 b25d 2007 
00006e0: 4100 b25e 6c20 0420 0693 4100 b25d 2007 
00006f0: 4100 b25d 6c6a 0440 4300 0000 0020 0793 
0000700: 2107 0b20 0120 0520 0692 9341 00b2 5d20 
0000710: 0841 00b2 5e6c 2005 2006 9341 00b2 5d20 
0000720: 0841 00b2 5d6c 6a04 4043 0000 0000 2008 
0000730: 9321 080b 230e 4108 6a20 0341 0c6c 6a41 
0000740: 046a 2004 2007 9238 0200 230e 4108 6a20 
0000750: 0341 0c6c 6a41 006a 2005 2008 9238 0200 
0000760: 230f 4108 6a20 0341 046c 6a28 0200 4100 
0000770: 6a20 0738 0200 230f 4108 6a20 0341 046c 
0000780: 6a28 0200 4104 6a20 0838 0200 2004 2006 
0000790: 93bb 2000 bba3 230c b7a2 1006 aa21 0920 
00007a0: 0420 0692 bb20 00bb a323 0cb7 a210 06aa 
00007b0: 210a 2005 2006 93bb 2001 bba3 230b b7a2 
00007c0: 1006 aa21 0b20 0520 0692 bb20 01bb a323 
00007d0: 0bb7 a210 06aa 210c 2009 4100 4804 4041 
00007e0: 0021 090b 200a 230c 4e04 4023 0c41 016b 
00007f0: 210a 0b20 0b41 0048 0440 4100 210b 0b20 
0000800: 0c23 0b4e 0440 230b 4101 6b21 0c0b 2009 
0000810: 210d 0240 0340 200d 200a 4a0d 0123 1141 
0000820: 086a 200d 4104 6c6a 2802 0021 0e20 0b21 
0000830: 0f02 4003 4020 0f20 0c4a 0d01 2310 4108 
0000840: 6a20 0241 046c 6a28 0200 2110 2002 4101 
0000850: 6a21 0220 1041 046a 2003 3602 0020 1041 
0000860: 006a 200e 4108 6a20 0f41 046c 6a28 0200 
0000870: 3602 0020 0e41 086a 200f 4104 6c6a 2010 
0000880: 3602 0020 0f41 016a 210f 0c00 0b0b 200d 
0000890: 4101 6a21 0d0c 000b 0b20 0341 016a 2103 
00008a0: 0c00 0b0b 0bd7 0507 057f 057d 027f 077d 
00008b0: 017c 047d 047c 4100 2100 0240 0340 2000 
00008c0: 230c 4101 6b4a 0d01 2311 4108 6a20 0041 
00008d0: 046c 6a28 0200 2101 4100 2102 0240 0340 
00008e0: 2002 230b 4101 6b4a 0d01 2001 4108 6a20 
00008f0: 0241 046c 6a28 0200 2103 0240 0340 2003 
0000900: 4100 4645 450d 0120 0341 046a 2802 0021 
0000910: 0423 0e41 086a 2004 410c 6c6a 2802 0041 
0000920: 046a 2a02 0021 0523 0e41 086a 2004 410c 
0000930: 6c6a 2802 0041 006a 2a02 0021 0623 0e41 
0000940: 086a 2004 410c 6c6a 2802 0041 086a 2a02 
0000950: 0021 0723 0f41 086a 2004 4104 6c6a 2802 
0000960: 0041 006a 2a02 0021 0823 0f41 086a 2004 
0000970: 4104 6c6a 2802 0041 046a 2a02 0021 0920 
0000980: 0321 0a20 0a41 006a 2802 0021 0a02 4003 
0000990: 4020 0a41 0046 4545 0d01 200a 4104 6a28 
00009a0: 0200 210b 230e 4108 6a20 0b41 0c6c 6a28 
00009b0: 0200 4104 6a2a 0200 210c 230e 4108 6a20 
00009c0: 0b41 0c6c 6a28 0200 4100 6a2a 0200 210d 
00009d0: 230e 4108 6a20 0b41 0c6c 6a28 0200 4108 
00009e0: 6a2a 0200 210e 2005 2006 2007 200c 200d 
00009f0: 200e 1017 0440 230f 4108 6a20 0b41 046c 
0000a00: 6a28 0200 4100 6a2a 0200 210f 230f 4108 
0000a10: 6a20 0b41 046c 6a28 0200 4104 6a2a 0200 
0000a20: 2110 200c 2005 9321 1120 0d20 0693 2112 
0000a30: 2011 2011 9420 1220 1294 92bb 1001 2113 
0000a40: 2011 bb20 13a3 b621 1120 12bb 2013 a3b6 
0000a50: 2112 2011 2008 9420 1220 0994 9221 1420 
0000a60: 1120 0f94 2012 2010 9492 2115 2014 2015 
0000a70: 9341 00b2 5f45 0440 2007 200e 9221 1620 
0000a80: 0720 0e93 2117 2014 2017 9441 02b2 200e 
0000a90: 9420 1594 92bb 2016 bba3 2118 4102 b220 
0000aa0: 0794 2014 9420 1520 1794 93bb 2016 bba3 
0000ab0: 2119 2018 2014 bba1 211a 2019 2015 bba1 
0000ac0: 211b 230f 4108 6a20 0441 046c 6a28 0200 
0000ad0: 4100 6a20 08bb 2011 bb20 1aa2 a0b6 3802 
0000ae0: 0023 0f41 086a 2004 4104 6c6a 2802 0041 
0000af0: 046a 2009 bb20 12bb 201a a2a0 b638 0200 
0000b00: 230f 4108 6a20 0b41 046c 6a28 0200 4100 
0000b10: 6a20 0fbb 2011 bb20 1ba2 a0b6 3802 0023 
0000b20: 0f41 086a 200b 4104 6c6a 2802 0041 046a 
0000b30: 2010 bb20 12bb 201b a2a0 b638 0200 200a 
0000b40: 4100 6a28 0200 210a 0b05 200a 4100 6a28 
0000b50: 0200 210a 0b0c 000b 0b20 0341 006a 2802 
0000b60: 0021 030c 000b 0b20 0241 016a 2102 0c00 
0000b70: 0b0b 2000 4101 6a21 000c 000b 0b0b 0c00 
0000b80: 1013 2000 2001 1014 1015 0b5c 0109 7f20 
0000b90: 0020 0292 2003 2005 935d 2000 2002 9320 
0000ba0: 0320 0592 5e6a 2001 2002 9220 0420 0593 
0000bb0: 5d6a 2001 2002 9320 0420 0592 5e6a 0440 
0000bc0: 4100 0f0b 2003 2000 93bb 4102 b2bb 1000 
0000bd0: 2004 2001 93bb 4102 b2bb 1000 a010 0120 
0000be0: 0220 0592 bb65 0f0b 0600 41d0 070f 0b06 
0000bf0: 0041 e007 0f0b 0600 41b8 080f 0b06 0041 
0000c00: c008 0f0b 0600 41d0 080f 0b06 0041 9809 
0000c10: 0f0b 0600 41a8 090f 0b06 0041 d009 0f0b 
0000c20: 0600 41d8 090f 0b0c 0010 2210 2310 2410 
0000c30: 2510 260b b101 0104 7f41 0823 0d41 016b 
0000c40: 410c 6c6a 4107 100e 2100 2000 41d8 0436 
0000c50: 0200 2000 4104 6a23 0d41 016b 3602 0020 
0000c60: 0024 0e41 0823 0d41 016b 4104 6c6a 4107 
0000c70: 100e 2101 2001 410d 3602 0020 0141 046a 
0000c80: 230d 4101 6b36 0200 2001 240f 4108 230d 
0000c90: 4104 6c41 016b 4104 6c6a 4107 100e 2102 
0000ca0: 2002 4190 0236 0200 2002 4104 6a23 0d41 
0000cb0: 046c 4101 6b36 0200 2002 2410 4108 230c 
0000cc0: 4101 6b41 046c 6a41 0710 0e21 0320 0341 
0000cd0: 9002 3602 0020 0341 046a 230c 4101 6b36 
0000ce0: 0200 2003 2411 0b02 000b d801 0109 7f41 
0000cf0: 0021 0041 0021 0102 4003 4020 0123 1141 
0000d00: 046a 2802 0041 016b 4a0d 0120 0221 0023 
0000d10: 1141 086a 2001 4104 6c6a 2000 3602 0041 
0000d20: 0021 0302 4003 4020 0320 0041 046a 2802 
0000d30: 0041 016b 4a0d 0120 0041 086a 2003 4104 
0000d40: 6c6a 2004 3602 0020 0341 016a 2103 0c00 
0000d50: 0b0b 2001 4101 6a21 010c 000b 0b41 0021 
0000d60: 0502 4003 4020 0523 0f41 046a 2802 0041 
0000d70: 016b 4a0d 0123 0f41 086a 2005 4104 6c6a 
0000d80: 2006 3602 0020 0541 016a 2105 0c00 0b0b 
0000d90: 4100 2107 0240 0340 2007 2310 4104 6a28 
0000da0: 0200 4101 6b4a 0d01 2310 4108 6a20 0741 
0000db0: 046c 6a20 0836 0200 2007 4101 6a21 070c 
0000dc0: 000b 0b0b 0200 0b02 000b 0bda 0911 0041 
0000dd0: 8807 0b15 6172 7261 7928 6f66 2063 6972 
0000de0: 636c 6529 203d 2026 0000 41a0 070b 0b63 
0000df0: 6972 636c 6520 3d20 2300 0041 b007 0b04 
0000e00: 2028 2600 0041 b807 0b02 2900 0041 c007 
0000e10: 0b0c 6369 7263 6c65 5620 3d20 2600 0041 
0000e20: d007 0b0b 5765 6247 4c2d 4465 6d6f 0000 
0000e30: 41e0 070b 5157 6562 4173 7365 6d62 6c79 
0000e40: 2063 6f6e 7665 7273 696f 6e20 6465 6d6f 
0000e50: 6e73 7472 6174 696e 6720 7468 6520 6661 
0000e60: 7374 6572 2d70 6572 666f 726d 696e 6720 
0000e70: 6772 6964 206f 6620 6c69 6e6b 6564 2d6c 
0000e80: 6973 7473 2e00 0041 b808 0b04 4d49 5400 
0000e90: 0041 c008 0b0b 5765 6247 4c2d 4465 6d6f 
0000ea0: 0000 41d0 080b 4668 7474 7073 3a2f 2f67 
0000eb0: 6974 6875 622e 636f 6d2f 6775 7962 6564 
0000ec0: 666f 7264 2f77 6173 6d2d 6465 6d6f 2f62 
0000ed0: 6c6f 622f 6d61 7374 6572 2f6e 6174 6976 
0000ee0: 652f 6465 6d6f 2d6f 7074 2e63 0000 4198 
0000ef0: 090b 0e76 616e 696c 6c61 7662 2e61 7070 
0000f00: 0000 41a8 090b 2538 3363 6132 6239 332d 
0000f10: 3465 3537 2d34 6434 342d 6232 6263 2d31 
0000f20: 3633 3235 3261 3933 3035 6400 0041 d009 
0000f30: 0b08 312e 302e 302e 3000 0041 d809 0b08 
0000f40: 312e 302e 302e 3000 0041 0d0b fd01 6579 
0000f50: 4a6a 6232 3174 5a57 3530 496a 7075 6457 
0000f60: 7873 4c43 4a6a 6247 467a 6379 4936 496b 
0000f70: 4e70 636d 4e73 5a56 5969 4c43 4a6a 6247 
0000f80: 467a 6331 3970 5a43 4936 4d54 4d73 496d 
0000f90: 5a70 5a57 786b 6379 4936 6579 4a32 6543 
0000fa0: 4936 6579 4a6e 5a57 356c 636d 6c6a 496a 
0000fb0: 7062 5853 7769 636d 4633 496a 6f69 5a6a 
0000fc0: 4d79 4969 7769 6448 6c77 5a53 4936 4d33 
0000fd0: 3073 496e 5a35 496a 7037 496d 646c 626d 
0000fe0: 5679 6157 4d69 4f6c 7464 4c43 4a79 5958 
0000ff0: 6369 4f69 4a6d 4d7a 4969 4c43 4a30 6558 
0001000: 426c 496a 6f7a 6658 3073 496d 6c7a 5533 
0001010: 5279 6457 4e30 496a 706d 5957 787a 5a53 
0001020: 7769 6257 5630 6147 396b 6379 4936 6533 
0001030: 3073 496d 3568 6257 567a 6347 466a 5a53 
0001040: 4936 626e 5673 6248 303d 0000 4190 020b 
0001050: a102 6579 4a6a 6232 3174 5a57 3530 496a 
0001060: 7075 6457 7873 4c43 4a6a 6247 467a 6379 
0001070: 4936 496b 4e6c 6247 7844 6158 4a6a 6247 
0001080: 5569 4c43 4a6a 6247 467a 6331 3970 5a43 
0001090: 4936 4d6a 6379 4c43 4a6d 6157 5673 5a48 
00010a0: 4d69 4f6e 7369 626d 5634 6443 4936 6579 
00010b0: 4a6e 5a57 356c 636d 6c6a 496a 7062 5853 
00010c0: 7769 636d 4633 496a 6f69 577a 4933 4d6c 
00010d0: 3144 5a57 7873 5132 6c79 5932 786c 4969 
00010e0: 7769 6448 6c77 5a53 4936 4d54 4239 4c43 
00010f0: 4a6a 6158 4a6a 6247 564a 626d 526c 6543 
0001100: 4936 6579 4a6e 5a57 356c 636d 6c6a 496a 
0001110: 7062 5853 7769 636d 4633 496a 6f69 6154 
0001120: 4d79 4969 7769 6448 6c77 5a53 4936 4d58 
0001130: 3139 4c43 4a70 6331 4e30 636e 566a 6443 
0001140: 4936 5a6d 4673 6332 5573 496d 316c 6447 
0001150: 6876 5a48 4d69 4f6e 7439 4c43 4a75 5957 
0001160: 316c 6333 4268 5932 5569 4f6d 3531 6247 
0001170: 7839 0000 41d8 040b ad02 6579 4a6a 6232 
0001180: 3174 5a57 3530 496a 7075 6457 7873 4c43 
0001190: 4a6a 6247 467a 6379 4936 496b 4e70 636d 
00011a0: 4e73 5a53 4973 496d 4e73 5958 4e7a 5832 
00011b0: 6c6b 496a 6f32 4d44 4173 496d 5a70 5a57 
00011c0: 786b 6379 4936 6579 4a35 496a 7037 496d 
00011d0: 646c 626d 5679 6157 4d69 4f6c 7464 4c43 
00011e0: 4a79 5958 6369 4f69 4a6d 4d7a 4969 4c43 
00011f0: 4a30 6558 426c 496a 6f7a 6653 7769 6543 
0001200: 4936 6579 4a6e 5a57 356c 636d 6c6a 496a 
0001210: 7062 5853 7769 636d 4633 496a 6f69 5a6a 
0001220: 4d79 4969 7769 6448 6c77 5a53 4936 4d33 
0001230: 3073 496e 4969 4f6e 7369 5a32 5675 5a58 
0001240: 4a70 5979 4936 5731 3073 496e 4a68 6479 
0001250: 4936 496d 597a 4d69 4973 496e 5235 6347 
0001260: 5569 4f6a 4e39 6653 7769 6158 4e54 6448 
0001270: 4a31 5933 5169 4f6e 5279 6457 5573 496d 
0001280: 316c 6447 6876 5a48 4d69 4f6e 7439 4c43 
0001290: 4a75 5957 316c 6333 4268 5932 5569 4f6d 
00012a0: 3531 6247 7839 00                       
