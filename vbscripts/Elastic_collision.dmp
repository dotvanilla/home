0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 07                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7c                                        ; f64
000000e: 7c                                        ; f64
000000f: 01                                        ; num results
0000010: 7c                                        ; f64
; type 1
0000011: 60                                        ; func
0000012: 01                                        ; num params
0000013: 7c                                        ; f64
0000014: 01                                        ; num results
0000015: 7c                                        ; f64
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 00                                        ; num params
000001c: 01                                        ; num results
000001d: 7f                                        ; i32
; type 4
000001e: 60                                        ; func
000001f: 02                                        ; num params
0000020: 7d                                        ; f32
0000021: 7d                                        ; f32
0000022: 00                                        ; num results
; type 5
0000023: 60                                        ; func
0000024: 00                                        ; num params
0000025: 00                                        ; num results
; type 6
0000026: 60                                        ; func
0000027: 06                                        ; num params
0000028: 7d                                        ; f32
0000029: 7d                                        ; f32
000002a: 7d                                        ; f32
000002b: 7d                                        ; f32
000002c: 7d                                        ; f32
000002d: 7d                                        ; f32
000002e: 01                                        ; num results
000002f: 7f                                        ; i32
0000009: 26                                        ; FIXUP section size
; section "Import" (2)
0000030: 02                                        ; section code
0000031: 00                                        ; section size (guess)
0000032: 08                                        ; num imports
; import header 0
0000033: 04                                        ; string length
0000034: 4d61 7468                                Math  ; import module name
0000038: 03                                        ; string length
0000039: 706f 77                                  pow  ; import field name
000003c: 00                                        ; import kind
000003d: 00                                        ; import signature index
; import header 1
000003e: 04                                        ; string length
000003f: 4d61 7468                                Math  ; import module name
0000043: 04                                        ; string length
0000044: 7371 7274                                sqrt  ; import field name
0000048: 00                                        ; import kind
0000049: 01                                        ; import signature index
; import header 2
000004a: 04                                        ; string length
000004b: 4d61 7468                                Math  ; import module name
000004f: 03                                        ; string length
0000050: 6578 70                                  exp  ; import field name
0000053: 00                                        ; import kind
0000054: 01                                        ; import signature index
; import header 3
0000055: 04                                        ; string length
0000056: 4d61 7468                                Math  ; import module name
000005a: 03                                        ; string length
000005b: 636f 73                                  cos  ; import field name
000005e: 00                                        ; import kind
000005f: 01                                        ; import signature index
; import header 4
0000060: 04                                        ; string length
0000061: 4d61 7468                                Math  ; import module name
0000065: 06                                        ; string length
0000066: 7261 6e64 6f6d                           random  ; import field name
000006c: 00                                        ; import kind
000006d: 02                                        ; import signature index
; import header 5
000006e: 04                                        ; string length
000006f: 4d61 7468                                Math  ; import module name
0000073: 04                                        ; string length
0000074: 6365 696c                                ceil  ; import field name
0000078: 00                                        ; import kind
0000079: 01                                        ; import signature index
; import header 6
000007a: 04                                        ; string length
000007b: 4d61 7468                                Math  ; import module name
000007f: 05                                        ; string length
0000080: 666c 6f6f 72                             floor  ; import field name
0000085: 00                                        ; import kind
0000086: 01                                        ; import signature index
; import header 7
0000087: 03                                        ; string length
0000088: 656e 76                                  env  ; import module name
000008b: 0a                                        ; string length
000008c: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
0000096: 02                                        ; import kind
0000097: 00                                        ; limits: flags
0000098: 01                                        ; limits: initial
0000031: 67                                        ; FIXUP section size
; section "Function" (3)
0000099: 03                                        ; section code
000009a: 00                                        ; section size (guess)
000009b: 16                                        ; num functions
000009c: 03                                        ; function 0 signature index
000009d: 03                                        ; function 1 signature index
000009e: 04                                        ; function 2 signature index
000009f: 05                                        ; function 3 signature index
00000a0: 04                                        ; function 4 signature index
00000a1: 05                                        ; function 5 signature index
00000a2: 04                                        ; function 6 signature index
00000a3: 06                                        ; function 7 signature index
00000a4: 03                                        ; function 8 signature index
00000a5: 03                                        ; function 9 signature index
00000a6: 03                                        ; function 10 signature index
00000a7: 03                                        ; function 11 signature index
00000a8: 03                                        ; function 12 signature index
00000a9: 03                                        ; function 13 signature index
00000aa: 03                                        ; function 14 signature index
00000ab: 03                                        ; function 15 signature index
00000ac: 03                                        ; function 16 signature index
00000ad: 05                                        ; function 17 signature index
00000ae: 05                                        ; function 18 signature index
00000af: 05                                        ; function 19 signature index
00000b0: 05                                        ; function 20 signature index
00000b1: 05                                        ; function 21 signature index
000009a: 17                                        ; FIXUP section size
; section "Global" (6)
00000b2: 06                                        ; section code
00000b3: 00                                        ; section size (guess)
00000b4: 12                                        ; num globals
00000b5: 7f                                        ; i32
00000b6: 01                                        ; global mutability
00000b7: 41                                        ; i32.const
00000b8: b209                                      ; i32 literal
00000ba: 0b                                        ; end
00000bb: 7c                                        ; f64
00000bc: 01                                        ; global mutability
00000bd: 44                                        ; f64.const
00000be: 6957 148b 0abf 0540                       ; f64 literal
00000c6: 0b                                        ; end
00000c7: 7c                                        ; f64
00000c8: 01                                        ; global mutability
00000c9: 44                                        ; f64.const
00000ca: 182d 4454 fb21 0940                       ; f64 literal
00000d2: 0b                                        ; end
00000d3: 7f                                        ; i32
00000d4: 01                                        ; global mutability
00000d5: 41                                        ; i32.const
00000d6: ffff ffff 07                              ; i32 literal
00000db: 0b                                        ; end
00000dc: 7e                                        ; i64
00000dd: 01                                        ; global mutability
00000de: 42                                        ; i64.const
00000df: ffff ffff ffff ffff ff00                  ; i64 literal
00000e9: 0b                                        ; end
00000ea: 7d                                        ; f32
00000eb: 01                                        ; global mutability
00000ec: 43                                        ; f32.const
00000ed: ffff 7f7f                                 ; f32 literal
00000f1: 0b                                        ; end
00000f2: 7c                                        ; f64
00000f3: 01                                        ; global mutability
00000f4: 44                                        ; f64.const
00000f5: ffff ffff ffff ef7f                       ; f64 literal
00000fd: 0b                                        ; end
00000fe: 7f                                        ; i32
00000ff: 01                                        ; global mutability
0000100: 41                                        ; i32.const
0000101: 8080 8080 78                              ; i32 literal
0000106: 0b                                        ; end
0000107: 7e                                        ; i64
0000108: 01                                        ; global mutability
0000109: 42                                        ; i64.const
000010a: 8080 8080 8080 8080 807f                  ; i64 literal
0000114: 0b                                        ; end
0000115: 7d                                        ; f32
0000116: 01                                        ; global mutability
0000117: 43                                        ; f32.const
0000118: ffff 7fff                                 ; f32 literal
000011c: 0b                                        ; end
000011d: 7c                                        ; f64
000011e: 01                                        ; global mutability
000011f: 44                                        ; f64.const
0000120: ffff ffff ffff efff                       ; f64 literal
0000128: 0b                                        ; end
0000129: 7f                                        ; i32
000012a: 01                                        ; global mutability
000012b: 41                                        ; i32.const
000012c: f800                                      ; i32 literal
000012e: 0b                                        ; end
000012f: 7f                                        ; i32
0000130: 01                                        ; global mutability
0000131: 41                                        ; i32.const
0000132: c600                                      ; i32 literal
0000134: 0b                                        ; end
0000135: 7f                                        ; i32
0000136: 01                                        ; global mutability
0000137: 41                                        ; i32.const
0000138: 90ce 00                                   ; i32 literal
000013b: 0b                                        ; end
000013c: 7f                                        ; i32
000013d: 01                                        ; global mutability
000013e: 41                                        ; i32.const
000013f: 00                                        ; i32 literal
0000140: 0b                                        ; end
0000141: 7f                                        ; i32
0000142: 01                                        ; global mutability
0000143: 41                                        ; i32.const
0000144: 00                                        ; i32 literal
0000145: 0b                                        ; end
0000146: 7f                                        ; i32
0000147: 01                                        ; global mutability
0000148: 41                                        ; i32.const
0000149: 00                                        ; i32 literal
000014a: 0b                                        ; end
000014b: 7f                                        ; i32
000014c: 01                                        ; global mutability
000014d: 41                                        ; i32.const
000014e: 00                                        ; i32 literal
000014f: 0b                                        ; end
; move data: [b4, 150) -> [b5, 151)
00000b3: 9c01                                      ; FIXUP section size
; section "Export" (7)
0000151: 07                                        ; section code
0000152: 00                                        ; section size (guess)
0000153: 0e                                        ; num exports
0000154: 18                                        ; string length
0000155: 416c 676f 7269 7468 6d2e 6765 7443 6972  Algorithm.getCir
0000165: 636c 6543 6f75 6e74                      cleCount  ; export name
000016d: 00                                        ; export kind
000016e: 07                                        ; export func index
000016f: 1d                                        ; string length
0000170: 416c 676f 7269 7468 6d2e 6765 7443 6972  Algorithm.getCir
0000180: 636c 6544 6174 614f 6666 7365 74         cleDataOffset  ; export name
000018d: 00                                        ; export kind
000018e: 08                                        ; export func index
000018f: 0e                                        ; string length
0000190: 416c 676f 7269 7468 6d2e 696e 6974       Algorithm.init  ; export name
000019e: 00                                        ; export kind
000019f: 09                                        ; export func index
00001a0: 12                                        ; string length
00001a1: 416c 676f 7269 7468 6d2e 7469 6d65 5374  Algorithm.timeSt
00001b1: 6570                                     ep  ; export name
00001b3: 00                                        ; export kind
00001b4: 0d                                        ; export func index
00001b5: 1a                                        ; string length
00001b6: 4d61 7468 2e64 6574 6563 7443 6972 636c  Math.detectCircl
00001c6: 6543 6f6c 6c69 7369 6f6e                 eCollision  ; export name
00001d0: 00                                        ; export kind
00001d1: 0e                                        ; export func index
00001d2: 1a                                        ; string length
00001d3: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00001e3: 656d 626c 7954 6974 6c65                 emblyTitle  ; export name
00001ed: 00                                        ; export kind
00001ee: 0f                                        ; export func index
00001ef: 20                                        ; string length
00001f0: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000200: 656d 626c 7944 6573 6372 6970 7469 6f6e  emblyDescription  ; export name
0000210: 00                                        ; export kind
0000211: 10                                        ; export func index
0000212: 1c                                        ; string length
0000213: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000223: 656d 626c 7943 6f6d 7061 6e79            emblyCompany  ; export name
000022f: 00                                        ; export kind
0000230: 11                                        ; export func index
0000231: 1c                                        ; string length
0000232: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000242: 656d 626c 7950 726f 6475 6374            emblyProduct  ; export name
000024e: 00                                        ; export kind
000024f: 12                                        ; export func index
0000250: 1e                                        ; string length
0000251: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000261: 656d 626c 7943 6f70 7972 6967 6874       emblyCopyright  ; export name
000026f: 00                                        ; export kind
0000270: 13                                        ; export func index
0000271: 1e                                        ; string length
0000272: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000282: 656d 626c 7954 7261 6465 6d61 726b       emblyTrademark  ; export name
0000290: 00                                        ; export kind
0000291: 14                                        ; export func index
0000292: 11                                        ; string length
0000293: 4173 7365 6d62 6c79 496e 666f 2e47 7569  AssemblyInfo.Gui
00002a3: 64                                       d  ; export name
00002a4: 00                                        ; export kind
00002a5: 15                                        ; export func index
00002a6: 1c                                        ; string length
00002a7: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002b7: 656d 626c 7956 6572 7369 6f6e            emblyVersion  ; export name
00002c3: 00                                        ; export kind
00002c4: 16                                        ; export func index
00002c5: 20                                        ; string length
00002c6: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002d6: 656d 626c 7946 696c 6556 6572 7369 6f6e  emblyFileVersion  ; export name
00002e6: 00                                        ; export kind
00002e7: 17                                        ; export func index
; move data: [153, 2e8) -> [154, 2e9)
0000152: 9503                                      ; FIXUP section size
; section "Start" (8)
00002e9: 08                                        ; section code
00002ea: 00                                        ; section size (guess)
00002eb: 18                                        ; start func index
00002ea: 01                                        ; FIXUP section size
; section "Code" (10)
00002ec: 0a                                        ; section code
00002ed: 00                                        ; section size (guess)
00002ee: 16                                        ; num functions
; function body 0
00002ef: 00                                        ; func body size (guess)
00002f0: 01                                        ; local decl count
00002f1: 04                                        ; local type count
00002f2: 7f                                        ; i32
00002f3: 23                                        ; global.get
00002f4: 0d                                        ; global index
00002f5: 0f                                        ; return
00002f6: 0b                                        ; end
00002ef: 07                                        ; FIXUP func body size
; function body 1
00002f7: 00                                        ; func body size (guess)
00002f8: 00                                        ; local decl count
00002f9: 23                                        ; global.get
00002fa: 0e                                        ; global index
00002fb: 0f                                        ; return
00002fc: 0b                                        ; end
00002f7: 05                                        ; FIXUP func body size
; function body 2
00002fd: 00                                        ; func body size (guess)
00002fe: 03                                        ; local decl count
00002ff: 02                                        ; local type count
0000300: 7f                                        ; i32
0000301: 03                                        ; local type count
0000302: 7d                                        ; f32
0000303: 01                                        ; local type count
0000304: 7f                                        ; i32
0000305: 41                                        ; i32.const
0000306: 00                                        ; i32 literal
0000307: 21                                        ; local.set
0000308: 02                                        ; local index
0000309: 02                                        ; block
000030a: 40                                        ; void
000030b: 03                                        ; loop
000030c: 40                                        ; void
000030d: 20                                        ; local.get
000030e: 02                                        ; local index
000030f: 23                                        ; global.get
0000310: 0d                                        ; global index
0000311: 41                                        ; i32.const
0000312: 01                                        ; i32 literal
0000313: 6b                                        ; i32.sub
0000314: 4a                                        ; i32.gt_s
0000315: 0d                                        ; br_if
0000316: 01                                        ; break depth
0000317: 41                                        ; i32.const
0000318: 00                                        ; i32 literal
0000319: 21                                        ; local.set
000031a: 03                                        ; local index
000031b: 43                                        ; f32.const
000031c: 0000 0000                                 ; f32 literal
0000320: 21                                        ; local.set
0000321: 04                                        ; local index
0000322: 43                                        ; f32.const
0000323: 0000 0000                                 ; f32 literal
0000327: 21                                        ; local.set
0000328: 05                                        ; local index
0000329: 43                                        ; f32.const
000032a: 0000 0000                                 ; f32 literal
000032e: 21                                        ; local.set
000032f: 06                                        ; local index
0000330: 02                                        ; block
0000331: 40                                        ; void
0000332: 03                                        ; loop
0000333: 40                                        ; void
0000334: 41                                        ; i32.const
0000335: 00                                        ; i32 literal
0000336: 21                                        ; local.set
0000337: 03                                        ; local index
0000338: 20                                        ; local.get
0000339: 00                                        ; local index
000033a: bb                                        ; f64.promote_f32
000033b: 10                                        ; call
000033c: 04                                        ; function index
000033d: a2                                        ; f64.mul
000033e: b6                                        ; f32.demote_f64
000033f: 21                                        ; local.set
0000340: 04                                        ; local index
0000341: 20                                        ; local.get
0000342: 01                                        ; local index
0000343: bb                                        ; f64.promote_f32
0000344: 10                                        ; call
0000345: 04                                        ; function index
0000346: a2                                        ; f64.mul
0000347: b6                                        ; f32.demote_f64
0000348: 21                                        ; local.set
0000349: 05                                        ; local index
000034a: 10                                        ; call
000034b: 04                                        ; function index
000034c: 41                                        ; i32.const
000034d: 08                                        ; i32 literal
000034e: b7                                        ; f64.convert_i32_s
000034f: a2                                        ; f64.mul
0000350: 10                                        ; call
0000351: 02                                        ; function index
0000352: 44                                        ; f64.const
0000353: ee5a 423e e849 3740                       ; f64 literal
000035b: a3                                        ; f64.div
000035c: 10                                        ; call
000035d: 05                                        ; function index
000035e: b6                                        ; f32.demote_f64
000035f: 21                                        ; local.set
0000360: 06                                        ; local index
0000361: 20                                        ; local.get
0000362: 00                                        ; local index
0000363: 20                                        ; local.get
0000364: 04                                        ; local index
0000365: 20                                        ; local.get
0000366: 06                                        ; local index
0000367: 92                                        ; f32.add
0000368: 93                                        ; f32.sub
0000369: 41                                        ; i32.const
000036a: 00                                        ; i32 literal
000036b: b2                                        ; f32.convert_i32_s
000036c: 5d                                        ; f32.lt
000036d: 20                                        ; local.get
000036e: 04                                        ; local index
000036f: 20                                        ; local.get
0000370: 06                                        ; local index
0000371: 93                                        ; f32.sub
0000372: 41                                        ; i32.const
0000373: 00                                        ; i32 literal
0000374: b2                                        ; f32.convert_i32_s
0000375: 5d                                        ; f32.lt
0000376: 6a                                        ; i32.add
0000377: 20                                        ; local.get
0000378: 01                                        ; local index
0000379: 20                                        ; local.get
000037a: 05                                        ; local index
000037b: 20                                        ; local.get
000037c: 06                                        ; local index
000037d: 92                                        ; f32.add
000037e: 93                                        ; f32.sub
000037f: 41                                        ; i32.const
0000380: 00                                        ; i32 literal
0000381: b2                                        ; f32.convert_i32_s
0000382: 5d                                        ; f32.lt
0000383: 6a                                        ; i32.add
0000384: 20                                        ; local.get
0000385: 05                                        ; local index
0000386: 20                                        ; local.get
0000387: 06                                        ; local index
0000388: 93                                        ; f32.sub
0000389: 41                                        ; i32.const
000038a: 00                                        ; i32 literal
000038b: b2                                        ; f32.convert_i32_s
000038c: 5d                                        ; f32.lt
000038d: 6a                                        ; i32.add
000038e: 04                                        ; if
000038f: 40                                        ; void
0000390: 41                                        ; i32.const
0000391: 01                                        ; i32 literal
0000392: 21                                        ; local.set
0000393: 03                                        ; local index
0000394: 05                                        ; else
0000395: 41                                        ; i32.const
0000396: 00                                        ; i32 literal
0000397: 21                                        ; local.set
0000398: 07                                        ; local index
0000399: 02                                        ; block
000039a: 40                                        ; void
000039b: 03                                        ; loop
000039c: 40                                        ; void
000039d: 20                                        ; local.get
000039e: 07                                        ; local index
000039f: 20                                        ; local.get
00003a0: 02                                        ; local index
00003a1: 41                                        ; i32.const
00003a2: 01                                        ; i32 literal
00003a3: 6b                                        ; i32.sub
00003a4: 4a                                        ; i32.gt_s
00003a5: 0d                                        ; br_if
00003a6: 01                                        ; break depth
00003a7: 20                                        ; local.get
00003a8: 04                                        ; local index
00003a9: 20                                        ; local.get
00003aa: 05                                        ; local index
00003ab: 20                                        ; local.get
00003ac: 06                                        ; local index
00003ad: 23                                        ; global.get
00003ae: 0e                                        ; global index
00003af: 41                                        ; i32.const
00003b0: 08                                        ; i32 literal
00003b1: 6a                                        ; i32.add
00003b2: 20                                        ; local.get
00003b3: 07                                        ; local index
00003b4: 41                                        ; i32.const
00003b5: 04                                        ; i32 literal
00003b6: 6c                                        ; i32.mul
00003b7: 6a                                        ; i32.add
00003b8: 28                                        ; i32.load
00003b9: 02                                        ; alignment
00003ba: 00                                        ; load offset
00003bb: 41                                        ; i32.const
00003bc: 00                                        ; i32 literal
00003bd: 6a                                        ; i32.add
00003be: 2a                                        ; f32.load
00003bf: 02                                        ; alignment
00003c0: 00                                        ; load offset
00003c1: 23                                        ; global.get
00003c2: 0e                                        ; global index
00003c3: 41                                        ; i32.const
00003c4: 08                                        ; i32 literal
00003c5: 6a                                        ; i32.add
00003c6: 20                                        ; local.get
00003c7: 07                                        ; local index
00003c8: 41                                        ; i32.const
00003c9: 04                                        ; i32 literal
00003ca: 6c                                        ; i32.mul
00003cb: 6a                                        ; i32.add
00003cc: 28                                        ; i32.load
00003cd: 02                                        ; alignment
00003ce: 00                                        ; load offset
00003cf: 41                                        ; i32.const
00003d0: 04                                        ; i32 literal
00003d1: 6a                                        ; i32.add
00003d2: 2a                                        ; f32.load
00003d3: 02                                        ; alignment
00003d4: 00                                        ; load offset
00003d5: 23                                        ; global.get
00003d6: 0e                                        ; global index
00003d7: 41                                        ; i32.const
00003d8: 08                                        ; i32 literal
00003d9: 6a                                        ; i32.add
00003da: 20                                        ; local.get
00003db: 07                                        ; local index
00003dc: 41                                        ; i32.const
00003dd: 04                                        ; i32 literal
00003de: 6c                                        ; i32.mul
00003df: 6a                                        ; i32.add
00003e0: 28                                        ; i32.load
00003e1: 02                                        ; alignment
00003e2: 00                                        ; load offset
00003e3: 41                                        ; i32.const
00003e4: 08                                        ; i32 literal
00003e5: 6a                                        ; i32.add
00003e6: 2a                                        ; f32.load
00003e7: 02                                        ; alignment
00003e8: 00                                        ; load offset
00003e9: 10                                        ; call
00003ea: 0e                                        ; function index
00003eb: 04                                        ; if
00003ec: 40                                        ; void
00003ed: 41                                        ; i32.const
00003ee: 01                                        ; i32 literal
00003ef: 21                                        ; local.set
00003f0: 03                                        ; local index
00003f1: 41                                        ; i32.const
00003f2: 01                                        ; i32 literal
00003f3: 0d                                        ; br_if
00003f4: 05                                        ; break depth
00003f5: 0b                                        ; end
00003f6: 20                                        ; local.get
00003f7: 07                                        ; local index
00003f8: 41                                        ; i32.const
00003f9: 01                                        ; i32 literal
00003fa: 6a                                        ; i32.add
00003fb: 21                                        ; local.set
00003fc: 07                                        ; local index
00003fd: 0c                                        ; br
00003fe: 00                                        ; break depth
00003ff: 0b                                        ; end
0000400: 0b                                        ; end
0000401: 0b                                        ; end
0000402: 20                                        ; local.get
0000403: 03                                        ; local index
0000404: 45                                        ; i32.eqz
0000405: 0d                                        ; br_if
0000406: 01                                        ; break depth
0000407: 0c                                        ; br
0000408: 00                                        ; break depth
0000409: 0b                                        ; end
000040a: 0b                                        ; end
000040b: 23                                        ; global.get
000040c: 0e                                        ; global index
000040d: 41                                        ; i32.const
000040e: 08                                        ; i32 literal
000040f: 6a                                        ; i32.add
0000410: 20                                        ; local.get
0000411: 02                                        ; local index
0000412: 41                                        ; i32.const
0000413: 04                                        ; i32 literal
0000414: 6c                                        ; i32.mul
0000415: 6a                                        ; i32.add
0000416: 28                                        ; i32.load
0000417: 02                                        ; alignment
0000418: 00                                        ; load offset
0000419: 41                                        ; i32.const
000041a: 00                                        ; i32 literal
000041b: 6a                                        ; i32.add
000041c: 20                                        ; local.get
000041d: 04                                        ; local index
000041e: 38                                        ; f32.store
000041f: 02                                        ; alignment
0000420: 00                                        ; store offset
0000421: 23                                        ; global.get
0000422: 0e                                        ; global index
0000423: 41                                        ; i32.const
0000424: 08                                        ; i32 literal
0000425: 6a                                        ; i32.add
0000426: 20                                        ; local.get
0000427: 02                                        ; local index
0000428: 41                                        ; i32.const
0000429: 04                                        ; i32 literal
000042a: 6c                                        ; i32.mul
000042b: 6a                                        ; i32.add
000042c: 28                                        ; i32.load
000042d: 02                                        ; alignment
000042e: 00                                        ; load offset
000042f: 41                                        ; i32.const
0000430: 04                                        ; i32 literal
0000431: 6a                                        ; i32.add
0000432: 20                                        ; local.get
0000433: 05                                        ; local index
0000434: 38                                        ; f32.store
0000435: 02                                        ; alignment
0000436: 00                                        ; store offset
0000437: 23                                        ; global.get
0000438: 0e                                        ; global index
0000439: 41                                        ; i32.const
000043a: 08                                        ; i32 literal
000043b: 6a                                        ; i32.add
000043c: 20                                        ; local.get
000043d: 02                                        ; local index
000043e: 41                                        ; i32.const
000043f: 04                                        ; i32 literal
0000440: 6c                                        ; i32.mul
0000441: 6a                                        ; i32.add
0000442: 28                                        ; i32.load
0000443: 02                                        ; alignment
0000444: 00                                        ; load offset
0000445: 41                                        ; i32.const
0000446: 08                                        ; i32 literal
0000447: 6a                                        ; i32.add
0000448: 20                                        ; local.get
0000449: 06                                        ; local index
000044a: 38                                        ; f32.store
000044b: 02                                        ; alignment
000044c: 00                                        ; store offset
000044d: 23                                        ; global.get
000044e: 0f                                        ; global index
000044f: 41                                        ; i32.const
0000450: 08                                        ; i32 literal
0000451: 6a                                        ; i32.add
0000452: 20                                        ; local.get
0000453: 02                                        ; local index
0000454: 41                                        ; i32.const
0000455: 04                                        ; i32 literal
0000456: 6c                                        ; i32.mul
0000457: 6a                                        ; i32.add
0000458: 28                                        ; i32.load
0000459: 02                                        ; alignment
000045a: 00                                        ; load offset
000045b: 41                                        ; i32.const
000045c: 04                                        ; i32 literal
000045d: 6a                                        ; i32.add
000045e: 10                                        ; call
000045f: 04                                        ; function index
0000460: 44                                        ; f64.const
0000461: 0000 0000 0000 e03f                       ; f64 literal
0000469: a1                                        ; f64.sub
000046a: 44                                        ; f64.const
000046b: 9a99 9999 9999 b93f                       ; f64 literal
0000473: a2                                        ; f64.mul
0000474: b6                                        ; f32.demote_f64
0000475: 38                                        ; f32.store
0000476: 02                                        ; alignment
0000477: 00                                        ; store offset
0000478: 23                                        ; global.get
0000479: 0f                                        ; global index
000047a: 41                                        ; i32.const
000047b: 08                                        ; i32 literal
000047c: 6a                                        ; i32.add
000047d: 20                                        ; local.get
000047e: 02                                        ; local index
000047f: 41                                        ; i32.const
0000480: 04                                        ; i32 literal
0000481: 6c                                        ; i32.mul
0000482: 6a                                        ; i32.add
0000483: 28                                        ; i32.load
0000484: 02                                        ; alignment
0000485: 00                                        ; load offset
0000486: 41                                        ; i32.const
0000487: 00                                        ; i32 literal
0000488: 6a                                        ; i32.add
0000489: 10                                        ; call
000048a: 04                                        ; function index
000048b: 44                                        ; f64.const
000048c: 0000 0000 0000 e03f                       ; f64 literal
0000494: a1                                        ; f64.sub
0000495: 44                                        ; f64.const
0000496: 9a99 9999 9999 b93f                       ; f64 literal
000049e: a2                                        ; f64.mul
000049f: b6                                        ; f32.demote_f64
00004a0: 38                                        ; f32.store
00004a1: 02                                        ; alignment
00004a2: 00                                        ; store offset
00004a3: 20                                        ; local.get
00004a4: 02                                        ; local index
00004a5: 41                                        ; i32.const
00004a6: 01                                        ; i32 literal
00004a7: 6a                                        ; i32.add
00004a8: 21                                        ; local.set
00004a9: 02                                        ; local index
00004aa: 0c                                        ; br
00004ab: 00                                        ; break depth
00004ac: 0b                                        ; end
00004ad: 0b                                        ; end
00004ae: 0b                                        ; end
; move data: [2fe, 4af) -> [2ff, 4b0)
00002fd: b103                                      ; FIXUP func body size
; function body 3
00004b0: 00                                        ; func body size (guess)
00004b1: 01                                        ; local decl count
00004b2: 03                                        ; local type count
00004b3: 7f                                        ; i32
00004b4: 41                                        ; i32.const
00004b5: 00                                        ; i32 literal
00004b6: 21                                        ; local.set
00004b7: 00                                        ; local index
00004b8: 02                                        ; block
00004b9: 40                                        ; void
00004ba: 03                                        ; loop
00004bb: 40                                        ; void
00004bc: 20                                        ; local.get
00004bd: 00                                        ; local index
00004be: 23                                        ; global.get
00004bf: 0c                                        ; global index
00004c0: 41                                        ; i32.const
00004c1: 01                                        ; i32 literal
00004c2: 6b                                        ; i32.sub
00004c3: 4a                                        ; i32.gt_s
00004c4: 0d                                        ; br_if
00004c5: 01                                        ; break depth
00004c6: 23                                        ; global.get
00004c7: 11                                        ; global index
00004c8: 41                                        ; i32.const
00004c9: 08                                        ; i32 literal
00004ca: 6a                                        ; i32.add
00004cb: 20                                        ; local.get
00004cc: 00                                        ; local index
00004cd: 41                                        ; i32.const
00004ce: 04                                        ; i32 literal
00004cf: 6c                                        ; i32.mul
00004d0: 6a                                        ; i32.add
00004d1: 28                                        ; i32.load
00004d2: 02                                        ; alignment
00004d3: 00                                        ; load offset
00004d4: 21                                        ; local.set
00004d5: 01                                        ; local index
00004d6: 41                                        ; i32.const
00004d7: 00                                        ; i32 literal
00004d8: 21                                        ; local.set
00004d9: 02                                        ; local index
00004da: 02                                        ; block
00004db: 40                                        ; void
00004dc: 03                                        ; loop
00004dd: 40                                        ; void
00004de: 20                                        ; local.get
00004df: 02                                        ; local index
00004e0: 23                                        ; global.get
00004e1: 0b                                        ; global index
00004e2: 41                                        ; i32.const
00004e3: 01                                        ; i32 literal
00004e4: 6b                                        ; i32.sub
00004e5: 4a                                        ; i32.gt_s
00004e6: 0d                                        ; br_if
00004e7: 01                                        ; break depth
00004e8: 20                                        ; local.get
00004e9: 01                                        ; local index
00004ea: 41                                        ; i32.const
00004eb: 08                                        ; i32 literal
00004ec: 6a                                        ; i32.add
00004ed: 20                                        ; local.get
00004ee: 02                                        ; local index
00004ef: 41                                        ; i32.const
00004f0: 04                                        ; i32 literal
00004f1: 6c                                        ; i32.mul
00004f2: 6a                                        ; i32.add
00004f3: 41                                        ; i32.const
00004f4: 00                                        ; i32 literal
00004f5: 36                                        ; i32.store
00004f6: 02                                        ; alignment
00004f7: 00                                        ; store offset
00004f8: 20                                        ; local.get
00004f9: 02                                        ; local index
00004fa: 41                                        ; i32.const
00004fb: 01                                        ; i32 literal
00004fc: 6a                                        ; i32.add
00004fd: 21                                        ; local.set
00004fe: 02                                        ; local index
00004ff: 0c                                        ; br
0000500: 00                                        ; break depth
0000501: 0b                                        ; end
0000502: 0b                                        ; end
0000503: 20                                        ; local.get
0000504: 00                                        ; local index
0000505: 41                                        ; i32.const
0000506: 01                                        ; i32 literal
0000507: 6a                                        ; i32.add
0000508: 21                                        ; local.set
0000509: 00                                        ; local index
000050a: 0c                                        ; br
000050b: 00                                        ; break depth
000050c: 0b                                        ; end
000050d: 0b                                        ; end
000050e: 0b                                        ; end
00004b0: 5e                                        ; FIXUP func body size
; function body 4
000050f: 00                                        ; func body size (guess)
0000510: 03                                        ; local decl count
0000511: 02                                        ; local type count
0000512: 7f                                        ; i32
0000513: 05                                        ; local type count
0000514: 7d                                        ; f32
0000515: 08                                        ; local type count
0000516: 7f                                        ; i32
0000517: 41                                        ; i32.const
0000518: 00                                        ; i32 literal
0000519: 21                                        ; local.set
000051a: 02                                        ; local index
000051b: 41                                        ; i32.const
000051c: 00                                        ; i32 literal
000051d: 21                                        ; local.set
000051e: 03                                        ; local index
000051f: 02                                        ; block
0000520: 40                                        ; void
0000521: 03                                        ; loop
0000522: 40                                        ; void
0000523: 20                                        ; local.get
0000524: 03                                        ; local index
0000525: 23                                        ; global.get
0000526: 0d                                        ; global index
0000527: 41                                        ; i32.const
0000528: 01                                        ; i32 literal
0000529: 6b                                        ; i32.sub
000052a: 4a                                        ; i32.gt_s
000052b: 0d                                        ; br_if
000052c: 01                                        ; break depth
000052d: 23                                        ; global.get
000052e: 0e                                        ; global index
000052f: 41                                        ; i32.const
0000530: 08                                        ; i32 literal
0000531: 6a                                        ; i32.add
0000532: 20                                        ; local.get
0000533: 03                                        ; local index
0000534: 41                                        ; i32.const
0000535: 04                                        ; i32 literal
0000536: 6c                                        ; i32.mul
0000537: 6a                                        ; i32.add
0000538: 28                                        ; i32.load
0000539: 02                                        ; alignment
000053a: 00                                        ; load offset
000053b: 41                                        ; i32.const
000053c: 00                                        ; i32 literal
000053d: 6a                                        ; i32.add
000053e: 2a                                        ; f32.load
000053f: 02                                        ; alignment
0000540: 00                                        ; load offset
0000541: 21                                        ; local.set
0000542: 04                                        ; local index
0000543: 23                                        ; global.get
0000544: 0e                                        ; global index
0000545: 41                                        ; i32.const
0000546: 08                                        ; i32 literal
0000547: 6a                                        ; i32.add
0000548: 20                                        ; local.get
0000549: 03                                        ; local index
000054a: 41                                        ; i32.const
000054b: 04                                        ; i32 literal
000054c: 6c                                        ; i32.mul
000054d: 6a                                        ; i32.add
000054e: 28                                        ; i32.load
000054f: 02                                        ; alignment
0000550: 00                                        ; load offset
0000551: 41                                        ; i32.const
0000552: 04                                        ; i32 literal
0000553: 6a                                        ; i32.add
0000554: 2a                                        ; f32.load
0000555: 02                                        ; alignment
0000556: 00                                        ; load offset
0000557: 21                                        ; local.set
0000558: 05                                        ; local index
0000559: 23                                        ; global.get
000055a: 0e                                        ; global index
000055b: 41                                        ; i32.const
000055c: 08                                        ; i32 literal
000055d: 6a                                        ; i32.add
000055e: 20                                        ; local.get
000055f: 03                                        ; local index
0000560: 41                                        ; i32.const
0000561: 04                                        ; i32 literal
0000562: 6c                                        ; i32.mul
0000563: 6a                                        ; i32.add
0000564: 28                                        ; i32.load
0000565: 02                                        ; alignment
0000566: 00                                        ; load offset
0000567: 41                                        ; i32.const
0000568: 08                                        ; i32 literal
0000569: 6a                                        ; i32.add
000056a: 2a                                        ; f32.load
000056b: 02                                        ; alignment
000056c: 00                                        ; load offset
000056d: 21                                        ; local.set
000056e: 06                                        ; local index
000056f: 23                                        ; global.get
0000570: 0f                                        ; global index
0000571: 41                                        ; i32.const
0000572: 08                                        ; i32 literal
0000573: 6a                                        ; i32.add
0000574: 20                                        ; local.get
0000575: 03                                        ; local index
0000576: 41                                        ; i32.const
0000577: 04                                        ; i32 literal
0000578: 6c                                        ; i32.mul
0000579: 6a                                        ; i32.add
000057a: 28                                        ; i32.load
000057b: 02                                        ; alignment
000057c: 00                                        ; load offset
000057d: 41                                        ; i32.const
000057e: 04                                        ; i32 literal
000057f: 6a                                        ; i32.add
0000580: 2a                                        ; f32.load
0000581: 02                                        ; alignment
0000582: 00                                        ; load offset
0000583: 21                                        ; local.set
0000584: 07                                        ; local index
0000585: 23                                        ; global.get
0000586: 0f                                        ; global index
0000587: 41                                        ; i32.const
0000588: 08                                        ; i32 literal
0000589: 6a                                        ; i32.add
000058a: 20                                        ; local.get
000058b: 03                                        ; local index
000058c: 41                                        ; i32.const
000058d: 04                                        ; i32 literal
000058e: 6c                                        ; i32.mul
000058f: 6a                                        ; i32.add
0000590: 28                                        ; i32.load
0000591: 02                                        ; alignment
0000592: 00                                        ; load offset
0000593: 41                                        ; i32.const
0000594: 00                                        ; i32 literal
0000595: 6a                                        ; i32.add
0000596: 2a                                        ; f32.load
0000597: 02                                        ; alignment
0000598: 00                                        ; load offset
0000599: 21                                        ; local.set
000059a: 08                                        ; local index
000059b: 20                                        ; local.get
000059c: 08                                        ; local index
000059d: bb                                        ; f64.promote_f32
000059e: 44                                        ; f64.const
000059f: 2d43 1ceb e236 1a3f                       ; f64 literal
00005a7: a0                                        ; f64.add
00005a8: b6                                        ; f32.demote_f64
00005a9: 21                                        ; local.set
00005aa: 08                                        ; local index
00005ab: 20                                        ; local.get
00005ac: 00                                        ; local index
00005ad: 20                                        ; local.get
00005ae: 04                                        ; local index
00005af: 20                                        ; local.get
00005b0: 06                                        ; local index
00005b1: 92                                        ; f32.add
00005b2: 93                                        ; f32.sub
00005b3: 41                                        ; i32.const
00005b4: 00                                        ; i32 literal
00005b5: b2                                        ; f32.convert_i32_s
00005b6: 5d                                        ; f32.lt
00005b7: 20                                        ; local.get
00005b8: 07                                        ; local index
00005b9: 41                                        ; i32.const
00005ba: 00                                        ; i32 literal
00005bb: b2                                        ; f32.convert_i32_s
00005bc: 5e                                        ; f32.gt
00005bd: 6c                                        ; i32.mul
00005be: 20                                        ; local.get
00005bf: 04                                        ; local index
00005c0: 20                                        ; local.get
00005c1: 06                                        ; local index
00005c2: 93                                        ; f32.sub
00005c3: 41                                        ; i32.const
00005c4: 00                                        ; i32 literal
00005c5: b2                                        ; f32.convert_i32_s
00005c6: 5d                                        ; f32.lt
00005c7: 20                                        ; local.get
00005c8: 07                                        ; local index
00005c9: 41                                        ; i32.const
00005ca: 00                                        ; i32 literal
00005cb: b2                                        ; f32.convert_i32_s
00005cc: 5d                                        ; f32.lt
00005cd: 6c                                        ; i32.mul
00005ce: 6a                                        ; i32.add
00005cf: 04                                        ; if
00005d0: 40                                        ; void
00005d1: 43                                        ; f32.const
00005d2: 0000 0000                                 ; f32 literal
00005d6: 20                                        ; local.get
00005d7: 07                                        ; local index
00005d8: 93                                        ; f32.sub
00005d9: 21                                        ; local.set
00005da: 07                                        ; local index
00005db: 0b                                        ; end
00005dc: 20                                        ; local.get
00005dd: 01                                        ; local index
00005de: 20                                        ; local.get
00005df: 05                                        ; local index
00005e0: 20                                        ; local.get
00005e1: 06                                        ; local index
00005e2: 92                                        ; f32.add
00005e3: 93                                        ; f32.sub
00005e4: 41                                        ; i32.const
00005e5: 00                                        ; i32 literal
00005e6: b2                                        ; f32.convert_i32_s
00005e7: 5d                                        ; f32.lt
00005e8: 20                                        ; local.get
00005e9: 08                                        ; local index
00005ea: 41                                        ; i32.const
00005eb: 00                                        ; i32 literal
00005ec: b2                                        ; f32.convert_i32_s
00005ed: 5e                                        ; f32.gt
00005ee: 6c                                        ; i32.mul
00005ef: 20                                        ; local.get
00005f0: 05                                        ; local index
00005f1: 20                                        ; local.get
00005f2: 06                                        ; local index
00005f3: 93                                        ; f32.sub
00005f4: 41                                        ; i32.const
00005f5: 00                                        ; i32 literal
00005f6: b2                                        ; f32.convert_i32_s
00005f7: 5d                                        ; f32.lt
00005f8: 20                                        ; local.get
00005f9: 08                                        ; local index
00005fa: 41                                        ; i32.const
00005fb: 00                                        ; i32 literal
00005fc: b2                                        ; f32.convert_i32_s
00005fd: 5d                                        ; f32.lt
00005fe: 6c                                        ; i32.mul
00005ff: 6a                                        ; i32.add
0000600: 04                                        ; if
0000601: 40                                        ; void
0000602: 43                                        ; f32.const
0000603: 0000 0000                                 ; f32 literal
0000607: 20                                        ; local.get
0000608: 08                                        ; local index
0000609: 93                                        ; f32.sub
000060a: 21                                        ; local.set
000060b: 08                                        ; local index
000060c: 0b                                        ; end
000060d: 23                                        ; global.get
000060e: 0e                                        ; global index
000060f: 41                                        ; i32.const
0000610: 08                                        ; i32 literal
0000611: 6a                                        ; i32.add
0000612: 20                                        ; local.get
0000613: 03                                        ; local index
0000614: 41                                        ; i32.const
0000615: 04                                        ; i32 literal
0000616: 6c                                        ; i32.mul
0000617: 6a                                        ; i32.add
0000618: 28                                        ; i32.load
0000619: 02                                        ; alignment
000061a: 00                                        ; load offset
000061b: 41                                        ; i32.const
000061c: 00                                        ; i32 literal
000061d: 6a                                        ; i32.add
000061e: 20                                        ; local.get
000061f: 04                                        ; local index
0000620: 20                                        ; local.get
0000621: 07                                        ; local index
0000622: 92                                        ; f32.add
0000623: 38                                        ; f32.store
0000624: 02                                        ; alignment
0000625: 00                                        ; store offset
0000626: 23                                        ; global.get
0000627: 0e                                        ; global index
0000628: 41                                        ; i32.const
0000629: 08                                        ; i32 literal
000062a: 6a                                        ; i32.add
000062b: 20                                        ; local.get
000062c: 03                                        ; local index
000062d: 41                                        ; i32.const
000062e: 04                                        ; i32 literal
000062f: 6c                                        ; i32.mul
0000630: 6a                                        ; i32.add
0000631: 28                                        ; i32.load
0000632: 02                                        ; alignment
0000633: 00                                        ; load offset
0000634: 41                                        ; i32.const
0000635: 04                                        ; i32 literal
0000636: 6a                                        ; i32.add
0000637: 20                                        ; local.get
0000638: 05                                        ; local index
0000639: 20                                        ; local.get
000063a: 08                                        ; local index
000063b: 92                                        ; f32.add
000063c: 38                                        ; f32.store
000063d: 02                                        ; alignment
000063e: 00                                        ; store offset
000063f: 23                                        ; global.get
0000640: 0f                                        ; global index
0000641: 41                                        ; i32.const
0000642: 08                                        ; i32 literal
0000643: 6a                                        ; i32.add
0000644: 20                                        ; local.get
0000645: 03                                        ; local index
0000646: 41                                        ; i32.const
0000647: 04                                        ; i32 literal
0000648: 6c                                        ; i32.mul
0000649: 6a                                        ; i32.add
000064a: 28                                        ; i32.load
000064b: 02                                        ; alignment
000064c: 00                                        ; load offset
000064d: 41                                        ; i32.const
000064e: 04                                        ; i32 literal
000064f: 6a                                        ; i32.add
0000650: 20                                        ; local.get
0000651: 07                                        ; local index
0000652: 38                                        ; f32.store
0000653: 02                                        ; alignment
0000654: 00                                        ; store offset
0000655: 23                                        ; global.get
0000656: 0f                                        ; global index
0000657: 41                                        ; i32.const
0000658: 08                                        ; i32 literal
0000659: 6a                                        ; i32.add
000065a: 20                                        ; local.get
000065b: 03                                        ; local index
000065c: 41                                        ; i32.const
000065d: 04                                        ; i32 literal
000065e: 6c                                        ; i32.mul
000065f: 6a                                        ; i32.add
0000660: 28                                        ; i32.load
0000661: 02                                        ; alignment
0000662: 00                                        ; load offset
0000663: 41                                        ; i32.const
0000664: 00                                        ; i32 literal
0000665: 6a                                        ; i32.add
0000666: 20                                        ; local.get
0000667: 08                                        ; local index
0000668: 38                                        ; f32.store
0000669: 02                                        ; alignment
000066a: 00                                        ; store offset
000066b: 20                                        ; local.get
000066c: 04                                        ; local index
000066d: 20                                        ; local.get
000066e: 06                                        ; local index
000066f: 93                                        ; f32.sub
0000670: bb                                        ; f64.promote_f32
0000671: 20                                        ; local.get
0000672: 00                                        ; local index
0000673: bb                                        ; f64.promote_f32
0000674: a3                                        ; f64.div
0000675: 23                                        ; global.get
0000676: 0c                                        ; global index
0000677: b7                                        ; f64.convert_i32_s
0000678: a2                                        ; f64.mul
0000679: 10                                        ; call
000067a: 06                                        ; function index
000067b: aa                                        ; i32.trunc_f64_s
000067c: 21                                        ; local.set
000067d: 09                                        ; local index
000067e: 20                                        ; local.get
000067f: 04                                        ; local index
0000680: 20                                        ; local.get
0000681: 06                                        ; local index
0000682: 92                                        ; f32.add
0000683: bb                                        ; f64.promote_f32
0000684: 20                                        ; local.get
0000685: 00                                        ; local index
0000686: bb                                        ; f64.promote_f32
0000687: a3                                        ; f64.div
0000688: 23                                        ; global.get
0000689: 0c                                        ; global index
000068a: b7                                        ; f64.convert_i32_s
000068b: a2                                        ; f64.mul
000068c: 10                                        ; call
000068d: 06                                        ; function index
000068e: aa                                        ; i32.trunc_f64_s
000068f: 21                                        ; local.set
0000690: 0a                                        ; local index
0000691: 20                                        ; local.get
0000692: 05                                        ; local index
0000693: 20                                        ; local.get
0000694: 06                                        ; local index
0000695: 93                                        ; f32.sub
0000696: bb                                        ; f64.promote_f32
0000697: 20                                        ; local.get
0000698: 01                                        ; local index
0000699: bb                                        ; f64.promote_f32
000069a: a3                                        ; f64.div
000069b: 23                                        ; global.get
000069c: 0b                                        ; global index
000069d: b7                                        ; f64.convert_i32_s
000069e: a2                                        ; f64.mul
000069f: 10                                        ; call
00006a0: 06                                        ; function index
00006a1: aa                                        ; i32.trunc_f64_s
00006a2: 21                                        ; local.set
00006a3: 0b                                        ; local index
00006a4: 20                                        ; local.get
00006a5: 05                                        ; local index
00006a6: 20                                        ; local.get
00006a7: 06                                        ; local index
00006a8: 92                                        ; f32.add
00006a9: bb                                        ; f64.promote_f32
00006aa: 20                                        ; local.get
00006ab: 01                                        ; local index
00006ac: bb                                        ; f64.promote_f32
00006ad: a3                                        ; f64.div
00006ae: 23                                        ; global.get
00006af: 0b                                        ; global index
00006b0: b7                                        ; f64.convert_i32_s
00006b1: a2                                        ; f64.mul
00006b2: 10                                        ; call
00006b3: 06                                        ; function index
00006b4: aa                                        ; i32.trunc_f64_s
00006b5: 21                                        ; local.set
00006b6: 0c                                        ; local index
00006b7: 20                                        ; local.get
00006b8: 09                                        ; local index
00006b9: 41                                        ; i32.const
00006ba: 00                                        ; i32 literal
00006bb: 48                                        ; i32.lt_s
00006bc: 04                                        ; if
00006bd: 40                                        ; void
00006be: 41                                        ; i32.const
00006bf: 00                                        ; i32 literal
00006c0: 21                                        ; local.set
00006c1: 09                                        ; local index
00006c2: 0b                                        ; end
00006c3: 20                                        ; local.get
00006c4: 0a                                        ; local index
00006c5: 23                                        ; global.get
00006c6: 0c                                        ; global index
00006c7: 4e                                        ; i32.ge_s
00006c8: 04                                        ; if
00006c9: 40                                        ; void
00006ca: 23                                        ; global.get
00006cb: 0c                                        ; global index
00006cc: 41                                        ; i32.const
00006cd: 01                                        ; i32 literal
00006ce: 6b                                        ; i32.sub
00006cf: 21                                        ; local.set
00006d0: 0a                                        ; local index
00006d1: 0b                                        ; end
00006d2: 20                                        ; local.get
00006d3: 0b                                        ; local index
00006d4: 41                                        ; i32.const
00006d5: 00                                        ; i32 literal
00006d6: 48                                        ; i32.lt_s
00006d7: 04                                        ; if
00006d8: 40                                        ; void
00006d9: 41                                        ; i32.const
00006da: 00                                        ; i32 literal
00006db: 21                                        ; local.set
00006dc: 0b                                        ; local index
00006dd: 0b                                        ; end
00006de: 20                                        ; local.get
00006df: 0c                                        ; local index
00006e0: 23                                        ; global.get
00006e1: 0b                                        ; global index
00006e2: 4e                                        ; i32.ge_s
00006e3: 04                                        ; if
00006e4: 40                                        ; void
00006e5: 23                                        ; global.get
00006e6: 0b                                        ; global index
00006e7: 41                                        ; i32.const
00006e8: 01                                        ; i32 literal
00006e9: 6b                                        ; i32.sub
00006ea: 21                                        ; local.set
00006eb: 0c                                        ; local index
00006ec: 0b                                        ; end
00006ed: 20                                        ; local.get
00006ee: 09                                        ; local index
00006ef: 21                                        ; local.set
00006f0: 0d                                        ; local index
00006f1: 02                                        ; block
00006f2: 40                                        ; void
00006f3: 03                                        ; loop
00006f4: 40                                        ; void
00006f5: 20                                        ; local.get
00006f6: 0d                                        ; local index
00006f7: 20                                        ; local.get
00006f8: 0a                                        ; local index
00006f9: 4a                                        ; i32.gt_s
00006fa: 0d                                        ; br_if
00006fb: 01                                        ; break depth
00006fc: 23                                        ; global.get
00006fd: 11                                        ; global index
00006fe: 41                                        ; i32.const
00006ff: 08                                        ; i32 literal
0000700: 6a                                        ; i32.add
0000701: 20                                        ; local.get
0000702: 0d                                        ; local index
0000703: 41                                        ; i32.const
0000704: 04                                        ; i32 literal
0000705: 6c                                        ; i32.mul
0000706: 6a                                        ; i32.add
0000707: 28                                        ; i32.load
0000708: 02                                        ; alignment
0000709: 00                                        ; load offset
000070a: 21                                        ; local.set
000070b: 0e                                        ; local index
000070c: 20                                        ; local.get
000070d: 0b                                        ; local index
000070e: 21                                        ; local.set
000070f: 0f                                        ; local index
0000710: 02                                        ; block
0000711: 40                                        ; void
0000712: 03                                        ; loop
0000713: 40                                        ; void
0000714: 20                                        ; local.get
0000715: 0f                                        ; local index
0000716: 20                                        ; local.get
0000717: 0c                                        ; local index
0000718: 4a                                        ; i32.gt_s
0000719: 0d                                        ; br_if
000071a: 01                                        ; break depth
000071b: 23                                        ; global.get
000071c: 10                                        ; global index
000071d: 41                                        ; i32.const
000071e: 08                                        ; i32 literal
000071f: 6a                                        ; i32.add
0000720: 20                                        ; local.get
0000721: 02                                        ; local index
0000722: 41                                        ; i32.const
0000723: 04                                        ; i32 literal
0000724: 6c                                        ; i32.mul
0000725: 6a                                        ; i32.add
0000726: 28                                        ; i32.load
0000727: 02                                        ; alignment
0000728: 00                                        ; load offset
0000729: 21                                        ; local.set
000072a: 10                                        ; local index
000072b: 20                                        ; local.get
000072c: 02                                        ; local index
000072d: 41                                        ; i32.const
000072e: 01                                        ; i32 literal
000072f: 6a                                        ; i32.add
0000730: 21                                        ; local.set
0000731: 02                                        ; local index
0000732: 20                                        ; local.get
0000733: 10                                        ; local index
0000734: 41                                        ; i32.const
0000735: 04                                        ; i32 literal
0000736: 6a                                        ; i32.add
0000737: 20                                        ; local.get
0000738: 03                                        ; local index
0000739: 36                                        ; i32.store
000073a: 02                                        ; alignment
000073b: 00                                        ; store offset
000073c: 20                                        ; local.get
000073d: 10                                        ; local index
000073e: 41                                        ; i32.const
000073f: 00                                        ; i32 literal
0000740: 6a                                        ; i32.add
0000741: 20                                        ; local.get
0000742: 0e                                        ; local index
0000743: 41                                        ; i32.const
0000744: 08                                        ; i32 literal
0000745: 6a                                        ; i32.add
0000746: 20                                        ; local.get
0000747: 0f                                        ; local index
0000748: 41                                        ; i32.const
0000749: 04                                        ; i32 literal
000074a: 6c                                        ; i32.mul
000074b: 6a                                        ; i32.add
000074c: 28                                        ; i32.load
000074d: 02                                        ; alignment
000074e: 00                                        ; load offset
000074f: 36                                        ; i32.store
0000750: 02                                        ; alignment
0000751: 00                                        ; store offset
0000752: 20                                        ; local.get
0000753: 0e                                        ; local index
0000754: 41                                        ; i32.const
0000755: 08                                        ; i32 literal
0000756: 6a                                        ; i32.add
0000757: 20                                        ; local.get
0000758: 0f                                        ; local index
0000759: 41                                        ; i32.const
000075a: 04                                        ; i32 literal
000075b: 6c                                        ; i32.mul
000075c: 6a                                        ; i32.add
000075d: 20                                        ; local.get
000075e: 10                                        ; local index
000075f: 36                                        ; i32.store
0000760: 02                                        ; alignment
0000761: 00                                        ; store offset
0000762: 20                                        ; local.get
0000763: 0f                                        ; local index
0000764: 41                                        ; i32.const
0000765: 01                                        ; i32 literal
0000766: 6a                                        ; i32.add
0000767: 21                                        ; local.set
0000768: 0f                                        ; local index
0000769: 0c                                        ; br
000076a: 00                                        ; break depth
000076b: 0b                                        ; end
000076c: 0b                                        ; end
000076d: 20                                        ; local.get
000076e: 0d                                        ; local index
000076f: 41                                        ; i32.const
0000770: 01                                        ; i32 literal
0000771: 6a                                        ; i32.add
0000772: 21                                        ; local.set
0000773: 0d                                        ; local index
0000774: 0c                                        ; br
0000775: 00                                        ; break depth
0000776: 0b                                        ; end
0000777: 0b                                        ; end
0000778: 20                                        ; local.get
0000779: 03                                        ; local index
000077a: 41                                        ; i32.const
000077b: 01                                        ; i32 literal
000077c: 6a                                        ; i32.add
000077d: 21                                        ; local.set
000077e: 03                                        ; local index
000077f: 0c                                        ; br
0000780: 00                                        ; break depth
0000781: 0b                                        ; end
0000782: 0b                                        ; end
0000783: 0b                                        ; end
; move data: [510, 784) -> [511, 785)
000050f: f404                                      ; FIXUP func body size
; function body 5
0000785: 00                                        ; func body size (guess)
0000786: 07                                        ; local decl count
0000787: 05                                        ; local type count
0000788: 7f                                        ; i32
0000789: 05                                        ; local type count
000078a: 7d                                        ; f32
000078b: 02                                        ; local type count
000078c: 7f                                        ; i32
000078d: 07                                        ; local type count
000078e: 7d                                        ; f32
000078f: 01                                        ; local type count
0000790: 7c                                        ; f64
0000791: 04                                        ; local type count
0000792: 7d                                        ; f32
0000793: 04                                        ; local type count
0000794: 7c                                        ; f64
0000795: 41                                        ; i32.const
0000796: 00                                        ; i32 literal
0000797: 21                                        ; local.set
0000798: 00                                        ; local index
0000799: 02                                        ; block
000079a: 40                                        ; void
000079b: 03                                        ; loop
000079c: 40                                        ; void
000079d: 20                                        ; local.get
000079e: 00                                        ; local index
000079f: 23                                        ; global.get
00007a0: 0c                                        ; global index
00007a1: 41                                        ; i32.const
00007a2: 01                                        ; i32 literal
00007a3: 6b                                        ; i32.sub
00007a4: 4a                                        ; i32.gt_s
00007a5: 0d                                        ; br_if
00007a6: 01                                        ; break depth
00007a7: 23                                        ; global.get
00007a8: 11                                        ; global index
00007a9: 41                                        ; i32.const
00007aa: 08                                        ; i32 literal
00007ab: 6a                                        ; i32.add
00007ac: 20                                        ; local.get
00007ad: 00                                        ; local index
00007ae: 41                                        ; i32.const
00007af: 04                                        ; i32 literal
00007b0: 6c                                        ; i32.mul
00007b1: 6a                                        ; i32.add
00007b2: 28                                        ; i32.load
00007b3: 02                                        ; alignment
00007b4: 00                                        ; load offset
00007b5: 21                                        ; local.set
00007b6: 01                                        ; local index
00007b7: 41                                        ; i32.const
00007b8: 00                                        ; i32 literal
00007b9: 21                                        ; local.set
00007ba: 02                                        ; local index
00007bb: 02                                        ; block
00007bc: 40                                        ; void
00007bd: 03                                        ; loop
00007be: 40                                        ; void
00007bf: 20                                        ; local.get
00007c0: 02                                        ; local index
00007c1: 23                                        ; global.get
00007c2: 0b                                        ; global index
00007c3: 41                                        ; i32.const
00007c4: 01                                        ; i32 literal
00007c5: 6b                                        ; i32.sub
00007c6: 4a                                        ; i32.gt_s
00007c7: 0d                                        ; br_if
00007c8: 01                                        ; break depth
00007c9: 20                                        ; local.get
00007ca: 01                                        ; local index
00007cb: 41                                        ; i32.const
00007cc: 08                                        ; i32 literal
00007cd: 6a                                        ; i32.add
00007ce: 20                                        ; local.get
00007cf: 02                                        ; local index
00007d0: 41                                        ; i32.const
00007d1: 04                                        ; i32 literal
00007d2: 6c                                        ; i32.mul
00007d3: 6a                                        ; i32.add
00007d4: 28                                        ; i32.load
00007d5: 02                                        ; alignment
00007d6: 00                                        ; load offset
00007d7: 21                                        ; local.set
00007d8: 03                                        ; local index
00007d9: 02                                        ; block
00007da: 40                                        ; void
00007db: 03                                        ; loop
00007dc: 40                                        ; void
00007dd: 20                                        ; local.get
00007de: 03                                        ; local index
00007df: 41                                        ; i32.const
00007e0: 00                                        ; i32 literal
00007e1: 46                                        ; i32.eq
00007e2: 45                                        ; i32.eqz
00007e3: 45                                        ; i32.eqz
00007e4: 0d                                        ; br_if
00007e5: 01                                        ; break depth
00007e6: 20                                        ; local.get
00007e7: 03                                        ; local index
00007e8: 41                                        ; i32.const
00007e9: 04                                        ; i32 literal
00007ea: 6a                                        ; i32.add
00007eb: 28                                        ; i32.load
00007ec: 02                                        ; alignment
00007ed: 00                                        ; load offset
00007ee: 21                                        ; local.set
00007ef: 04                                        ; local index
00007f0: 23                                        ; global.get
00007f1: 0e                                        ; global index
00007f2: 41                                        ; i32.const
00007f3: 08                                        ; i32 literal
00007f4: 6a                                        ; i32.add
00007f5: 20                                        ; local.get
00007f6: 04                                        ; local index
00007f7: 41                                        ; i32.const
00007f8: 04                                        ; i32 literal
00007f9: 6c                                        ; i32.mul
00007fa: 6a                                        ; i32.add
00007fb: 28                                        ; i32.load
00007fc: 02                                        ; alignment
00007fd: 00                                        ; load offset
00007fe: 41                                        ; i32.const
00007ff: 00                                        ; i32 literal
0000800: 6a                                        ; i32.add
0000801: 2a                                        ; f32.load
0000802: 02                                        ; alignment
0000803: 00                                        ; load offset
0000804: 21                                        ; local.set
0000805: 05                                        ; local index
0000806: 23                                        ; global.get
0000807: 0e                                        ; global index
0000808: 41                                        ; i32.const
0000809: 08                                        ; i32 literal
000080a: 6a                                        ; i32.add
000080b: 20                                        ; local.get
000080c: 04                                        ; local index
000080d: 41                                        ; i32.const
000080e: 04                                        ; i32 literal
000080f: 6c                                        ; i32.mul
0000810: 6a                                        ; i32.add
0000811: 28                                        ; i32.load
0000812: 02                                        ; alignment
0000813: 00                                        ; load offset
0000814: 41                                        ; i32.const
0000815: 04                                        ; i32 literal
0000816: 6a                                        ; i32.add
0000817: 2a                                        ; f32.load
0000818: 02                                        ; alignment
0000819: 00                                        ; load offset
000081a: 21                                        ; local.set
000081b: 06                                        ; local index
000081c: 23                                        ; global.get
000081d: 0e                                        ; global index
000081e: 41                                        ; i32.const
000081f: 08                                        ; i32 literal
0000820: 6a                                        ; i32.add
0000821: 20                                        ; local.get
0000822: 04                                        ; local index
0000823: 41                                        ; i32.const
0000824: 04                                        ; i32 literal
0000825: 6c                                        ; i32.mul
0000826: 6a                                        ; i32.add
0000827: 28                                        ; i32.load
0000828: 02                                        ; alignment
0000829: 00                                        ; load offset
000082a: 41                                        ; i32.const
000082b: 08                                        ; i32 literal
000082c: 6a                                        ; i32.add
000082d: 2a                                        ; f32.load
000082e: 02                                        ; alignment
000082f: 00                                        ; load offset
0000830: 21                                        ; local.set
0000831: 07                                        ; local index
0000832: 23                                        ; global.get
0000833: 0f                                        ; global index
0000834: 41                                        ; i32.const
0000835: 08                                        ; i32 literal
0000836: 6a                                        ; i32.add
0000837: 20                                        ; local.get
0000838: 04                                        ; local index
0000839: 41                                        ; i32.const
000083a: 04                                        ; i32 literal
000083b: 6c                                        ; i32.mul
000083c: 6a                                        ; i32.add
000083d: 28                                        ; i32.load
000083e: 02                                        ; alignment
000083f: 00                                        ; load offset
0000840: 41                                        ; i32.const
0000841: 04                                        ; i32 literal
0000842: 6a                                        ; i32.add
0000843: 2a                                        ; f32.load
0000844: 02                                        ; alignment
0000845: 00                                        ; load offset
0000846: 21                                        ; local.set
0000847: 08                                        ; local index
0000848: 23                                        ; global.get
0000849: 0f                                        ; global index
000084a: 41                                        ; i32.const
000084b: 08                                        ; i32 literal
000084c: 6a                                        ; i32.add
000084d: 20                                        ; local.get
000084e: 04                                        ; local index
000084f: 41                                        ; i32.const
0000850: 04                                        ; i32 literal
0000851: 6c                                        ; i32.mul
0000852: 6a                                        ; i32.add
0000853: 28                                        ; i32.load
0000854: 02                                        ; alignment
0000855: 00                                        ; load offset
0000856: 41                                        ; i32.const
0000857: 00                                        ; i32 literal
0000858: 6a                                        ; i32.add
0000859: 2a                                        ; f32.load
000085a: 02                                        ; alignment
000085b: 00                                        ; load offset
000085c: 21                                        ; local.set
000085d: 09                                        ; local index
000085e: 20                                        ; local.get
000085f: 03                                        ; local index
0000860: 21                                        ; local.set
0000861: 0a                                        ; local index
0000862: 20                                        ; local.get
0000863: 0a                                        ; local index
0000864: 41                                        ; i32.const
0000865: 00                                        ; i32 literal
0000866: 6a                                        ; i32.add
0000867: 28                                        ; i32.load
0000868: 02                                        ; alignment
0000869: 00                                        ; load offset
000086a: 21                                        ; local.set
000086b: 0a                                        ; local index
000086c: 02                                        ; block
000086d: 40                                        ; void
000086e: 03                                        ; loop
000086f: 40                                        ; void
0000870: 20                                        ; local.get
0000871: 0a                                        ; local index
0000872: 41                                        ; i32.const
0000873: 00                                        ; i32 literal
0000874: 46                                        ; i32.eq
0000875: 45                                        ; i32.eqz
0000876: 45                                        ; i32.eqz
0000877: 0d                                        ; br_if
0000878: 01                                        ; break depth
0000879: 20                                        ; local.get
000087a: 0a                                        ; local index
000087b: 41                                        ; i32.const
000087c: 04                                        ; i32 literal
000087d: 6a                                        ; i32.add
000087e: 28                                        ; i32.load
000087f: 02                                        ; alignment
0000880: 00                                        ; load offset
0000881: 21                                        ; local.set
0000882: 0b                                        ; local index
0000883: 23                                        ; global.get
0000884: 0e                                        ; global index
0000885: 41                                        ; i32.const
0000886: 08                                        ; i32 literal
0000887: 6a                                        ; i32.add
0000888: 20                                        ; local.get
0000889: 0b                                        ; local index
000088a: 41                                        ; i32.const
000088b: 04                                        ; i32 literal
000088c: 6c                                        ; i32.mul
000088d: 6a                                        ; i32.add
000088e: 28                                        ; i32.load
000088f: 02                                        ; alignment
0000890: 00                                        ; load offset
0000891: 41                                        ; i32.const
0000892: 00                                        ; i32 literal
0000893: 6a                                        ; i32.add
0000894: 2a                                        ; f32.load
0000895: 02                                        ; alignment
0000896: 00                                        ; load offset
0000897: 21                                        ; local.set
0000898: 0c                                        ; local index
0000899: 23                                        ; global.get
000089a: 0e                                        ; global index
000089b: 41                                        ; i32.const
000089c: 08                                        ; i32 literal
000089d: 6a                                        ; i32.add
000089e: 20                                        ; local.get
000089f: 0b                                        ; local index
00008a0: 41                                        ; i32.const
00008a1: 04                                        ; i32 literal
00008a2: 6c                                        ; i32.mul
00008a3: 6a                                        ; i32.add
00008a4: 28                                        ; i32.load
00008a5: 02                                        ; alignment
00008a6: 00                                        ; load offset
00008a7: 41                                        ; i32.const
00008a8: 04                                        ; i32 literal
00008a9: 6a                                        ; i32.add
00008aa: 2a                                        ; f32.load
00008ab: 02                                        ; alignment
00008ac: 00                                        ; load offset
00008ad: 21                                        ; local.set
00008ae: 0d                                        ; local index
00008af: 23                                        ; global.get
00008b0: 0e                                        ; global index
00008b1: 41                                        ; i32.const
00008b2: 08                                        ; i32 literal
00008b3: 6a                                        ; i32.add
00008b4: 20                                        ; local.get
00008b5: 0b                                        ; local index
00008b6: 41                                        ; i32.const
00008b7: 04                                        ; i32 literal
00008b8: 6c                                        ; i32.mul
00008b9: 6a                                        ; i32.add
00008ba: 28                                        ; i32.load
00008bb: 02                                        ; alignment
00008bc: 00                                        ; load offset
00008bd: 41                                        ; i32.const
00008be: 08                                        ; i32 literal
00008bf: 6a                                        ; i32.add
00008c0: 2a                                        ; f32.load
00008c1: 02                                        ; alignment
00008c2: 00                                        ; load offset
00008c3: 21                                        ; local.set
00008c4: 0e                                        ; local index
00008c5: 20                                        ; local.get
00008c6: 05                                        ; local index
00008c7: 20                                        ; local.get
00008c8: 06                                        ; local index
00008c9: 20                                        ; local.get
00008ca: 07                                        ; local index
00008cb: 20                                        ; local.get
00008cc: 0c                                        ; local index
00008cd: 20                                        ; local.get
00008ce: 0d                                        ; local index
00008cf: 20                                        ; local.get
00008d0: 0e                                        ; local index
00008d1: 10                                        ; call
00008d2: 0e                                        ; function index
00008d3: 04                                        ; if
00008d4: 40                                        ; void
00008d5: 23                                        ; global.get
00008d6: 0f                                        ; global index
00008d7: 41                                        ; i32.const
00008d8: 08                                        ; i32 literal
00008d9: 6a                                        ; i32.add
00008da: 20                                        ; local.get
00008db: 0b                                        ; local index
00008dc: 41                                        ; i32.const
00008dd: 04                                        ; i32 literal
00008de: 6c                                        ; i32.mul
00008df: 6a                                        ; i32.add
00008e0: 28                                        ; i32.load
00008e1: 02                                        ; alignment
00008e2: 00                                        ; load offset
00008e3: 41                                        ; i32.const
00008e4: 04                                        ; i32 literal
00008e5: 6a                                        ; i32.add
00008e6: 2a                                        ; f32.load
00008e7: 02                                        ; alignment
00008e8: 00                                        ; load offset
00008e9: 21                                        ; local.set
00008ea: 0f                                        ; local index
00008eb: 23                                        ; global.get
00008ec: 0f                                        ; global index
00008ed: 41                                        ; i32.const
00008ee: 08                                        ; i32 literal
00008ef: 6a                                        ; i32.add
00008f0: 20                                        ; local.get
00008f1: 0b                                        ; local index
00008f2: 41                                        ; i32.const
00008f3: 04                                        ; i32 literal
00008f4: 6c                                        ; i32.mul
00008f5: 6a                                        ; i32.add
00008f6: 28                                        ; i32.load
00008f7: 02                                        ; alignment
00008f8: 00                                        ; load offset
00008f9: 41                                        ; i32.const
00008fa: 00                                        ; i32 literal
00008fb: 6a                                        ; i32.add
00008fc: 2a                                        ; f32.load
00008fd: 02                                        ; alignment
00008fe: 00                                        ; load offset
00008ff: 21                                        ; local.set
0000900: 10                                        ; local index
0000901: 20                                        ; local.get
0000902: 0c                                        ; local index
0000903: 20                                        ; local.get
0000904: 05                                        ; local index
0000905: 93                                        ; f32.sub
0000906: 21                                        ; local.set
0000907: 11                                        ; local index
0000908: 20                                        ; local.get
0000909: 0d                                        ; local index
000090a: 20                                        ; local.get
000090b: 06                                        ; local index
000090c: 93                                        ; f32.sub
000090d: 21                                        ; local.set
000090e: 12                                        ; local index
000090f: 20                                        ; local.get
0000910: 11                                        ; local index
0000911: 20                                        ; local.get
0000912: 11                                        ; local index
0000913: 94                                        ; f32.mul
0000914: 20                                        ; local.get
0000915: 12                                        ; local index
0000916: 20                                        ; local.get
0000917: 12                                        ; local index
0000918: 94                                        ; f32.mul
0000919: 92                                        ; f32.add
000091a: bb                                        ; f64.promote_f32
000091b: 10                                        ; call
000091c: 01                                        ; function index
000091d: 21                                        ; local.set
000091e: 13                                        ; local index
000091f: 20                                        ; local.get
0000920: 11                                        ; local index
0000921: bb                                        ; f64.promote_f32
0000922: 20                                        ; local.get
0000923: 13                                        ; local index
0000924: a3                                        ; f64.div
0000925: b6                                        ; f32.demote_f64
0000926: 21                                        ; local.set
0000927: 11                                        ; local index
0000928: 20                                        ; local.get
0000929: 12                                        ; local index
000092a: bb                                        ; f64.promote_f32
000092b: 20                                        ; local.get
000092c: 13                                        ; local index
000092d: a3                                        ; f64.div
000092e: b6                                        ; f32.demote_f64
000092f: 21                                        ; local.set
0000930: 12                                        ; local index
0000931: 20                                        ; local.get
0000932: 11                                        ; local index
0000933: 20                                        ; local.get
0000934: 08                                        ; local index
0000935: 94                                        ; f32.mul
0000936: 20                                        ; local.get
0000937: 12                                        ; local index
0000938: 20                                        ; local.get
0000939: 09                                        ; local index
000093a: 94                                        ; f32.mul
000093b: 92                                        ; f32.add
000093c: 21                                        ; local.set
000093d: 14                                        ; local index
000093e: 20                                        ; local.get
000093f: 11                                        ; local index
0000940: 20                                        ; local.get
0000941: 0f                                        ; local index
0000942: 94                                        ; f32.mul
0000943: 20                                        ; local.get
0000944: 12                                        ; local index
0000945: 20                                        ; local.get
0000946: 10                                        ; local index
0000947: 94                                        ; f32.mul
0000948: 92                                        ; f32.add
0000949: 21                                        ; local.set
000094a: 15                                        ; local index
000094b: 20                                        ; local.get
000094c: 14                                        ; local index
000094d: 20                                        ; local.get
000094e: 15                                        ; local index
000094f: 93                                        ; f32.sub
0000950: 41                                        ; i32.const
0000951: 00                                        ; i32 literal
0000952: b2                                        ; f32.convert_i32_s
0000953: 5f                                        ; f32.le
0000954: 45                                        ; i32.eqz
0000955: 04                                        ; if
0000956: 40                                        ; void
0000957: 20                                        ; local.get
0000958: 07                                        ; local index
0000959: 20                                        ; local.get
000095a: 0e                                        ; local index
000095b: 92                                        ; f32.add
000095c: 21                                        ; local.set
000095d: 16                                        ; local index
000095e: 20                                        ; local.get
000095f: 07                                        ; local index
0000960: 20                                        ; local.get
0000961: 0e                                        ; local index
0000962: 93                                        ; f32.sub
0000963: 21                                        ; local.set
0000964: 17                                        ; local index
0000965: 20                                        ; local.get
0000966: 14                                        ; local index
0000967: 20                                        ; local.get
0000968: 17                                        ; local index
0000969: 94                                        ; f32.mul
000096a: 41                                        ; i32.const
000096b: 02                                        ; i32 literal
000096c: b2                                        ; f32.convert_i32_s
000096d: 20                                        ; local.get
000096e: 0e                                        ; local index
000096f: 94                                        ; f32.mul
0000970: 20                                        ; local.get
0000971: 15                                        ; local index
0000972: 94                                        ; f32.mul
0000973: 92                                        ; f32.add
0000974: bb                                        ; f64.promote_f32
0000975: 20                                        ; local.get
0000976: 16                                        ; local index
0000977: bb                                        ; f64.promote_f32
0000978: a3                                        ; f64.div
0000979: 21                                        ; local.set
000097a: 18                                        ; local index
000097b: 41                                        ; i32.const
000097c: 02                                        ; i32 literal
000097d: b2                                        ; f32.convert_i32_s
000097e: 20                                        ; local.get
000097f: 07                                        ; local index
0000980: 94                                        ; f32.mul
0000981: 20                                        ; local.get
0000982: 14                                        ; local index
0000983: 94                                        ; f32.mul
0000984: 20                                        ; local.get
0000985: 15                                        ; local index
0000986: 20                                        ; local.get
0000987: 17                                        ; local index
0000988: 94                                        ; f32.mul
0000989: 93                                        ; f32.sub
000098a: bb                                        ; f64.promote_f32
000098b: 20                                        ; local.get
000098c: 16                                        ; local index
000098d: bb                                        ; f64.promote_f32
000098e: a3                                        ; f64.div
000098f: 21                                        ; local.set
0000990: 19                                        ; local index
0000991: 20                                        ; local.get
0000992: 18                                        ; local index
0000993: 20                                        ; local.get
0000994: 14                                        ; local index
0000995: bb                                        ; f64.promote_f32
0000996: a1                                        ; f64.sub
0000997: 21                                        ; local.set
0000998: 1a                                        ; local index
0000999: 20                                        ; local.get
000099a: 19                                        ; local index
000099b: 20                                        ; local.get
000099c: 15                                        ; local index
000099d: bb                                        ; f64.promote_f32
000099e: a1                                        ; f64.sub
000099f: 21                                        ; local.set
00009a0: 1b                                        ; local index
00009a1: 23                                        ; global.get
00009a2: 0f                                        ; global index
00009a3: 41                                        ; i32.const
00009a4: 08                                        ; i32 literal
00009a5: 6a                                        ; i32.add
00009a6: 20                                        ; local.get
00009a7: 04                                        ; local index
00009a8: 41                                        ; i32.const
00009a9: 04                                        ; i32 literal
00009aa: 6c                                        ; i32.mul
00009ab: 6a                                        ; i32.add
00009ac: 28                                        ; i32.load
00009ad: 02                                        ; alignment
00009ae: 00                                        ; load offset
00009af: 41                                        ; i32.const
00009b0: 04                                        ; i32 literal
00009b1: 6a                                        ; i32.add
00009b2: 20                                        ; local.get
00009b3: 08                                        ; local index
00009b4: bb                                        ; f64.promote_f32
00009b5: 20                                        ; local.get
00009b6: 11                                        ; local index
00009b7: bb                                        ; f64.promote_f32
00009b8: 20                                        ; local.get
00009b9: 1a                                        ; local index
00009ba: a2                                        ; f64.mul
00009bb: a0                                        ; f64.add
00009bc: b6                                        ; f32.demote_f64
00009bd: 38                                        ; f32.store
00009be: 02                                        ; alignment
00009bf: 00                                        ; store offset
00009c0: 23                                        ; global.get
00009c1: 0f                                        ; global index
00009c2: 41                                        ; i32.const
00009c3: 08                                        ; i32 literal
00009c4: 6a                                        ; i32.add
00009c5: 20                                        ; local.get
00009c6: 04                                        ; local index
00009c7: 41                                        ; i32.const
00009c8: 04                                        ; i32 literal
00009c9: 6c                                        ; i32.mul
00009ca: 6a                                        ; i32.add
00009cb: 28                                        ; i32.load
00009cc: 02                                        ; alignment
00009cd: 00                                        ; load offset
00009ce: 41                                        ; i32.const
00009cf: 00                                        ; i32 literal
00009d0: 6a                                        ; i32.add
00009d1: 20                                        ; local.get
00009d2: 09                                        ; local index
00009d3: bb                                        ; f64.promote_f32
00009d4: 20                                        ; local.get
00009d5: 12                                        ; local index
00009d6: bb                                        ; f64.promote_f32
00009d7: 20                                        ; local.get
00009d8: 1a                                        ; local index
00009d9: a2                                        ; f64.mul
00009da: a0                                        ; f64.add
00009db: b6                                        ; f32.demote_f64
00009dc: 38                                        ; f32.store
00009dd: 02                                        ; alignment
00009de: 00                                        ; store offset
00009df: 23                                        ; global.get
00009e0: 0f                                        ; global index
00009e1: 41                                        ; i32.const
00009e2: 08                                        ; i32 literal
00009e3: 6a                                        ; i32.add
00009e4: 20                                        ; local.get
00009e5: 0b                                        ; local index
00009e6: 41                                        ; i32.const
00009e7: 04                                        ; i32 literal
00009e8: 6c                                        ; i32.mul
00009e9: 6a                                        ; i32.add
00009ea: 28                                        ; i32.load
00009eb: 02                                        ; alignment
00009ec: 00                                        ; load offset
00009ed: 41                                        ; i32.const
00009ee: 04                                        ; i32 literal
00009ef: 6a                                        ; i32.add
00009f0: 20                                        ; local.get
00009f1: 0f                                        ; local index
00009f2: bb                                        ; f64.promote_f32
00009f3: 20                                        ; local.get
00009f4: 11                                        ; local index
00009f5: bb                                        ; f64.promote_f32
00009f6: 20                                        ; local.get
00009f7: 1b                                        ; local index
00009f8: a2                                        ; f64.mul
00009f9: a0                                        ; f64.add
00009fa: b6                                        ; f32.demote_f64
00009fb: 38                                        ; f32.store
00009fc: 02                                        ; alignment
00009fd: 00                                        ; store offset
00009fe: 23                                        ; global.get
00009ff: 0f                                        ; global index
0000a00: 41                                        ; i32.const
0000a01: 08                                        ; i32 literal
0000a02: 6a                                        ; i32.add
0000a03: 20                                        ; local.get
0000a04: 0b                                        ; local index
0000a05: 41                                        ; i32.const
0000a06: 04                                        ; i32 literal
0000a07: 6c                                        ; i32.mul
0000a08: 6a                                        ; i32.add
0000a09: 28                                        ; i32.load
0000a0a: 02                                        ; alignment
0000a0b: 00                                        ; load offset
0000a0c: 41                                        ; i32.const
0000a0d: 00                                        ; i32 literal
0000a0e: 6a                                        ; i32.add
0000a0f: 20                                        ; local.get
0000a10: 10                                        ; local index
0000a11: bb                                        ; f64.promote_f32
0000a12: 20                                        ; local.get
0000a13: 12                                        ; local index
0000a14: bb                                        ; f64.promote_f32
0000a15: 20                                        ; local.get
0000a16: 1b                                        ; local index
0000a17: a2                                        ; f64.mul
0000a18: a0                                        ; f64.add
0000a19: b6                                        ; f32.demote_f64
0000a1a: 38                                        ; f32.store
0000a1b: 02                                        ; alignment
0000a1c: 00                                        ; store offset
0000a1d: 20                                        ; local.get
0000a1e: 0a                                        ; local index
0000a1f: 41                                        ; i32.const
0000a20: 00                                        ; i32 literal
0000a21: 6a                                        ; i32.add
0000a22: 28                                        ; i32.load
0000a23: 02                                        ; alignment
0000a24: 00                                        ; load offset
0000a25: 21                                        ; local.set
0000a26: 0a                                        ; local index
0000a27: 0b                                        ; end
0000a28: 05                                        ; else
0000a29: 20                                        ; local.get
0000a2a: 0a                                        ; local index
0000a2b: 41                                        ; i32.const
0000a2c: 00                                        ; i32 literal
0000a2d: 6a                                        ; i32.add
0000a2e: 28                                        ; i32.load
0000a2f: 02                                        ; alignment
0000a30: 00                                        ; load offset
0000a31: 21                                        ; local.set
0000a32: 0a                                        ; local index
0000a33: 0b                                        ; end
0000a34: 0c                                        ; br
0000a35: 00                                        ; break depth
0000a36: 0b                                        ; end
0000a37: 0b                                        ; end
0000a38: 20                                        ; local.get
0000a39: 03                                        ; local index
0000a3a: 41                                        ; i32.const
0000a3b: 00                                        ; i32 literal
0000a3c: 6a                                        ; i32.add
0000a3d: 28                                        ; i32.load
0000a3e: 02                                        ; alignment
0000a3f: 00                                        ; load offset
0000a40: 21                                        ; local.set
0000a41: 03                                        ; local index
0000a42: 0c                                        ; br
0000a43: 00                                        ; break depth
0000a44: 0b                                        ; end
0000a45: 0b                                        ; end
0000a46: 20                                        ; local.get
0000a47: 02                                        ; local index
0000a48: 41                                        ; i32.const
0000a49: 01                                        ; i32 literal
0000a4a: 6a                                        ; i32.add
0000a4b: 21                                        ; local.set
0000a4c: 02                                        ; local index
0000a4d: 0c                                        ; br
0000a4e: 00                                        ; break depth
0000a4f: 0b                                        ; end
0000a50: 0b                                        ; end
0000a51: 20                                        ; local.get
0000a52: 00                                        ; local index
0000a53: 41                                        ; i32.const
0000a54: 01                                        ; i32 literal
0000a55: 6a                                        ; i32.add
0000a56: 21                                        ; local.set
0000a57: 00                                        ; local index
0000a58: 0c                                        ; br
0000a59: 00                                        ; break depth
0000a5a: 0b                                        ; end
0000a5b: 0b                                        ; end
0000a5c: 0b                                        ; end
; move data: [786, a5d) -> [787, a5e)
0000785: d705                                      ; FIXUP func body size
; function body 6
0000a5e: 00                                        ; func body size (guess)
0000a5f: 00                                        ; local decl count
0000a60: 10                                        ; call
0000a61: 0a                                        ; function index
0000a62: 20                                        ; local.get
0000a63: 00                                        ; local index
0000a64: 20                                        ; local.get
0000a65: 01                                        ; local index
0000a66: 10                                        ; call
0000a67: 0b                                        ; function index
0000a68: 10                                        ; call
0000a69: 0c                                        ; function index
0000a6a: 0b                                        ; end
0000a5e: 0c                                        ; FIXUP func body size
; function body 7
0000a6b: 00                                        ; func body size (guess)
0000a6c: 01                                        ; local decl count
0000a6d: 02                                        ; local type count
0000a6e: 7f                                        ; i32
0000a6f: 20                                        ; local.get
0000a70: 00                                        ; local index
0000a71: 20                                        ; local.get
0000a72: 02                                        ; local index
0000a73: 92                                        ; f32.add
0000a74: 20                                        ; local.get
0000a75: 03                                        ; local index
0000a76: 20                                        ; local.get
0000a77: 05                                        ; local index
0000a78: 93                                        ; f32.sub
0000a79: 5d                                        ; f32.lt
0000a7a: 20                                        ; local.get
0000a7b: 00                                        ; local index
0000a7c: 20                                        ; local.get
0000a7d: 02                                        ; local index
0000a7e: 93                                        ; f32.sub
0000a7f: 20                                        ; local.get
0000a80: 03                                        ; local index
0000a81: 20                                        ; local.get
0000a82: 05                                        ; local index
0000a83: 92                                        ; f32.add
0000a84: 5e                                        ; f32.gt
0000a85: 6a                                        ; i32.add
0000a86: 20                                        ; local.get
0000a87: 01                                        ; local index
0000a88: 20                                        ; local.get
0000a89: 02                                        ; local index
0000a8a: 92                                        ; f32.add
0000a8b: 20                                        ; local.get
0000a8c: 04                                        ; local index
0000a8d: 20                                        ; local.get
0000a8e: 05                                        ; local index
0000a8f: 93                                        ; f32.sub
0000a90: 5d                                        ; f32.lt
0000a91: 6a                                        ; i32.add
0000a92: 20                                        ; local.get
0000a93: 01                                        ; local index
0000a94: 20                                        ; local.get
0000a95: 02                                        ; local index
0000a96: 93                                        ; f32.sub
0000a97: 20                                        ; local.get
0000a98: 04                                        ; local index
0000a99: 20                                        ; local.get
0000a9a: 05                                        ; local index
0000a9b: 92                                        ; f32.add
0000a9c: 5e                                        ; f32.gt
0000a9d: 6a                                        ; i32.add
0000a9e: 04                                        ; if
0000a9f: 40                                        ; void
0000aa0: 41                                        ; i32.const
0000aa1: 00                                        ; i32 literal
0000aa2: 0f                                        ; return
0000aa3: 0b                                        ; end
0000aa4: 20                                        ; local.get
0000aa5: 03                                        ; local index
0000aa6: 20                                        ; local.get
0000aa7: 00                                        ; local index
0000aa8: 93                                        ; f32.sub
0000aa9: bb                                        ; f64.promote_f32
0000aaa: 41                                        ; i32.const
0000aab: 02                                        ; i32 literal
0000aac: b2                                        ; f32.convert_i32_s
0000aad: bb                                        ; f64.promote_f32
0000aae: 10                                        ; call
0000aaf: 00                                        ; function index
0000ab0: 20                                        ; local.get
0000ab1: 04                                        ; local index
0000ab2: 20                                        ; local.get
0000ab3: 01                                        ; local index
0000ab4: 93                                        ; f32.sub
0000ab5: bb                                        ; f64.promote_f32
0000ab6: 41                                        ; i32.const
0000ab7: 02                                        ; i32 literal
0000ab8: b2                                        ; f32.convert_i32_s
0000ab9: bb                                        ; f64.promote_f32
0000aba: 10                                        ; call
0000abb: 00                                        ; function index
0000abc: a0                                        ; f64.add
0000abd: 10                                        ; call
0000abe: 01                                        ; function index
0000abf: 20                                        ; local.get
0000ac0: 02                                        ; local index
0000ac1: 20                                        ; local.get
0000ac2: 05                                        ; local index
0000ac3: 92                                        ; f32.add
0000ac4: bb                                        ; f64.promote_f32
0000ac5: 65                                        ; f64.le
0000ac6: 0f                                        ; return
0000ac7: 0b                                        ; end
0000a6b: 5c                                        ; FIXUP func body size
; function body 8
0000ac8: 00                                        ; func body size (guess)
0000ac9: 00                                        ; local decl count
0000aca: 41                                        ; i32.const
0000acb: be07                                      ; i32 literal
0000acd: 0f                                        ; return
0000ace: 0b                                        ; end
0000ac8: 06                                        ; FIXUP func body size
; function body 9
0000acf: 00                                        ; func body size (guess)
0000ad0: 00                                        ; local decl count
0000ad1: 41                                        ; i32.const
0000ad2: c907                                      ; i32 literal
0000ad4: 0f                                        ; return
0000ad5: 0b                                        ; end
0000acf: 06                                        ; FIXUP func body size
; function body 10
0000ad6: 00                                        ; func body size (guess)
0000ad7: 00                                        ; local decl count
0000ad8: 41                                        ; i32.const
0000ad9: 9a08                                      ; i32 literal
0000adb: 0f                                        ; return
0000adc: 0b                                        ; end
0000ad6: 06                                        ; FIXUP func body size
; function body 11
0000add: 00                                        ; func body size (guess)
0000ade: 00                                        ; local decl count
0000adf: 41                                        ; i32.const
0000ae0: 9e08                                      ; i32 literal
0000ae2: 0f                                        ; return
0000ae3: 0b                                        ; end
0000add: 06                                        ; FIXUP func body size
; function body 12
0000ae4: 00                                        ; func body size (guess)
0000ae5: 00                                        ; local decl count
0000ae6: 41                                        ; i32.const
0000ae7: a908                                      ; i32 literal
0000ae9: 0f                                        ; return
0000aea: 0b                                        ; end
0000ae4: 06                                        ; FIXUP func body size
; function body 13
0000aeb: 00                                        ; func body size (guess)
0000aec: 00                                        ; local decl count
0000aed: 41                                        ; i32.const
0000aee: ef08                                      ; i32 literal
0000af0: 0f                                        ; return
0000af1: 0b                                        ; end
0000aeb: 06                                        ; FIXUP func body size
; function body 14
0000af2: 00                                        ; func body size (guess)
0000af3: 00                                        ; local decl count
0000af4: 41                                        ; i32.const
0000af5: fd08                                      ; i32 literal
0000af7: 0f                                        ; return
0000af8: 0b                                        ; end
0000af2: 06                                        ; FIXUP func body size
; function body 15
0000af9: 00                                        ; func body size (guess)
0000afa: 00                                        ; local decl count
0000afb: 41                                        ; i32.const
0000afc: a209                                      ; i32 literal
0000afe: 0f                                        ; return
0000aff: 0b                                        ; end
0000af9: 06                                        ; FIXUP func body size
; function body 16
0000b00: 00                                        ; func body size (guess)
0000b01: 00                                        ; local decl count
0000b02: 41                                        ; i32.const
0000b03: aa09                                      ; i32 literal
0000b05: 0f                                        ; return
0000b06: 0b                                        ; end
0000b00: 06                                        ; FIXUP func body size
; function body 17
0000b07: 00                                        ; func body size (guess)
0000b08: 00                                        ; local decl count
0000b09: 10                                        ; call
0000b0a: 19                                        ; function index
0000b0b: 10                                        ; call
0000b0c: 1a                                        ; function index
0000b0d: 10                                        ; call
0000b0e: 1b                                        ; function index
0000b0f: 10                                        ; call
0000b10: 1c                                        ; function index
0000b11: 0b                                        ; end
0000b07: 0a                                        ; FIXUP func body size
; function body 18
0000b12: 00                                        ; func body size (guess)
0000b13: 01                                        ; local decl count
0000b14: 04                                        ; local type count
0000b15: 7f                                        ; i32
0000b16: 23                                        ; global.get
0000b17: 00                                        ; global index
0000b18: 41                                        ; i32.const
0000b19: 0b                                        ; i32 literal
0000b1a: 36                                        ; i32.store
0000b1b: 02                                        ; alignment
0000b1c: 00                                        ; store offset
0000b1d: 23                                        ; global.get
0000b1e: 00                                        ; global index
0000b1f: 41                                        ; i32.const
0000b20: 04                                        ; i32 literal
0000b21: 6a                                        ; i32.add
0000b22: 23                                        ; global.get
0000b23: 0d                                        ; global index
0000b24: 41                                        ; i32.const
0000b25: 01                                        ; i32 literal
0000b26: 6b                                        ; i32.sub
0000b27: 36                                        ; i32.store
0000b28: 02                                        ; alignment
0000b29: 00                                        ; store offset
0000b2a: 23                                        ; global.get
0000b2b: 00                                        ; global index
0000b2c: 41                                        ; i32.const
0000b2d: 08                                        ; i32 literal
0000b2e: 6a                                        ; i32.add
0000b2f: 21                                        ; local.set
0000b30: 00                                        ; local index
0000b31: 20                                        ; local.get
0000b32: 00                                        ; local index
0000b33: 41                                        ; i32.const
0000b34: 78                                        ; i32 literal
0000b35: 6a                                        ; i32.add
0000b36: 41                                        ; i32.const
0000b37: 08                                        ; i32 literal
0000b38: 23                                        ; global.get
0000b39: 0d                                        ; global index
0000b3a: 41                                        ; i32.const
0000b3b: 01                                        ; i32 literal
0000b3c: 6b                                        ; i32.sub
0000b3d: 41                                        ; i32.const
0000b3e: 04                                        ; i32 literal
0000b3f: 6c                                        ; i32.mul
0000b40: 6a                                        ; i32.add
0000b41: 6a                                        ; i32.add
0000b42: 24                                        ; global.set
0000b43: 00                                        ; global index
0000b44: 20                                        ; local.get
0000b45: 00                                        ; local index
0000b46: 41                                        ; i32.const
0000b47: 78                                        ; i32 literal
0000b48: 6a                                        ; i32.add
0000b49: 24                                        ; global.set
0000b4a: 0e                                        ; global index
0000b4b: 23                                        ; global.get
0000b4c: 00                                        ; global index
0000b4d: 41                                        ; i32.const
0000b4e: dc02                                      ; i32 literal
0000b50: 36                                        ; i32.store
0000b51: 02                                        ; alignment
0000b52: 00                                        ; store offset
0000b53: 23                                        ; global.get
0000b54: 00                                        ; global index
0000b55: 41                                        ; i32.const
0000b56: 04                                        ; i32 literal
0000b57: 6a                                        ; i32.add
0000b58: 23                                        ; global.get
0000b59: 0d                                        ; global index
0000b5a: 41                                        ; i32.const
0000b5b: 01                                        ; i32 literal
0000b5c: 6b                                        ; i32.sub
0000b5d: 36                                        ; i32.store
0000b5e: 02                                        ; alignment
0000b5f: 00                                        ; store offset
0000b60: 23                                        ; global.get
0000b61: 00                                        ; global index
0000b62: 41                                        ; i32.const
0000b63: 08                                        ; i32 literal
0000b64: 6a                                        ; i32.add
0000b65: 21                                        ; local.set
0000b66: 01                                        ; local index
0000b67: 20                                        ; local.get
0000b68: 01                                        ; local index
0000b69: 41                                        ; i32.const
0000b6a: 78                                        ; i32 literal
0000b6b: 6a                                        ; i32.add
0000b6c: 41                                        ; i32.const
0000b6d: 08                                        ; i32 literal
0000b6e: 23                                        ; global.get
0000b6f: 0d                                        ; global index
0000b70: 41                                        ; i32.const
0000b71: 01                                        ; i32 literal
0000b72: 6b                                        ; i32.sub
0000b73: 41                                        ; i32.const
0000b74: 04                                        ; i32 literal
0000b75: 6c                                        ; i32.mul
0000b76: 6a                                        ; i32.add
0000b77: 6a                                        ; i32.add
0000b78: 24                                        ; global.set
0000b79: 00                                        ; global index
0000b7a: 20                                        ; local.get
0000b7b: 01                                        ; local index
0000b7c: 41                                        ; i32.const
0000b7d: 78                                        ; i32 literal
0000b7e: 6a                                        ; i32.add
0000b7f: 24                                        ; global.set
0000b80: 0f                                        ; global index
0000b81: 23                                        ; global.get
0000b82: 00                                        ; global index
0000b83: 41                                        ; i32.const
0000b84: fd04                                      ; i32 literal
0000b86: 36                                        ; i32.store
0000b87: 02                                        ; alignment
0000b88: 00                                        ; store offset
0000b89: 23                                        ; global.get
0000b8a: 00                                        ; global index
0000b8b: 41                                        ; i32.const
0000b8c: 04                                        ; i32 literal
0000b8d: 6a                                        ; i32.add
0000b8e: 23                                        ; global.get
0000b8f: 0d                                        ; global index
0000b90: 41                                        ; i32.const
0000b91: 04                                        ; i32 literal
0000b92: 6c                                        ; i32.mul
0000b93: 41                                        ; i32.const
0000b94: 01                                        ; i32 literal
0000b95: 6b                                        ; i32.sub
0000b96: 36                                        ; i32.store
0000b97: 02                                        ; alignment
0000b98: 00                                        ; store offset
0000b99: 23                                        ; global.get
0000b9a: 00                                        ; global index
0000b9b: 41                                        ; i32.const
0000b9c: 08                                        ; i32 literal
0000b9d: 6a                                        ; i32.add
0000b9e: 21                                        ; local.set
0000b9f: 02                                        ; local index
0000ba0: 20                                        ; local.get
0000ba1: 02                                        ; local index
0000ba2: 41                                        ; i32.const
0000ba3: 78                                        ; i32 literal
0000ba4: 6a                                        ; i32.add
0000ba5: 41                                        ; i32.const
0000ba6: 08                                        ; i32 literal
0000ba7: 23                                        ; global.get
0000ba8: 0d                                        ; global index
0000ba9: 41                                        ; i32.const
0000baa: 04                                        ; i32 literal
0000bab: 6c                                        ; i32.mul
0000bac: 41                                        ; i32.const
0000bad: 01                                        ; i32 literal
0000bae: 6b                                        ; i32.sub
0000baf: 41                                        ; i32.const
0000bb0: 04                                        ; i32 literal
0000bb1: 6c                                        ; i32.mul
0000bb2: 6a                                        ; i32.add
0000bb3: 6a                                        ; i32.add
0000bb4: 24                                        ; global.set
0000bb5: 00                                        ; global index
0000bb6: 20                                        ; local.get
0000bb7: 02                                        ; local index
0000bb8: 41                                        ; i32.const
0000bb9: 78                                        ; i32 literal
0000bba: 6a                                        ; i32.add
0000bbb: 24                                        ; global.set
0000bbc: 10                                        ; global index
0000bbd: 23                                        ; global.get
0000bbe: 00                                        ; global index
0000bbf: 41                                        ; i32.const
0000bc0: fd04                                      ; i32 literal
0000bc2: 36                                        ; i32.store
0000bc3: 02                                        ; alignment
0000bc4: 00                                        ; store offset
0000bc5: 23                                        ; global.get
0000bc6: 00                                        ; global index
0000bc7: 41                                        ; i32.const
0000bc8: 04                                        ; i32 literal
0000bc9: 6a                                        ; i32.add
0000bca: 23                                        ; global.get
0000bcb: 0c                                        ; global index
0000bcc: 41                                        ; i32.const
0000bcd: 01                                        ; i32 literal
0000bce: 6b                                        ; i32.sub
0000bcf: 36                                        ; i32.store
0000bd0: 02                                        ; alignment
0000bd1: 00                                        ; store offset
0000bd2: 23                                        ; global.get
0000bd3: 00                                        ; global index
0000bd4: 41                                        ; i32.const
0000bd5: 08                                        ; i32 literal
0000bd6: 6a                                        ; i32.add
0000bd7: 21                                        ; local.set
0000bd8: 03                                        ; local index
0000bd9: 20                                        ; local.get
0000bda: 03                                        ; local index
0000bdb: 41                                        ; i32.const
0000bdc: 78                                        ; i32 literal
0000bdd: 6a                                        ; i32.add
0000bde: 41                                        ; i32.const
0000bdf: 08                                        ; i32 literal
0000be0: 23                                        ; global.get
0000be1: 0c                                        ; global index
0000be2: 41                                        ; i32.const
0000be3: 01                                        ; i32 literal
0000be4: 6b                                        ; i32.sub
0000be5: 41                                        ; i32.const
0000be6: 04                                        ; i32 literal
0000be7: 6c                                        ; i32.mul
0000be8: 6a                                        ; i32.add
0000be9: 6a                                        ; i32.add
0000bea: 24                                        ; global.set
0000beb: 00                                        ; global index
0000bec: 20                                        ; local.get
0000bed: 03                                        ; local index
0000bee: 41                                        ; i32.const
0000bef: 78                                        ; i32 literal
0000bf0: 6a                                        ; i32.add
0000bf1: 24                                        ; global.set
0000bf2: 11                                        ; global index
0000bf3: 0b                                        ; end
; move data: [b13, bf4) -> [b14, bf5)
0000b12: e101                                      ; FIXUP func body size
; function body 19
0000bf5: 00                                        ; func body size (guess)
0000bf6: 00                                        ; local decl count
0000bf7: 0b                                        ; end
0000bf5: 02                                        ; FIXUP func body size
; function body 20
0000bf8: 00                                        ; func body size (guess)
0000bf9: 01                                        ; local decl count
0000bfa: 02                                        ; local type count
0000bfb: 7f                                        ; i32
0000bfc: 41                                        ; i32.const
0000bfd: 00                                        ; i32 literal
0000bfe: 21                                        ; local.set
0000bff: 00                                        ; local index
0000c00: 02                                        ; block
0000c01: 40                                        ; void
0000c02: 03                                        ; loop
0000c03: 40                                        ; void
0000c04: 20                                        ; local.get
0000c05: 00                                        ; local index
0000c06: 23                                        ; global.get
0000c07: 11                                        ; global index
0000c08: 41                                        ; i32.const
0000c09: 04                                        ; i32 literal
0000c0a: 6a                                        ; i32.add
0000c0b: 28                                        ; i32.load
0000c0c: 02                                        ; alignment
0000c0d: 00                                        ; load offset
0000c0e: 41                                        ; i32.const
0000c0f: 01                                        ; i32 literal
0000c10: 6b                                        ; i32.sub
0000c11: 4a                                        ; i32.gt_s
0000c12: 0d                                        ; br_if
0000c13: 01                                        ; break depth
0000c14: 23                                        ; global.get
0000c15: 11                                        ; global index
0000c16: 41                                        ; i32.const
0000c17: 08                                        ; i32 literal
0000c18: 6a                                        ; i32.add
0000c19: 20                                        ; local.get
0000c1a: 00                                        ; local index
0000c1b: 41                                        ; i32.const
0000c1c: 04                                        ; i32 literal
0000c1d: 6c                                        ; i32.mul
0000c1e: 6a                                        ; i32.add
0000c1f: 20                                        ; local.get
0000c20: 01                                        ; local index
0000c21: 41                                        ; i32.const
0000c22: 78                                        ; i32 literal
0000c23: 6a                                        ; i32.add
0000c24: 36                                        ; i32.store
0000c25: 02                                        ; alignment
0000c26: 00                                        ; store offset
0000c27: 20                                        ; local.get
0000c28: 00                                        ; local index
0000c29: 41                                        ; i32.const
0000c2a: 01                                        ; i32 literal
0000c2b: 6a                                        ; i32.add
0000c2c: 21                                        ; local.set
0000c2d: 00                                        ; local index
0000c2e: 0c                                        ; br
0000c2f: 00                                        ; break depth
0000c30: 0b                                        ; end
0000c31: 0b                                        ; end
0000c32: 0b                                        ; end
0000bf8: 3a                                        ; FIXUP func body size
; function body 21
0000c33: 00                                        ; func body size (guess)
0000c34: 00                                        ; local decl count
0000c35: 0b                                        ; end
0000c33: 02                                        ; FIXUP func body size
; move data: [2ee, c36) -> [2ef, c37)
00002ed: c812                                      ; FIXUP section size
; section "Data" (11)
0000c37: 0b                                        ; section code
0000c38: 00                                        ; section size (guess)
0000c39: 0c                                        ; num data segments
; data segment header 0
0000c3a: 00                                      
0000c3b: 41                                        ; i32.const
0000c3c: be07                                      ; i32 literal
0000c3e: 0b                                        ; end
0000c3f: 0b                                        ; data segment size
; data segment data 0
0000c40: 5765 6247 4c2d 4465 6d6f 00               ; data segment data
; data segment header 1
0000c4b: 00                                      
0000c4c: 41                                        ; i32.const
0000c4d: c907                                      ; i32 literal
0000c4f: 0b                                        ; end
0000c50: 51                                        ; data segment size
; data segment data 1
0000c51: 5765 6241 7373 656d 626c 7920 636f 6e76 
0000c61: 6572 7369 6f6e 2064 656d 6f6e 7374 7261 
0000c71: 7469 6e67 2074 6865 2066 6173 7465 722d 
0000c81: 7065 7266 6f72 6d69 6e67 2067 7269 6420 
0000c91: 6f66 206c 696e 6b65 642d 6c69 7374 732e 
0000ca1: 00                                        ; data segment data
; data segment header 2
0000ca2: 00                                      
0000ca3: 41                                        ; i32.const
0000ca4: 9a08                                      ; i32 literal
0000ca6: 0b                                        ; end
0000ca7: 04                                        ; data segment size
; data segment data 2
0000ca8: 4d49 5400                                 ; data segment data
; data segment header 3
0000cac: 00                                      
0000cad: 41                                        ; i32.const
0000cae: 9e08                                      ; i32 literal
0000cb0: 0b                                        ; end
0000cb1: 0b                                        ; data segment size
; data segment data 3
0000cb2: 5765 6247 4c2d 4465 6d6f 00               ; data segment data
; data segment header 4
0000cbd: 00                                      
0000cbe: 41                                        ; i32.const
0000cbf: a908                                      ; i32 literal
0000cc1: 0b                                        ; end
0000cc2: 46                                        ; data segment size
; data segment data 4
0000cc3: 6874 7470 733a 2f2f 6769 7468 7562 2e63 
0000cd3: 6f6d 2f67 7579 6265 6466 6f72 642f 7761 
0000ce3: 736d 2d64 656d 6f2f 626c 6f62 2f6d 6173 
0000cf3: 7465 722f 6e61 7469 7665 2f64 656d 6f2d 
0000d03: 6f70 742e 6300                            ; data segment data
; data segment header 5
0000d09: 00                                      
0000d0a: 41                                        ; i32.const
0000d0b: ef08                                      ; i32 literal
0000d0d: 0b                                        ; end
0000d0e: 0e                                        ; data segment size
; data segment data 5
0000d0f: 7661 6e69 6c6c 6176 622e 6170 7000        ; data segment data
; data segment header 6
0000d1d: 00                                      
0000d1e: 41                                        ; i32.const
0000d1f: fd08                                      ; i32 literal
0000d21: 0b                                        ; end
0000d22: 25                                        ; data segment size
; data segment data 6
0000d23: 3833 6361 3262 3933 2d34 6535 372d 3464 
0000d33: 3434 2d62 3262 632d 3136 3332 3532 6139 
0000d43: 3330 3564 00                              ; data segment data
; data segment header 7
0000d48: 00                                      
0000d49: 41                                        ; i32.const
0000d4a: a209                                      ; i32 literal
0000d4c: 0b                                        ; end
0000d4d: 08                                        ; data segment size
; data segment data 7
0000d4e: 312e 302e 302e 3000                       ; data segment data
; data segment header 8
0000d56: 00                                      
0000d57: 41                                        ; i32.const
0000d58: aa09                                      ; i32 literal
0000d5a: 0b                                        ; end
0000d5b: 08                                        ; data segment size
; data segment data 8
0000d5c: 312e 302e 302e 3000                       ; data segment data
; data segment header 9
0000d64: 00                                      
0000d65: 41                                        ; i32.const
0000d66: 0b                                        ; i32 literal
0000d67: 0b                                        ; end
0000d68: d102                                      ; data segment size
; data segment data 9
0000d6a: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000d7a: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
0000d8a: 6448 4969 4f6e 7369 566d 4673 6457 5569 
0000d9a: 4f6a 4578 6653 7769 5932 7868 6333 4d69 
0000daa: 4f69 4a44 6158 4a6a 6247 5569 4c43 4a6a 
0000dba: 6247 467a 6331 3970 5a43 4936 4d54 4573 
0000dca: 496d 5a70 5a57 786b 6379 4936 6579 4a34 
0000dda: 496a 7037 496d 646c 626d 5679 6157 4d69 
0000dea: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a6d 
0000dfa: 4d7a 4969 4c43 4a30 6558 426c 496a 6f7a 
0000e0a: 6653 7769 6553 4936 6579 4a6e 5a57 356c 
0000e1a: 636d 6c6a 496a 7062 5853 7769 636d 4633 
0000e2a: 496a 6f69 5a6a 4d79 4969 7769 6448 6c77 
0000e3a: 5a53 4936 4d33 3073 496e 4969 4f6e 7369 
0000e4a: 5a32 5675 5a58 4a70 5979 4936 5731 3073 
0000e5a: 496e 4a68 6479 4936 496d 597a 4d69 4973 
0000e6a: 496e 5235 6347 5569 4f6a 4e39 6653 7769 
0000e7a: 6158 4e54 6448 4a31 5933 5169 4f6d 5a68 
0000e8a: 6248 4e6c 4c43 4a74 5a58 526f 6232 527a 
0000e9a: 496a 7037 6653 7769 626d 4674 5a58 4e77 
0000eaa: 5957 4e6c 496a 7075 6457 7873 6651 3d3d 
0000eba: 00                                        ; data segment data
; data segment header 10
0000ebb: 00                                      
0000ebc: 41                                        ; i32.const
0000ebd: dc02                                      ; i32 literal
0000ebf: 0b                                        ; end
0000ec0: a102                                      ; data segment size
; data segment data 10
0000ec2: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000ed2: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
0000ee2: 6448 4969 4f6e 7369 566d 4673 6457 5569 
0000ef2: 4f6a 4d30 4f48 3073 496d 4e73 5958 4e7a 
0000f02: 496a 6f69 5132 6c79 5932 786c 5669 4973 
0000f12: 496d 4e73 5958 4e7a 5832 6c6b 496a 6f7a 
0000f22: 4e44 6773 496d 5a70 5a57 786b 6379 4936 
0000f32: 6579 4a32 6553 4936 6579 4a6e 5a57 356c 
0000f42: 636d 6c6a 496a 7062 5853 7769 636d 4633 
0000f52: 496a 6f69 5a6a 4d79 4969 7769 6448 6c77 
0000f62: 5a53 4936 4d33 3073 496e 5a34 496a 7037 
0000f72: 496d 646c 626d 5679 6157 4d69 4f6c 7464 
0000f82: 4c43 4a79 5958 6369 4f69 4a6d 4d7a 4969 
0000f92: 4c43 4a30 6558 426c 496a 6f7a 6658 3073 
0000fa2: 496d 6c7a 5533 5279 6457 4e30 496a 706d 
0000fb2: 5957 787a 5a53 7769 6257 5630 6147 396b 
0000fc2: 6379 4936 6533 3073 496d 3568 6257 567a 
0000fd2: 6347 466a 5a53 4936 626e 5673 6248 303d 
0000fe2: 00                                        ; data segment data
; data segment header 11
0000fe3: 00                                      
0000fe4: 41                                        ; i32.const
0000fe5: fd04                                      ; i32 literal
0000fe7: 0b                                        ; end
0000fe8: c502                                      ; data segment size
; data segment data 11
0000fea: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000ffa: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
000100a: 6448 4969 4f6e 7369 566d 4673 6457 5569 
000101a: 4f6a 597a 4e33 3073 496d 4e73 5958 4e7a 
000102a: 496a 6f69 5132 5673 6245 4e70 636d 4e73 
000103a: 5a53 4973 496d 4e73 5958 4e7a 5832 6c6b 
000104a: 496a 6f32 4d7a 6373 496d 5a70 5a57 786b 
000105a: 6379 4936 6579 4a75 5a58 6830 496a 7037 
000106a: 496d 646c 626d 5679 6157 4d69 4f6c 7464 
000107a: 4c43 4a79 5958 6369 4f69 4a62 4e6a 4d33 
000108a: 5855 4e6c 6247 7844 6158 4a6a 6247 5569 
000109a: 4c43 4a30 6558 426c 496a 6f78 4d48 3073 
00010aa: 496d 4e70 636d 4e73 5a55 6c75 5a47 5634 
00010ba: 496a 7037 496d 646c 626d 5679 6157 4d69 
00010ca: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a70 
00010da: 4d7a 4969 4c43 4a30 6558 426c 496a 6f78 
00010ea: 6658 3073 496d 6c7a 5533 5279 6457 4e30 
00010fa: 496a 706d 5957 787a 5a53 7769 6257 5630 
000110a: 6147 396b 6379 4936 6533 3073 496d 3568 
000111a: 6257 567a 6347 466a 5a53 4936 626e 5673 
000112a: 6248 303d 00                              ; data segment data
; move data: [c39, 112f) -> [c3a, 1130)
0000c38: f609                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0126 0760 027c 7c01 
0000010: 7c60 017c 017c 6000 017c 6000 017f 6002 
0000020: 7d7d 0060 0000 6006 7d7d 7d7d 7d7d 017f 
0000030: 0267 0804 4d61 7468 0370 6f77 0000 044d 
0000040: 6174 6804 7371 7274 0001 044d 6174 6803 
0000050: 6578 7000 0104 4d61 7468 0363 6f73 0001 
0000060: 044d 6174 6806 7261 6e64 6f6d 0002 044d 
0000070: 6174 6804 6365 696c 0001 044d 6174 6805 
0000080: 666c 6f6f 7200 0103 656e 760a 6279 7465 
0000090: 6368 756e 6b73 0200 0103 1716 0303 0405 
00000a0: 0405 0406 0303 0303 0303 0303 0305 0505 
00000b0: 0505 069c 0112 7f01 41b2 090b 7c01 4469 
00000c0: 5714 8b0a bf05 400b 7c01 4418 2d44 54fb 
00000d0: 2109 400b 7f01 41ff ffff ff07 0b7e 0142 
00000e0: ffff ffff ffff ffff ff00 0b7d 0143 ffff 
00000f0: 7f7f 0b7c 0144 ffff ffff ffff ef7f 0b7f 
0000100: 0141 8080 8080 780b 7e01 4280 8080 8080 
0000110: 8080 8080 7f0b 7d01 43ff ff7f ff0b 7c01 
0000120: 44ff ffff ffff ffef ff0b 7f01 41f8 000b 
0000130: 7f01 41c6 000b 7f01 4190 ce00 0b7f 0141 
0000140: 000b 7f01 4100 0b7f 0141 000b 7f01 4100 
0000150: 0b07 9503 0e18 416c 676f 7269 7468 6d2e 
0000160: 6765 7443 6972 636c 6543 6f75 6e74 0007 
0000170: 1d41 6c67 6f72 6974 686d 2e67 6574 4369 
0000180: 7263 6c65 4461 7461 4f66 6673 6574 0008 
0000190: 0e41 6c67 6f72 6974 686d 2e69 6e69 7400 
00001a0: 0912 416c 676f 7269 7468 6d2e 7469 6d65 
00001b0: 5374 6570 000d 1a4d 6174 682e 6465 7465 
00001c0: 6374 4369 7263 6c65 436f 6c6c 6973 696f 
00001d0: 6e00 0e1a 4173 7365 6d62 6c79 496e 666f 
00001e0: 2e41 7373 656d 626c 7954 6974 6c65 000f 
00001f0: 2041 7373 656d 626c 7949 6e66 6f2e 4173 
0000200: 7365 6d62 6c79 4465 7363 7269 7074 696f 
0000210: 6e00 101c 4173 7365 6d62 6c79 496e 666f 
0000220: 2e41 7373 656d 626c 7943 6f6d 7061 6e79 
0000230: 0011 1c41 7373 656d 626c 7949 6e66 6f2e 
0000240: 4173 7365 6d62 6c79 5072 6f64 7563 7400 
0000250: 121e 4173 7365 6d62 6c79 496e 666f 2e41 
0000260: 7373 656d 626c 7943 6f70 7972 6967 6874 
0000270: 0013 1e41 7373 656d 626c 7949 6e66 6f2e 
0000280: 4173 7365 6d62 6c79 5472 6164 656d 6172 
0000290: 6b00 1411 4173 7365 6d62 6c79 496e 666f 
00002a0: 2e47 7569 6400 151c 4173 7365 6d62 6c79 
00002b0: 496e 666f 2e41 7373 656d 626c 7956 6572 
00002c0: 7369 6f6e 0016 2041 7373 656d 626c 7949 
00002d0: 6e66 6f2e 4173 7365 6d62 6c79 4669 6c65 
00002e0: 5665 7273 696f 6e00 1708 0118 0ac8 1216 
00002f0: 0701 047f 230d 0f0b 0500 230e 0f0b b103 
0000300: 0302 7f03 7d01 7f41 0021 0202 4003 4020 
0000310: 0223 0d41 016b 4a0d 0141 0021 0343 0000 
0000320: 0000 2104 4300 0000 0021 0543 0000 0000 
0000330: 2106 0240 0340 4100 2103 2000 bb10 04a2 
0000340: b621 0420 01bb 1004 a2b6 2105 1004 4108 
0000350: b7a2 1002 44ee 5a42 3ee8 4937 40a3 1005 
0000360: b621 0620 0020 0420 0692 9341 00b2 5d20 
0000370: 0420 0693 4100 b25d 6a20 0120 0520 0692 
0000380: 9341 00b2 5d6a 2005 2006 9341 00b2 5d6a 
0000390: 0440 4101 2103 0541 0021 0702 4003 4020 
00003a0: 0720 0241 016b 4a0d 0120 0420 0520 0623 
00003b0: 0e41 086a 2007 4104 6c6a 2802 0041 006a 
00003c0: 2a02 0023 0e41 086a 2007 4104 6c6a 2802 
00003d0: 0041 046a 2a02 0023 0e41 086a 2007 4104 
00003e0: 6c6a 2802 0041 086a 2a02 0010 0e04 4041 
00003f0: 0121 0341 010d 050b 2007 4101 6a21 070c 
0000400: 000b 0b0b 2003 450d 010c 000b 0b23 0e41 
0000410: 086a 2002 4104 6c6a 2802 0041 006a 2004 
0000420: 3802 0023 0e41 086a 2002 4104 6c6a 2802 
0000430: 0041 046a 2005 3802 0023 0e41 086a 2002 
0000440: 4104 6c6a 2802 0041 086a 2006 3802 0023 
0000450: 0f41 086a 2002 4104 6c6a 2802 0041 046a 
0000460: 1004 4400 0000 0000 00e0 3fa1 449a 9999 
0000470: 9999 99b9 3fa2 b638 0200 230f 4108 6a20 
0000480: 0241 046c 6a28 0200 4100 6a10 0444 0000 
0000490: 0000 0000 e03f a144 9a99 9999 9999 b93f 
00004a0: a2b6 3802 0020 0241 016a 2102 0c00 0b0b 
00004b0: 0b5e 0103 7f41 0021 0002 4003 4020 0023 
00004c0: 0c41 016b 4a0d 0123 1141 086a 2000 4104 
00004d0: 6c6a 2802 0021 0141 0021 0202 4003 4020 
00004e0: 0223 0b41 016b 4a0d 0120 0141 086a 2002 
00004f0: 4104 6c6a 4100 3602 0020 0241 016a 2102 
0000500: 0c00 0b0b 2000 4101 6a21 000c 000b 0b0b 
0000510: f404 0302 7f05 7d08 7f41 0021 0241 0021 
0000520: 0302 4003 4020 0323 0d41 016b 4a0d 0123 
0000530: 0e41 086a 2003 4104 6c6a 2802 0041 006a 
0000540: 2a02 0021 0423 0e41 086a 2003 4104 6c6a 
0000550: 2802 0041 046a 2a02 0021 0523 0e41 086a 
0000560: 2003 4104 6c6a 2802 0041 086a 2a02 0021 
0000570: 0623 0f41 086a 2003 4104 6c6a 2802 0041 
0000580: 046a 2a02 0021 0723 0f41 086a 2003 4104 
0000590: 6c6a 2802 0041 006a 2a02 0021 0820 08bb 
00005a0: 442d 431c ebe2 361a 3fa0 b621 0820 0020 
00005b0: 0420 0692 9341 00b2 5d20 0741 00b2 5e6c 
00005c0: 2004 2006 9341 00b2 5d20 0741 00b2 5d6c 
00005d0: 6a04 4043 0000 0000 2007 9321 070b 2001 
00005e0: 2005 2006 9293 4100 b25d 2008 4100 b25e 
00005f0: 6c20 0520 0693 4100 b25d 2008 4100 b25d 
0000600: 6c6a 0440 4300 0000 0020 0893 2108 0b23 
0000610: 0e41 086a 2003 4104 6c6a 2802 0041 006a 
0000620: 2004 2007 9238 0200 230e 4108 6a20 0341 
0000630: 046c 6a28 0200 4104 6a20 0520 0892 3802 
0000640: 0023 0f41 086a 2003 4104 6c6a 2802 0041 
0000650: 046a 2007 3802 0023 0f41 086a 2003 4104 
0000660: 6c6a 2802 0041 006a 2008 3802 0020 0420 
0000670: 0693 bb20 00bb a323 0cb7 a210 06aa 2109 
0000680: 2004 2006 92bb 2000 bba3 230c b7a2 1006 
0000690: aa21 0a20 0520 0693 bb20 01bb a323 0bb7 
00006a0: a210 06aa 210b 2005 2006 92bb 2001 bba3 
00006b0: 230b b7a2 1006 aa21 0c20 0941 0048 0440 
00006c0: 4100 2109 0b20 0a23 0c4e 0440 230c 4101 
00006d0: 6b21 0a0b 200b 4100 4804 4041 0021 0b0b 
00006e0: 200c 230b 4e04 4023 0b41 016b 210c 0b20 
00006f0: 0921 0d02 4003 4020 0d20 0a4a 0d01 2311 
0000700: 4108 6a20 0d41 046c 6a28 0200 210e 200b 
0000710: 210f 0240 0340 200f 200c 4a0d 0123 1041 
0000720: 086a 2002 4104 6c6a 2802 0021 1020 0241 
0000730: 016a 2102 2010 4104 6a20 0336 0200 2010 
0000740: 4100 6a20 0e41 086a 200f 4104 6c6a 2802 
0000750: 0036 0200 200e 4108 6a20 0f41 046c 6a20 
0000760: 1036 0200 200f 4101 6a21 0f0c 000b 0b20 
0000770: 0d41 016a 210d 0c00 0b0b 2003 4101 6a21 
0000780: 030c 000b 0b0b d705 0705 7f05 7d02 7f07 
0000790: 7d01 7c04 7d04 7c41 0021 0002 4003 4020 
00007a0: 0023 0c41 016b 4a0d 0123 1141 086a 2000 
00007b0: 4104 6c6a 2802 0021 0141 0021 0202 4003 
00007c0: 4020 0223 0b41 016b 4a0d 0120 0141 086a 
00007d0: 2002 4104 6c6a 2802 0021 0302 4003 4020 
00007e0: 0341 0046 4545 0d01 2003 4104 6a28 0200 
00007f0: 2104 230e 4108 6a20 0441 046c 6a28 0200 
0000800: 4100 6a2a 0200 2105 230e 4108 6a20 0441 
0000810: 046c 6a28 0200 4104 6a2a 0200 2106 230e 
0000820: 4108 6a20 0441 046c 6a28 0200 4108 6a2a 
0000830: 0200 2107 230f 4108 6a20 0441 046c 6a28 
0000840: 0200 4104 6a2a 0200 2108 230f 4108 6a20 
0000850: 0441 046c 6a28 0200 4100 6a2a 0200 2109 
0000860: 2003 210a 200a 4100 6a28 0200 210a 0240 
0000870: 0340 200a 4100 4645 450d 0120 0a41 046a 
0000880: 2802 0021 0b23 0e41 086a 200b 4104 6c6a 
0000890: 2802 0041 006a 2a02 0021 0c23 0e41 086a 
00008a0: 200b 4104 6c6a 2802 0041 046a 2a02 0021 
00008b0: 0d23 0e41 086a 200b 4104 6c6a 2802 0041 
00008c0: 086a 2a02 0021 0e20 0520 0620 0720 0c20 
00008d0: 0d20 0e10 0e04 4023 0f41 086a 200b 4104 
00008e0: 6c6a 2802 0041 046a 2a02 0021 0f23 0f41 
00008f0: 086a 200b 4104 6c6a 2802 0041 006a 2a02 
0000900: 0021 1020 0c20 0593 2111 200d 2006 9321 
0000910: 1220 1120 1194 2012 2012 9492 bb10 0121 
0000920: 1320 11bb 2013 a3b6 2111 2012 bb20 13a3 
0000930: b621 1220 1120 0894 2012 2009 9492 2114 
0000940: 2011 200f 9420 1220 1094 9221 1520 1420 
0000950: 1593 4100 b25f 4504 4020 0720 0e92 2116 
0000960: 2007 200e 9321 1720 1420 1794 4102 b220 
0000970: 0e94 2015 9492 bb20 16bb a321 1841 02b2 
0000980: 2007 9420 1494 2015 2017 9493 bb20 16bb 
0000990: a321 1920 1820 14bb a121 1a20 1920 15bb 
00009a0: a121 1b23 0f41 086a 2004 4104 6c6a 2802 
00009b0: 0041 046a 2008 bb20 11bb 201a a2a0 b638 
00009c0: 0200 230f 4108 6a20 0441 046c 6a28 0200 
00009d0: 4100 6a20 09bb 2012 bb20 1aa2 a0b6 3802 
00009e0: 0023 0f41 086a 200b 4104 6c6a 2802 0041 
00009f0: 046a 200f bb20 11bb 201b a2a0 b638 0200 
0000a00: 230f 4108 6a20 0b41 046c 6a28 0200 4100 
0000a10: 6a20 10bb 2012 bb20 1ba2 a0b6 3802 0020 
0000a20: 0a41 006a 2802 0021 0a0b 0520 0a41 006a 
0000a30: 2802 0021 0a0b 0c00 0b0b 2003 4100 6a28 
0000a40: 0200 2103 0c00 0b0b 2002 4101 6a21 020c 
0000a50: 000b 0b20 0041 016a 2100 0c00 0b0b 0b0c 
0000a60: 0010 0a20 0020 0110 0b10 0c0b 5c01 027f 
0000a70: 2000 2002 9220 0320 0593 5d20 0020 0293 
0000a80: 2003 2005 925e 6a20 0120 0292 2004 2005 
0000a90: 935d 6a20 0120 0293 2004 2005 925e 6a04 
0000aa0: 4041 000f 0b20 0320 0093 bb41 02b2 bb10 
0000ab0: 0020 0420 0193 bb41 02b2 bb10 00a0 1001 
0000ac0: 2002 2005 92bb 650f 0b06 0041 be07 0f0b 
0000ad0: 0600 41c9 070f 0b06 0041 9a08 0f0b 0600 
0000ae0: 419e 080f 0b06 0041 a908 0f0b 0600 41ef 
0000af0: 080f 0b06 0041 fd08 0f0b 0600 41a2 090f 
0000b00: 0b06 0041 aa09 0f0b 0a00 1019 101a 101b 
0000b10: 101c 0be1 0101 047f 2300 410b 3602 0023 
0000b20: 0041 046a 230d 4101 6b36 0200 2300 4108 
0000b30: 6a21 0020 0041 786a 4108 230d 4101 6b41 
0000b40: 046c 6a6a 2400 2000 4178 6a24 0e23 0041 
0000b50: dc02 3602 0023 0041 046a 230d 4101 6b36 
0000b60: 0200 2300 4108 6a21 0120 0141 786a 4108 
0000b70: 230d 4101 6b41 046c 6a6a 2400 2001 4178 
0000b80: 6a24 0f23 0041 fd04 3602 0023 0041 046a 
0000b90: 230d 4104 6c41 016b 3602 0023 0041 086a 
0000ba0: 2102 2002 4178 6a41 0823 0d41 046c 4101 
0000bb0: 6b41 046c 6a6a 2400 2002 4178 6a24 1023 
0000bc0: 0041 fd04 3602 0023 0041 046a 230c 4101 
0000bd0: 6b36 0200 2300 4108 6a21 0320 0341 786a 
0000be0: 4108 230c 4101 6b41 046c 6a6a 2400 2003 
0000bf0: 4178 6a24 110b 0200 0b3a 0102 7f41 0021 
0000c00: 0002 4003 4020 0023 1141 046a 2802 0041 
0000c10: 016b 4a0d 0123 1141 086a 2000 4104 6c6a 
0000c20: 2001 4178 6a36 0200 2000 4101 6a21 000c 
0000c30: 000b 0b0b 0200 0b0b f609 0c00 41be 070b 
0000c40: 0b57 6562 474c 2d44 656d 6f00 0041 c907 
0000c50: 0b51 5765 6241 7373 656d 626c 7920 636f 
0000c60: 6e76 6572 7369 6f6e 2064 656d 6f6e 7374 
0000c70: 7261 7469 6e67 2074 6865 2066 6173 7465 
0000c80: 722d 7065 7266 6f72 6d69 6e67 2067 7269 
0000c90: 6420 6f66 206c 696e 6b65 642d 6c69 7374 
0000ca0: 732e 0000 419a 080b 044d 4954 0000 419e 
0000cb0: 080b 0b57 6562 474c 2d44 656d 6f00 0041 
0000cc0: a908 0b46 6874 7470 733a 2f2f 6769 7468 
0000cd0: 7562 2e63 6f6d 2f67 7579 6265 6466 6f72 
0000ce0: 642f 7761 736d 2d64 656d 6f2f 626c 6f62 
0000cf0: 2f6d 6173 7465 722f 6e61 7469 7665 2f64 
0000d00: 656d 6f2d 6f70 742e 6300 0041 ef08 0b0e 
0000d10: 7661 6e69 6c6c 6176 622e 6170 7000 0041 
0000d20: fd08 0b25 3833 6361 3262 3933 2d34 6535 
0000d30: 372d 3464 3434 2d62 3262 632d 3136 3332 
0000d40: 3532 6139 3330 3564 0000 41a2 090b 0831 
0000d50: 2e30 2e30 2e30 0000 41aa 090b 0831 2e30 
0000d60: 2e30 2e30 0000 410b 0bd1 0265 794a 6a62 
0000d70: 3231 745a 5735 3049 6a70 7564 5778 734c 
0000d80: 434a 745a 5731 7663 6e6c 5164 4849 694f 
0000d90: 6e73 6956 6d46 7364 5755 694f 6a45 7866 
0000da0: 5377 6959 3278 6863 334d 694f 694a 4461 
0000db0: 584a 6a62 4755 694c 434a 6a62 4746 7a63 
0000dc0: 3139 705a 4349 364d 5445 7349 6d5a 705a 
0000dd0: 5778 6b63 7949 3665 794a 3449 6a70 3749 
0000de0: 6d64 6c62 6d56 7961 574d 694f 6c74 644c 
0000df0: 434a 7959 5863 694f 694a 6d4d 7a49 694c 
0000e00: 434a 3065 5842 6c49 6a6f 7a66 5377 6965 
0000e10: 5349 3665 794a 6e5a 5735 6c63 6d6c 6a49 
0000e20: 6a70 6258 5377 6963 6d46 3349 6a6f 695a 
0000e30: 6a4d 7949 6977 6964 486c 775a 5349 364d 
0000e40: 3330 7349 6e49 694f 6e73 695a 3256 755a 
0000e50: 584a 7059 7949 3657 3130 7349 6e4a 6864 
0000e60: 7949 3649 6d59 7a4d 6949 7349 6e52 3563 
0000e70: 4755 694f 6a4e 3966 5377 6961 584e 5464 
0000e80: 484a 3159 3351 694f 6d5a 6862 484e 6c4c 
0000e90: 434a 745a 5852 6f62 3252 7a49 6a70 3766 
0000ea0: 5377 6962 6d46 745a 584e 7759 574e 6c49 
0000eb0: 6a70 7564 5778 7366 513d 3d00 0041 dc02 
0000ec0: 0ba1 0265 794a 6a62 3231 745a 5735 3049 
0000ed0: 6a70 7564 5778 734c 434a 745a 5731 7663 
0000ee0: 6e6c 5164 4849 694f 6e73 6956 6d46 7364 
0000ef0: 5755 694f 6a4d 304f 4830 7349 6d4e 7359 
0000f00: 584e 7a49 6a6f 6951 326c 7959 3278 6c56 
0000f10: 6949 7349 6d4e 7359 584e 7a58 326c 6b49 
0000f20: 6a6f 7a4e 4467 7349 6d5a 705a 5778 6b63 
0000f30: 7949 3665 794a 3265 5349 3665 794a 6e5a 
0000f40: 5735 6c63 6d6c 6a49 6a70 6258 5377 6963 
0000f50: 6d46 3349 6a6f 695a 6a4d 7949 6977 6964 
0000f60: 486c 775a 5349 364d 3330 7349 6e5a 3449 
0000f70: 6a70 3749 6d64 6c62 6d56 7961 574d 694f 
0000f80: 6c74 644c 434a 7959 5863 694f 694a 6d4d 
0000f90: 7a49 694c 434a 3065 5842 6c49 6a6f 7a66 
0000fa0: 5830 7349 6d6c 7a55 3352 7964 574e 3049 
0000fb0: 6a70 6d59 5778 7a5a 5377 6962 5756 3061 
0000fc0: 4739 6b63 7949 3665 3330 7349 6d35 6862 
0000fd0: 5756 7a63 4746 6a5a 5349 3662 6e56 7362 
0000fe0: 4830 3d00 0041 fd04 0bc5 0265 794a 6a62 
0000ff0: 3231 745a 5735 3049 6a70 7564 5778 734c 
0001000: 434a 745a 5731 7663 6e6c 5164 4849 694f 
0001010: 6e73 6956 6d46 7364 5755 694f 6a59 7a4e 
0001020: 3330 7349 6d4e 7359 584e 7a49 6a6f 6951 
0001030: 3256 7362 454e 7063 6d4e 735a 5349 7349 
0001040: 6d4e 7359 584e 7a58 326c 6b49 6a6f 324d 
0001050: 7a63 7349 6d5a 705a 5778 6b63 7949 3665 
0001060: 794a 755a 5868 3049 6a70 3749 6d64 6c62 
0001070: 6d56 7961 574d 694f 6c74 644c 434a 7959 
0001080: 5863 694f 694a 624e 6a4d 3358 554e 6c62 
0001090: 4778 4461 584a 6a62 4755 694c 434a 3065 
00010a0: 5842 6c49 6a6f 784d 4830 7349 6d4e 7063 
00010b0: 6d4e 735a 556c 755a 4756 3449 6a70 3749 
00010c0: 6d64 6c62 6d56 7961 574d 694f 6c74 644c 
00010d0: 434a 7959 5863 694f 694a 704d 7a49 694c 
00010e0: 434a 3065 5842 6c49 6a6f 7866 5830 7349 
00010f0: 6d6c 7a55 3352 7964 574e 3049 6a70 6d59 
0001100: 5778 7a5a 5377 6962 5756 3061 4739 6b63 
0001110: 7949 3665 3330 7349 6d35 6862 5756 7a63 
0001120: 4746 6a5a 5349 3662 6e56 7362 4830 3d00 
