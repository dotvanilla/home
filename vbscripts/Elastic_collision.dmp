0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 07                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7c                                        ; f64
000000e: 7c                                        ; f64
000000f: 01                                        ; num results
0000010: 7c                                        ; f64
; type 1
0000011: 60                                        ; func
0000012: 01                                        ; num params
0000013: 7c                                        ; f64
0000014: 01                                        ; num results
0000015: 7c                                        ; f64
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 00                                        ; num params
000001c: 01                                        ; num results
000001d: 7f                                        ; i32
; type 4
000001e: 60                                        ; func
000001f: 02                                        ; num params
0000020: 7d                                        ; f32
0000021: 7d                                        ; f32
0000022: 00                                        ; num results
; type 5
0000023: 60                                        ; func
0000024: 00                                        ; num params
0000025: 00                                        ; num results
; type 6
0000026: 60                                        ; func
0000027: 06                                        ; num params
0000028: 7d                                        ; f32
0000029: 7d                                        ; f32
000002a: 7d                                        ; f32
000002b: 7d                                        ; f32
000002c: 7d                                        ; f32
000002d: 7d                                        ; f32
000002e: 01                                        ; num results
000002f: 7f                                        ; i32
0000009: 26                                        ; FIXUP section size
; section "Import" (2)
0000030: 02                                        ; section code
0000031: 00                                        ; section size (guess)
0000032: 08                                        ; num imports
; import header 0
0000033: 04                                        ; string length
0000034: 4d61 7468                                Math  ; import module name
0000038: 03                                        ; string length
0000039: 706f 77                                  pow  ; import field name
000003c: 00                                        ; import kind
000003d: 00                                        ; import signature index
; import header 1
000003e: 04                                        ; string length
000003f: 4d61 7468                                Math  ; import module name
0000043: 04                                        ; string length
0000044: 7371 7274                                sqrt  ; import field name
0000048: 00                                        ; import kind
0000049: 01                                        ; import signature index
; import header 2
000004a: 04                                        ; string length
000004b: 4d61 7468                                Math  ; import module name
000004f: 03                                        ; string length
0000050: 6578 70                                  exp  ; import field name
0000053: 00                                        ; import kind
0000054: 01                                        ; import signature index
; import header 3
0000055: 04                                        ; string length
0000056: 4d61 7468                                Math  ; import module name
000005a: 03                                        ; string length
000005b: 636f 73                                  cos  ; import field name
000005e: 00                                        ; import kind
000005f: 01                                        ; import signature index
; import header 4
0000060: 04                                        ; string length
0000061: 4d61 7468                                Math  ; import module name
0000065: 06                                        ; string length
0000066: 7261 6e64 6f6d                           random  ; import field name
000006c: 00                                        ; import kind
000006d: 02                                        ; import signature index
; import header 5
000006e: 04                                        ; string length
000006f: 4d61 7468                                Math  ; import module name
0000073: 04                                        ; string length
0000074: 6365 696c                                ceil  ; import field name
0000078: 00                                        ; import kind
0000079: 01                                        ; import signature index
; import header 6
000007a: 04                                        ; string length
000007b: 4d61 7468                                Math  ; import module name
000007f: 05                                        ; string length
0000080: 666c 6f6f 72                             floor  ; import field name
0000085: 00                                        ; import kind
0000086: 01                                        ; import signature index
; import header 7
0000087: 03                                        ; string length
0000088: 656e 76                                  env  ; import module name
000008b: 0a                                        ; string length
000008c: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
0000096: 02                                        ; import kind
0000097: 00                                        ; limits: flags
0000098: 01                                        ; limits: initial
0000031: 67                                        ; FIXUP section size
; section "Function" (3)
0000099: 03                                        ; section code
000009a: 00                                        ; section size (guess)
000009b: 15                                        ; num functions
000009c: 03                                        ; function 0 signature index
000009d: 04                                        ; function 1 signature index
000009e: 05                                        ; function 2 signature index
000009f: 04                                        ; function 3 signature index
00000a0: 05                                        ; function 4 signature index
00000a1: 04                                        ; function 5 signature index
00000a2: 06                                        ; function 6 signature index
00000a3: 03                                        ; function 7 signature index
00000a4: 03                                        ; function 8 signature index
00000a5: 03                                        ; function 9 signature index
00000a6: 03                                        ; function 10 signature index
00000a7: 03                                        ; function 11 signature index
00000a8: 03                                        ; function 12 signature index
00000a9: 03                                        ; function 13 signature index
00000aa: 03                                        ; function 14 signature index
00000ab: 03                                        ; function 15 signature index
00000ac: 05                                        ; function 16 signature index
00000ad: 05                                        ; function 17 signature index
00000ae: 05                                        ; function 18 signature index
00000af: 05                                        ; function 19 signature index
00000b0: 05                                        ; function 20 signature index
000009a: 16                                        ; FIXUP section size
; section "Global" (6)
00000b1: 06                                        ; section code
00000b2: 00                                        ; section size (guess)
00000b3: 12                                        ; num globals
00000b4: 7f                                        ; i32
00000b5: 01                                        ; global mutability
00000b6: 41                                        ; i32.const
00000b7: b209                                      ; i32 literal
00000b9: 0b                                        ; end
00000ba: 7c                                        ; f64
00000bb: 01                                        ; global mutability
00000bc: 44                                        ; f64.const
00000bd: 6957 148b 0abf 0540                       ; f64 literal
00000c5: 0b                                        ; end
00000c6: 7c                                        ; f64
00000c7: 01                                        ; global mutability
00000c8: 44                                        ; f64.const
00000c9: 182d 4454 fb21 0940                       ; f64 literal
00000d1: 0b                                        ; end
00000d2: 7f                                        ; i32
00000d3: 01                                        ; global mutability
00000d4: 41                                        ; i32.const
00000d5: ffff ffff 07                              ; i32 literal
00000da: 0b                                        ; end
00000db: 7e                                        ; i64
00000dc: 01                                        ; global mutability
00000dd: 42                                        ; i64.const
00000de: ffff ffff ffff ffff ff00                  ; i64 literal
00000e8: 0b                                        ; end
00000e9: 7d                                        ; f32
00000ea: 01                                        ; global mutability
00000eb: 43                                        ; f32.const
00000ec: ffff 7f7f                                 ; f32 literal
00000f0: 0b                                        ; end
00000f1: 7c                                        ; f64
00000f2: 01                                        ; global mutability
00000f3: 44                                        ; f64.const
00000f4: ffff ffff ffff ef7f                       ; f64 literal
00000fc: 0b                                        ; end
00000fd: 7f                                        ; i32
00000fe: 01                                        ; global mutability
00000ff: 41                                        ; i32.const
0000100: 8080 8080 78                              ; i32 literal
0000105: 0b                                        ; end
0000106: 7e                                        ; i64
0000107: 01                                        ; global mutability
0000108: 42                                        ; i64.const
0000109: 8080 8080 8080 8080 807f                  ; i64 literal
0000113: 0b                                        ; end
0000114: 7d                                        ; f32
0000115: 01                                        ; global mutability
0000116: 43                                        ; f32.const
0000117: ffff 7fff                                 ; f32 literal
000011b: 0b                                        ; end
000011c: 7c                                        ; f64
000011d: 01                                        ; global mutability
000011e: 44                                        ; f64.const
000011f: ffff ffff ffff efff                       ; f64 literal
0000127: 0b                                        ; end
0000128: 7f                                        ; i32
0000129: 01                                        ; global mutability
000012a: 41                                        ; i32.const
000012b: f800                                      ; i32 literal
000012d: 0b                                        ; end
000012e: 7f                                        ; i32
000012f: 01                                        ; global mutability
0000130: 41                                        ; i32.const
0000131: c600                                      ; i32 literal
0000133: 0b                                        ; end
0000134: 7f                                        ; i32
0000135: 01                                        ; global mutability
0000136: 41                                        ; i32.const
0000137: 90ce 00                                   ; i32 literal
000013a: 0b                                        ; end
000013b: 7f                                        ; i32
000013c: 01                                        ; global mutability
000013d: 41                                        ; i32.const
000013e: 00                                        ; i32 literal
000013f: 0b                                        ; end
0000140: 7f                                        ; i32
0000141: 01                                        ; global mutability
0000142: 41                                        ; i32.const
0000143: 00                                        ; i32 literal
0000144: 0b                                        ; end
0000145: 7f                                        ; i32
0000146: 01                                        ; global mutability
0000147: 41                                        ; i32.const
0000148: 00                                        ; i32 literal
0000149: 0b                                        ; end
000014a: 7f                                        ; i32
000014b: 01                                        ; global mutability
000014c: 41                                        ; i32.const
000014d: 00                                        ; i32 literal
000014e: 0b                                        ; end
; move data: [b3, 14f) -> [b4, 150)
00000b2: 9c01                                      ; FIXUP section size
; section "Export" (7)
0000150: 07                                        ; section code
0000151: 00                                        ; section size (guess)
0000152: 0d                                        ; num exports
0000153: 1d                                        ; string length
0000154: 416c 676f 7269 7468 6d2e 6765 7443 6972  Algorithm.getCir
0000164: 636c 6544 6174 614f 6666 7365 74         cleDataOffset  ; export name
0000171: 00                                        ; export kind
0000172: 07                                        ; export func index
0000173: 0e                                        ; string length
0000174: 416c 676f 7269 7468 6d2e 696e 6974       Algorithm.init  ; export name
0000182: 00                                        ; export kind
0000183: 08                                        ; export func index
0000184: 12                                        ; string length
0000185: 416c 676f 7269 7468 6d2e 7469 6d65 5374  Algorithm.timeSt
0000195: 6570                                     ep  ; export name
0000197: 00                                        ; export kind
0000198: 0c                                        ; export func index
0000199: 1a                                        ; string length
000019a: 4d61 7468 2e64 6574 6563 7443 6972 636c  Math.detectCircl
00001aa: 6543 6f6c 6c69 7369 6f6e                 eCollision  ; export name
00001b4: 00                                        ; export kind
00001b5: 0d                                        ; export func index
00001b6: 1a                                        ; string length
00001b7: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00001c7: 656d 626c 7954 6974 6c65                 emblyTitle  ; export name
00001d1: 00                                        ; export kind
00001d2: 0e                                        ; export func index
00001d3: 20                                        ; string length
00001d4: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00001e4: 656d 626c 7944 6573 6372 6970 7469 6f6e  emblyDescription  ; export name
00001f4: 00                                        ; export kind
00001f5: 0f                                        ; export func index
00001f6: 1c                                        ; string length
00001f7: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000207: 656d 626c 7943 6f6d 7061 6e79            emblyCompany  ; export name
0000213: 00                                        ; export kind
0000214: 10                                        ; export func index
0000215: 1c                                        ; string length
0000216: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000226: 656d 626c 7950 726f 6475 6374            emblyProduct  ; export name
0000232: 00                                        ; export kind
0000233: 11                                        ; export func index
0000234: 1e                                        ; string length
0000235: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000245: 656d 626c 7943 6f70 7972 6967 6874       emblyCopyright  ; export name
0000253: 00                                        ; export kind
0000254: 12                                        ; export func index
0000255: 1e                                        ; string length
0000256: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000266: 656d 626c 7954 7261 6465 6d61 726b       emblyTrademark  ; export name
0000274: 00                                        ; export kind
0000275: 13                                        ; export func index
0000276: 11                                        ; string length
0000277: 4173 7365 6d62 6c79 496e 666f 2e47 7569  AssemblyInfo.Gui
0000287: 64                                       d  ; export name
0000288: 00                                        ; export kind
0000289: 14                                        ; export func index
000028a: 1c                                        ; string length
000028b: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000029b: 656d 626c 7956 6572 7369 6f6e            emblyVersion  ; export name
00002a7: 00                                        ; export kind
00002a8: 15                                        ; export func index
00002a9: 20                                        ; string length
00002aa: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002ba: 656d 626c 7946 696c 6556 6572 7369 6f6e  emblyFileVersion  ; export name
00002ca: 00                                        ; export kind
00002cb: 16                                        ; export func index
; move data: [152, 2cc) -> [153, 2cd)
0000151: fa02                                      ; FIXUP section size
; section "Start" (8)
00002cd: 08                                        ; section code
00002ce: 00                                        ; section size (guess)
00002cf: 17                                        ; start func index
00002ce: 01                                        ; FIXUP section size
; section "Code" (10)
00002d0: 0a                                        ; section code
00002d1: 00                                        ; section size (guess)
00002d2: 15                                        ; num functions
; function body 0
00002d3: 00                                        ; func body size (guess)
00002d4: 01                                        ; local decl count
00002d5: 04                                        ; local type count
00002d6: 7f                                        ; i32
00002d7: 23                                        ; global.get
00002d8: 0e                                        ; global index
00002d9: 0f                                        ; return
00002da: 0b                                        ; end
00002d3: 07                                        ; FIXUP func body size
; function body 1
00002db: 00                                        ; func body size (guess)
00002dc: 03                                        ; local decl count
00002dd: 02                                        ; local type count
00002de: 7f                                        ; i32
00002df: 03                                        ; local type count
00002e0: 7d                                        ; f32
00002e1: 01                                        ; local type count
00002e2: 7f                                        ; i32
00002e3: 41                                        ; i32.const
00002e4: 00                                        ; i32 literal
00002e5: 21                                        ; local.set
00002e6: 02                                        ; local index
00002e7: 02                                        ; block
00002e8: 40                                        ; void
00002e9: 03                                        ; loop
00002ea: 40                                        ; void
00002eb: 20                                        ; local.get
00002ec: 02                                        ; local index
00002ed: 23                                        ; global.get
00002ee: 0d                                        ; global index
00002ef: 41                                        ; i32.const
00002f0: 01                                        ; i32 literal
00002f1: 6b                                        ; i32.sub
00002f2: 4a                                        ; i32.gt_s
00002f3: 0d                                        ; br_if
00002f4: 01                                        ; break depth
00002f5: 41                                        ; i32.const
00002f6: 00                                        ; i32 literal
00002f7: 21                                        ; local.set
00002f8: 03                                        ; local index
00002f9: 43                                        ; f32.const
00002fa: 0000 0000                                 ; f32 literal
00002fe: 21                                        ; local.set
00002ff: 04                                        ; local index
0000300: 43                                        ; f32.const
0000301: 0000 0000                                 ; f32 literal
0000305: 21                                        ; local.set
0000306: 05                                        ; local index
0000307: 43                                        ; f32.const
0000308: 0000 0000                                 ; f32 literal
000030c: 21                                        ; local.set
000030d: 06                                        ; local index
000030e: 02                                        ; block
000030f: 40                                        ; void
0000310: 03                                        ; loop
0000311: 40                                        ; void
0000312: 41                                        ; i32.const
0000313: 00                                        ; i32 literal
0000314: 21                                        ; local.set
0000315: 03                                        ; local index
0000316: 20                                        ; local.get
0000317: 00                                        ; local index
0000318: bb                                        ; f64.promote_f32
0000319: 10                                        ; call
000031a: 04                                        ; function index
000031b: a2                                        ; f64.mul
000031c: b6                                        ; f32.demote_f64
000031d: 21                                        ; local.set
000031e: 04                                        ; local index
000031f: 20                                        ; local.get
0000320: 01                                        ; local index
0000321: bb                                        ; f64.promote_f32
0000322: 10                                        ; call
0000323: 04                                        ; function index
0000324: a2                                        ; f64.mul
0000325: b6                                        ; f32.demote_f64
0000326: 21                                        ; local.set
0000327: 05                                        ; local index
0000328: 10                                        ; call
0000329: 04                                        ; function index
000032a: 41                                        ; i32.const
000032b: 08                                        ; i32 literal
000032c: b7                                        ; f64.convert_i32_s
000032d: a2                                        ; f64.mul
000032e: 10                                        ; call
000032f: 02                                        ; function index
0000330: 44                                        ; f64.const
0000331: ee5a 423e e849 3740                       ; f64 literal
0000339: a3                                        ; f64.div
000033a: 10                                        ; call
000033b: 05                                        ; function index
000033c: b6                                        ; f32.demote_f64
000033d: 21                                        ; local.set
000033e: 06                                        ; local index
000033f: 20                                        ; local.get
0000340: 00                                        ; local index
0000341: 20                                        ; local.get
0000342: 04                                        ; local index
0000343: 20                                        ; local.get
0000344: 06                                        ; local index
0000345: 92                                        ; f32.add
0000346: 93                                        ; f32.sub
0000347: 41                                        ; i32.const
0000348: 00                                        ; i32 literal
0000349: b2                                        ; f32.convert_i32_s
000034a: 5d                                        ; f32.lt
000034b: 20                                        ; local.get
000034c: 04                                        ; local index
000034d: 20                                        ; local.get
000034e: 06                                        ; local index
000034f: 93                                        ; f32.sub
0000350: 41                                        ; i32.const
0000351: 00                                        ; i32 literal
0000352: b2                                        ; f32.convert_i32_s
0000353: 5d                                        ; f32.lt
0000354: 6a                                        ; i32.add
0000355: 20                                        ; local.get
0000356: 01                                        ; local index
0000357: 20                                        ; local.get
0000358: 05                                        ; local index
0000359: 20                                        ; local.get
000035a: 06                                        ; local index
000035b: 92                                        ; f32.add
000035c: 93                                        ; f32.sub
000035d: 41                                        ; i32.const
000035e: 00                                        ; i32 literal
000035f: b2                                        ; f32.convert_i32_s
0000360: 5d                                        ; f32.lt
0000361: 6a                                        ; i32.add
0000362: 20                                        ; local.get
0000363: 05                                        ; local index
0000364: 20                                        ; local.get
0000365: 06                                        ; local index
0000366: 93                                        ; f32.sub
0000367: 41                                        ; i32.const
0000368: 00                                        ; i32 literal
0000369: b2                                        ; f32.convert_i32_s
000036a: 5d                                        ; f32.lt
000036b: 6a                                        ; i32.add
000036c: 04                                        ; if
000036d: 40                                        ; void
000036e: 41                                        ; i32.const
000036f: 01                                        ; i32 literal
0000370: 21                                        ; local.set
0000371: 03                                        ; local index
0000372: 05                                        ; else
0000373: 41                                        ; i32.const
0000374: 00                                        ; i32 literal
0000375: 21                                        ; local.set
0000376: 07                                        ; local index
0000377: 02                                        ; block
0000378: 40                                        ; void
0000379: 03                                        ; loop
000037a: 40                                        ; void
000037b: 20                                        ; local.get
000037c: 07                                        ; local index
000037d: 20                                        ; local.get
000037e: 02                                        ; local index
000037f: 41                                        ; i32.const
0000380: 01                                        ; i32 literal
0000381: 6b                                        ; i32.sub
0000382: 4a                                        ; i32.gt_s
0000383: 0d                                        ; br_if
0000384: 01                                        ; break depth
0000385: 20                                        ; local.get
0000386: 04                                        ; local index
0000387: 20                                        ; local.get
0000388: 05                                        ; local index
0000389: 20                                        ; local.get
000038a: 06                                        ; local index
000038b: 23                                        ; global.get
000038c: 0e                                        ; global index
000038d: 41                                        ; i32.const
000038e: 08                                        ; i32 literal
000038f: 6a                                        ; i32.add
0000390: 20                                        ; local.get
0000391: 07                                        ; local index
0000392: 41                                        ; i32.const
0000393: 04                                        ; i32 literal
0000394: 6c                                        ; i32.mul
0000395: 6a                                        ; i32.add
0000396: 28                                        ; i32.load
0000397: 02                                        ; alignment
0000398: 00                                        ; load offset
0000399: 41                                        ; i32.const
000039a: 00                                        ; i32 literal
000039b: 6a                                        ; i32.add
000039c: 2a                                        ; f32.load
000039d: 02                                        ; alignment
000039e: 00                                        ; load offset
000039f: 23                                        ; global.get
00003a0: 0e                                        ; global index
00003a1: 41                                        ; i32.const
00003a2: 08                                        ; i32 literal
00003a3: 6a                                        ; i32.add
00003a4: 20                                        ; local.get
00003a5: 07                                        ; local index
00003a6: 41                                        ; i32.const
00003a7: 04                                        ; i32 literal
00003a8: 6c                                        ; i32.mul
00003a9: 6a                                        ; i32.add
00003aa: 28                                        ; i32.load
00003ab: 02                                        ; alignment
00003ac: 00                                        ; load offset
00003ad: 41                                        ; i32.const
00003ae: 04                                        ; i32 literal
00003af: 6a                                        ; i32.add
00003b0: 2a                                        ; f32.load
00003b1: 02                                        ; alignment
00003b2: 00                                        ; load offset
00003b3: 23                                        ; global.get
00003b4: 0e                                        ; global index
00003b5: 41                                        ; i32.const
00003b6: 08                                        ; i32 literal
00003b7: 6a                                        ; i32.add
00003b8: 20                                        ; local.get
00003b9: 07                                        ; local index
00003ba: 41                                        ; i32.const
00003bb: 04                                        ; i32 literal
00003bc: 6c                                        ; i32.mul
00003bd: 6a                                        ; i32.add
00003be: 28                                        ; i32.load
00003bf: 02                                        ; alignment
00003c0: 00                                        ; load offset
00003c1: 41                                        ; i32.const
00003c2: 08                                        ; i32 literal
00003c3: 6a                                        ; i32.add
00003c4: 2a                                        ; f32.load
00003c5: 02                                        ; alignment
00003c6: 00                                        ; load offset
00003c7: 10                                        ; call
00003c8: 0d                                        ; function index
00003c9: 04                                        ; if
00003ca: 40                                        ; void
00003cb: 41                                        ; i32.const
00003cc: 01                                        ; i32 literal
00003cd: 21                                        ; local.set
00003ce: 03                                        ; local index
00003cf: 41                                        ; i32.const
00003d0: 01                                        ; i32 literal
00003d1: 0d                                        ; br_if
00003d2: 05                                        ; break depth
00003d3: 0b                                        ; end
00003d4: 20                                        ; local.get
00003d5: 07                                        ; local index
00003d6: 41                                        ; i32.const
00003d7: 01                                        ; i32 literal
00003d8: 6a                                        ; i32.add
00003d9: 21                                        ; local.set
00003da: 07                                        ; local index
00003db: 0c                                        ; br
00003dc: 00                                        ; break depth
00003dd: 0b                                        ; end
00003de: 0b                                        ; end
00003df: 0b                                        ; end
00003e0: 20                                        ; local.get
00003e1: 03                                        ; local index
00003e2: 45                                        ; i32.eqz
00003e3: 0d                                        ; br_if
00003e4: 01                                        ; break depth
00003e5: 0c                                        ; br
00003e6: 00                                        ; break depth
00003e7: 0b                                        ; end
00003e8: 0b                                        ; end
00003e9: 23                                        ; global.get
00003ea: 0e                                        ; global index
00003eb: 41                                        ; i32.const
00003ec: 08                                        ; i32 literal
00003ed: 6a                                        ; i32.add
00003ee: 20                                        ; local.get
00003ef: 02                                        ; local index
00003f0: 41                                        ; i32.const
00003f1: 04                                        ; i32 literal
00003f2: 6c                                        ; i32.mul
00003f3: 6a                                        ; i32.add
00003f4: 28                                        ; i32.load
00003f5: 02                                        ; alignment
00003f6: 00                                        ; load offset
00003f7: 41                                        ; i32.const
00003f8: 00                                        ; i32 literal
00003f9: 6a                                        ; i32.add
00003fa: 20                                        ; local.get
00003fb: 04                                        ; local index
00003fc: 38                                        ; f32.store
00003fd: 02                                        ; alignment
00003fe: 00                                        ; store offset
00003ff: 23                                        ; global.get
0000400: 0e                                        ; global index
0000401: 41                                        ; i32.const
0000402: 08                                        ; i32 literal
0000403: 6a                                        ; i32.add
0000404: 20                                        ; local.get
0000405: 02                                        ; local index
0000406: 41                                        ; i32.const
0000407: 04                                        ; i32 literal
0000408: 6c                                        ; i32.mul
0000409: 6a                                        ; i32.add
000040a: 28                                        ; i32.load
000040b: 02                                        ; alignment
000040c: 00                                        ; load offset
000040d: 41                                        ; i32.const
000040e: 04                                        ; i32 literal
000040f: 6a                                        ; i32.add
0000410: 20                                        ; local.get
0000411: 05                                        ; local index
0000412: 38                                        ; f32.store
0000413: 02                                        ; alignment
0000414: 00                                        ; store offset
0000415: 23                                        ; global.get
0000416: 0e                                        ; global index
0000417: 41                                        ; i32.const
0000418: 08                                        ; i32 literal
0000419: 6a                                        ; i32.add
000041a: 20                                        ; local.get
000041b: 02                                        ; local index
000041c: 41                                        ; i32.const
000041d: 04                                        ; i32 literal
000041e: 6c                                        ; i32.mul
000041f: 6a                                        ; i32.add
0000420: 28                                        ; i32.load
0000421: 02                                        ; alignment
0000422: 00                                        ; load offset
0000423: 41                                        ; i32.const
0000424: 08                                        ; i32 literal
0000425: 6a                                        ; i32.add
0000426: 20                                        ; local.get
0000427: 06                                        ; local index
0000428: 38                                        ; f32.store
0000429: 02                                        ; alignment
000042a: 00                                        ; store offset
000042b: 23                                        ; global.get
000042c: 0f                                        ; global index
000042d: 41                                        ; i32.const
000042e: 08                                        ; i32 literal
000042f: 6a                                        ; i32.add
0000430: 20                                        ; local.get
0000431: 02                                        ; local index
0000432: 41                                        ; i32.const
0000433: 04                                        ; i32 literal
0000434: 6c                                        ; i32.mul
0000435: 6a                                        ; i32.add
0000436: 28                                        ; i32.load
0000437: 02                                        ; alignment
0000438: 00                                        ; load offset
0000439: 41                                        ; i32.const
000043a: 04                                        ; i32 literal
000043b: 6a                                        ; i32.add
000043c: 10                                        ; call
000043d: 04                                        ; function index
000043e: 44                                        ; f64.const
000043f: 0000 0000 0000 e03f                       ; f64 literal
0000447: a1                                        ; f64.sub
0000448: 44                                        ; f64.const
0000449: 9a99 9999 9999 b93f                       ; f64 literal
0000451: a2                                        ; f64.mul
0000452: b6                                        ; f32.demote_f64
0000453: 38                                        ; f32.store
0000454: 02                                        ; alignment
0000455: 00                                        ; store offset
0000456: 23                                        ; global.get
0000457: 0f                                        ; global index
0000458: 41                                        ; i32.const
0000459: 08                                        ; i32 literal
000045a: 6a                                        ; i32.add
000045b: 20                                        ; local.get
000045c: 02                                        ; local index
000045d: 41                                        ; i32.const
000045e: 04                                        ; i32 literal
000045f: 6c                                        ; i32.mul
0000460: 6a                                        ; i32.add
0000461: 28                                        ; i32.load
0000462: 02                                        ; alignment
0000463: 00                                        ; load offset
0000464: 41                                        ; i32.const
0000465: 00                                        ; i32 literal
0000466: 6a                                        ; i32.add
0000467: 10                                        ; call
0000468: 04                                        ; function index
0000469: 44                                        ; f64.const
000046a: 0000 0000 0000 e03f                       ; f64 literal
0000472: a1                                        ; f64.sub
0000473: 44                                        ; f64.const
0000474: 9a99 9999 9999 b93f                       ; f64 literal
000047c: a2                                        ; f64.mul
000047d: b6                                        ; f32.demote_f64
000047e: 38                                        ; f32.store
000047f: 02                                        ; alignment
0000480: 00                                        ; store offset
0000481: 20                                        ; local.get
0000482: 02                                        ; local index
0000483: 41                                        ; i32.const
0000484: 01                                        ; i32 literal
0000485: 6a                                        ; i32.add
0000486: 21                                        ; local.set
0000487: 02                                        ; local index
0000488: 0c                                        ; br
0000489: 00                                        ; break depth
000048a: 0b                                        ; end
000048b: 0b                                        ; end
000048c: 0b                                        ; end
; move data: [2dc, 48d) -> [2dd, 48e)
00002db: b103                                      ; FIXUP func body size
; function body 2
000048e: 00                                        ; func body size (guess)
000048f: 01                                        ; local decl count
0000490: 03                                        ; local type count
0000491: 7f                                        ; i32
0000492: 41                                        ; i32.const
0000493: 00                                        ; i32 literal
0000494: 21                                        ; local.set
0000495: 00                                        ; local index
0000496: 02                                        ; block
0000497: 40                                        ; void
0000498: 03                                        ; loop
0000499: 40                                        ; void
000049a: 20                                        ; local.get
000049b: 00                                        ; local index
000049c: 23                                        ; global.get
000049d: 0c                                        ; global index
000049e: 41                                        ; i32.const
000049f: 01                                        ; i32 literal
00004a0: 6b                                        ; i32.sub
00004a1: 4a                                        ; i32.gt_s
00004a2: 0d                                        ; br_if
00004a3: 01                                        ; break depth
00004a4: 23                                        ; global.get
00004a5: 11                                        ; global index
00004a6: 41                                        ; i32.const
00004a7: 08                                        ; i32 literal
00004a8: 6a                                        ; i32.add
00004a9: 20                                        ; local.get
00004aa: 00                                        ; local index
00004ab: 41                                        ; i32.const
00004ac: 04                                        ; i32 literal
00004ad: 6c                                        ; i32.mul
00004ae: 6a                                        ; i32.add
00004af: 28                                        ; i32.load
00004b0: 02                                        ; alignment
00004b1: 00                                        ; load offset
00004b2: 21                                        ; local.set
00004b3: 01                                        ; local index
00004b4: 41                                        ; i32.const
00004b5: 00                                        ; i32 literal
00004b6: 21                                        ; local.set
00004b7: 02                                        ; local index
00004b8: 02                                        ; block
00004b9: 40                                        ; void
00004ba: 03                                        ; loop
00004bb: 40                                        ; void
00004bc: 20                                        ; local.get
00004bd: 02                                        ; local index
00004be: 23                                        ; global.get
00004bf: 0b                                        ; global index
00004c0: 41                                        ; i32.const
00004c1: 01                                        ; i32 literal
00004c2: 6b                                        ; i32.sub
00004c3: 4a                                        ; i32.gt_s
00004c4: 0d                                        ; br_if
00004c5: 01                                        ; break depth
00004c6: 20                                        ; local.get
00004c7: 01                                        ; local index
00004c8: 41                                        ; i32.const
00004c9: 08                                        ; i32 literal
00004ca: 6a                                        ; i32.add
00004cb: 20                                        ; local.get
00004cc: 02                                        ; local index
00004cd: 41                                        ; i32.const
00004ce: 04                                        ; i32 literal
00004cf: 6c                                        ; i32.mul
00004d0: 6a                                        ; i32.add
00004d1: 41                                        ; i32.const
00004d2: 00                                        ; i32 literal
00004d3: 36                                        ; i32.store
00004d4: 02                                        ; alignment
00004d5: 00                                        ; store offset
00004d6: 20                                        ; local.get
00004d7: 02                                        ; local index
00004d8: 41                                        ; i32.const
00004d9: 01                                        ; i32 literal
00004da: 6a                                        ; i32.add
00004db: 21                                        ; local.set
00004dc: 02                                        ; local index
00004dd: 0c                                        ; br
00004de: 00                                        ; break depth
00004df: 0b                                        ; end
00004e0: 0b                                        ; end
00004e1: 20                                        ; local.get
00004e2: 00                                        ; local index
00004e3: 41                                        ; i32.const
00004e4: 01                                        ; i32 literal
00004e5: 6a                                        ; i32.add
00004e6: 21                                        ; local.set
00004e7: 00                                        ; local index
00004e8: 0c                                        ; br
00004e9: 00                                        ; break depth
00004ea: 0b                                        ; end
00004eb: 0b                                        ; end
00004ec: 0b                                        ; end
000048e: 5e                                        ; FIXUP func body size
; function body 3
00004ed: 00                                        ; func body size (guess)
00004ee: 03                                        ; local decl count
00004ef: 02                                        ; local type count
00004f0: 7f                                        ; i32
00004f1: 05                                        ; local type count
00004f2: 7d                                        ; f32
00004f3: 08                                        ; local type count
00004f4: 7f                                        ; i32
00004f5: 41                                        ; i32.const
00004f6: 00                                        ; i32 literal
00004f7: 21                                        ; local.set
00004f8: 02                                        ; local index
00004f9: 41                                        ; i32.const
00004fa: 00                                        ; i32 literal
00004fb: 21                                        ; local.set
00004fc: 03                                        ; local index
00004fd: 02                                        ; block
00004fe: 40                                        ; void
00004ff: 03                                        ; loop
0000500: 40                                        ; void
0000501: 20                                        ; local.get
0000502: 03                                        ; local index
0000503: 23                                        ; global.get
0000504: 0d                                        ; global index
0000505: 41                                        ; i32.const
0000506: 01                                        ; i32 literal
0000507: 6b                                        ; i32.sub
0000508: 4a                                        ; i32.gt_s
0000509: 0d                                        ; br_if
000050a: 01                                        ; break depth
000050b: 23                                        ; global.get
000050c: 0e                                        ; global index
000050d: 41                                        ; i32.const
000050e: 08                                        ; i32 literal
000050f: 6a                                        ; i32.add
0000510: 20                                        ; local.get
0000511: 03                                        ; local index
0000512: 41                                        ; i32.const
0000513: 04                                        ; i32 literal
0000514: 6c                                        ; i32.mul
0000515: 6a                                        ; i32.add
0000516: 28                                        ; i32.load
0000517: 02                                        ; alignment
0000518: 00                                        ; load offset
0000519: 41                                        ; i32.const
000051a: 00                                        ; i32 literal
000051b: 6a                                        ; i32.add
000051c: 2a                                        ; f32.load
000051d: 02                                        ; alignment
000051e: 00                                        ; load offset
000051f: 21                                        ; local.set
0000520: 04                                        ; local index
0000521: 23                                        ; global.get
0000522: 0e                                        ; global index
0000523: 41                                        ; i32.const
0000524: 08                                        ; i32 literal
0000525: 6a                                        ; i32.add
0000526: 20                                        ; local.get
0000527: 03                                        ; local index
0000528: 41                                        ; i32.const
0000529: 04                                        ; i32 literal
000052a: 6c                                        ; i32.mul
000052b: 6a                                        ; i32.add
000052c: 28                                        ; i32.load
000052d: 02                                        ; alignment
000052e: 00                                        ; load offset
000052f: 41                                        ; i32.const
0000530: 04                                        ; i32 literal
0000531: 6a                                        ; i32.add
0000532: 2a                                        ; f32.load
0000533: 02                                        ; alignment
0000534: 00                                        ; load offset
0000535: 21                                        ; local.set
0000536: 05                                        ; local index
0000537: 23                                        ; global.get
0000538: 0e                                        ; global index
0000539: 41                                        ; i32.const
000053a: 08                                        ; i32 literal
000053b: 6a                                        ; i32.add
000053c: 20                                        ; local.get
000053d: 03                                        ; local index
000053e: 41                                        ; i32.const
000053f: 04                                        ; i32 literal
0000540: 6c                                        ; i32.mul
0000541: 6a                                        ; i32.add
0000542: 28                                        ; i32.load
0000543: 02                                        ; alignment
0000544: 00                                        ; load offset
0000545: 41                                        ; i32.const
0000546: 08                                        ; i32 literal
0000547: 6a                                        ; i32.add
0000548: 2a                                        ; f32.load
0000549: 02                                        ; alignment
000054a: 00                                        ; load offset
000054b: 21                                        ; local.set
000054c: 06                                        ; local index
000054d: 23                                        ; global.get
000054e: 0f                                        ; global index
000054f: 41                                        ; i32.const
0000550: 08                                        ; i32 literal
0000551: 6a                                        ; i32.add
0000552: 20                                        ; local.get
0000553: 03                                        ; local index
0000554: 41                                        ; i32.const
0000555: 04                                        ; i32 literal
0000556: 6c                                        ; i32.mul
0000557: 6a                                        ; i32.add
0000558: 28                                        ; i32.load
0000559: 02                                        ; alignment
000055a: 00                                        ; load offset
000055b: 41                                        ; i32.const
000055c: 04                                        ; i32 literal
000055d: 6a                                        ; i32.add
000055e: 2a                                        ; f32.load
000055f: 02                                        ; alignment
0000560: 00                                        ; load offset
0000561: 21                                        ; local.set
0000562: 07                                        ; local index
0000563: 23                                        ; global.get
0000564: 0f                                        ; global index
0000565: 41                                        ; i32.const
0000566: 08                                        ; i32 literal
0000567: 6a                                        ; i32.add
0000568: 20                                        ; local.get
0000569: 03                                        ; local index
000056a: 41                                        ; i32.const
000056b: 04                                        ; i32 literal
000056c: 6c                                        ; i32.mul
000056d: 6a                                        ; i32.add
000056e: 28                                        ; i32.load
000056f: 02                                        ; alignment
0000570: 00                                        ; load offset
0000571: 41                                        ; i32.const
0000572: 00                                        ; i32 literal
0000573: 6a                                        ; i32.add
0000574: 2a                                        ; f32.load
0000575: 02                                        ; alignment
0000576: 00                                        ; load offset
0000577: 21                                        ; local.set
0000578: 08                                        ; local index
0000579: 20                                        ; local.get
000057a: 08                                        ; local index
000057b: bb                                        ; f64.promote_f32
000057c: 44                                        ; f64.const
000057d: 2d43 1ceb e236 1a3f                       ; f64 literal
0000585: a0                                        ; f64.add
0000586: b6                                        ; f32.demote_f64
0000587: 21                                        ; local.set
0000588: 08                                        ; local index
0000589: 20                                        ; local.get
000058a: 00                                        ; local index
000058b: 20                                        ; local.get
000058c: 04                                        ; local index
000058d: 20                                        ; local.get
000058e: 06                                        ; local index
000058f: 92                                        ; f32.add
0000590: 93                                        ; f32.sub
0000591: 41                                        ; i32.const
0000592: 00                                        ; i32 literal
0000593: b2                                        ; f32.convert_i32_s
0000594: 5d                                        ; f32.lt
0000595: 20                                        ; local.get
0000596: 07                                        ; local index
0000597: 41                                        ; i32.const
0000598: 00                                        ; i32 literal
0000599: b2                                        ; f32.convert_i32_s
000059a: 5e                                        ; f32.gt
000059b: 6c                                        ; i32.mul
000059c: 20                                        ; local.get
000059d: 04                                        ; local index
000059e: 20                                        ; local.get
000059f: 06                                        ; local index
00005a0: 93                                        ; f32.sub
00005a1: 41                                        ; i32.const
00005a2: 00                                        ; i32 literal
00005a3: b2                                        ; f32.convert_i32_s
00005a4: 5d                                        ; f32.lt
00005a5: 20                                        ; local.get
00005a6: 07                                        ; local index
00005a7: 41                                        ; i32.const
00005a8: 00                                        ; i32 literal
00005a9: b2                                        ; f32.convert_i32_s
00005aa: 5d                                        ; f32.lt
00005ab: 6c                                        ; i32.mul
00005ac: 6a                                        ; i32.add
00005ad: 04                                        ; if
00005ae: 40                                        ; void
00005af: 43                                        ; f32.const
00005b0: 0000 0000                                 ; f32 literal
00005b4: 20                                        ; local.get
00005b5: 07                                        ; local index
00005b6: 93                                        ; f32.sub
00005b7: 21                                        ; local.set
00005b8: 07                                        ; local index
00005b9: 0b                                        ; end
00005ba: 20                                        ; local.get
00005bb: 01                                        ; local index
00005bc: 20                                        ; local.get
00005bd: 05                                        ; local index
00005be: 20                                        ; local.get
00005bf: 06                                        ; local index
00005c0: 92                                        ; f32.add
00005c1: 93                                        ; f32.sub
00005c2: 41                                        ; i32.const
00005c3: 00                                        ; i32 literal
00005c4: b2                                        ; f32.convert_i32_s
00005c5: 5d                                        ; f32.lt
00005c6: 20                                        ; local.get
00005c7: 08                                        ; local index
00005c8: 41                                        ; i32.const
00005c9: 00                                        ; i32 literal
00005ca: b2                                        ; f32.convert_i32_s
00005cb: 5e                                        ; f32.gt
00005cc: 6c                                        ; i32.mul
00005cd: 20                                        ; local.get
00005ce: 05                                        ; local index
00005cf: 20                                        ; local.get
00005d0: 06                                        ; local index
00005d1: 93                                        ; f32.sub
00005d2: 41                                        ; i32.const
00005d3: 00                                        ; i32 literal
00005d4: b2                                        ; f32.convert_i32_s
00005d5: 5d                                        ; f32.lt
00005d6: 20                                        ; local.get
00005d7: 08                                        ; local index
00005d8: 41                                        ; i32.const
00005d9: 00                                        ; i32 literal
00005da: b2                                        ; f32.convert_i32_s
00005db: 5d                                        ; f32.lt
00005dc: 6c                                        ; i32.mul
00005dd: 6a                                        ; i32.add
00005de: 04                                        ; if
00005df: 40                                        ; void
00005e0: 43                                        ; f32.const
00005e1: 0000 0000                                 ; f32 literal
00005e5: 20                                        ; local.get
00005e6: 08                                        ; local index
00005e7: 93                                        ; f32.sub
00005e8: 21                                        ; local.set
00005e9: 08                                        ; local index
00005ea: 0b                                        ; end
00005eb: 23                                        ; global.get
00005ec: 0e                                        ; global index
00005ed: 41                                        ; i32.const
00005ee: 08                                        ; i32 literal
00005ef: 6a                                        ; i32.add
00005f0: 20                                        ; local.get
00005f1: 03                                        ; local index
00005f2: 41                                        ; i32.const
00005f3: 04                                        ; i32 literal
00005f4: 6c                                        ; i32.mul
00005f5: 6a                                        ; i32.add
00005f6: 28                                        ; i32.load
00005f7: 02                                        ; alignment
00005f8: 00                                        ; load offset
00005f9: 41                                        ; i32.const
00005fa: 00                                        ; i32 literal
00005fb: 6a                                        ; i32.add
00005fc: 20                                        ; local.get
00005fd: 04                                        ; local index
00005fe: 20                                        ; local.get
00005ff: 07                                        ; local index
0000600: 92                                        ; f32.add
0000601: 38                                        ; f32.store
0000602: 02                                        ; alignment
0000603: 00                                        ; store offset
0000604: 23                                        ; global.get
0000605: 0e                                        ; global index
0000606: 41                                        ; i32.const
0000607: 08                                        ; i32 literal
0000608: 6a                                        ; i32.add
0000609: 20                                        ; local.get
000060a: 03                                        ; local index
000060b: 41                                        ; i32.const
000060c: 04                                        ; i32 literal
000060d: 6c                                        ; i32.mul
000060e: 6a                                        ; i32.add
000060f: 28                                        ; i32.load
0000610: 02                                        ; alignment
0000611: 00                                        ; load offset
0000612: 41                                        ; i32.const
0000613: 04                                        ; i32 literal
0000614: 6a                                        ; i32.add
0000615: 20                                        ; local.get
0000616: 05                                        ; local index
0000617: 20                                        ; local.get
0000618: 08                                        ; local index
0000619: 92                                        ; f32.add
000061a: 38                                        ; f32.store
000061b: 02                                        ; alignment
000061c: 00                                        ; store offset
000061d: 23                                        ; global.get
000061e: 0f                                        ; global index
000061f: 41                                        ; i32.const
0000620: 08                                        ; i32 literal
0000621: 6a                                        ; i32.add
0000622: 20                                        ; local.get
0000623: 03                                        ; local index
0000624: 41                                        ; i32.const
0000625: 04                                        ; i32 literal
0000626: 6c                                        ; i32.mul
0000627: 6a                                        ; i32.add
0000628: 28                                        ; i32.load
0000629: 02                                        ; alignment
000062a: 00                                        ; load offset
000062b: 41                                        ; i32.const
000062c: 04                                        ; i32 literal
000062d: 6a                                        ; i32.add
000062e: 20                                        ; local.get
000062f: 07                                        ; local index
0000630: 38                                        ; f32.store
0000631: 02                                        ; alignment
0000632: 00                                        ; store offset
0000633: 23                                        ; global.get
0000634: 0f                                        ; global index
0000635: 41                                        ; i32.const
0000636: 08                                        ; i32 literal
0000637: 6a                                        ; i32.add
0000638: 20                                        ; local.get
0000639: 03                                        ; local index
000063a: 41                                        ; i32.const
000063b: 04                                        ; i32 literal
000063c: 6c                                        ; i32.mul
000063d: 6a                                        ; i32.add
000063e: 28                                        ; i32.load
000063f: 02                                        ; alignment
0000640: 00                                        ; load offset
0000641: 41                                        ; i32.const
0000642: 00                                        ; i32 literal
0000643: 6a                                        ; i32.add
0000644: 20                                        ; local.get
0000645: 08                                        ; local index
0000646: 38                                        ; f32.store
0000647: 02                                        ; alignment
0000648: 00                                        ; store offset
0000649: 20                                        ; local.get
000064a: 04                                        ; local index
000064b: 20                                        ; local.get
000064c: 06                                        ; local index
000064d: 93                                        ; f32.sub
000064e: bb                                        ; f64.promote_f32
000064f: 20                                        ; local.get
0000650: 00                                        ; local index
0000651: bb                                        ; f64.promote_f32
0000652: a3                                        ; f64.div
0000653: 23                                        ; global.get
0000654: 0c                                        ; global index
0000655: b7                                        ; f64.convert_i32_s
0000656: a2                                        ; f64.mul
0000657: 10                                        ; call
0000658: 06                                        ; function index
0000659: aa                                        ; i32.trunc_f64_s
000065a: 21                                        ; local.set
000065b: 09                                        ; local index
000065c: 20                                        ; local.get
000065d: 04                                        ; local index
000065e: 20                                        ; local.get
000065f: 06                                        ; local index
0000660: 92                                        ; f32.add
0000661: bb                                        ; f64.promote_f32
0000662: 20                                        ; local.get
0000663: 00                                        ; local index
0000664: bb                                        ; f64.promote_f32
0000665: a3                                        ; f64.div
0000666: 23                                        ; global.get
0000667: 0c                                        ; global index
0000668: b7                                        ; f64.convert_i32_s
0000669: a2                                        ; f64.mul
000066a: 10                                        ; call
000066b: 06                                        ; function index
000066c: aa                                        ; i32.trunc_f64_s
000066d: 21                                        ; local.set
000066e: 0a                                        ; local index
000066f: 20                                        ; local.get
0000670: 05                                        ; local index
0000671: 20                                        ; local.get
0000672: 06                                        ; local index
0000673: 93                                        ; f32.sub
0000674: bb                                        ; f64.promote_f32
0000675: 20                                        ; local.get
0000676: 01                                        ; local index
0000677: bb                                        ; f64.promote_f32
0000678: a3                                        ; f64.div
0000679: 23                                        ; global.get
000067a: 0b                                        ; global index
000067b: b7                                        ; f64.convert_i32_s
000067c: a2                                        ; f64.mul
000067d: 10                                        ; call
000067e: 06                                        ; function index
000067f: aa                                        ; i32.trunc_f64_s
0000680: 21                                        ; local.set
0000681: 0b                                        ; local index
0000682: 20                                        ; local.get
0000683: 05                                        ; local index
0000684: 20                                        ; local.get
0000685: 06                                        ; local index
0000686: 92                                        ; f32.add
0000687: bb                                        ; f64.promote_f32
0000688: 20                                        ; local.get
0000689: 01                                        ; local index
000068a: bb                                        ; f64.promote_f32
000068b: a3                                        ; f64.div
000068c: 23                                        ; global.get
000068d: 0b                                        ; global index
000068e: b7                                        ; f64.convert_i32_s
000068f: a2                                        ; f64.mul
0000690: 10                                        ; call
0000691: 06                                        ; function index
0000692: aa                                        ; i32.trunc_f64_s
0000693: 21                                        ; local.set
0000694: 0c                                        ; local index
0000695: 20                                        ; local.get
0000696: 09                                        ; local index
0000697: 41                                        ; i32.const
0000698: 00                                        ; i32 literal
0000699: 48                                        ; i32.lt_s
000069a: 04                                        ; if
000069b: 40                                        ; void
000069c: 41                                        ; i32.const
000069d: 00                                        ; i32 literal
000069e: 21                                        ; local.set
000069f: 09                                        ; local index
00006a0: 0b                                        ; end
00006a1: 20                                        ; local.get
00006a2: 0a                                        ; local index
00006a3: 23                                        ; global.get
00006a4: 0c                                        ; global index
00006a5: 4e                                        ; i32.ge_s
00006a6: 04                                        ; if
00006a7: 40                                        ; void
00006a8: 23                                        ; global.get
00006a9: 0c                                        ; global index
00006aa: 41                                        ; i32.const
00006ab: 01                                        ; i32 literal
00006ac: 6b                                        ; i32.sub
00006ad: 21                                        ; local.set
00006ae: 0a                                        ; local index
00006af: 0b                                        ; end
00006b0: 20                                        ; local.get
00006b1: 0b                                        ; local index
00006b2: 41                                        ; i32.const
00006b3: 00                                        ; i32 literal
00006b4: 48                                        ; i32.lt_s
00006b5: 04                                        ; if
00006b6: 40                                        ; void
00006b7: 41                                        ; i32.const
00006b8: 00                                        ; i32 literal
00006b9: 21                                        ; local.set
00006ba: 0b                                        ; local index
00006bb: 0b                                        ; end
00006bc: 20                                        ; local.get
00006bd: 0c                                        ; local index
00006be: 23                                        ; global.get
00006bf: 0b                                        ; global index
00006c0: 4e                                        ; i32.ge_s
00006c1: 04                                        ; if
00006c2: 40                                        ; void
00006c3: 23                                        ; global.get
00006c4: 0b                                        ; global index
00006c5: 41                                        ; i32.const
00006c6: 01                                        ; i32 literal
00006c7: 6b                                        ; i32.sub
00006c8: 21                                        ; local.set
00006c9: 0c                                        ; local index
00006ca: 0b                                        ; end
00006cb: 20                                        ; local.get
00006cc: 09                                        ; local index
00006cd: 21                                        ; local.set
00006ce: 0d                                        ; local index
00006cf: 02                                        ; block
00006d0: 40                                        ; void
00006d1: 03                                        ; loop
00006d2: 40                                        ; void
00006d3: 20                                        ; local.get
00006d4: 0d                                        ; local index
00006d5: 20                                        ; local.get
00006d6: 0a                                        ; local index
00006d7: 4a                                        ; i32.gt_s
00006d8: 0d                                        ; br_if
00006d9: 01                                        ; break depth
00006da: 23                                        ; global.get
00006db: 11                                        ; global index
00006dc: 41                                        ; i32.const
00006dd: 08                                        ; i32 literal
00006de: 6a                                        ; i32.add
00006df: 20                                        ; local.get
00006e0: 0d                                        ; local index
00006e1: 41                                        ; i32.const
00006e2: 04                                        ; i32 literal
00006e3: 6c                                        ; i32.mul
00006e4: 6a                                        ; i32.add
00006e5: 28                                        ; i32.load
00006e6: 02                                        ; alignment
00006e7: 00                                        ; load offset
00006e8: 21                                        ; local.set
00006e9: 0e                                        ; local index
00006ea: 20                                        ; local.get
00006eb: 0b                                        ; local index
00006ec: 21                                        ; local.set
00006ed: 0f                                        ; local index
00006ee: 02                                        ; block
00006ef: 40                                        ; void
00006f0: 03                                        ; loop
00006f1: 40                                        ; void
00006f2: 20                                        ; local.get
00006f3: 0f                                        ; local index
00006f4: 20                                        ; local.get
00006f5: 0c                                        ; local index
00006f6: 4a                                        ; i32.gt_s
00006f7: 0d                                        ; br_if
00006f8: 01                                        ; break depth
00006f9: 23                                        ; global.get
00006fa: 10                                        ; global index
00006fb: 41                                        ; i32.const
00006fc: 08                                        ; i32 literal
00006fd: 6a                                        ; i32.add
00006fe: 20                                        ; local.get
00006ff: 02                                        ; local index
0000700: 41                                        ; i32.const
0000701: 04                                        ; i32 literal
0000702: 6c                                        ; i32.mul
0000703: 6a                                        ; i32.add
0000704: 28                                        ; i32.load
0000705: 02                                        ; alignment
0000706: 00                                        ; load offset
0000707: 21                                        ; local.set
0000708: 10                                        ; local index
0000709: 20                                        ; local.get
000070a: 02                                        ; local index
000070b: 41                                        ; i32.const
000070c: 01                                        ; i32 literal
000070d: 6a                                        ; i32.add
000070e: 21                                        ; local.set
000070f: 02                                        ; local index
0000710: 20                                        ; local.get
0000711: 10                                        ; local index
0000712: 41                                        ; i32.const
0000713: 04                                        ; i32 literal
0000714: 6a                                        ; i32.add
0000715: 20                                        ; local.get
0000716: 03                                        ; local index
0000717: 36                                        ; i32.store
0000718: 02                                        ; alignment
0000719: 00                                        ; store offset
000071a: 20                                        ; local.get
000071b: 10                                        ; local index
000071c: 41                                        ; i32.const
000071d: 00                                        ; i32 literal
000071e: 6a                                        ; i32.add
000071f: 20                                        ; local.get
0000720: 0e                                        ; local index
0000721: 41                                        ; i32.const
0000722: 08                                        ; i32 literal
0000723: 6a                                        ; i32.add
0000724: 20                                        ; local.get
0000725: 0f                                        ; local index
0000726: 41                                        ; i32.const
0000727: 04                                        ; i32 literal
0000728: 6c                                        ; i32.mul
0000729: 6a                                        ; i32.add
000072a: 28                                        ; i32.load
000072b: 02                                        ; alignment
000072c: 00                                        ; load offset
000072d: 36                                        ; i32.store
000072e: 02                                        ; alignment
000072f: 00                                        ; store offset
0000730: 20                                        ; local.get
0000731: 0e                                        ; local index
0000732: 41                                        ; i32.const
0000733: 08                                        ; i32 literal
0000734: 6a                                        ; i32.add
0000735: 20                                        ; local.get
0000736: 0f                                        ; local index
0000737: 41                                        ; i32.const
0000738: 04                                        ; i32 literal
0000739: 6c                                        ; i32.mul
000073a: 6a                                        ; i32.add
000073b: 20                                        ; local.get
000073c: 10                                        ; local index
000073d: 36                                        ; i32.store
000073e: 02                                        ; alignment
000073f: 00                                        ; store offset
0000740: 20                                        ; local.get
0000741: 0f                                        ; local index
0000742: 41                                        ; i32.const
0000743: 01                                        ; i32 literal
0000744: 6a                                        ; i32.add
0000745: 21                                        ; local.set
0000746: 0f                                        ; local index
0000747: 0c                                        ; br
0000748: 00                                        ; break depth
0000749: 0b                                        ; end
000074a: 0b                                        ; end
000074b: 20                                        ; local.get
000074c: 0d                                        ; local index
000074d: 41                                        ; i32.const
000074e: 01                                        ; i32 literal
000074f: 6a                                        ; i32.add
0000750: 21                                        ; local.set
0000751: 0d                                        ; local index
0000752: 0c                                        ; br
0000753: 00                                        ; break depth
0000754: 0b                                        ; end
0000755: 0b                                        ; end
0000756: 20                                        ; local.get
0000757: 03                                        ; local index
0000758: 41                                        ; i32.const
0000759: 01                                        ; i32 literal
000075a: 6a                                        ; i32.add
000075b: 21                                        ; local.set
000075c: 03                                        ; local index
000075d: 0c                                        ; br
000075e: 00                                        ; break depth
000075f: 0b                                        ; end
0000760: 0b                                        ; end
0000761: 0b                                        ; end
; move data: [4ee, 762) -> [4ef, 763)
00004ed: f404                                      ; FIXUP func body size
; function body 4
0000763: 00                                        ; func body size (guess)
0000764: 07                                        ; local decl count
0000765: 05                                        ; local type count
0000766: 7f                                        ; i32
0000767: 05                                        ; local type count
0000768: 7d                                        ; f32
0000769: 02                                        ; local type count
000076a: 7f                                        ; i32
000076b: 07                                        ; local type count
000076c: 7d                                        ; f32
000076d: 01                                        ; local type count
000076e: 7c                                        ; f64
000076f: 04                                        ; local type count
0000770: 7d                                        ; f32
0000771: 04                                        ; local type count
0000772: 7c                                        ; f64
0000773: 41                                        ; i32.const
0000774: 00                                        ; i32 literal
0000775: 21                                        ; local.set
0000776: 00                                        ; local index
0000777: 02                                        ; block
0000778: 40                                        ; void
0000779: 03                                        ; loop
000077a: 40                                        ; void
000077b: 20                                        ; local.get
000077c: 00                                        ; local index
000077d: 23                                        ; global.get
000077e: 0c                                        ; global index
000077f: 41                                        ; i32.const
0000780: 01                                        ; i32 literal
0000781: 6b                                        ; i32.sub
0000782: 4a                                        ; i32.gt_s
0000783: 0d                                        ; br_if
0000784: 01                                        ; break depth
0000785: 23                                        ; global.get
0000786: 11                                        ; global index
0000787: 41                                        ; i32.const
0000788: 08                                        ; i32 literal
0000789: 6a                                        ; i32.add
000078a: 20                                        ; local.get
000078b: 00                                        ; local index
000078c: 41                                        ; i32.const
000078d: 04                                        ; i32 literal
000078e: 6c                                        ; i32.mul
000078f: 6a                                        ; i32.add
0000790: 28                                        ; i32.load
0000791: 02                                        ; alignment
0000792: 00                                        ; load offset
0000793: 21                                        ; local.set
0000794: 01                                        ; local index
0000795: 41                                        ; i32.const
0000796: 00                                        ; i32 literal
0000797: 21                                        ; local.set
0000798: 02                                        ; local index
0000799: 02                                        ; block
000079a: 40                                        ; void
000079b: 03                                        ; loop
000079c: 40                                        ; void
000079d: 20                                        ; local.get
000079e: 02                                        ; local index
000079f: 23                                        ; global.get
00007a0: 0b                                        ; global index
00007a1: 41                                        ; i32.const
00007a2: 01                                        ; i32 literal
00007a3: 6b                                        ; i32.sub
00007a4: 4a                                        ; i32.gt_s
00007a5: 0d                                        ; br_if
00007a6: 01                                        ; break depth
00007a7: 20                                        ; local.get
00007a8: 01                                        ; local index
00007a9: 41                                        ; i32.const
00007aa: 08                                        ; i32 literal
00007ab: 6a                                        ; i32.add
00007ac: 20                                        ; local.get
00007ad: 02                                        ; local index
00007ae: 41                                        ; i32.const
00007af: 04                                        ; i32 literal
00007b0: 6c                                        ; i32.mul
00007b1: 6a                                        ; i32.add
00007b2: 28                                        ; i32.load
00007b3: 02                                        ; alignment
00007b4: 00                                        ; load offset
00007b5: 21                                        ; local.set
00007b6: 03                                        ; local index
00007b7: 02                                        ; block
00007b8: 40                                        ; void
00007b9: 03                                        ; loop
00007ba: 40                                        ; void
00007bb: 20                                        ; local.get
00007bc: 03                                        ; local index
00007bd: 41                                        ; i32.const
00007be: 00                                        ; i32 literal
00007bf: 46                                        ; i32.eq
00007c0: 45                                        ; i32.eqz
00007c1: 45                                        ; i32.eqz
00007c2: 0d                                        ; br_if
00007c3: 01                                        ; break depth
00007c4: 20                                        ; local.get
00007c5: 03                                        ; local index
00007c6: 41                                        ; i32.const
00007c7: 04                                        ; i32 literal
00007c8: 6a                                        ; i32.add
00007c9: 28                                        ; i32.load
00007ca: 02                                        ; alignment
00007cb: 00                                        ; load offset
00007cc: 21                                        ; local.set
00007cd: 04                                        ; local index
00007ce: 23                                        ; global.get
00007cf: 0e                                        ; global index
00007d0: 41                                        ; i32.const
00007d1: 08                                        ; i32 literal
00007d2: 6a                                        ; i32.add
00007d3: 20                                        ; local.get
00007d4: 04                                        ; local index
00007d5: 41                                        ; i32.const
00007d6: 04                                        ; i32 literal
00007d7: 6c                                        ; i32.mul
00007d8: 6a                                        ; i32.add
00007d9: 28                                        ; i32.load
00007da: 02                                        ; alignment
00007db: 00                                        ; load offset
00007dc: 41                                        ; i32.const
00007dd: 00                                        ; i32 literal
00007de: 6a                                        ; i32.add
00007df: 2a                                        ; f32.load
00007e0: 02                                        ; alignment
00007e1: 00                                        ; load offset
00007e2: 21                                        ; local.set
00007e3: 05                                        ; local index
00007e4: 23                                        ; global.get
00007e5: 0e                                        ; global index
00007e6: 41                                        ; i32.const
00007e7: 08                                        ; i32 literal
00007e8: 6a                                        ; i32.add
00007e9: 20                                        ; local.get
00007ea: 04                                        ; local index
00007eb: 41                                        ; i32.const
00007ec: 04                                        ; i32 literal
00007ed: 6c                                        ; i32.mul
00007ee: 6a                                        ; i32.add
00007ef: 28                                        ; i32.load
00007f0: 02                                        ; alignment
00007f1: 00                                        ; load offset
00007f2: 41                                        ; i32.const
00007f3: 04                                        ; i32 literal
00007f4: 6a                                        ; i32.add
00007f5: 2a                                        ; f32.load
00007f6: 02                                        ; alignment
00007f7: 00                                        ; load offset
00007f8: 21                                        ; local.set
00007f9: 06                                        ; local index
00007fa: 23                                        ; global.get
00007fb: 0e                                        ; global index
00007fc: 41                                        ; i32.const
00007fd: 08                                        ; i32 literal
00007fe: 6a                                        ; i32.add
00007ff: 20                                        ; local.get
0000800: 04                                        ; local index
0000801: 41                                        ; i32.const
0000802: 04                                        ; i32 literal
0000803: 6c                                        ; i32.mul
0000804: 6a                                        ; i32.add
0000805: 28                                        ; i32.load
0000806: 02                                        ; alignment
0000807: 00                                        ; load offset
0000808: 41                                        ; i32.const
0000809: 08                                        ; i32 literal
000080a: 6a                                        ; i32.add
000080b: 2a                                        ; f32.load
000080c: 02                                        ; alignment
000080d: 00                                        ; load offset
000080e: 21                                        ; local.set
000080f: 07                                        ; local index
0000810: 23                                        ; global.get
0000811: 0f                                        ; global index
0000812: 41                                        ; i32.const
0000813: 08                                        ; i32 literal
0000814: 6a                                        ; i32.add
0000815: 20                                        ; local.get
0000816: 04                                        ; local index
0000817: 41                                        ; i32.const
0000818: 04                                        ; i32 literal
0000819: 6c                                        ; i32.mul
000081a: 6a                                        ; i32.add
000081b: 28                                        ; i32.load
000081c: 02                                        ; alignment
000081d: 00                                        ; load offset
000081e: 41                                        ; i32.const
000081f: 04                                        ; i32 literal
0000820: 6a                                        ; i32.add
0000821: 2a                                        ; f32.load
0000822: 02                                        ; alignment
0000823: 00                                        ; load offset
0000824: 21                                        ; local.set
0000825: 08                                        ; local index
0000826: 23                                        ; global.get
0000827: 0f                                        ; global index
0000828: 41                                        ; i32.const
0000829: 08                                        ; i32 literal
000082a: 6a                                        ; i32.add
000082b: 20                                        ; local.get
000082c: 04                                        ; local index
000082d: 41                                        ; i32.const
000082e: 04                                        ; i32 literal
000082f: 6c                                        ; i32.mul
0000830: 6a                                        ; i32.add
0000831: 28                                        ; i32.load
0000832: 02                                        ; alignment
0000833: 00                                        ; load offset
0000834: 41                                        ; i32.const
0000835: 00                                        ; i32 literal
0000836: 6a                                        ; i32.add
0000837: 2a                                        ; f32.load
0000838: 02                                        ; alignment
0000839: 00                                        ; load offset
000083a: 21                                        ; local.set
000083b: 09                                        ; local index
000083c: 20                                        ; local.get
000083d: 03                                        ; local index
000083e: 21                                        ; local.set
000083f: 0a                                        ; local index
0000840: 20                                        ; local.get
0000841: 0a                                        ; local index
0000842: 41                                        ; i32.const
0000843: 00                                        ; i32 literal
0000844: 6a                                        ; i32.add
0000845: 28                                        ; i32.load
0000846: 02                                        ; alignment
0000847: 00                                        ; load offset
0000848: 21                                        ; local.set
0000849: 0a                                        ; local index
000084a: 02                                        ; block
000084b: 40                                        ; void
000084c: 03                                        ; loop
000084d: 40                                        ; void
000084e: 20                                        ; local.get
000084f: 0a                                        ; local index
0000850: 41                                        ; i32.const
0000851: 00                                        ; i32 literal
0000852: 46                                        ; i32.eq
0000853: 45                                        ; i32.eqz
0000854: 45                                        ; i32.eqz
0000855: 0d                                        ; br_if
0000856: 01                                        ; break depth
0000857: 20                                        ; local.get
0000858: 0a                                        ; local index
0000859: 41                                        ; i32.const
000085a: 04                                        ; i32 literal
000085b: 6a                                        ; i32.add
000085c: 28                                        ; i32.load
000085d: 02                                        ; alignment
000085e: 00                                        ; load offset
000085f: 21                                        ; local.set
0000860: 0b                                        ; local index
0000861: 23                                        ; global.get
0000862: 0e                                        ; global index
0000863: 41                                        ; i32.const
0000864: 08                                        ; i32 literal
0000865: 6a                                        ; i32.add
0000866: 20                                        ; local.get
0000867: 0b                                        ; local index
0000868: 41                                        ; i32.const
0000869: 04                                        ; i32 literal
000086a: 6c                                        ; i32.mul
000086b: 6a                                        ; i32.add
000086c: 28                                        ; i32.load
000086d: 02                                        ; alignment
000086e: 00                                        ; load offset
000086f: 41                                        ; i32.const
0000870: 00                                        ; i32 literal
0000871: 6a                                        ; i32.add
0000872: 2a                                        ; f32.load
0000873: 02                                        ; alignment
0000874: 00                                        ; load offset
0000875: 21                                        ; local.set
0000876: 0c                                        ; local index
0000877: 23                                        ; global.get
0000878: 0e                                        ; global index
0000879: 41                                        ; i32.const
000087a: 08                                        ; i32 literal
000087b: 6a                                        ; i32.add
000087c: 20                                        ; local.get
000087d: 0b                                        ; local index
000087e: 41                                        ; i32.const
000087f: 04                                        ; i32 literal
0000880: 6c                                        ; i32.mul
0000881: 6a                                        ; i32.add
0000882: 28                                        ; i32.load
0000883: 02                                        ; alignment
0000884: 00                                        ; load offset
0000885: 41                                        ; i32.const
0000886: 04                                        ; i32 literal
0000887: 6a                                        ; i32.add
0000888: 2a                                        ; f32.load
0000889: 02                                        ; alignment
000088a: 00                                        ; load offset
000088b: 21                                        ; local.set
000088c: 0d                                        ; local index
000088d: 23                                        ; global.get
000088e: 0e                                        ; global index
000088f: 41                                        ; i32.const
0000890: 08                                        ; i32 literal
0000891: 6a                                        ; i32.add
0000892: 20                                        ; local.get
0000893: 0b                                        ; local index
0000894: 41                                        ; i32.const
0000895: 04                                        ; i32 literal
0000896: 6c                                        ; i32.mul
0000897: 6a                                        ; i32.add
0000898: 28                                        ; i32.load
0000899: 02                                        ; alignment
000089a: 00                                        ; load offset
000089b: 41                                        ; i32.const
000089c: 08                                        ; i32 literal
000089d: 6a                                        ; i32.add
000089e: 2a                                        ; f32.load
000089f: 02                                        ; alignment
00008a0: 00                                        ; load offset
00008a1: 21                                        ; local.set
00008a2: 0e                                        ; local index
00008a3: 20                                        ; local.get
00008a4: 05                                        ; local index
00008a5: 20                                        ; local.get
00008a6: 06                                        ; local index
00008a7: 20                                        ; local.get
00008a8: 07                                        ; local index
00008a9: 20                                        ; local.get
00008aa: 0c                                        ; local index
00008ab: 20                                        ; local.get
00008ac: 0d                                        ; local index
00008ad: 20                                        ; local.get
00008ae: 0e                                        ; local index
00008af: 10                                        ; call
00008b0: 0d                                        ; function index
00008b1: 04                                        ; if
00008b2: 40                                        ; void
00008b3: 23                                        ; global.get
00008b4: 0f                                        ; global index
00008b5: 41                                        ; i32.const
00008b6: 08                                        ; i32 literal
00008b7: 6a                                        ; i32.add
00008b8: 20                                        ; local.get
00008b9: 0b                                        ; local index
00008ba: 41                                        ; i32.const
00008bb: 04                                        ; i32 literal
00008bc: 6c                                        ; i32.mul
00008bd: 6a                                        ; i32.add
00008be: 28                                        ; i32.load
00008bf: 02                                        ; alignment
00008c0: 00                                        ; load offset
00008c1: 41                                        ; i32.const
00008c2: 04                                        ; i32 literal
00008c3: 6a                                        ; i32.add
00008c4: 2a                                        ; f32.load
00008c5: 02                                        ; alignment
00008c6: 00                                        ; load offset
00008c7: 21                                        ; local.set
00008c8: 0f                                        ; local index
00008c9: 23                                        ; global.get
00008ca: 0f                                        ; global index
00008cb: 41                                        ; i32.const
00008cc: 08                                        ; i32 literal
00008cd: 6a                                        ; i32.add
00008ce: 20                                        ; local.get
00008cf: 0b                                        ; local index
00008d0: 41                                        ; i32.const
00008d1: 04                                        ; i32 literal
00008d2: 6c                                        ; i32.mul
00008d3: 6a                                        ; i32.add
00008d4: 28                                        ; i32.load
00008d5: 02                                        ; alignment
00008d6: 00                                        ; load offset
00008d7: 41                                        ; i32.const
00008d8: 00                                        ; i32 literal
00008d9: 6a                                        ; i32.add
00008da: 2a                                        ; f32.load
00008db: 02                                        ; alignment
00008dc: 00                                        ; load offset
00008dd: 21                                        ; local.set
00008de: 10                                        ; local index
00008df: 20                                        ; local.get
00008e0: 0c                                        ; local index
00008e1: 20                                        ; local.get
00008e2: 05                                        ; local index
00008e3: 93                                        ; f32.sub
00008e4: 21                                        ; local.set
00008e5: 11                                        ; local index
00008e6: 20                                        ; local.get
00008e7: 0d                                        ; local index
00008e8: 20                                        ; local.get
00008e9: 06                                        ; local index
00008ea: 93                                        ; f32.sub
00008eb: 21                                        ; local.set
00008ec: 12                                        ; local index
00008ed: 20                                        ; local.get
00008ee: 11                                        ; local index
00008ef: 20                                        ; local.get
00008f0: 11                                        ; local index
00008f1: 94                                        ; f32.mul
00008f2: 20                                        ; local.get
00008f3: 12                                        ; local index
00008f4: 20                                        ; local.get
00008f5: 12                                        ; local index
00008f6: 94                                        ; f32.mul
00008f7: 92                                        ; f32.add
00008f8: bb                                        ; f64.promote_f32
00008f9: 10                                        ; call
00008fa: 01                                        ; function index
00008fb: 21                                        ; local.set
00008fc: 13                                        ; local index
00008fd: 20                                        ; local.get
00008fe: 11                                        ; local index
00008ff: bb                                        ; f64.promote_f32
0000900: 20                                        ; local.get
0000901: 13                                        ; local index
0000902: a3                                        ; f64.div
0000903: b6                                        ; f32.demote_f64
0000904: 21                                        ; local.set
0000905: 11                                        ; local index
0000906: 20                                        ; local.get
0000907: 12                                        ; local index
0000908: bb                                        ; f64.promote_f32
0000909: 20                                        ; local.get
000090a: 13                                        ; local index
000090b: a3                                        ; f64.div
000090c: b6                                        ; f32.demote_f64
000090d: 21                                        ; local.set
000090e: 12                                        ; local index
000090f: 20                                        ; local.get
0000910: 11                                        ; local index
0000911: 20                                        ; local.get
0000912: 08                                        ; local index
0000913: 94                                        ; f32.mul
0000914: 20                                        ; local.get
0000915: 12                                        ; local index
0000916: 20                                        ; local.get
0000917: 09                                        ; local index
0000918: 94                                        ; f32.mul
0000919: 92                                        ; f32.add
000091a: 21                                        ; local.set
000091b: 14                                        ; local index
000091c: 20                                        ; local.get
000091d: 11                                        ; local index
000091e: 20                                        ; local.get
000091f: 0f                                        ; local index
0000920: 94                                        ; f32.mul
0000921: 20                                        ; local.get
0000922: 12                                        ; local index
0000923: 20                                        ; local.get
0000924: 10                                        ; local index
0000925: 94                                        ; f32.mul
0000926: 92                                        ; f32.add
0000927: 21                                        ; local.set
0000928: 15                                        ; local index
0000929: 20                                        ; local.get
000092a: 14                                        ; local index
000092b: 20                                        ; local.get
000092c: 15                                        ; local index
000092d: 93                                        ; f32.sub
000092e: 41                                        ; i32.const
000092f: 00                                        ; i32 literal
0000930: b2                                        ; f32.convert_i32_s
0000931: 5f                                        ; f32.le
0000932: 45                                        ; i32.eqz
0000933: 04                                        ; if
0000934: 40                                        ; void
0000935: 20                                        ; local.get
0000936: 07                                        ; local index
0000937: 20                                        ; local.get
0000938: 0e                                        ; local index
0000939: 92                                        ; f32.add
000093a: 21                                        ; local.set
000093b: 16                                        ; local index
000093c: 20                                        ; local.get
000093d: 07                                        ; local index
000093e: 20                                        ; local.get
000093f: 0e                                        ; local index
0000940: 93                                        ; f32.sub
0000941: 21                                        ; local.set
0000942: 17                                        ; local index
0000943: 20                                        ; local.get
0000944: 14                                        ; local index
0000945: 20                                        ; local.get
0000946: 17                                        ; local index
0000947: 94                                        ; f32.mul
0000948: 41                                        ; i32.const
0000949: 02                                        ; i32 literal
000094a: b2                                        ; f32.convert_i32_s
000094b: 20                                        ; local.get
000094c: 0e                                        ; local index
000094d: 94                                        ; f32.mul
000094e: 20                                        ; local.get
000094f: 15                                        ; local index
0000950: 94                                        ; f32.mul
0000951: 92                                        ; f32.add
0000952: bb                                        ; f64.promote_f32
0000953: 20                                        ; local.get
0000954: 16                                        ; local index
0000955: bb                                        ; f64.promote_f32
0000956: a3                                        ; f64.div
0000957: 21                                        ; local.set
0000958: 18                                        ; local index
0000959: 41                                        ; i32.const
000095a: 02                                        ; i32 literal
000095b: b2                                        ; f32.convert_i32_s
000095c: 20                                        ; local.get
000095d: 07                                        ; local index
000095e: 94                                        ; f32.mul
000095f: 20                                        ; local.get
0000960: 14                                        ; local index
0000961: 94                                        ; f32.mul
0000962: 20                                        ; local.get
0000963: 15                                        ; local index
0000964: 20                                        ; local.get
0000965: 17                                        ; local index
0000966: 94                                        ; f32.mul
0000967: 93                                        ; f32.sub
0000968: bb                                        ; f64.promote_f32
0000969: 20                                        ; local.get
000096a: 16                                        ; local index
000096b: bb                                        ; f64.promote_f32
000096c: a3                                        ; f64.div
000096d: 21                                        ; local.set
000096e: 19                                        ; local index
000096f: 20                                        ; local.get
0000970: 18                                        ; local index
0000971: 20                                        ; local.get
0000972: 14                                        ; local index
0000973: bb                                        ; f64.promote_f32
0000974: a1                                        ; f64.sub
0000975: 21                                        ; local.set
0000976: 1a                                        ; local index
0000977: 20                                        ; local.get
0000978: 19                                        ; local index
0000979: 20                                        ; local.get
000097a: 15                                        ; local index
000097b: bb                                        ; f64.promote_f32
000097c: a1                                        ; f64.sub
000097d: 21                                        ; local.set
000097e: 1b                                        ; local index
000097f: 23                                        ; global.get
0000980: 0f                                        ; global index
0000981: 41                                        ; i32.const
0000982: 08                                        ; i32 literal
0000983: 6a                                        ; i32.add
0000984: 20                                        ; local.get
0000985: 04                                        ; local index
0000986: 41                                        ; i32.const
0000987: 04                                        ; i32 literal
0000988: 6c                                        ; i32.mul
0000989: 6a                                        ; i32.add
000098a: 28                                        ; i32.load
000098b: 02                                        ; alignment
000098c: 00                                        ; load offset
000098d: 41                                        ; i32.const
000098e: 04                                        ; i32 literal
000098f: 6a                                        ; i32.add
0000990: 20                                        ; local.get
0000991: 08                                        ; local index
0000992: bb                                        ; f64.promote_f32
0000993: 20                                        ; local.get
0000994: 11                                        ; local index
0000995: bb                                        ; f64.promote_f32
0000996: 20                                        ; local.get
0000997: 1a                                        ; local index
0000998: a2                                        ; f64.mul
0000999: a0                                        ; f64.add
000099a: b6                                        ; f32.demote_f64
000099b: 38                                        ; f32.store
000099c: 02                                        ; alignment
000099d: 00                                        ; store offset
000099e: 23                                        ; global.get
000099f: 0f                                        ; global index
00009a0: 41                                        ; i32.const
00009a1: 08                                        ; i32 literal
00009a2: 6a                                        ; i32.add
00009a3: 20                                        ; local.get
00009a4: 04                                        ; local index
00009a5: 41                                        ; i32.const
00009a6: 04                                        ; i32 literal
00009a7: 6c                                        ; i32.mul
00009a8: 6a                                        ; i32.add
00009a9: 28                                        ; i32.load
00009aa: 02                                        ; alignment
00009ab: 00                                        ; load offset
00009ac: 41                                        ; i32.const
00009ad: 00                                        ; i32 literal
00009ae: 6a                                        ; i32.add
00009af: 20                                        ; local.get
00009b0: 09                                        ; local index
00009b1: bb                                        ; f64.promote_f32
00009b2: 20                                        ; local.get
00009b3: 12                                        ; local index
00009b4: bb                                        ; f64.promote_f32
00009b5: 20                                        ; local.get
00009b6: 1a                                        ; local index
00009b7: a2                                        ; f64.mul
00009b8: a0                                        ; f64.add
00009b9: b6                                        ; f32.demote_f64
00009ba: 38                                        ; f32.store
00009bb: 02                                        ; alignment
00009bc: 00                                        ; store offset
00009bd: 23                                        ; global.get
00009be: 0f                                        ; global index
00009bf: 41                                        ; i32.const
00009c0: 08                                        ; i32 literal
00009c1: 6a                                        ; i32.add
00009c2: 20                                        ; local.get
00009c3: 0b                                        ; local index
00009c4: 41                                        ; i32.const
00009c5: 04                                        ; i32 literal
00009c6: 6c                                        ; i32.mul
00009c7: 6a                                        ; i32.add
00009c8: 28                                        ; i32.load
00009c9: 02                                        ; alignment
00009ca: 00                                        ; load offset
00009cb: 41                                        ; i32.const
00009cc: 04                                        ; i32 literal
00009cd: 6a                                        ; i32.add
00009ce: 20                                        ; local.get
00009cf: 0f                                        ; local index
00009d0: bb                                        ; f64.promote_f32
00009d1: 20                                        ; local.get
00009d2: 11                                        ; local index
00009d3: bb                                        ; f64.promote_f32
00009d4: 20                                        ; local.get
00009d5: 1b                                        ; local index
00009d6: a2                                        ; f64.mul
00009d7: a0                                        ; f64.add
00009d8: b6                                        ; f32.demote_f64
00009d9: 38                                        ; f32.store
00009da: 02                                        ; alignment
00009db: 00                                        ; store offset
00009dc: 23                                        ; global.get
00009dd: 0f                                        ; global index
00009de: 41                                        ; i32.const
00009df: 08                                        ; i32 literal
00009e0: 6a                                        ; i32.add
00009e1: 20                                        ; local.get
00009e2: 0b                                        ; local index
00009e3: 41                                        ; i32.const
00009e4: 04                                        ; i32 literal
00009e5: 6c                                        ; i32.mul
00009e6: 6a                                        ; i32.add
00009e7: 28                                        ; i32.load
00009e8: 02                                        ; alignment
00009e9: 00                                        ; load offset
00009ea: 41                                        ; i32.const
00009eb: 00                                        ; i32 literal
00009ec: 6a                                        ; i32.add
00009ed: 20                                        ; local.get
00009ee: 10                                        ; local index
00009ef: bb                                        ; f64.promote_f32
00009f0: 20                                        ; local.get
00009f1: 12                                        ; local index
00009f2: bb                                        ; f64.promote_f32
00009f3: 20                                        ; local.get
00009f4: 1b                                        ; local index
00009f5: a2                                        ; f64.mul
00009f6: a0                                        ; f64.add
00009f7: b6                                        ; f32.demote_f64
00009f8: 38                                        ; f32.store
00009f9: 02                                        ; alignment
00009fa: 00                                        ; store offset
00009fb: 20                                        ; local.get
00009fc: 0a                                        ; local index
00009fd: 41                                        ; i32.const
00009fe: 00                                        ; i32 literal
00009ff: 6a                                        ; i32.add
0000a00: 28                                        ; i32.load
0000a01: 02                                        ; alignment
0000a02: 00                                        ; load offset
0000a03: 21                                        ; local.set
0000a04: 0a                                        ; local index
0000a05: 0b                                        ; end
0000a06: 05                                        ; else
0000a07: 20                                        ; local.get
0000a08: 0a                                        ; local index
0000a09: 41                                        ; i32.const
0000a0a: 00                                        ; i32 literal
0000a0b: 6a                                        ; i32.add
0000a0c: 28                                        ; i32.load
0000a0d: 02                                        ; alignment
0000a0e: 00                                        ; load offset
0000a0f: 21                                        ; local.set
0000a10: 0a                                        ; local index
0000a11: 0b                                        ; end
0000a12: 0c                                        ; br
0000a13: 00                                        ; break depth
0000a14: 0b                                        ; end
0000a15: 0b                                        ; end
0000a16: 20                                        ; local.get
0000a17: 03                                        ; local index
0000a18: 41                                        ; i32.const
0000a19: 00                                        ; i32 literal
0000a1a: 6a                                        ; i32.add
0000a1b: 28                                        ; i32.load
0000a1c: 02                                        ; alignment
0000a1d: 00                                        ; load offset
0000a1e: 21                                        ; local.set
0000a1f: 03                                        ; local index
0000a20: 0c                                        ; br
0000a21: 00                                        ; break depth
0000a22: 0b                                        ; end
0000a23: 0b                                        ; end
0000a24: 20                                        ; local.get
0000a25: 02                                        ; local index
0000a26: 41                                        ; i32.const
0000a27: 01                                        ; i32 literal
0000a28: 6a                                        ; i32.add
0000a29: 21                                        ; local.set
0000a2a: 02                                        ; local index
0000a2b: 0c                                        ; br
0000a2c: 00                                        ; break depth
0000a2d: 0b                                        ; end
0000a2e: 0b                                        ; end
0000a2f: 20                                        ; local.get
0000a30: 00                                        ; local index
0000a31: 41                                        ; i32.const
0000a32: 01                                        ; i32 literal
0000a33: 6a                                        ; i32.add
0000a34: 21                                        ; local.set
0000a35: 00                                        ; local index
0000a36: 0c                                        ; br
0000a37: 00                                        ; break depth
0000a38: 0b                                        ; end
0000a39: 0b                                        ; end
0000a3a: 0b                                        ; end
; move data: [764, a3b) -> [765, a3c)
0000763: d705                                      ; FIXUP func body size
; function body 5
0000a3c: 00                                        ; func body size (guess)
0000a3d: 00                                        ; local decl count
0000a3e: 10                                        ; call
0000a3f: 09                                        ; function index
0000a40: 20                                        ; local.get
0000a41: 00                                        ; local index
0000a42: 20                                        ; local.get
0000a43: 01                                        ; local index
0000a44: 10                                        ; call
0000a45: 0a                                        ; function index
0000a46: 10                                        ; call
0000a47: 0b                                        ; function index
0000a48: 0b                                        ; end
0000a3c: 0c                                        ; FIXUP func body size
; function body 6
0000a49: 00                                        ; func body size (guess)
0000a4a: 01                                        ; local decl count
0000a4b: 02                                        ; local type count
0000a4c: 7f                                        ; i32
0000a4d: 20                                        ; local.get
0000a4e: 00                                        ; local index
0000a4f: 20                                        ; local.get
0000a50: 02                                        ; local index
0000a51: 92                                        ; f32.add
0000a52: 20                                        ; local.get
0000a53: 03                                        ; local index
0000a54: 20                                        ; local.get
0000a55: 05                                        ; local index
0000a56: 93                                        ; f32.sub
0000a57: 5d                                        ; f32.lt
0000a58: 20                                        ; local.get
0000a59: 00                                        ; local index
0000a5a: 20                                        ; local.get
0000a5b: 02                                        ; local index
0000a5c: 93                                        ; f32.sub
0000a5d: 20                                        ; local.get
0000a5e: 03                                        ; local index
0000a5f: 20                                        ; local.get
0000a60: 05                                        ; local index
0000a61: 92                                        ; f32.add
0000a62: 5e                                        ; f32.gt
0000a63: 6a                                        ; i32.add
0000a64: 20                                        ; local.get
0000a65: 01                                        ; local index
0000a66: 20                                        ; local.get
0000a67: 02                                        ; local index
0000a68: 92                                        ; f32.add
0000a69: 20                                        ; local.get
0000a6a: 04                                        ; local index
0000a6b: 20                                        ; local.get
0000a6c: 05                                        ; local index
0000a6d: 93                                        ; f32.sub
0000a6e: 5d                                        ; f32.lt
0000a6f: 6a                                        ; i32.add
0000a70: 20                                        ; local.get
0000a71: 01                                        ; local index
0000a72: 20                                        ; local.get
0000a73: 02                                        ; local index
0000a74: 93                                        ; f32.sub
0000a75: 20                                        ; local.get
0000a76: 04                                        ; local index
0000a77: 20                                        ; local.get
0000a78: 05                                        ; local index
0000a79: 92                                        ; f32.add
0000a7a: 5e                                        ; f32.gt
0000a7b: 6a                                        ; i32.add
0000a7c: 04                                        ; if
0000a7d: 40                                        ; void
0000a7e: 41                                        ; i32.const
0000a7f: 00                                        ; i32 literal
0000a80: 0f                                        ; return
0000a81: 0b                                        ; end
0000a82: 20                                        ; local.get
0000a83: 03                                        ; local index
0000a84: 20                                        ; local.get
0000a85: 00                                        ; local index
0000a86: 93                                        ; f32.sub
0000a87: bb                                        ; f64.promote_f32
0000a88: 41                                        ; i32.const
0000a89: 02                                        ; i32 literal
0000a8a: b2                                        ; f32.convert_i32_s
0000a8b: bb                                        ; f64.promote_f32
0000a8c: 10                                        ; call
0000a8d: 00                                        ; function index
0000a8e: 20                                        ; local.get
0000a8f: 04                                        ; local index
0000a90: 20                                        ; local.get
0000a91: 01                                        ; local index
0000a92: 93                                        ; f32.sub
0000a93: bb                                        ; f64.promote_f32
0000a94: 41                                        ; i32.const
0000a95: 02                                        ; i32 literal
0000a96: b2                                        ; f32.convert_i32_s
0000a97: bb                                        ; f64.promote_f32
0000a98: 10                                        ; call
0000a99: 00                                        ; function index
0000a9a: a0                                        ; f64.add
0000a9b: 10                                        ; call
0000a9c: 01                                        ; function index
0000a9d: 20                                        ; local.get
0000a9e: 02                                        ; local index
0000a9f: 20                                        ; local.get
0000aa0: 05                                        ; local index
0000aa1: 92                                        ; f32.add
0000aa2: bb                                        ; f64.promote_f32
0000aa3: 65                                        ; f64.le
0000aa4: 0f                                        ; return
0000aa5: 0b                                        ; end
0000a49: 5c                                        ; FIXUP func body size
; function body 7
0000aa6: 00                                        ; func body size (guess)
0000aa7: 00                                        ; local decl count
0000aa8: 41                                        ; i32.const
0000aa9: be07                                      ; i32 literal
0000aab: 0f                                        ; return
0000aac: 0b                                        ; end
0000aa6: 06                                        ; FIXUP func body size
; function body 8
0000aad: 00                                        ; func body size (guess)
0000aae: 00                                        ; local decl count
0000aaf: 41                                        ; i32.const
0000ab0: c907                                      ; i32 literal
0000ab2: 0f                                        ; return
0000ab3: 0b                                        ; end
0000aad: 06                                        ; FIXUP func body size
; function body 9
0000ab4: 00                                        ; func body size (guess)
0000ab5: 00                                        ; local decl count
0000ab6: 41                                        ; i32.const
0000ab7: 9a08                                      ; i32 literal
0000ab9: 0f                                        ; return
0000aba: 0b                                        ; end
0000ab4: 06                                        ; FIXUP func body size
; function body 10
0000abb: 00                                        ; func body size (guess)
0000abc: 00                                        ; local decl count
0000abd: 41                                        ; i32.const
0000abe: 9e08                                      ; i32 literal
0000ac0: 0f                                        ; return
0000ac1: 0b                                        ; end
0000abb: 06                                        ; FIXUP func body size
; function body 11
0000ac2: 00                                        ; func body size (guess)
0000ac3: 00                                        ; local decl count
0000ac4: 41                                        ; i32.const
0000ac5: a908                                      ; i32 literal
0000ac7: 0f                                        ; return
0000ac8: 0b                                        ; end
0000ac2: 06                                        ; FIXUP func body size
; function body 12
0000ac9: 00                                        ; func body size (guess)
0000aca: 00                                        ; local decl count
0000acb: 41                                        ; i32.const
0000acc: ef08                                      ; i32 literal
0000ace: 0f                                        ; return
0000acf: 0b                                        ; end
0000ac9: 06                                        ; FIXUP func body size
; function body 13
0000ad0: 00                                        ; func body size (guess)
0000ad1: 00                                        ; local decl count
0000ad2: 41                                        ; i32.const
0000ad3: fd08                                      ; i32 literal
0000ad5: 0f                                        ; return
0000ad6: 0b                                        ; end
0000ad0: 06                                        ; FIXUP func body size
; function body 14
0000ad7: 00                                        ; func body size (guess)
0000ad8: 00                                        ; local decl count
0000ad9: 41                                        ; i32.const
0000ada: a209                                      ; i32 literal
0000adc: 0f                                        ; return
0000add: 0b                                        ; end
0000ad7: 06                                        ; FIXUP func body size
; function body 15
0000ade: 00                                        ; func body size (guess)
0000adf: 00                                        ; local decl count
0000ae0: 41                                        ; i32.const
0000ae1: aa09                                      ; i32 literal
0000ae3: 0f                                        ; return
0000ae4: 0b                                        ; end
0000ade: 06                                        ; FIXUP func body size
; function body 16
0000ae5: 00                                        ; func body size (guess)
0000ae6: 00                                        ; local decl count
0000ae7: 10                                        ; call
0000ae8: 18                                        ; function index
0000ae9: 10                                        ; call
0000aea: 19                                        ; function index
0000aeb: 10                                        ; call
0000aec: 1a                                        ; function index
0000aed: 10                                        ; call
0000aee: 1b                                        ; function index
0000aef: 0b                                        ; end
0000ae5: 0a                                        ; FIXUP func body size
; function body 17
0000af0: 00                                        ; func body size (guess)
0000af1: 01                                        ; local decl count
0000af2: 04                                        ; local type count
0000af3: 7f                                        ; i32
0000af4: 23                                        ; global.get
0000af5: 00                                        ; global index
0000af6: 41                                        ; i32.const
0000af7: 0b                                        ; i32 literal
0000af8: 36                                        ; i32.store
0000af9: 02                                        ; alignment
0000afa: 00                                        ; store offset
0000afb: 23                                        ; global.get
0000afc: 00                                        ; global index
0000afd: 41                                        ; i32.const
0000afe: 04                                        ; i32 literal
0000aff: 6a                                        ; i32.add
0000b00: 23                                        ; global.get
0000b01: 0d                                        ; global index
0000b02: 41                                        ; i32.const
0000b03: 01                                        ; i32 literal
0000b04: 6b                                        ; i32.sub
0000b05: 36                                        ; i32.store
0000b06: 02                                        ; alignment
0000b07: 00                                        ; store offset
0000b08: 23                                        ; global.get
0000b09: 00                                        ; global index
0000b0a: 41                                        ; i32.const
0000b0b: 08                                        ; i32 literal
0000b0c: 6a                                        ; i32.add
0000b0d: 21                                        ; local.set
0000b0e: 00                                        ; local index
0000b0f: 20                                        ; local.get
0000b10: 00                                        ; local index
0000b11: 41                                        ; i32.const
0000b12: 78                                        ; i32 literal
0000b13: 6a                                        ; i32.add
0000b14: 41                                        ; i32.const
0000b15: 08                                        ; i32 literal
0000b16: 23                                        ; global.get
0000b17: 0d                                        ; global index
0000b18: 41                                        ; i32.const
0000b19: 01                                        ; i32 literal
0000b1a: 6b                                        ; i32.sub
0000b1b: 41                                        ; i32.const
0000b1c: 04                                        ; i32 literal
0000b1d: 6c                                        ; i32.mul
0000b1e: 6a                                        ; i32.add
0000b1f: 6a                                        ; i32.add
0000b20: 24                                        ; global.set
0000b21: 00                                        ; global index
0000b22: 20                                        ; local.get
0000b23: 00                                        ; local index
0000b24: 41                                        ; i32.const
0000b25: 78                                        ; i32 literal
0000b26: 6a                                        ; i32.add
0000b27: 24                                        ; global.set
0000b28: 0e                                        ; global index
0000b29: 23                                        ; global.get
0000b2a: 00                                        ; global index
0000b2b: 41                                        ; i32.const
0000b2c: dc02                                      ; i32 literal
0000b2e: 36                                        ; i32.store
0000b2f: 02                                        ; alignment
0000b30: 00                                        ; store offset
0000b31: 23                                        ; global.get
0000b32: 00                                        ; global index
0000b33: 41                                        ; i32.const
0000b34: 04                                        ; i32 literal
0000b35: 6a                                        ; i32.add
0000b36: 23                                        ; global.get
0000b37: 0d                                        ; global index
0000b38: 41                                        ; i32.const
0000b39: 01                                        ; i32 literal
0000b3a: 6b                                        ; i32.sub
0000b3b: 36                                        ; i32.store
0000b3c: 02                                        ; alignment
0000b3d: 00                                        ; store offset
0000b3e: 23                                        ; global.get
0000b3f: 00                                        ; global index
0000b40: 41                                        ; i32.const
0000b41: 08                                        ; i32 literal
0000b42: 6a                                        ; i32.add
0000b43: 21                                        ; local.set
0000b44: 01                                        ; local index
0000b45: 20                                        ; local.get
0000b46: 01                                        ; local index
0000b47: 41                                        ; i32.const
0000b48: 78                                        ; i32 literal
0000b49: 6a                                        ; i32.add
0000b4a: 41                                        ; i32.const
0000b4b: 08                                        ; i32 literal
0000b4c: 23                                        ; global.get
0000b4d: 0d                                        ; global index
0000b4e: 41                                        ; i32.const
0000b4f: 01                                        ; i32 literal
0000b50: 6b                                        ; i32.sub
0000b51: 41                                        ; i32.const
0000b52: 04                                        ; i32 literal
0000b53: 6c                                        ; i32.mul
0000b54: 6a                                        ; i32.add
0000b55: 6a                                        ; i32.add
0000b56: 24                                        ; global.set
0000b57: 00                                        ; global index
0000b58: 20                                        ; local.get
0000b59: 01                                        ; local index
0000b5a: 41                                        ; i32.const
0000b5b: 78                                        ; i32 literal
0000b5c: 6a                                        ; i32.add
0000b5d: 24                                        ; global.set
0000b5e: 0f                                        ; global index
0000b5f: 23                                        ; global.get
0000b60: 00                                        ; global index
0000b61: 41                                        ; i32.const
0000b62: fd04                                      ; i32 literal
0000b64: 36                                        ; i32.store
0000b65: 02                                        ; alignment
0000b66: 00                                        ; store offset
0000b67: 23                                        ; global.get
0000b68: 00                                        ; global index
0000b69: 41                                        ; i32.const
0000b6a: 04                                        ; i32 literal
0000b6b: 6a                                        ; i32.add
0000b6c: 23                                        ; global.get
0000b6d: 0d                                        ; global index
0000b6e: 41                                        ; i32.const
0000b6f: 04                                        ; i32 literal
0000b70: 6c                                        ; i32.mul
0000b71: 41                                        ; i32.const
0000b72: 01                                        ; i32 literal
0000b73: 6b                                        ; i32.sub
0000b74: 36                                        ; i32.store
0000b75: 02                                        ; alignment
0000b76: 00                                        ; store offset
0000b77: 23                                        ; global.get
0000b78: 00                                        ; global index
0000b79: 41                                        ; i32.const
0000b7a: 08                                        ; i32 literal
0000b7b: 6a                                        ; i32.add
0000b7c: 21                                        ; local.set
0000b7d: 02                                        ; local index
0000b7e: 20                                        ; local.get
0000b7f: 02                                        ; local index
0000b80: 41                                        ; i32.const
0000b81: 78                                        ; i32 literal
0000b82: 6a                                        ; i32.add
0000b83: 41                                        ; i32.const
0000b84: 08                                        ; i32 literal
0000b85: 23                                        ; global.get
0000b86: 0d                                        ; global index
0000b87: 41                                        ; i32.const
0000b88: 04                                        ; i32 literal
0000b89: 6c                                        ; i32.mul
0000b8a: 41                                        ; i32.const
0000b8b: 01                                        ; i32 literal
0000b8c: 6b                                        ; i32.sub
0000b8d: 41                                        ; i32.const
0000b8e: 04                                        ; i32 literal
0000b8f: 6c                                        ; i32.mul
0000b90: 6a                                        ; i32.add
0000b91: 6a                                        ; i32.add
0000b92: 24                                        ; global.set
0000b93: 00                                        ; global index
0000b94: 20                                        ; local.get
0000b95: 02                                        ; local index
0000b96: 41                                        ; i32.const
0000b97: 78                                        ; i32 literal
0000b98: 6a                                        ; i32.add
0000b99: 24                                        ; global.set
0000b9a: 10                                        ; global index
0000b9b: 23                                        ; global.get
0000b9c: 00                                        ; global index
0000b9d: 41                                        ; i32.const
0000b9e: fd04                                      ; i32 literal
0000ba0: 36                                        ; i32.store
0000ba1: 02                                        ; alignment
0000ba2: 00                                        ; store offset
0000ba3: 23                                        ; global.get
0000ba4: 00                                        ; global index
0000ba5: 41                                        ; i32.const
0000ba6: 04                                        ; i32 literal
0000ba7: 6a                                        ; i32.add
0000ba8: 23                                        ; global.get
0000ba9: 0c                                        ; global index
0000baa: 41                                        ; i32.const
0000bab: 01                                        ; i32 literal
0000bac: 6b                                        ; i32.sub
0000bad: 36                                        ; i32.store
0000bae: 02                                        ; alignment
0000baf: 00                                        ; store offset
0000bb0: 23                                        ; global.get
0000bb1: 00                                        ; global index
0000bb2: 41                                        ; i32.const
0000bb3: 08                                        ; i32 literal
0000bb4: 6a                                        ; i32.add
0000bb5: 21                                        ; local.set
0000bb6: 03                                        ; local index
0000bb7: 20                                        ; local.get
0000bb8: 03                                        ; local index
0000bb9: 41                                        ; i32.const
0000bba: 78                                        ; i32 literal
0000bbb: 6a                                        ; i32.add
0000bbc: 41                                        ; i32.const
0000bbd: 08                                        ; i32 literal
0000bbe: 23                                        ; global.get
0000bbf: 0c                                        ; global index
0000bc0: 41                                        ; i32.const
0000bc1: 01                                        ; i32 literal
0000bc2: 6b                                        ; i32.sub
0000bc3: 41                                        ; i32.const
0000bc4: 04                                        ; i32 literal
0000bc5: 6c                                        ; i32.mul
0000bc6: 6a                                        ; i32.add
0000bc7: 6a                                        ; i32.add
0000bc8: 24                                        ; global.set
0000bc9: 00                                        ; global index
0000bca: 20                                        ; local.get
0000bcb: 03                                        ; local index
0000bcc: 41                                        ; i32.const
0000bcd: 78                                        ; i32 literal
0000bce: 6a                                        ; i32.add
0000bcf: 24                                        ; global.set
0000bd0: 11                                        ; global index
0000bd1: 0b                                        ; end
; move data: [af1, bd2) -> [af2, bd3)
0000af0: e101                                      ; FIXUP func body size
; function body 18
0000bd3: 00                                        ; func body size (guess)
0000bd4: 00                                        ; local decl count
0000bd5: 0b                                        ; end
0000bd3: 02                                        ; FIXUP func body size
; function body 19
0000bd6: 00                                        ; func body size (guess)
0000bd7: 01                                        ; local decl count
0000bd8: 02                                        ; local type count
0000bd9: 7f                                        ; i32
0000bda: 41                                        ; i32.const
0000bdb: 00                                        ; i32 literal
0000bdc: 21                                        ; local.set
0000bdd: 00                                        ; local index
0000bde: 02                                        ; block
0000bdf: 40                                        ; void
0000be0: 03                                        ; loop
0000be1: 40                                        ; void
0000be2: 20                                        ; local.get
0000be3: 00                                        ; local index
0000be4: 23                                        ; global.get
0000be5: 11                                        ; global index
0000be6: 41                                        ; i32.const
0000be7: 04                                        ; i32 literal
0000be8: 6a                                        ; i32.add
0000be9: 28                                        ; i32.load
0000bea: 02                                        ; alignment
0000beb: 00                                        ; load offset
0000bec: 41                                        ; i32.const
0000bed: 01                                        ; i32 literal
0000bee: 6b                                        ; i32.sub
0000bef: 4a                                        ; i32.gt_s
0000bf0: 0d                                        ; br_if
0000bf1: 01                                        ; break depth
0000bf2: 23                                        ; global.get
0000bf3: 11                                        ; global index
0000bf4: 41                                        ; i32.const
0000bf5: 08                                        ; i32 literal
0000bf6: 6a                                        ; i32.add
0000bf7: 20                                        ; local.get
0000bf8: 00                                        ; local index
0000bf9: 41                                        ; i32.const
0000bfa: 04                                        ; i32 literal
0000bfb: 6c                                        ; i32.mul
0000bfc: 6a                                        ; i32.add
0000bfd: 20                                        ; local.get
0000bfe: 01                                        ; local index
0000bff: 41                                        ; i32.const
0000c00: 78                                        ; i32 literal
0000c01: 6a                                        ; i32.add
0000c02: 36                                        ; i32.store
0000c03: 02                                        ; alignment
0000c04: 00                                        ; store offset
0000c05: 20                                        ; local.get
0000c06: 00                                        ; local index
0000c07: 41                                        ; i32.const
0000c08: 01                                        ; i32 literal
0000c09: 6a                                        ; i32.add
0000c0a: 21                                        ; local.set
0000c0b: 00                                        ; local index
0000c0c: 0c                                        ; br
0000c0d: 00                                        ; break depth
0000c0e: 0b                                        ; end
0000c0f: 0b                                        ; end
0000c10: 0b                                        ; end
0000bd6: 3a                                        ; FIXUP func body size
; function body 20
0000c11: 00                                        ; func body size (guess)
0000c12: 00                                        ; local decl count
0000c13: 0b                                        ; end
0000c11: 02                                        ; FIXUP func body size
; move data: [2d2, c14) -> [2d3, c15)
00002d1: c212                                      ; FIXUP section size
; section "Data" (11)
0000c15: 0b                                        ; section code
0000c16: 00                                        ; section size (guess)
0000c17: 0c                                        ; num data segments
; data segment header 0
0000c18: 00                                      
0000c19: 41                                        ; i32.const
0000c1a: be07                                      ; i32 literal
0000c1c: 0b                                        ; end
0000c1d: 0b                                        ; data segment size
; data segment data 0
0000c1e: 5765 6247 4c2d 4465 6d6f 00               ; data segment data
; data segment header 1
0000c29: 00                                      
0000c2a: 41                                        ; i32.const
0000c2b: c907                                      ; i32 literal
0000c2d: 0b                                        ; end
0000c2e: 51                                        ; data segment size
; data segment data 1
0000c2f: 5765 6241 7373 656d 626c 7920 636f 6e76 
0000c3f: 6572 7369 6f6e 2064 656d 6f6e 7374 7261 
0000c4f: 7469 6e67 2074 6865 2066 6173 7465 722d 
0000c5f: 7065 7266 6f72 6d69 6e67 2067 7269 6420 
0000c6f: 6f66 206c 696e 6b65 642d 6c69 7374 732e 
0000c7f: 00                                        ; data segment data
; data segment header 2
0000c80: 00                                      
0000c81: 41                                        ; i32.const
0000c82: 9a08                                      ; i32 literal
0000c84: 0b                                        ; end
0000c85: 04                                        ; data segment size
; data segment data 2
0000c86: 4d49 5400                                 ; data segment data
; data segment header 3
0000c8a: 00                                      
0000c8b: 41                                        ; i32.const
0000c8c: 9e08                                      ; i32 literal
0000c8e: 0b                                        ; end
0000c8f: 0b                                        ; data segment size
; data segment data 3
0000c90: 5765 6247 4c2d 4465 6d6f 00               ; data segment data
; data segment header 4
0000c9b: 00                                      
0000c9c: 41                                        ; i32.const
0000c9d: a908                                      ; i32 literal
0000c9f: 0b                                        ; end
0000ca0: 46                                        ; data segment size
; data segment data 4
0000ca1: 6874 7470 733a 2f2f 6769 7468 7562 2e63 
0000cb1: 6f6d 2f67 7579 6265 6466 6f72 642f 7761 
0000cc1: 736d 2d64 656d 6f2f 626c 6f62 2f6d 6173 
0000cd1: 7465 722f 6e61 7469 7665 2f64 656d 6f2d 
0000ce1: 6f70 742e 6300                            ; data segment data
; data segment header 5
0000ce7: 00                                      
0000ce8: 41                                        ; i32.const
0000ce9: ef08                                      ; i32 literal
0000ceb: 0b                                        ; end
0000cec: 0e                                        ; data segment size
; data segment data 5
0000ced: 7661 6e69 6c6c 6176 622e 6170 7000        ; data segment data
; data segment header 6
0000cfb: 00                                      
0000cfc: 41                                        ; i32.const
0000cfd: fd08                                      ; i32 literal
0000cff: 0b                                        ; end
0000d00: 25                                        ; data segment size
; data segment data 6
0000d01: 3833 6361 3262 3933 2d34 6535 372d 3464 
0000d11: 3434 2d62 3262 632d 3136 3332 3532 6139 
0000d21: 3330 3564 00                              ; data segment data
; data segment header 7
0000d26: 00                                      
0000d27: 41                                        ; i32.const
0000d28: a209                                      ; i32 literal
0000d2a: 0b                                        ; end
0000d2b: 08                                        ; data segment size
; data segment data 7
0000d2c: 312e 302e 302e 3000                       ; data segment data
; data segment header 8
0000d34: 00                                      
0000d35: 41                                        ; i32.const
0000d36: aa09                                      ; i32 literal
0000d38: 0b                                        ; end
0000d39: 08                                        ; data segment size
; data segment data 8
0000d3a: 312e 302e 302e 3000                       ; data segment data
; data segment header 9
0000d42: 00                                      
0000d43: 41                                        ; i32.const
0000d44: 0b                                        ; i32 literal
0000d45: 0b                                        ; end
0000d46: d102                                      ; data segment size
; data segment data 9
0000d48: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000d58: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
0000d68: 6448 4969 4f6e 7369 566d 4673 6457 5569 
0000d78: 4f6a 4578 6653 7769 5932 7868 6333 4d69 
0000d88: 4f69 4a44 6158 4a6a 6247 5569 4c43 4a6a 
0000d98: 6247 467a 6331 3970 5a43 4936 4d54 4573 
0000da8: 496d 5a70 5a57 786b 6379 4936 6579 4a34 
0000db8: 496a 7037 496d 646c 626d 5679 6157 4d69 
0000dc8: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a6d 
0000dd8: 4d7a 4969 4c43 4a30 6558 426c 496a 6f7a 
0000de8: 6653 7769 6553 4936 6579 4a6e 5a57 356c 
0000df8: 636d 6c6a 496a 7062 5853 7769 636d 4633 
0000e08: 496a 6f69 5a6a 4d79 4969 7769 6448 6c77 
0000e18: 5a53 4936 4d33 3073 496e 4969 4f6e 7369 
0000e28: 5a32 5675 5a58 4a70 5979 4936 5731 3073 
0000e38: 496e 4a68 6479 4936 496d 597a 4d69 4973 
0000e48: 496e 5235 6347 5569 4f6a 4e39 6653 7769 
0000e58: 6158 4e54 6448 4a31 5933 5169 4f6d 5a68 
0000e68: 6248 4e6c 4c43 4a74 5a58 526f 6232 527a 
0000e78: 496a 7037 6653 7769 626d 4674 5a58 4e77 
0000e88: 5957 4e6c 496a 7075 6457 7873 6651 3d3d 
0000e98: 00                                        ; data segment data
; data segment header 10
0000e99: 00                                      
0000e9a: 41                                        ; i32.const
0000e9b: dc02                                      ; i32 literal
0000e9d: 0b                                        ; end
0000e9e: a102                                      ; data segment size
; data segment data 10
0000ea0: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000eb0: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
0000ec0: 6448 4969 4f6e 7369 566d 4673 6457 5569 
0000ed0: 4f6a 4d30 4f48 3073 496d 4e73 5958 4e7a 
0000ee0: 496a 6f69 5132 6c79 5932 786c 5669 4973 
0000ef0: 496d 4e73 5958 4e7a 5832 6c6b 496a 6f7a 
0000f00: 4e44 6773 496d 5a70 5a57 786b 6379 4936 
0000f10: 6579 4a32 6553 4936 6579 4a6e 5a57 356c 
0000f20: 636d 6c6a 496a 7062 5853 7769 636d 4633 
0000f30: 496a 6f69 5a6a 4d79 4969 7769 6448 6c77 
0000f40: 5a53 4936 4d33 3073 496e 5a34 496a 7037 
0000f50: 496d 646c 626d 5679 6157 4d69 4f6c 7464 
0000f60: 4c43 4a79 5958 6369 4f69 4a6d 4d7a 4969 
0000f70: 4c43 4a30 6558 426c 496a 6f7a 6658 3073 
0000f80: 496d 6c7a 5533 5279 6457 4e30 496a 706d 
0000f90: 5957 787a 5a53 7769 6257 5630 6147 396b 
0000fa0: 6379 4936 6533 3073 496d 3568 6257 567a 
0000fb0: 6347 466a 5a53 4936 626e 5673 6248 303d 
0000fc0: 00                                        ; data segment data
; data segment header 11
0000fc1: 00                                      
0000fc2: 41                                        ; i32.const
0000fc3: fd04                                      ; i32 literal
0000fc5: 0b                                        ; end
0000fc6: c502                                      ; data segment size
; data segment data 11
0000fc8: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000fd8: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
0000fe8: 6448 4969 4f6e 7369 566d 4673 6457 5569 
0000ff8: 4f6a 597a 4e33 3073 496d 4e73 5958 4e7a 
0001008: 496a 6f69 5132 5673 6245 4e70 636d 4e73 
0001018: 5a53 4973 496d 4e73 5958 4e7a 5832 6c6b 
0001028: 496a 6f32 4d7a 6373 496d 5a70 5a57 786b 
0001038: 6379 4936 6579 4a75 5a58 6830 496a 7037 
0001048: 496d 646c 626d 5679 6157 4d69 4f6c 7464 
0001058: 4c43 4a79 5958 6369 4f69 4a62 4e6a 4d33 
0001068: 5855 4e6c 6247 7844 6158 4a6a 6247 5569 
0001078: 4c43 4a30 6558 426c 496a 6f78 4d48 3073 
0001088: 496d 4e70 636d 4e73 5a55 6c75 5a47 5634 
0001098: 496a 7037 496d 646c 626d 5679 6157 4d69 
00010a8: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a70 
00010b8: 4d7a 4969 4c43 4a30 6558 426c 496a 6f78 
00010c8: 6658 3073 496d 6c7a 5533 5279 6457 4e30 
00010d8: 496a 706d 5957 787a 5a53 7769 6257 5630 
00010e8: 6147 396b 6379 4936 6533 3073 496d 3568 
00010f8: 6257 567a 6347 466a 5a53 4936 626e 5673 
0001108: 6248 303d 00                              ; data segment data
; move data: [c17, 110d) -> [c18, 110e)
0000c16: f609                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0126 0760 027c 7c01 
0000010: 7c60 017c 017c 6000 017c 6000 017f 6002 
0000020: 7d7d 0060 0000 6006 7d7d 7d7d 7d7d 017f 
0000030: 0267 0804 4d61 7468 0370 6f77 0000 044d 
0000040: 6174 6804 7371 7274 0001 044d 6174 6803 
0000050: 6578 7000 0104 4d61 7468 0363 6f73 0001 
0000060: 044d 6174 6806 7261 6e64 6f6d 0002 044d 
0000070: 6174 6804 6365 696c 0001 044d 6174 6805 
0000080: 666c 6f6f 7200 0103 656e 760a 6279 7465 
0000090: 6368 756e 6b73 0200 0103 1615 0304 0504 
00000a0: 0504 0603 0303 0303 0303 0303 0505 0505 
00000b0: 0506 9c01 127f 0141 b209 0b7c 0144 6957 
00000c0: 148b 0abf 0540 0b7c 0144 182d 4454 fb21 
00000d0: 0940 0b7f 0141 ffff ffff 070b 7e01 42ff 
00000e0: ffff ffff ffff ffff 000b 7d01 43ff ff7f 
00000f0: 7f0b 7c01 44ff ffff ffff ffef 7f0b 7f01 
0000100: 4180 8080 8078 0b7e 0142 8080 8080 8080 
0000110: 8080 807f 0b7d 0143 ffff 7fff 0b7c 0144 
0000120: ffff ffff ffff efff 0b7f 0141 f800 0b7f 
0000130: 0141 c600 0b7f 0141 90ce 000b 7f01 4100 
0000140: 0b7f 0141 000b 7f01 4100 0b7f 0141 000b 
0000150: 07fa 020d 1d41 6c67 6f72 6974 686d 2e67 
0000160: 6574 4369 7263 6c65 4461 7461 4f66 6673 
0000170: 6574 0007 0e41 6c67 6f72 6974 686d 2e69 
0000180: 6e69 7400 0812 416c 676f 7269 7468 6d2e 
0000190: 7469 6d65 5374 6570 000c 1a4d 6174 682e 
00001a0: 6465 7465 6374 4369 7263 6c65 436f 6c6c 
00001b0: 6973 696f 6e00 0d1a 4173 7365 6d62 6c79 
00001c0: 496e 666f 2e41 7373 656d 626c 7954 6974 
00001d0: 6c65 000e 2041 7373 656d 626c 7949 6e66 
00001e0: 6f2e 4173 7365 6d62 6c79 4465 7363 7269 
00001f0: 7074 696f 6e00 0f1c 4173 7365 6d62 6c79 
0000200: 496e 666f 2e41 7373 656d 626c 7943 6f6d 
0000210: 7061 6e79 0010 1c41 7373 656d 626c 7949 
0000220: 6e66 6f2e 4173 7365 6d62 6c79 5072 6f64 
0000230: 7563 7400 111e 4173 7365 6d62 6c79 496e 
0000240: 666f 2e41 7373 656d 626c 7943 6f70 7972 
0000250: 6967 6874 0012 1e41 7373 656d 626c 7949 
0000260: 6e66 6f2e 4173 7365 6d62 6c79 5472 6164 
0000270: 656d 6172 6b00 1311 4173 7365 6d62 6c79 
0000280: 496e 666f 2e47 7569 6400 141c 4173 7365 
0000290: 6d62 6c79 496e 666f 2e41 7373 656d 626c 
00002a0: 7956 6572 7369 6f6e 0015 2041 7373 656d 
00002b0: 626c 7949 6e66 6f2e 4173 7365 6d62 6c79 
00002c0: 4669 6c65 5665 7273 696f 6e00 1608 0117 
00002d0: 0ac2 1215 0701 047f 230e 0f0b b103 0302 
00002e0: 7f03 7d01 7f41 0021 0202 4003 4020 0223 
00002f0: 0d41 016b 4a0d 0141 0021 0343 0000 0000 
0000300: 2104 4300 0000 0021 0543 0000 0000 2106 
0000310: 0240 0340 4100 2103 2000 bb10 04a2 b621 
0000320: 0420 01bb 1004 a2b6 2105 1004 4108 b7a2 
0000330: 1002 44ee 5a42 3ee8 4937 40a3 1005 b621 
0000340: 0620 0020 0420 0692 9341 00b2 5d20 0420 
0000350: 0693 4100 b25d 6a20 0120 0520 0692 9341 
0000360: 00b2 5d6a 2005 2006 9341 00b2 5d6a 0440 
0000370: 4101 2103 0541 0021 0702 4003 4020 0720 
0000380: 0241 016b 4a0d 0120 0420 0520 0623 0e41 
0000390: 086a 2007 4104 6c6a 2802 0041 006a 2a02 
00003a0: 0023 0e41 086a 2007 4104 6c6a 2802 0041 
00003b0: 046a 2a02 0023 0e41 086a 2007 4104 6c6a 
00003c0: 2802 0041 086a 2a02 0010 0d04 4041 0121 
00003d0: 0341 010d 050b 2007 4101 6a21 070c 000b 
00003e0: 0b0b 2003 450d 010c 000b 0b23 0e41 086a 
00003f0: 2002 4104 6c6a 2802 0041 006a 2004 3802 
0000400: 0023 0e41 086a 2002 4104 6c6a 2802 0041 
0000410: 046a 2005 3802 0023 0e41 086a 2002 4104 
0000420: 6c6a 2802 0041 086a 2006 3802 0023 0f41 
0000430: 086a 2002 4104 6c6a 2802 0041 046a 1004 
0000440: 4400 0000 0000 00e0 3fa1 449a 9999 9999 
0000450: 99b9 3fa2 b638 0200 230f 4108 6a20 0241 
0000460: 046c 6a28 0200 4100 6a10 0444 0000 0000 
0000470: 0000 e03f a144 9a99 9999 9999 b93f a2b6 
0000480: 3802 0020 0241 016a 2102 0c00 0b0b 0b5e 
0000490: 0103 7f41 0021 0002 4003 4020 0023 0c41 
00004a0: 016b 4a0d 0123 1141 086a 2000 4104 6c6a 
00004b0: 2802 0021 0141 0021 0202 4003 4020 0223 
00004c0: 0b41 016b 4a0d 0120 0141 086a 2002 4104 
00004d0: 6c6a 4100 3602 0020 0241 016a 2102 0c00 
00004e0: 0b0b 2000 4101 6a21 000c 000b 0b0b f404 
00004f0: 0302 7f05 7d08 7f41 0021 0241 0021 0302 
0000500: 4003 4020 0323 0d41 016b 4a0d 0123 0e41 
0000510: 086a 2003 4104 6c6a 2802 0041 006a 2a02 
0000520: 0021 0423 0e41 086a 2003 4104 6c6a 2802 
0000530: 0041 046a 2a02 0021 0523 0e41 086a 2003 
0000540: 4104 6c6a 2802 0041 086a 2a02 0021 0623 
0000550: 0f41 086a 2003 4104 6c6a 2802 0041 046a 
0000560: 2a02 0021 0723 0f41 086a 2003 4104 6c6a 
0000570: 2802 0041 006a 2a02 0021 0820 08bb 442d 
0000580: 431c ebe2 361a 3fa0 b621 0820 0020 0420 
0000590: 0692 9341 00b2 5d20 0741 00b2 5e6c 2004 
00005a0: 2006 9341 00b2 5d20 0741 00b2 5d6c 6a04 
00005b0: 4043 0000 0000 2007 9321 070b 2001 2005 
00005c0: 2006 9293 4100 b25d 2008 4100 b25e 6c20 
00005d0: 0520 0693 4100 b25d 2008 4100 b25d 6c6a 
00005e0: 0440 4300 0000 0020 0893 2108 0b23 0e41 
00005f0: 086a 2003 4104 6c6a 2802 0041 006a 2004 
0000600: 2007 9238 0200 230e 4108 6a20 0341 046c 
0000610: 6a28 0200 4104 6a20 0520 0892 3802 0023 
0000620: 0f41 086a 2003 4104 6c6a 2802 0041 046a 
0000630: 2007 3802 0023 0f41 086a 2003 4104 6c6a 
0000640: 2802 0041 006a 2008 3802 0020 0420 0693 
0000650: bb20 00bb a323 0cb7 a210 06aa 2109 2004 
0000660: 2006 92bb 2000 bba3 230c b7a2 1006 aa21 
0000670: 0a20 0520 0693 bb20 01bb a323 0bb7 a210 
0000680: 06aa 210b 2005 2006 92bb 2001 bba3 230b 
0000690: b7a2 1006 aa21 0c20 0941 0048 0440 4100 
00006a0: 2109 0b20 0a23 0c4e 0440 230c 4101 6b21 
00006b0: 0a0b 200b 4100 4804 4041 0021 0b0b 200c 
00006c0: 230b 4e04 4023 0b41 016b 210c 0b20 0921 
00006d0: 0d02 4003 4020 0d20 0a4a 0d01 2311 4108 
00006e0: 6a20 0d41 046c 6a28 0200 210e 200b 210f 
00006f0: 0240 0340 200f 200c 4a0d 0123 1041 086a 
0000700: 2002 4104 6c6a 2802 0021 1020 0241 016a 
0000710: 2102 2010 4104 6a20 0336 0200 2010 4100 
0000720: 6a20 0e41 086a 200f 4104 6c6a 2802 0036 
0000730: 0200 200e 4108 6a20 0f41 046c 6a20 1036 
0000740: 0200 200f 4101 6a21 0f0c 000b 0b20 0d41 
0000750: 016a 210d 0c00 0b0b 2003 4101 6a21 030c 
0000760: 000b 0b0b d705 0705 7f05 7d02 7f07 7d01 
0000770: 7c04 7d04 7c41 0021 0002 4003 4020 0023 
0000780: 0c41 016b 4a0d 0123 1141 086a 2000 4104 
0000790: 6c6a 2802 0021 0141 0021 0202 4003 4020 
00007a0: 0223 0b41 016b 4a0d 0120 0141 086a 2002 
00007b0: 4104 6c6a 2802 0021 0302 4003 4020 0341 
00007c0: 0046 4545 0d01 2003 4104 6a28 0200 2104 
00007d0: 230e 4108 6a20 0441 046c 6a28 0200 4100 
00007e0: 6a2a 0200 2105 230e 4108 6a20 0441 046c 
00007f0: 6a28 0200 4104 6a2a 0200 2106 230e 4108 
0000800: 6a20 0441 046c 6a28 0200 4108 6a2a 0200 
0000810: 2107 230f 4108 6a20 0441 046c 6a28 0200 
0000820: 4104 6a2a 0200 2108 230f 4108 6a20 0441 
0000830: 046c 6a28 0200 4100 6a2a 0200 2109 2003 
0000840: 210a 200a 4100 6a28 0200 210a 0240 0340 
0000850: 200a 4100 4645 450d 0120 0a41 046a 2802 
0000860: 0021 0b23 0e41 086a 200b 4104 6c6a 2802 
0000870: 0041 006a 2a02 0021 0c23 0e41 086a 200b 
0000880: 4104 6c6a 2802 0041 046a 2a02 0021 0d23 
0000890: 0e41 086a 200b 4104 6c6a 2802 0041 086a 
00008a0: 2a02 0021 0e20 0520 0620 0720 0c20 0d20 
00008b0: 0e10 0d04 4023 0f41 086a 200b 4104 6c6a 
00008c0: 2802 0041 046a 2a02 0021 0f23 0f41 086a 
00008d0: 200b 4104 6c6a 2802 0041 006a 2a02 0021 
00008e0: 1020 0c20 0593 2111 200d 2006 9321 1220 
00008f0: 1120 1194 2012 2012 9492 bb10 0121 1320 
0000900: 11bb 2013 a3b6 2111 2012 bb20 13a3 b621 
0000910: 1220 1120 0894 2012 2009 9492 2114 2011 
0000920: 200f 9420 1220 1094 9221 1520 1420 1593 
0000930: 4100 b25f 4504 4020 0720 0e92 2116 2007 
0000940: 200e 9321 1720 1420 1794 4102 b220 0e94 
0000950: 2015 9492 bb20 16bb a321 1841 02b2 2007 
0000960: 9420 1494 2015 2017 9493 bb20 16bb a321 
0000970: 1920 1820 14bb a121 1a20 1920 15bb a121 
0000980: 1b23 0f41 086a 2004 4104 6c6a 2802 0041 
0000990: 046a 2008 bb20 11bb 201a a2a0 b638 0200 
00009a0: 230f 4108 6a20 0441 046c 6a28 0200 4100 
00009b0: 6a20 09bb 2012 bb20 1aa2 a0b6 3802 0023 
00009c0: 0f41 086a 200b 4104 6c6a 2802 0041 046a 
00009d0: 200f bb20 11bb 201b a2a0 b638 0200 230f 
00009e0: 4108 6a20 0b41 046c 6a28 0200 4100 6a20 
00009f0: 10bb 2012 bb20 1ba2 a0b6 3802 0020 0a41 
0000a00: 006a 2802 0021 0a0b 0520 0a41 006a 2802 
0000a10: 0021 0a0b 0c00 0b0b 2003 4100 6a28 0200 
0000a20: 2103 0c00 0b0b 2002 4101 6a21 020c 000b 
0000a30: 0b20 0041 016a 2100 0c00 0b0b 0b0c 0010 
0000a40: 0920 0020 0110 0a10 0b0b 5c01 027f 2000 
0000a50: 2002 9220 0320 0593 5d20 0020 0293 2003 
0000a60: 2005 925e 6a20 0120 0292 2004 2005 935d 
0000a70: 6a20 0120 0293 2004 2005 925e 6a04 4041 
0000a80: 000f 0b20 0320 0093 bb41 02b2 bb10 0020 
0000a90: 0420 0193 bb41 02b2 bb10 00a0 1001 2002 
0000aa0: 2005 92bb 650f 0b06 0041 be07 0f0b 0600 
0000ab0: 41c9 070f 0b06 0041 9a08 0f0b 0600 419e 
0000ac0: 080f 0b06 0041 a908 0f0b 0600 41ef 080f 
0000ad0: 0b06 0041 fd08 0f0b 0600 41a2 090f 0b06 
0000ae0: 0041 aa09 0f0b 0a00 1018 1019 101a 101b 
0000af0: 0be1 0101 047f 2300 410b 3602 0023 0041 
0000b00: 046a 230d 4101 6b36 0200 2300 4108 6a21 
0000b10: 0020 0041 786a 4108 230d 4101 6b41 046c 
0000b20: 6a6a 2400 2000 4178 6a24 0e23 0041 dc02 
0000b30: 3602 0023 0041 046a 230d 4101 6b36 0200 
0000b40: 2300 4108 6a21 0120 0141 786a 4108 230d 
0000b50: 4101 6b41 046c 6a6a 2400 2001 4178 6a24 
0000b60: 0f23 0041 fd04 3602 0023 0041 046a 230d 
0000b70: 4104 6c41 016b 3602 0023 0041 086a 2102 
0000b80: 2002 4178 6a41 0823 0d41 046c 4101 6b41 
0000b90: 046c 6a6a 2400 2002 4178 6a24 1023 0041 
0000ba0: fd04 3602 0023 0041 046a 230c 4101 6b36 
0000bb0: 0200 2300 4108 6a21 0320 0341 786a 4108 
0000bc0: 230c 4101 6b41 046c 6a6a 2400 2003 4178 
0000bd0: 6a24 110b 0200 0b3a 0102 7f41 0021 0002 
0000be0: 4003 4020 0023 1141 046a 2802 0041 016b 
0000bf0: 4a0d 0123 1141 086a 2000 4104 6c6a 2001 
0000c00: 4178 6a36 0200 2000 4101 6a21 000c 000b 
0000c10: 0b0b 0200 0b0b f609 0c00 41be 070b 0b57 
0000c20: 6562 474c 2d44 656d 6f00 0041 c907 0b51 
0000c30: 5765 6241 7373 656d 626c 7920 636f 6e76 
0000c40: 6572 7369 6f6e 2064 656d 6f6e 7374 7261 
0000c50: 7469 6e67 2074 6865 2066 6173 7465 722d 
0000c60: 7065 7266 6f72 6d69 6e67 2067 7269 6420 
0000c70: 6f66 206c 696e 6b65 642d 6c69 7374 732e 
0000c80: 0000 419a 080b 044d 4954 0000 419e 080b 
0000c90: 0b57 6562 474c 2d44 656d 6f00 0041 a908 
0000ca0: 0b46 6874 7470 733a 2f2f 6769 7468 7562 
0000cb0: 2e63 6f6d 2f67 7579 6265 6466 6f72 642f 
0000cc0: 7761 736d 2d64 656d 6f2f 626c 6f62 2f6d 
0000cd0: 6173 7465 722f 6e61 7469 7665 2f64 656d 
0000ce0: 6f2d 6f70 742e 6300 0041 ef08 0b0e 7661 
0000cf0: 6e69 6c6c 6176 622e 6170 7000 0041 fd08 
0000d00: 0b25 3833 6361 3262 3933 2d34 6535 372d 
0000d10: 3464 3434 2d62 3262 632d 3136 3332 3532 
0000d20: 6139 3330 3564 0000 41a2 090b 0831 2e30 
0000d30: 2e30 2e30 0000 41aa 090b 0831 2e30 2e30 
0000d40: 2e30 0000 410b 0bd1 0265 794a 6a62 3231 
0000d50: 745a 5735 3049 6a70 7564 5778 734c 434a 
0000d60: 745a 5731 7663 6e6c 5164 4849 694f 6e73 
0000d70: 6956 6d46 7364 5755 694f 6a45 7866 5377 
0000d80: 6959 3278 6863 334d 694f 694a 4461 584a 
0000d90: 6a62 4755 694c 434a 6a62 4746 7a63 3139 
0000da0: 705a 4349 364d 5445 7349 6d5a 705a 5778 
0000db0: 6b63 7949 3665 794a 3449 6a70 3749 6d64 
0000dc0: 6c62 6d56 7961 574d 694f 6c74 644c 434a 
0000dd0: 7959 5863 694f 694a 6d4d 7a49 694c 434a 
0000de0: 3065 5842 6c49 6a6f 7a66 5377 6965 5349 
0000df0: 3665 794a 6e5a 5735 6c63 6d6c 6a49 6a70 
0000e00: 6258 5377 6963 6d46 3349 6a6f 695a 6a4d 
0000e10: 7949 6977 6964 486c 775a 5349 364d 3330 
0000e20: 7349 6e49 694f 6e73 695a 3256 755a 584a 
0000e30: 7059 7949 3657 3130 7349 6e4a 6864 7949 
0000e40: 3649 6d59 7a4d 6949 7349 6e52 3563 4755 
0000e50: 694f 6a4e 3966 5377 6961 584e 5464 484a 
0000e60: 3159 3351 694f 6d5a 6862 484e 6c4c 434a 
0000e70: 745a 5852 6f62 3252 7a49 6a70 3766 5377 
0000e80: 6962 6d46 745a 584e 7759 574e 6c49 6a70 
0000e90: 7564 5778 7366 513d 3d00 0041 dc02 0ba1 
0000ea0: 0265 794a 6a62 3231 745a 5735 3049 6a70 
0000eb0: 7564 5778 734c 434a 745a 5731 7663 6e6c 
0000ec0: 5164 4849 694f 6e73 6956 6d46 7364 5755 
0000ed0: 694f 6a4d 304f 4830 7349 6d4e 7359 584e 
0000ee0: 7a49 6a6f 6951 326c 7959 3278 6c56 6949 
0000ef0: 7349 6d4e 7359 584e 7a58 326c 6b49 6a6f 
0000f00: 7a4e 4467 7349 6d5a 705a 5778 6b63 7949 
0000f10: 3665 794a 3265 5349 3665 794a 6e5a 5735 
0000f20: 6c63 6d6c 6a49 6a70 6258 5377 6963 6d46 
0000f30: 3349 6a6f 695a 6a4d 7949 6977 6964 486c 
0000f40: 775a 5349 364d 3330 7349 6e5a 3449 6a70 
0000f50: 3749 6d64 6c62 6d56 7961 574d 694f 6c74 
0000f60: 644c 434a 7959 5863 694f 694a 6d4d 7a49 
0000f70: 694c 434a 3065 5842 6c49 6a6f 7a66 5830 
0000f80: 7349 6d6c 7a55 3352 7964 574e 3049 6a70 
0000f90: 6d59 5778 7a5a 5377 6962 5756 3061 4739 
0000fa0: 6b63 7949 3665 3330 7349 6d35 6862 5756 
0000fb0: 7a63 4746 6a5a 5349 3662 6e56 7362 4830 
0000fc0: 3d00 0041 fd04 0bc5 0265 794a 6a62 3231 
0000fd0: 745a 5735 3049 6a70 7564 5778 734c 434a 
0000fe0: 745a 5731 7663 6e6c 5164 4849 694f 6e73 
0000ff0: 6956 6d46 7364 5755 694f 6a59 7a4e 3330 
0001000: 7349 6d4e 7359 584e 7a49 6a6f 6951 3256 
0001010: 7362 454e 7063 6d4e 735a 5349 7349 6d4e 
0001020: 7359 584e 7a58 326c 6b49 6a6f 324d 7a63 
0001030: 7349 6d5a 705a 5778 6b63 7949 3665 794a 
0001040: 755a 5868 3049 6a70 3749 6d64 6c62 6d56 
0001050: 7961 574d 694f 6c74 644c 434a 7959 5863 
0001060: 694f 694a 624e 6a4d 3358 554e 6c62 4778 
0001070: 4461 584a 6a62 4755 694c 434a 3065 5842 
0001080: 6c49 6a6f 784d 4830 7349 6d4e 7063 6d4e 
0001090: 735a 556c 755a 4756 3449 6a70 3749 6d64 
00010a0: 6c62 6d56 7961 574d 694f 6c74 644c 434a 
00010b0: 7959 5863 694f 694a 704d 7a49 694c 434a 
00010c0: 3065 5842 6c49 6a6f 7866 5830 7349 6d6c 
00010d0: 7a55 3352 7964 574e 3049 6a70 6d59 5778 
00010e0: 7a5a 5377 6962 5756 3061 4739 6b63 7949 
00010f0: 3665 3330 7349 6d35 6862 5756 7a63 4746 
0001100: 6a5a 5349 3662 6e56 7362 4830 3d00      
