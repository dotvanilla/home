0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 0c                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7c                                        ; f64
000000e: 7c                                        ; f64
000000f: 01                                        ; num results
0000010: 7c                                        ; f64
; type 1
0000011: 60                                        ; func
0000012: 01                                        ; num params
0000013: 7c                                        ; f64
0000014: 01                                        ; num results
0000015: 7c                                        ; f64
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 00                                        ; num results
; type 4
000001f: 60                                        ; func
0000020: 01                                        ; num params
0000021: 7f                                        ; i32
0000022: 00                                        ; num results
; type 5
0000023: 60                                        ; func
0000024: 03                                        ; num params
0000025: 7f                                        ; i32
0000026: 7f                                        ; i32
0000027: 7f                                        ; i32
0000028: 01                                        ; num results
0000029: 7f                                        ; i32
; type 6
000002a: 60                                        ; func
000002b: 02                                        ; num params
000002c: 7f                                        ; i32
000002d: 7f                                        ; i32
000002e: 01                                        ; num results
000002f: 7f                                        ; i32
; type 7
0000030: 60                                        ; func
0000031: 01                                        ; num params
0000032: 7f                                        ; i32
0000033: 01                                        ; num results
0000034: 7f                                        ; i32
; type 8
0000035: 60                                        ; func
0000036: 00                                        ; num params
0000037: 01                                        ; num results
0000038: 7f                                        ; i32
; type 9
0000039: 60                                        ; func
000003a: 02                                        ; num params
000003b: 7d                                        ; f32
000003c: 7d                                        ; f32
000003d: 00                                        ; num results
; type 10
000003e: 60                                        ; func
000003f: 00                                        ; num params
0000040: 00                                        ; num results
; type 11
0000041: 60                                        ; func
0000042: 06                                        ; num params
0000043: 7d                                        ; f32
0000044: 7d                                        ; f32
0000045: 7d                                        ; f32
0000046: 7d                                        ; f32
0000047: 7d                                        ; f32
0000048: 7d                                        ; f32
0000049: 01                                        ; num results
000004a: 7f                                        ; i32
0000009: 41                                        ; FIXUP section size
; section "Import" (2)
000004b: 02                                        ; section code
000004c: 00                                        ; section size (guess)
000004d: 0f                                        ; num imports
; import header 0
000004e: 04                                        ; string length
000004f: 4d61 7468                                Math  ; import module name
0000053: 03                                        ; string length
0000054: 706f 77                                  pow  ; import field name
0000057: 00                                        ; import kind
0000058: 00                                        ; import signature index
; import header 1
0000059: 04                                        ; string length
000005a: 4d61 7468                                Math  ; import module name
000005e: 04                                        ; string length
000005f: 7371 7274                                sqrt  ; import field name
0000063: 00                                        ; import kind
0000064: 01                                        ; import signature index
; import header 2
0000065: 04                                        ; string length
0000066: 4d61 7468                                Math  ; import module name
000006a: 03                                        ; string length
000006b: 6578 70                                  exp  ; import field name
000006e: 00                                        ; import kind
000006f: 01                                        ; import signature index
; import header 3
0000070: 04                                        ; string length
0000071: 4d61 7468                                Math  ; import module name
0000075: 03                                        ; string length
0000076: 636f 73                                  cos  ; import field name
0000079: 00                                        ; import kind
000007a: 01                                        ; import signature index
; import header 4
000007b: 04                                        ; string length
000007c: 4d61 7468                                Math  ; import module name
0000080: 06                                        ; string length
0000081: 7261 6e64 6f6d                           random  ; import field name
0000087: 00                                        ; import kind
0000088: 02                                        ; import signature index
; import header 5
0000089: 04                                        ; string length
000008a: 4d61 7468                                Math  ; import module name
000008e: 04                                        ; string length
000008f: 6365 696c                                ceil  ; import field name
0000093: 00                                        ; import kind
0000094: 01                                        ; import signature index
; import header 6
0000095: 04                                        ; string length
0000096: 4d61 7468                                Math  ; import module name
000009a: 05                                        ; string length
000009b: 666c 6f6f 72                             floor  ; import field name
00000a0: 00                                        ; import kind
00000a1: 01                                        ; import signature index
; import header 7
00000a2: 02                                        ; string length
00000a3: 4743                                     GC  ; import module name
00000a5: 09                                        ; string length
00000a6: 6164 644f 626a 6563 74                   addObject  ; import field name
00000af: 00                                        ; import kind
00000b0: 03                                        ; import signature index
; import header 8
00000b1: 07                                        ; string length
00000b2: 636f 6e73 6f6c 65                        console  ; import module name
00000b9: 03                                        ; string length
00000ba: 6c6f 67                                  log  ; import field name
00000bd: 00                                        ; import kind
00000be: 04                                        ; import signature index
; import header 9
00000bf: 06                                        ; string length
00000c0: 7374 7269 6e67                           string  ; import module name
00000c6: 07                                        ; string length
00000c7: 7265 706c 6163 65                        replace  ; import field name
00000ce: 00                                        ; import kind
00000cf: 05                                        ; import signature index
; import header 10
00000d0: 06                                        ; string length
00000d1: 7374 7269 6e67                           string  ; import module name
00000d7: 03                                        ; string length
00000d8: 6164 64                                  add  ; import field name
00000db: 00                                        ; import kind
00000dc: 06                                        ; import signature index
; import header 11
00000dd: 06                                        ; string length
00000de: 7374 7269 6e67                           string  ; import module name
00000e4: 06                                        ; string length
00000e5: 6c65 6e67 7468                           length  ; import field name
00000eb: 00                                        ; import kind
00000ec: 07                                        ; import signature index
; import header 12
00000ed: 06                                        ; string length
00000ee: 7374 7269 6e67                           string  ; import module name
00000f4: 07                                        ; string length
00000f5: 696e 6465 784f 66                        indexOf  ; import field name
00000fc: 00                                        ; import kind
00000fd: 06                                        ; import signature index
; import header 13
00000fe: 06                                        ; string length
00000ff: 7374 7269 6e67                           string  ; import module name
0000105: 08                                        ; string length
0000106: 746f 5374 7269 6e67                      toString  ; import field name
000010e: 00                                        ; import kind
000010f: 07                                        ; import signature index
; import header 14
0000110: 03                                        ; string length
0000111: 656e 76                                  env  ; import module name
0000114: 0a                                        ; string length
0000115: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
000011f: 02                                        ; import kind
0000120: 00                                        ; limits: flags
0000121: 01                                        ; limits: initial
; move data: [4d, 122) -> [4e, 123)
000004c: d501                                      ; FIXUP section size
; section "Function" (3)
0000123: 03                                        ; section code
0000124: 00                                        ; section size (guess)
0000125: 1c                                        ; num functions
0000126: 06                                        ; function 0 signature index
0000127: 08                                        ; function 1 signature index
0000128: 08                                        ; function 2 signature index
0000129: 08                                        ; function 3 signature index
000012a: 08                                        ; function 4 signature index
000012b: 08                                        ; function 5 signature index
000012c: 08                                        ; function 6 signature index
000012d: 09                                        ; function 7 signature index
000012e: 0a                                        ; function 8 signature index
000012f: 09                                        ; function 9 signature index
0000130: 0a                                        ; function 10 signature index
0000131: 09                                        ; function 11 signature index
0000132: 0b                                        ; function 12 signature index
0000133: 08                                        ; function 13 signature index
0000134: 08                                        ; function 14 signature index
0000135: 08                                        ; function 15 signature index
0000136: 08                                        ; function 16 signature index
0000137: 08                                        ; function 17 signature index
0000138: 08                                        ; function 18 signature index
0000139: 08                                        ; function 19 signature index
000013a: 08                                        ; function 20 signature index
000013b: 08                                        ; function 21 signature index
000013c: 0a                                        ; function 22 signature index
000013d: 0a                                        ; function 23 signature index
000013e: 0a                                        ; function 24 signature index
000013f: 0a                                        ; function 25 signature index
0000140: 0a                                        ; function 26 signature index
0000141: 0a                                        ; function 27 signature index
0000124: 1d                                        ; FIXUP section size
; section "Global" (6)
0000142: 06                                        ; section code
0000143: 00                                        ; section size (guess)
0000144: 12                                        ; num globals
0000145: 7f                                        ; i32
0000146: 01                                        ; global mutability
0000147: 41                                        ; i32.const
0000148: b80a                                      ; i32 literal
000014a: 0b                                        ; end
000014b: 7c                                        ; f64
000014c: 01                                        ; global mutability
000014d: 44                                        ; f64.const
000014e: 6957 148b 0abf 0540                       ; f64 literal
0000156: 0b                                        ; end
0000157: 7c                                        ; f64
0000158: 01                                        ; global mutability
0000159: 44                                        ; f64.const
000015a: 182d 4454 fb21 0940                       ; f64 literal
0000162: 0b                                        ; end
0000163: 7f                                        ; i32
0000164: 01                                        ; global mutability
0000165: 41                                        ; i32.const
0000166: ffff ffff 07                              ; i32 literal
000016b: 0b                                        ; end
000016c: 7e                                        ; i64
000016d: 01                                        ; global mutability
000016e: 42                                        ; i64.const
000016f: ffff ffff ffff ffff ff00                  ; i64 literal
0000179: 0b                                        ; end
000017a: 7d                                        ; f32
000017b: 01                                        ; global mutability
000017c: 43                                        ; f32.const
000017d: ffff 7f7f                                 ; f32 literal
0000181: 0b                                        ; end
0000182: 7c                                        ; f64
0000183: 01                                        ; global mutability
0000184: 44                                        ; f64.const
0000185: ffff ffff ffff ef7f                       ; f64 literal
000018d: 0b                                        ; end
000018e: 7f                                        ; i32
000018f: 01                                        ; global mutability
0000190: 41                                        ; i32.const
0000191: 8080 8080 78                              ; i32 literal
0000196: 0b                                        ; end
0000197: 7e                                        ; i64
0000198: 01                                        ; global mutability
0000199: 42                                        ; i64.const
000019a: 8080 8080 8080 8080 807f                  ; i64 literal
00001a4: 0b                                        ; end
00001a5: 7d                                        ; f32
00001a6: 01                                        ; global mutability
00001a7: 43                                        ; f32.const
00001a8: ffff 7fff                                 ; f32 literal
00001ac: 0b                                        ; end
00001ad: 7c                                        ; f64
00001ae: 01                                        ; global mutability
00001af: 44                                        ; f64.const
00001b0: ffff ffff ffff efff                       ; f64 literal
00001b8: 0b                                        ; end
00001b9: 7f                                        ; i32
00001ba: 01                                        ; global mutability
00001bb: 41                                        ; i32.const
00001bc: f800                                      ; i32 literal
00001be: 0b                                        ; end
00001bf: 7f                                        ; i32
00001c0: 01                                        ; global mutability
00001c1: 41                                        ; i32.const
00001c2: c600                                      ; i32 literal
00001c4: 0b                                        ; end
00001c5: 7f                                        ; i32
00001c6: 01                                        ; global mutability
00001c7: 41                                        ; i32.const
00001c8: 90ce 00                                   ; i32 literal
00001cb: 0b                                        ; end
00001cc: 7f                                        ; i32
00001cd: 01                                        ; global mutability
00001ce: 41                                        ; i32.const
00001cf: 00                                        ; i32 literal
00001d0: 0b                                        ; end
00001d1: 7f                                        ; i32
00001d2: 01                                        ; global mutability
00001d3: 41                                        ; i32.const
00001d4: 00                                        ; i32 literal
00001d5: 0b                                        ; end
00001d6: 7f                                        ; i32
00001d7: 01                                        ; global mutability
00001d8: 41                                        ; i32.const
00001d9: 00                                        ; i32 literal
00001da: 0b                                        ; end
00001db: 7f                                        ; i32
00001dc: 01                                        ; global mutability
00001dd: 41                                        ; i32.const
00001de: 00                                        ; i32 literal
00001df: 0b                                        ; end
; move data: [144, 1e0) -> [145, 1e1)
0000143: 9c01                                      ; FIXUP section size
; section "Export" (7)
00001e1: 07                                        ; section code
00001e2: 00                                        ; section size (guess)
00001e3: 0f                                        ; num exports
00001e4: 14                                        ; string length
00001e5: 676c 6f62 616c 2e47 6574 4d65 6d6f 7279  global.GetMemory
00001f5: 5369 7a65                                Size  ; export name
00001f9: 00                                        ; export kind
00001fa: 0f                                        ; export func index
00001fb: 18                                        ; string length
00001fc: 416c 676f 7269 7468 6d2e 6765 7443 6972  Algorithm.getCir
000020c: 636c 6543 6f75 6e74                      cleCount  ; export name
0000214: 00                                        ; export kind
0000215: 13                                        ; export func index
0000216: 1d                                        ; string length
0000217: 416c 676f 7269 7468 6d2e 6765 7443 6972  Algorithm.getCir
0000227: 636c 6544 6174 614f 6666 7365 74         cleDataOffset  ; export name
0000234: 00                                        ; export kind
0000235: 14                                        ; export func index
0000236: 0e                                        ; string length
0000237: 416c 676f 7269 7468 6d2e 696e 6974       Algorithm.init  ; export name
0000245: 00                                        ; export kind
0000246: 15                                        ; export func index
0000247: 12                                        ; string length
0000248: 416c 676f 7269 7468 6d2e 7469 6d65 5374  Algorithm.timeSt
0000258: 6570                                     ep  ; export name
000025a: 00                                        ; export kind
000025b: 19                                        ; export func index
000025c: 1a                                        ; string length
000025d: 4d61 7468 2e64 6574 6563 7443 6972 636c  Math.detectCircl
000026d: 6543 6f6c 6c69 7369 6f6e                 eCollision  ; export name
0000277: 00                                        ; export kind
0000278: 1a                                        ; export func index
0000279: 1a                                        ; string length
000027a: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000028a: 656d 626c 7954 6974 6c65                 emblyTitle  ; export name
0000294: 00                                        ; export kind
0000295: 1b                                        ; export func index
0000296: 20                                        ; string length
0000297: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002a7: 656d 626c 7944 6573 6372 6970 7469 6f6e  emblyDescription  ; export name
00002b7: 00                                        ; export kind
00002b8: 1c                                        ; export func index
00002b9: 1c                                        ; string length
00002ba: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002ca: 656d 626c 7943 6f6d 7061 6e79            emblyCompany  ; export name
00002d6: 00                                        ; export kind
00002d7: 1d                                        ; export func index
00002d8: 1c                                        ; string length
00002d9: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002e9: 656d 626c 7950 726f 6475 6374            emblyProduct  ; export name
00002f5: 00                                        ; export kind
00002f6: 1e                                        ; export func index
00002f7: 1e                                        ; string length
00002f8: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000308: 656d 626c 7943 6f70 7972 6967 6874       emblyCopyright  ; export name
0000316: 00                                        ; export kind
0000317: 1f                                        ; export func index
0000318: 1e                                        ; string length
0000319: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000329: 656d 626c 7954 7261 6465 6d61 726b       emblyTrademark  ; export name
0000337: 00                                        ; export kind
0000338: 20                                        ; export func index
0000339: 11                                        ; string length
000033a: 4173 7365 6d62 6c79 496e 666f 2e47 7569  AssemblyInfo.Gui
000034a: 64                                       d  ; export name
000034b: 00                                        ; export kind
000034c: 21                                        ; export func index
000034d: 1c                                        ; string length
000034e: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000035e: 656d 626c 7956 6572 7369 6f6e            emblyVersion  ; export name
000036a: 00                                        ; export kind
000036b: 22                                        ; export func index
000036c: 20                                        ; string length
000036d: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000037d: 656d 626c 7946 696c 6556 6572 7369 6f6e  emblyFileVersion  ; export name
000038d: 00                                        ; export kind
000038e: 23                                        ; export func index
; move data: [1e3, 38f) -> [1e4, 390)
00001e2: ac03                                      ; FIXUP section size
; section "Start" (8)
0000390: 08                                        ; section code
0000391: 00                                        ; section size (guess)
0000392: 24                                        ; start func index
0000391: 01                                        ; FIXUP section size
; section "Code" (10)
0000393: 0a                                        ; section code
0000394: 00                                        ; section size (guess)
0000395: 1c                                        ; num functions
; function body 0
0000396: 00                                        ; func body size (guess)
0000397: 01                                        ; local decl count
0000398: 02                                        ; local type count
0000399: 7f                                        ; i32
000039a: 23                                        ; global.get
000039b: 00                                        ; global index
000039c: 21                                        ; local.set
000039d: 02                                        ; local index
000039e: 20                                        ; local.get
000039f: 02                                        ; local index
00003a0: 20                                        ; local.get
00003a1: 00                                        ; local index
00003a2: 6a                                        ; i32.add
00003a3: 24                                        ; global.set
00003a4: 00                                        ; global index
00003a5: 23                                        ; global.get
00003a6: 00                                        ; global index
00003a7: 41                                        ; i32.const
00003a8: 08                                        ; i32 literal
00003a9: 6f                                        ; i32.rem_s
00003aa: 21                                        ; local.set
00003ab: 03                                        ; local index
00003ac: 20                                        ; local.get
00003ad: 03                                        ; local index
00003ae: 04                                        ; if
00003af: 40                                        ; void
00003b0: 41                                        ; i32.const
00003b1: 08                                        ; i32 literal
00003b2: 20                                        ; local.get
00003b3: 03                                        ; local index
00003b4: 6b                                        ; i32.sub
00003b5: 21                                        ; local.set
00003b6: 03                                        ; local index
00003b7: 23                                        ; global.get
00003b8: 00                                        ; global index
00003b9: 20                                        ; local.get
00003ba: 03                                        ; local index
00003bb: 6a                                        ; i32.add
00003bc: 24                                        ; global.set
00003bd: 00                                        ; global index
00003be: 05                                        ; else
00003bf: 23                                        ; global.get
00003c0: 00                                        ; global index
00003c1: 41                                        ; i32.const
00003c2: 08                                        ; i32 literal
00003c3: 6a                                        ; i32.add
00003c4: 24                                        ; global.set
00003c5: 00                                        ; global index
00003c6: 0b                                        ; end
00003c7: 20                                        ; local.get
00003c8: 02                                        ; local index
00003c9: 20                                        ; local.get
00003ca: 01                                        ; local index
00003cb: 10                                        ; call
00003cc: 07                                        ; function index
00003cd: 20                                        ; local.get
00003ce: 02                                        ; local index
00003cf: 0f                                        ; return
00003d0: 0b                                        ; end
0000396: 3a                                        ; FIXUP func body size
; function body 1
00003d1: 00                                        ; func body size (guess)
00003d2: 00                                        ; local decl count
00003d3: 23                                        ; global.get
00003d4: 00                                        ; global index
00003d5: 0f                                        ; return
00003d6: 0b                                        ; end
00003d1: 05                                        ; FIXUP func body size
; function body 2
00003d7: 00                                        ; func body size (guess)
00003d8: 01                                        ; local decl count
00003d9: 05                                        ; local type count
00003da: 7f                                        ; i32
00003db: 41                                        ; i32.const
00003dc: 08                                        ; i32 literal
00003dd: 23                                        ; global.get
00003de: 0b                                        ; global index
00003df: 41                                        ; i32.const
00003e0: 01                                        ; i32 literal
00003e1: 6b                                        ; i32.sub
00003e2: 41                                        ; i32.const
00003e3: 04                                        ; i32 literal
00003e4: 6c                                        ; i32.mul
00003e5: 6a                                        ; i32.add
00003e6: 41                                        ; i32.const
00003e7: 07                                        ; i32 literal
00003e8: 10                                        ; call
00003e9: 0e                                        ; function index
00003ea: 21                                        ; local.set
00003eb: 04                                        ; local index
00003ec: 20                                        ; local.get
00003ed: 04                                        ; local index
00003ee: 41                                        ; i32.const
00003ef: 9002                                      ; i32 literal
00003f1: 36                                        ; i32.store
00003f2: 02                                        ; alignment
00003f3: 00                                        ; store offset
00003f4: 20                                        ; local.get
00003f5: 04                                        ; local index
00003f6: 41                                        ; i32.const
00003f7: 04                                        ; i32 literal
00003f8: 6a                                        ; i32.add
00003f9: 23                                        ; global.get
00003fa: 0b                                        ; global index
00003fb: 41                                        ; i32.const
00003fc: 01                                        ; i32 literal
00003fd: 6b                                        ; i32.sub
00003fe: 36                                        ; i32.store
00003ff: 02                                        ; alignment
0000400: 00                                        ; store offset
0000401: 20                                        ; local.get
0000402: 04                                        ; local index
0000403: 0f                                        ; return
0000404: 0b                                        ; end
00003d7: 2d                                        ; FIXUP func body size
; function body 3
0000405: 00                                        ; func body size (guess)
0000406: 01                                        ; local decl count
0000407: 01                                        ; local type count
0000408: 7f                                        ; i32
0000409: 41                                        ; i32.const
000040a: 08                                        ; i32 literal
000040b: 41                                        ; i32.const
000040c: 9002                                      ; i32 literal
000040e: 10                                        ; call
000040f: 0e                                        ; function index
0000410: 21                                        ; local.set
0000411: 00                                        ; local index
0000412: 20                                        ; local.get
0000413: 00                                        ; local index
0000414: 41                                        ; i32.const
0000415: 00                                        ; i32 literal
0000416: 6a                                        ; i32.add
0000417: 41                                        ; i32.const
0000418: 00                                        ; i32 literal
0000419: 36                                        ; i32.store
000041a: 02                                        ; alignment
000041b: 00                                        ; store offset
000041c: 20                                        ; local.get
000041d: 00                                        ; local index
000041e: 41                                        ; i32.const
000041f: 04                                        ; i32 literal
0000420: 6a                                        ; i32.add
0000421: 41                                        ; i32.const
0000422: 00                                        ; i32 literal
0000423: 36                                        ; i32.store
0000424: 02                                        ; alignment
0000425: 00                                        ; store offset
0000426: 20                                        ; local.get
0000427: 00                                        ; local index
0000428: 0f                                        ; return
0000429: 0b                                        ; end
0000405: 24                                        ; FIXUP func body size
; function body 4
000042a: 00                                        ; func body size (guess)
000042b: 01                                        ; local decl count
000042c: 01                                        ; local type count
000042d: 7f                                        ; i32
000042e: 41                                        ; i32.const
000042f: 08                                        ; i32 literal
0000430: 41                                        ; i32.const
0000431: 0d                                        ; i32 literal
0000432: 10                                        ; call
0000433: 0e                                        ; function index
0000434: 21                                        ; local.set
0000435: 00                                        ; local index
0000436: 20                                        ; local.get
0000437: 00                                        ; local index
0000438: 41                                        ; i32.const
0000439: 00                                        ; i32 literal
000043a: 6a                                        ; i32.add
000043b: 10                                        ; call
000043c: 04                                        ; function index
000043d: b6                                        ; f32.demote_f64
000043e: 38                                        ; f32.store
000043f: 02                                        ; alignment
0000440: 00                                        ; store offset
0000441: 20                                        ; local.get
0000442: 00                                        ; local index
0000443: 41                                        ; i32.const
0000444: 04                                        ; i32 literal
0000445: 6a                                        ; i32.add
0000446: 10                                        ; call
0000447: 04                                        ; function index
0000448: b6                                        ; f32.demote_f64
0000449: 38                                        ; f32.store
000044a: 02                                        ; alignment
000044b: 00                                        ; store offset
000044c: 20                                        ; local.get
000044d: 00                                        ; local index
000044e: 0f                                        ; return
000044f: 0b                                        ; end
000042a: 25                                        ; FIXUP func body size
; function body 5
0000450: 00                                        ; func body size (guess)
0000451: 00                                        ; local decl count
0000452: 23                                        ; global.get
0000453: 0d                                        ; global index
0000454: 0f                                        ; return
0000455: 0b                                        ; end
0000450: 05                                        ; FIXUP func body size
; function body 6
0000456: 00                                        ; func body size (guess)
0000457: 00                                        ; local decl count
0000458: 23                                        ; global.get
0000459: 0e                                        ; global index
000045a: 0f                                        ; return
000045b: 0b                                        ; end
0000456: 05                                        ; FIXUP func body size
; function body 7
000045c: 00                                        ; func body size (guess)
000045d: 03                                        ; local decl count
000045e: 02                                        ; local type count
000045f: 7f                                        ; i32
0000460: 03                                        ; local type count
0000461: 7d                                        ; f32
0000462: 01                                        ; local type count
0000463: 7f                                        ; i32
0000464: 41                                        ; i32.const
0000465: 8807                                      ; i32 literal
0000467: 23                                        ; global.get
0000468: 0e                                        ; global index
0000469: 10                                        ; call
000046a: 0d                                        ; function index
000046b: 10                                        ; call
000046c: 0a                                        ; function index
000046d: 10                                        ; call
000046e: 08                                        ; function index
000046f: 41                                        ; i32.const
0000470: 00                                        ; i32 literal
0000471: 21                                        ; local.set
0000472: 02                                        ; local index
0000473: 02                                        ; block
0000474: 40                                        ; void
0000475: 03                                        ; loop
0000476: 40                                        ; void
0000477: 20                                        ; local.get
0000478: 02                                        ; local index
0000479: 23                                        ; global.get
000047a: 0d                                        ; global index
000047b: 41                                        ; i32.const
000047c: 01                                        ; i32 literal
000047d: 6b                                        ; i32.sub
000047e: 4a                                        ; i32.gt_s
000047f: 0d                                        ; br_if
0000480: 01                                        ; break depth
0000481: 41                                        ; i32.const
0000482: 00                                        ; i32 literal
0000483: 21                                        ; local.set
0000484: 03                                        ; local index
0000485: 43                                        ; f32.const
0000486: 0000 0000                                 ; f32 literal
000048a: 21                                        ; local.set
000048b: 04                                        ; local index
000048c: 43                                        ; f32.const
000048d: 0000 0000                                 ; f32 literal
0000491: 21                                        ; local.set
0000492: 05                                        ; local index
0000493: 43                                        ; f32.const
0000494: 0000 0000                                 ; f32 literal
0000498: 21                                        ; local.set
0000499: 06                                        ; local index
000049a: 02                                        ; block
000049b: 40                                        ; void
000049c: 03                                        ; loop
000049d: 40                                        ; void
000049e: 41                                        ; i32.const
000049f: 00                                        ; i32 literal
00004a0: 21                                        ; local.set
00004a1: 03                                        ; local index
00004a2: 20                                        ; local.get
00004a3: 00                                        ; local index
00004a4: bb                                        ; f64.promote_f32
00004a5: 10                                        ; call
00004a6: 04                                        ; function index
00004a7: a2                                        ; f64.mul
00004a8: b6                                        ; f32.demote_f64
00004a9: 21                                        ; local.set
00004aa: 04                                        ; local index
00004ab: 20                                        ; local.get
00004ac: 01                                        ; local index
00004ad: bb                                        ; f64.promote_f32
00004ae: 10                                        ; call
00004af: 04                                        ; function index
00004b0: a2                                        ; f64.mul
00004b1: b6                                        ; f32.demote_f64
00004b2: 21                                        ; local.set
00004b3: 05                                        ; local index
00004b4: 10                                        ; call
00004b5: 04                                        ; function index
00004b6: 41                                        ; i32.const
00004b7: 08                                        ; i32 literal
00004b8: b7                                        ; f64.convert_i32_s
00004b9: a2                                        ; f64.mul
00004ba: 10                                        ; call
00004bb: 02                                        ; function index
00004bc: 44                                        ; f64.const
00004bd: ee5a 423e e849 3740                       ; f64 literal
00004c5: a3                                        ; f64.div
00004c6: 10                                        ; call
00004c7: 05                                        ; function index
00004c8: b6                                        ; f32.demote_f64
00004c9: 21                                        ; local.set
00004ca: 06                                        ; local index
00004cb: 20                                        ; local.get
00004cc: 00                                        ; local index
00004cd: 20                                        ; local.get
00004ce: 04                                        ; local index
00004cf: 20                                        ; local.get
00004d0: 06                                        ; local index
00004d1: 92                                        ; f32.add
00004d2: 93                                        ; f32.sub
00004d3: 41                                        ; i32.const
00004d4: 00                                        ; i32 literal
00004d5: b2                                        ; f32.convert_i32_s
00004d6: 5d                                        ; f32.lt
00004d7: 20                                        ; local.get
00004d8: 04                                        ; local index
00004d9: 20                                        ; local.get
00004da: 06                                        ; local index
00004db: 93                                        ; f32.sub
00004dc: 41                                        ; i32.const
00004dd: 00                                        ; i32 literal
00004de: b2                                        ; f32.convert_i32_s
00004df: 5d                                        ; f32.lt
00004e0: 6a                                        ; i32.add
00004e1: 20                                        ; local.get
00004e2: 01                                        ; local index
00004e3: 20                                        ; local.get
00004e4: 05                                        ; local index
00004e5: 20                                        ; local.get
00004e6: 06                                        ; local index
00004e7: 92                                        ; f32.add
00004e8: 93                                        ; f32.sub
00004e9: 41                                        ; i32.const
00004ea: 00                                        ; i32 literal
00004eb: b2                                        ; f32.convert_i32_s
00004ec: 5d                                        ; f32.lt
00004ed: 6a                                        ; i32.add
00004ee: 20                                        ; local.get
00004ef: 05                                        ; local index
00004f0: 20                                        ; local.get
00004f1: 06                                        ; local index
00004f2: 93                                        ; f32.sub
00004f3: 41                                        ; i32.const
00004f4: 00                                        ; i32 literal
00004f5: b2                                        ; f32.convert_i32_s
00004f6: 5d                                        ; f32.lt
00004f7: 6a                                        ; i32.add
00004f8: 04                                        ; if
00004f9: 40                                        ; void
00004fa: 41                                        ; i32.const
00004fb: 01                                        ; i32 literal
00004fc: 21                                        ; local.set
00004fd: 03                                        ; local index
00004fe: 05                                        ; else
00004ff: 41                                        ; i32.const
0000500: 00                                        ; i32 literal
0000501: 21                                        ; local.set
0000502: 07                                        ; local index
0000503: 02                                        ; block
0000504: 40                                        ; void
0000505: 03                                        ; loop
0000506: 40                                        ; void
0000507: 20                                        ; local.get
0000508: 07                                        ; local index
0000509: 20                                        ; local.get
000050a: 02                                        ; local index
000050b: 41                                        ; i32.const
000050c: 01                                        ; i32 literal
000050d: 6b                                        ; i32.sub
000050e: 4a                                        ; i32.gt_s
000050f: 0d                                        ; br_if
0000510: 01                                        ; break depth
0000511: 20                                        ; local.get
0000512: 04                                        ; local index
0000513: 20                                        ; local.get
0000514: 05                                        ; local index
0000515: 20                                        ; local.get
0000516: 06                                        ; local index
0000517: 23                                        ; global.get
0000518: 0e                                        ; global index
0000519: 41                                        ; i32.const
000051a: 08                                        ; i32 literal
000051b: 6a                                        ; i32.add
000051c: 20                                        ; local.get
000051d: 07                                        ; local index
000051e: 41                                        ; i32.const
000051f: 0c                                        ; i32 literal
0000520: 6c                                        ; i32.mul
0000521: 6a                                        ; i32.add
0000522: 28                                        ; i32.load
0000523: 02                                        ; alignment
0000524: 00                                        ; load offset
0000525: 41                                        ; i32.const
0000526: 04                                        ; i32 literal
0000527: 6a                                        ; i32.add
0000528: 2a                                        ; f32.load
0000529: 02                                        ; alignment
000052a: 00                                        ; load offset
000052b: 23                                        ; global.get
000052c: 0e                                        ; global index
000052d: 41                                        ; i32.const
000052e: 08                                        ; i32 literal
000052f: 6a                                        ; i32.add
0000530: 20                                        ; local.get
0000531: 07                                        ; local index
0000532: 41                                        ; i32.const
0000533: 0c                                        ; i32 literal
0000534: 6c                                        ; i32.mul
0000535: 6a                                        ; i32.add
0000536: 28                                        ; i32.load
0000537: 02                                        ; alignment
0000538: 00                                        ; load offset
0000539: 41                                        ; i32.const
000053a: 00                                        ; i32 literal
000053b: 6a                                        ; i32.add
000053c: 2a                                        ; f32.load
000053d: 02                                        ; alignment
000053e: 00                                        ; load offset
000053f: 23                                        ; global.get
0000540: 0e                                        ; global index
0000541: 41                                        ; i32.const
0000542: 08                                        ; i32 literal
0000543: 6a                                        ; i32.add
0000544: 20                                        ; local.get
0000545: 07                                        ; local index
0000546: 41                                        ; i32.const
0000547: 0c                                        ; i32 literal
0000548: 6c                                        ; i32.mul
0000549: 6a                                        ; i32.add
000054a: 28                                        ; i32.load
000054b: 02                                        ; alignment
000054c: 00                                        ; load offset
000054d: 41                                        ; i32.const
000054e: 08                                        ; i32 literal
000054f: 6a                                        ; i32.add
0000550: 2a                                        ; f32.load
0000551: 02                                        ; alignment
0000552: 00                                        ; load offset
0000553: 10                                        ; call
0000554: 1a                                        ; function index
0000555: 04                                        ; if
0000556: 40                                        ; void
0000557: 41                                        ; i32.const
0000558: 01                                        ; i32 literal
0000559: 21                                        ; local.set
000055a: 03                                        ; local index
000055b: 41                                        ; i32.const
000055c: 01                                        ; i32 literal
000055d: 0d                                        ; br_if
000055e: 05                                        ; break depth
000055f: 0b                                        ; end
0000560: 20                                        ; local.get
0000561: 07                                        ; local index
0000562: 41                                        ; i32.const
0000563: 01                                        ; i32 literal
0000564: 6a                                        ; i32.add
0000565: 21                                        ; local.set
0000566: 07                                        ; local index
0000567: 0c                                        ; br
0000568: 00                                        ; break depth
0000569: 0b                                        ; end
000056a: 0b                                        ; end
000056b: 0b                                        ; end
000056c: 20                                        ; local.get
000056d: 03                                        ; local index
000056e: 45                                        ; i32.eqz
000056f: 0d                                        ; br_if
0000570: 01                                        ; break depth
0000571: 0c                                        ; br
0000572: 00                                        ; break depth
0000573: 0b                                        ; end
0000574: 0b                                        ; end
0000575: 23                                        ; global.get
0000576: 0e                                        ; global index
0000577: 41                                        ; i32.const
0000578: 08                                        ; i32 literal
0000579: 6a                                        ; i32.add
000057a: 20                                        ; local.get
000057b: 02                                        ; local index
000057c: 41                                        ; i32.const
000057d: 0c                                        ; i32 literal
000057e: 6c                                        ; i32.mul
000057f: 6a                                        ; i32.add
0000580: 41                                        ; i32.const
0000581: 04                                        ; i32 literal
0000582: 6a                                        ; i32.add
0000583: 20                                        ; local.get
0000584: 04                                        ; local index
0000585: 38                                        ; f32.store
0000586: 02                                        ; alignment
0000587: 00                                        ; store offset
0000588: 23                                        ; global.get
0000589: 0e                                        ; global index
000058a: 41                                        ; i32.const
000058b: 08                                        ; i32 literal
000058c: 6a                                        ; i32.add
000058d: 20                                        ; local.get
000058e: 02                                        ; local index
000058f: 41                                        ; i32.const
0000590: 0c                                        ; i32 literal
0000591: 6c                                        ; i32.mul
0000592: 6a                                        ; i32.add
0000593: 41                                        ; i32.const
0000594: 00                                        ; i32 literal
0000595: 6a                                        ; i32.add
0000596: 20                                        ; local.get
0000597: 05                                        ; local index
0000598: 38                                        ; f32.store
0000599: 02                                        ; alignment
000059a: 00                                        ; store offset
000059b: 23                                        ; global.get
000059c: 0e                                        ; global index
000059d: 41                                        ; i32.const
000059e: 08                                        ; i32 literal
000059f: 6a                                        ; i32.add
00005a0: 20                                        ; local.get
00005a1: 02                                        ; local index
00005a2: 41                                        ; i32.const
00005a3: 0c                                        ; i32 literal
00005a4: 6c                                        ; i32.mul
00005a5: 6a                                        ; i32.add
00005a6: 41                                        ; i32.const
00005a7: 08                                        ; i32 literal
00005a8: 6a                                        ; i32.add
00005a9: 20                                        ; local.get
00005aa: 06                                        ; local index
00005ab: 38                                        ; f32.store
00005ac: 02                                        ; alignment
00005ad: 00                                        ; store offset
00005ae: 41                                        ; i32.const
00005af: a007                                      ; i32 literal
00005b1: 20                                        ; local.get
00005b2: 02                                        ; local index
00005b3: 10                                        ; call
00005b4: 0d                                        ; function index
00005b5: 10                                        ; call
00005b6: 0a                                        ; function index
00005b7: 41                                        ; i32.const
00005b8: b007                                      ; i32 literal
00005ba: 10                                        ; call
00005bb: 0a                                        ; function index
00005bc: 23                                        ; global.get
00005bd: 0e                                        ; global index
00005be: 41                                        ; i32.const
00005bf: 08                                        ; i32 literal
00005c0: 6a                                        ; i32.add
00005c1: 20                                        ; local.get
00005c2: 02                                        ; local index
00005c3: 41                                        ; i32.const
00005c4: 0c                                        ; i32 literal
00005c5: 6c                                        ; i32.mul
00005c6: 6a                                        ; i32.add
00005c7: 28                                        ; i32.load
00005c8: 02                                        ; alignment
00005c9: 00                                        ; load offset
00005ca: 10                                        ; call
00005cb: 0d                                        ; function index
00005cc: 10                                        ; call
00005cd: 0a                                        ; function index
00005ce: 41                                        ; i32.const
00005cf: b807                                      ; i32 literal
00005d1: 10                                        ; call
00005d2: 0a                                        ; function index
00005d3: 10                                        ; call
00005d4: 08                                        ; function index
00005d5: 41                                        ; i32.const
00005d6: c007                                      ; i32 literal
00005d8: 23                                        ; global.get
00005d9: 0f                                        ; global index
00005da: 41                                        ; i32.const
00005db: 08                                        ; i32 literal
00005dc: 6a                                        ; i32.add
00005dd: 20                                        ; local.get
00005de: 02                                        ; local index
00005df: 41                                        ; i32.const
00005e0: 04                                        ; i32 literal
00005e1: 6c                                        ; i32.mul
00005e2: 6a                                        ; i32.add
00005e3: 28                                        ; i32.load
00005e4: 02                                        ; alignment
00005e5: 00                                        ; load offset
00005e6: 10                                        ; call
00005e7: 0d                                        ; function index
00005e8: 10                                        ; call
00005e9: 0a                                        ; function index
00005ea: 10                                        ; call
00005eb: 08                                        ; function index
00005ec: 23                                        ; global.get
00005ed: 0f                                        ; global index
00005ee: 41                                        ; i32.const
00005ef: 08                                        ; i32 literal
00005f0: 6a                                        ; i32.add
00005f1: 20                                        ; local.get
00005f2: 02                                        ; local index
00005f3: 41                                        ; i32.const
00005f4: 04                                        ; i32 literal
00005f5: 6c                                        ; i32.mul
00005f6: 6a                                        ; i32.add
00005f7: 28                                        ; i32.load
00005f8: 02                                        ; alignment
00005f9: 00                                        ; load offset
00005fa: 41                                        ; i32.const
00005fb: 00                                        ; i32 literal
00005fc: 6a                                        ; i32.add
00005fd: 10                                        ; call
00005fe: 04                                        ; function index
00005ff: 44                                        ; f64.const
0000600: 0000 0000 0000 e03f                       ; f64 literal
0000608: a1                                        ; f64.sub
0000609: 44                                        ; f64.const
000060a: 9a99 9999 9999 b93f                       ; f64 literal
0000612: a2                                        ; f64.mul
0000613: b6                                        ; f32.demote_f64
0000614: 38                                        ; f32.store
0000615: 02                                        ; alignment
0000616: 00                                        ; store offset
0000617: 23                                        ; global.get
0000618: 0f                                        ; global index
0000619: 41                                        ; i32.const
000061a: 08                                        ; i32 literal
000061b: 6a                                        ; i32.add
000061c: 20                                        ; local.get
000061d: 02                                        ; local index
000061e: 41                                        ; i32.const
000061f: 04                                        ; i32 literal
0000620: 6c                                        ; i32.mul
0000621: 6a                                        ; i32.add
0000622: 28                                        ; i32.load
0000623: 02                                        ; alignment
0000624: 00                                        ; load offset
0000625: 41                                        ; i32.const
0000626: 04                                        ; i32 literal
0000627: 6a                                        ; i32.add
0000628: 10                                        ; call
0000629: 04                                        ; function index
000062a: 44                                        ; f64.const
000062b: 0000 0000 0000 e03f                       ; f64 literal
0000633: a1                                        ; f64.sub
0000634: 44                                        ; f64.const
0000635: 9a99 9999 9999 b93f                       ; f64 literal
000063d: a2                                        ; f64.mul
000063e: b6                                        ; f32.demote_f64
000063f: 38                                        ; f32.store
0000640: 02                                        ; alignment
0000641: 00                                        ; store offset
0000642: 20                                        ; local.get
0000643: 02                                        ; local index
0000644: 41                                        ; i32.const
0000645: 01                                        ; i32 literal
0000646: 6a                                        ; i32.add
0000647: 21                                        ; local.set
0000648: 02                                        ; local index
0000649: 0c                                        ; br
000064a: 00                                        ; break depth
000064b: 0b                                        ; end
000064c: 0b                                        ; end
000064d: 0b                                        ; end
; move data: [45d, 64e) -> [45e, 64f)
000045c: f103                                      ; FIXUP func body size
; function body 8
000064f: 00                                        ; func body size (guess)
0000650: 01                                        ; local decl count
0000651: 03                                        ; local type count
0000652: 7f                                        ; i32
0000653: 41                                        ; i32.const
0000654: 00                                        ; i32 literal
0000655: 21                                        ; local.set
0000656: 00                                        ; local index
0000657: 02                                        ; block
0000658: 40                                        ; void
0000659: 03                                        ; loop
000065a: 40                                        ; void
000065b: 20                                        ; local.get
000065c: 00                                        ; local index
000065d: 23                                        ; global.get
000065e: 0c                                        ; global index
000065f: 41                                        ; i32.const
0000660: 01                                        ; i32 literal
0000661: 6b                                        ; i32.sub
0000662: 4a                                        ; i32.gt_s
0000663: 0d                                        ; br_if
0000664: 01                                        ; break depth
0000665: 23                                        ; global.get
0000666: 11                                        ; global index
0000667: 41                                        ; i32.const
0000668: 08                                        ; i32 literal
0000669: 6a                                        ; i32.add
000066a: 20                                        ; local.get
000066b: 00                                        ; local index
000066c: 41                                        ; i32.const
000066d: 04                                        ; i32 literal
000066e: 6c                                        ; i32.mul
000066f: 6a                                        ; i32.add
0000670: 28                                        ; i32.load
0000671: 02                                        ; alignment
0000672: 00                                        ; load offset
0000673: 21                                        ; local.set
0000674: 01                                        ; local index
0000675: 41                                        ; i32.const
0000676: 00                                        ; i32 literal
0000677: 21                                        ; local.set
0000678: 02                                        ; local index
0000679: 02                                        ; block
000067a: 40                                        ; void
000067b: 03                                        ; loop
000067c: 40                                        ; void
000067d: 20                                        ; local.get
000067e: 02                                        ; local index
000067f: 23                                        ; global.get
0000680: 0b                                        ; global index
0000681: 41                                        ; i32.const
0000682: 01                                        ; i32 literal
0000683: 6b                                        ; i32.sub
0000684: 4a                                        ; i32.gt_s
0000685: 0d                                        ; br_if
0000686: 01                                        ; break depth
0000687: 20                                        ; local.get
0000688: 01                                        ; local index
0000689: 41                                        ; i32.const
000068a: 08                                        ; i32 literal
000068b: 6a                                        ; i32.add
000068c: 20                                        ; local.get
000068d: 02                                        ; local index
000068e: 41                                        ; i32.const
000068f: 04                                        ; i32 literal
0000690: 6c                                        ; i32.mul
0000691: 6a                                        ; i32.add
0000692: 41                                        ; i32.const
0000693: 00                                        ; i32 literal
0000694: 36                                        ; i32.store
0000695: 02                                        ; alignment
0000696: 00                                        ; store offset
0000697: 20                                        ; local.get
0000698: 02                                        ; local index
0000699: 41                                        ; i32.const
000069a: 01                                        ; i32 literal
000069b: 6a                                        ; i32.add
000069c: 21                                        ; local.set
000069d: 02                                        ; local index
000069e: 0c                                        ; br
000069f: 00                                        ; break depth
00006a0: 0b                                        ; end
00006a1: 0b                                        ; end
00006a2: 20                                        ; local.get
00006a3: 00                                        ; local index
00006a4: 41                                        ; i32.const
00006a5: 01                                        ; i32 literal
00006a6: 6a                                        ; i32.add
00006a7: 21                                        ; local.set
00006a8: 00                                        ; local index
00006a9: 0c                                        ; br
00006aa: 00                                        ; break depth
00006ab: 0b                                        ; end
00006ac: 0b                                        ; end
00006ad: 0b                                        ; end
000064f: 5e                                        ; FIXUP func body size
; function body 9
00006ae: 00                                        ; func body size (guess)
00006af: 03                                        ; local decl count
00006b0: 02                                        ; local type count
00006b1: 7f                                        ; i32
00006b2: 05                                        ; local type count
00006b3: 7d                                        ; f32
00006b4: 08                                        ; local type count
00006b5: 7f                                        ; i32
00006b6: 41                                        ; i32.const
00006b7: 00                                        ; i32 literal
00006b8: 21                                        ; local.set
00006b9: 02                                        ; local index
00006ba: 41                                        ; i32.const
00006bb: 00                                        ; i32 literal
00006bc: 21                                        ; local.set
00006bd: 03                                        ; local index
00006be: 02                                        ; block
00006bf: 40                                        ; void
00006c0: 03                                        ; loop
00006c1: 40                                        ; void
00006c2: 20                                        ; local.get
00006c3: 03                                        ; local index
00006c4: 23                                        ; global.get
00006c5: 0d                                        ; global index
00006c6: 41                                        ; i32.const
00006c7: 01                                        ; i32 literal
00006c8: 6b                                        ; i32.sub
00006c9: 4a                                        ; i32.gt_s
00006ca: 0d                                        ; br_if
00006cb: 01                                        ; break depth
00006cc: 23                                        ; global.get
00006cd: 0e                                        ; global index
00006ce: 41                                        ; i32.const
00006cf: 08                                        ; i32 literal
00006d0: 6a                                        ; i32.add
00006d1: 20                                        ; local.get
00006d2: 03                                        ; local index
00006d3: 41                                        ; i32.const
00006d4: 0c                                        ; i32 literal
00006d5: 6c                                        ; i32.mul
00006d6: 6a                                        ; i32.add
00006d7: 28                                        ; i32.load
00006d8: 02                                        ; alignment
00006d9: 00                                        ; load offset
00006da: 41                                        ; i32.const
00006db: 04                                        ; i32 literal
00006dc: 6a                                        ; i32.add
00006dd: 2a                                        ; f32.load
00006de: 02                                        ; alignment
00006df: 00                                        ; load offset
00006e0: 21                                        ; local.set
00006e1: 04                                        ; local index
00006e2: 23                                        ; global.get
00006e3: 0e                                        ; global index
00006e4: 41                                        ; i32.const
00006e5: 08                                        ; i32 literal
00006e6: 6a                                        ; i32.add
00006e7: 20                                        ; local.get
00006e8: 03                                        ; local index
00006e9: 41                                        ; i32.const
00006ea: 0c                                        ; i32 literal
00006eb: 6c                                        ; i32.mul
00006ec: 6a                                        ; i32.add
00006ed: 28                                        ; i32.load
00006ee: 02                                        ; alignment
00006ef: 00                                        ; load offset
00006f0: 41                                        ; i32.const
00006f1: 00                                        ; i32 literal
00006f2: 6a                                        ; i32.add
00006f3: 2a                                        ; f32.load
00006f4: 02                                        ; alignment
00006f5: 00                                        ; load offset
00006f6: 21                                        ; local.set
00006f7: 05                                        ; local index
00006f8: 23                                        ; global.get
00006f9: 0e                                        ; global index
00006fa: 41                                        ; i32.const
00006fb: 08                                        ; i32 literal
00006fc: 6a                                        ; i32.add
00006fd: 20                                        ; local.get
00006fe: 03                                        ; local index
00006ff: 41                                        ; i32.const
0000700: 0c                                        ; i32 literal
0000701: 6c                                        ; i32.mul
0000702: 6a                                        ; i32.add
0000703: 28                                        ; i32.load
0000704: 02                                        ; alignment
0000705: 00                                        ; load offset
0000706: 41                                        ; i32.const
0000707: 08                                        ; i32 literal
0000708: 6a                                        ; i32.add
0000709: 2a                                        ; f32.load
000070a: 02                                        ; alignment
000070b: 00                                        ; load offset
000070c: 21                                        ; local.set
000070d: 06                                        ; local index
000070e: 23                                        ; global.get
000070f: 0f                                        ; global index
0000710: 41                                        ; i32.const
0000711: 08                                        ; i32 literal
0000712: 6a                                        ; i32.add
0000713: 20                                        ; local.get
0000714: 03                                        ; local index
0000715: 41                                        ; i32.const
0000716: 04                                        ; i32 literal
0000717: 6c                                        ; i32.mul
0000718: 6a                                        ; i32.add
0000719: 28                                        ; i32.load
000071a: 02                                        ; alignment
000071b: 00                                        ; load offset
000071c: 41                                        ; i32.const
000071d: 00                                        ; i32 literal
000071e: 6a                                        ; i32.add
000071f: 2a                                        ; f32.load
0000720: 02                                        ; alignment
0000721: 00                                        ; load offset
0000722: 21                                        ; local.set
0000723: 07                                        ; local index
0000724: 23                                        ; global.get
0000725: 0f                                        ; global index
0000726: 41                                        ; i32.const
0000727: 08                                        ; i32 literal
0000728: 6a                                        ; i32.add
0000729: 20                                        ; local.get
000072a: 03                                        ; local index
000072b: 41                                        ; i32.const
000072c: 04                                        ; i32 literal
000072d: 6c                                        ; i32.mul
000072e: 6a                                        ; i32.add
000072f: 28                                        ; i32.load
0000730: 02                                        ; alignment
0000731: 00                                        ; load offset
0000732: 41                                        ; i32.const
0000733: 04                                        ; i32 literal
0000734: 6a                                        ; i32.add
0000735: 2a                                        ; f32.load
0000736: 02                                        ; alignment
0000737: 00                                        ; load offset
0000738: 21                                        ; local.set
0000739: 08                                        ; local index
000073a: 20                                        ; local.get
000073b: 08                                        ; local index
000073c: bb                                        ; f64.promote_f32
000073d: 44                                        ; f64.const
000073e: 2d43 1ceb e236 1a3f                       ; f64 literal
0000746: a0                                        ; f64.add
0000747: b6                                        ; f32.demote_f64
0000748: 21                                        ; local.set
0000749: 08                                        ; local index
000074a: 20                                        ; local.get
000074b: 00                                        ; local index
000074c: 20                                        ; local.get
000074d: 04                                        ; local index
000074e: 20                                        ; local.get
000074f: 06                                        ; local index
0000750: 92                                        ; f32.add
0000751: 93                                        ; f32.sub
0000752: 41                                        ; i32.const
0000753: 00                                        ; i32 literal
0000754: b2                                        ; f32.convert_i32_s
0000755: 5d                                        ; f32.lt
0000756: 20                                        ; local.get
0000757: 07                                        ; local index
0000758: 41                                        ; i32.const
0000759: 00                                        ; i32 literal
000075a: b2                                        ; f32.convert_i32_s
000075b: 5e                                        ; f32.gt
000075c: 6c                                        ; i32.mul
000075d: 20                                        ; local.get
000075e: 04                                        ; local index
000075f: 20                                        ; local.get
0000760: 06                                        ; local index
0000761: 93                                        ; f32.sub
0000762: 41                                        ; i32.const
0000763: 00                                        ; i32 literal
0000764: b2                                        ; f32.convert_i32_s
0000765: 5d                                        ; f32.lt
0000766: 20                                        ; local.get
0000767: 07                                        ; local index
0000768: 41                                        ; i32.const
0000769: 00                                        ; i32 literal
000076a: b2                                        ; f32.convert_i32_s
000076b: 5d                                        ; f32.lt
000076c: 6c                                        ; i32.mul
000076d: 6a                                        ; i32.add
000076e: 04                                        ; if
000076f: 40                                        ; void
0000770: 43                                        ; f32.const
0000771: 0000 0000                                 ; f32 literal
0000775: 20                                        ; local.get
0000776: 07                                        ; local index
0000777: 93                                        ; f32.sub
0000778: 21                                        ; local.set
0000779: 07                                        ; local index
000077a: 0b                                        ; end
000077b: 20                                        ; local.get
000077c: 01                                        ; local index
000077d: 20                                        ; local.get
000077e: 05                                        ; local index
000077f: 20                                        ; local.get
0000780: 06                                        ; local index
0000781: 92                                        ; f32.add
0000782: 93                                        ; f32.sub
0000783: 41                                        ; i32.const
0000784: 00                                        ; i32 literal
0000785: b2                                        ; f32.convert_i32_s
0000786: 5d                                        ; f32.lt
0000787: 20                                        ; local.get
0000788: 08                                        ; local index
0000789: 41                                        ; i32.const
000078a: 00                                        ; i32 literal
000078b: b2                                        ; f32.convert_i32_s
000078c: 5e                                        ; f32.gt
000078d: 6c                                        ; i32.mul
000078e: 20                                        ; local.get
000078f: 05                                        ; local index
0000790: 20                                        ; local.get
0000791: 06                                        ; local index
0000792: 93                                        ; f32.sub
0000793: 41                                        ; i32.const
0000794: 00                                        ; i32 literal
0000795: b2                                        ; f32.convert_i32_s
0000796: 5d                                        ; f32.lt
0000797: 20                                        ; local.get
0000798: 08                                        ; local index
0000799: 41                                        ; i32.const
000079a: 00                                        ; i32 literal
000079b: b2                                        ; f32.convert_i32_s
000079c: 5d                                        ; f32.lt
000079d: 6c                                        ; i32.mul
000079e: 6a                                        ; i32.add
000079f: 04                                        ; if
00007a0: 40                                        ; void
00007a1: 43                                        ; f32.const
00007a2: 0000 0000                                 ; f32 literal
00007a6: 20                                        ; local.get
00007a7: 08                                        ; local index
00007a8: 93                                        ; f32.sub
00007a9: 21                                        ; local.set
00007aa: 08                                        ; local index
00007ab: 0b                                        ; end
00007ac: 23                                        ; global.get
00007ad: 0e                                        ; global index
00007ae: 41                                        ; i32.const
00007af: 08                                        ; i32 literal
00007b0: 6a                                        ; i32.add
00007b1: 20                                        ; local.get
00007b2: 03                                        ; local index
00007b3: 41                                        ; i32.const
00007b4: 0c                                        ; i32 literal
00007b5: 6c                                        ; i32.mul
00007b6: 6a                                        ; i32.add
00007b7: 41                                        ; i32.const
00007b8: 04                                        ; i32 literal
00007b9: 6a                                        ; i32.add
00007ba: 20                                        ; local.get
00007bb: 04                                        ; local index
00007bc: 20                                        ; local.get
00007bd: 07                                        ; local index
00007be: 92                                        ; f32.add
00007bf: 38                                        ; f32.store
00007c0: 02                                        ; alignment
00007c1: 00                                        ; store offset
00007c2: 23                                        ; global.get
00007c3: 0e                                        ; global index
00007c4: 41                                        ; i32.const
00007c5: 08                                        ; i32 literal
00007c6: 6a                                        ; i32.add
00007c7: 20                                        ; local.get
00007c8: 03                                        ; local index
00007c9: 41                                        ; i32.const
00007ca: 0c                                        ; i32 literal
00007cb: 6c                                        ; i32.mul
00007cc: 6a                                        ; i32.add
00007cd: 41                                        ; i32.const
00007ce: 00                                        ; i32 literal
00007cf: 6a                                        ; i32.add
00007d0: 20                                        ; local.get
00007d1: 05                                        ; local index
00007d2: 20                                        ; local.get
00007d3: 08                                        ; local index
00007d4: 92                                        ; f32.add
00007d5: 38                                        ; f32.store
00007d6: 02                                        ; alignment
00007d7: 00                                        ; store offset
00007d8: 23                                        ; global.get
00007d9: 0f                                        ; global index
00007da: 41                                        ; i32.const
00007db: 08                                        ; i32 literal
00007dc: 6a                                        ; i32.add
00007dd: 20                                        ; local.get
00007de: 03                                        ; local index
00007df: 41                                        ; i32.const
00007e0: 04                                        ; i32 literal
00007e1: 6c                                        ; i32.mul
00007e2: 6a                                        ; i32.add
00007e3: 28                                        ; i32.load
00007e4: 02                                        ; alignment
00007e5: 00                                        ; load offset
00007e6: 41                                        ; i32.const
00007e7: 00                                        ; i32 literal
00007e8: 6a                                        ; i32.add
00007e9: 20                                        ; local.get
00007ea: 07                                        ; local index
00007eb: 38                                        ; f32.store
00007ec: 02                                        ; alignment
00007ed: 00                                        ; store offset
00007ee: 23                                        ; global.get
00007ef: 0f                                        ; global index
00007f0: 41                                        ; i32.const
00007f1: 08                                        ; i32 literal
00007f2: 6a                                        ; i32.add
00007f3: 20                                        ; local.get
00007f4: 03                                        ; local index
00007f5: 41                                        ; i32.const
00007f6: 04                                        ; i32 literal
00007f7: 6c                                        ; i32.mul
00007f8: 6a                                        ; i32.add
00007f9: 28                                        ; i32.load
00007fa: 02                                        ; alignment
00007fb: 00                                        ; load offset
00007fc: 41                                        ; i32.const
00007fd: 04                                        ; i32 literal
00007fe: 6a                                        ; i32.add
00007ff: 20                                        ; local.get
0000800: 08                                        ; local index
0000801: 38                                        ; f32.store
0000802: 02                                        ; alignment
0000803: 00                                        ; store offset
0000804: 20                                        ; local.get
0000805: 04                                        ; local index
0000806: 20                                        ; local.get
0000807: 06                                        ; local index
0000808: 93                                        ; f32.sub
0000809: bb                                        ; f64.promote_f32
000080a: 20                                        ; local.get
000080b: 00                                        ; local index
000080c: bb                                        ; f64.promote_f32
000080d: a3                                        ; f64.div
000080e: 23                                        ; global.get
000080f: 0c                                        ; global index
0000810: b7                                        ; f64.convert_i32_s
0000811: a2                                        ; f64.mul
0000812: 10                                        ; call
0000813: 06                                        ; function index
0000814: aa                                        ; i32.trunc_f64_s
0000815: 21                                        ; local.set
0000816: 09                                        ; local index
0000817: 20                                        ; local.get
0000818: 04                                        ; local index
0000819: 20                                        ; local.get
000081a: 06                                        ; local index
000081b: 92                                        ; f32.add
000081c: bb                                        ; f64.promote_f32
000081d: 20                                        ; local.get
000081e: 00                                        ; local index
000081f: bb                                        ; f64.promote_f32
0000820: a3                                        ; f64.div
0000821: 23                                        ; global.get
0000822: 0c                                        ; global index
0000823: b7                                        ; f64.convert_i32_s
0000824: a2                                        ; f64.mul
0000825: 10                                        ; call
0000826: 06                                        ; function index
0000827: aa                                        ; i32.trunc_f64_s
0000828: 21                                        ; local.set
0000829: 0a                                        ; local index
000082a: 20                                        ; local.get
000082b: 05                                        ; local index
000082c: 20                                        ; local.get
000082d: 06                                        ; local index
000082e: 93                                        ; f32.sub
000082f: bb                                        ; f64.promote_f32
0000830: 20                                        ; local.get
0000831: 01                                        ; local index
0000832: bb                                        ; f64.promote_f32
0000833: a3                                        ; f64.div
0000834: 23                                        ; global.get
0000835: 0b                                        ; global index
0000836: b7                                        ; f64.convert_i32_s
0000837: a2                                        ; f64.mul
0000838: 10                                        ; call
0000839: 06                                        ; function index
000083a: aa                                        ; i32.trunc_f64_s
000083b: 21                                        ; local.set
000083c: 0b                                        ; local index
000083d: 20                                        ; local.get
000083e: 05                                        ; local index
000083f: 20                                        ; local.get
0000840: 06                                        ; local index
0000841: 92                                        ; f32.add
0000842: bb                                        ; f64.promote_f32
0000843: 20                                        ; local.get
0000844: 01                                        ; local index
0000845: bb                                        ; f64.promote_f32
0000846: a3                                        ; f64.div
0000847: 23                                        ; global.get
0000848: 0b                                        ; global index
0000849: b7                                        ; f64.convert_i32_s
000084a: a2                                        ; f64.mul
000084b: 10                                        ; call
000084c: 06                                        ; function index
000084d: aa                                        ; i32.trunc_f64_s
000084e: 21                                        ; local.set
000084f: 0c                                        ; local index
0000850: 20                                        ; local.get
0000851: 09                                        ; local index
0000852: 41                                        ; i32.const
0000853: 00                                        ; i32 literal
0000854: 48                                        ; i32.lt_s
0000855: 04                                        ; if
0000856: 40                                        ; void
0000857: 41                                        ; i32.const
0000858: 00                                        ; i32 literal
0000859: 21                                        ; local.set
000085a: 09                                        ; local index
000085b: 0b                                        ; end
000085c: 20                                        ; local.get
000085d: 0a                                        ; local index
000085e: 23                                        ; global.get
000085f: 0c                                        ; global index
0000860: 4e                                        ; i32.ge_s
0000861: 04                                        ; if
0000862: 40                                        ; void
0000863: 23                                        ; global.get
0000864: 0c                                        ; global index
0000865: 41                                        ; i32.const
0000866: 01                                        ; i32 literal
0000867: 6b                                        ; i32.sub
0000868: 21                                        ; local.set
0000869: 0a                                        ; local index
000086a: 0b                                        ; end
000086b: 20                                        ; local.get
000086c: 0b                                        ; local index
000086d: 41                                        ; i32.const
000086e: 00                                        ; i32 literal
000086f: 48                                        ; i32.lt_s
0000870: 04                                        ; if
0000871: 40                                        ; void
0000872: 41                                        ; i32.const
0000873: 00                                        ; i32 literal
0000874: 21                                        ; local.set
0000875: 0b                                        ; local index
0000876: 0b                                        ; end
0000877: 20                                        ; local.get
0000878: 0c                                        ; local index
0000879: 23                                        ; global.get
000087a: 0b                                        ; global index
000087b: 4e                                        ; i32.ge_s
000087c: 04                                        ; if
000087d: 40                                        ; void
000087e: 23                                        ; global.get
000087f: 0b                                        ; global index
0000880: 41                                        ; i32.const
0000881: 01                                        ; i32 literal
0000882: 6b                                        ; i32.sub
0000883: 21                                        ; local.set
0000884: 0c                                        ; local index
0000885: 0b                                        ; end
0000886: 20                                        ; local.get
0000887: 09                                        ; local index
0000888: 21                                        ; local.set
0000889: 0d                                        ; local index
000088a: 02                                        ; block
000088b: 40                                        ; void
000088c: 03                                        ; loop
000088d: 40                                        ; void
000088e: 20                                        ; local.get
000088f: 0d                                        ; local index
0000890: 20                                        ; local.get
0000891: 0a                                        ; local index
0000892: 4a                                        ; i32.gt_s
0000893: 0d                                        ; br_if
0000894: 01                                        ; break depth
0000895: 23                                        ; global.get
0000896: 11                                        ; global index
0000897: 41                                        ; i32.const
0000898: 08                                        ; i32 literal
0000899: 6a                                        ; i32.add
000089a: 20                                        ; local.get
000089b: 0d                                        ; local index
000089c: 41                                        ; i32.const
000089d: 04                                        ; i32 literal
000089e: 6c                                        ; i32.mul
000089f: 6a                                        ; i32.add
00008a0: 28                                        ; i32.load
00008a1: 02                                        ; alignment
00008a2: 00                                        ; load offset
00008a3: 21                                        ; local.set
00008a4: 0e                                        ; local index
00008a5: 20                                        ; local.get
00008a6: 0b                                        ; local index
00008a7: 21                                        ; local.set
00008a8: 0f                                        ; local index
00008a9: 02                                        ; block
00008aa: 40                                        ; void
00008ab: 03                                        ; loop
00008ac: 40                                        ; void
00008ad: 20                                        ; local.get
00008ae: 0f                                        ; local index
00008af: 20                                        ; local.get
00008b0: 0c                                        ; local index
00008b1: 4a                                        ; i32.gt_s
00008b2: 0d                                        ; br_if
00008b3: 01                                        ; break depth
00008b4: 23                                        ; global.get
00008b5: 10                                        ; global index
00008b6: 41                                        ; i32.const
00008b7: 08                                        ; i32 literal
00008b8: 6a                                        ; i32.add
00008b9: 20                                        ; local.get
00008ba: 02                                        ; local index
00008bb: 41                                        ; i32.const
00008bc: 04                                        ; i32 literal
00008bd: 6c                                        ; i32.mul
00008be: 6a                                        ; i32.add
00008bf: 28                                        ; i32.load
00008c0: 02                                        ; alignment
00008c1: 00                                        ; load offset
00008c2: 21                                        ; local.set
00008c3: 10                                        ; local index
00008c4: 20                                        ; local.get
00008c5: 02                                        ; local index
00008c6: 41                                        ; i32.const
00008c7: 01                                        ; i32 literal
00008c8: 6a                                        ; i32.add
00008c9: 21                                        ; local.set
00008ca: 02                                        ; local index
00008cb: 20                                        ; local.get
00008cc: 10                                        ; local index
00008cd: 41                                        ; i32.const
00008ce: 04                                        ; i32 literal
00008cf: 6a                                        ; i32.add
00008d0: 20                                        ; local.get
00008d1: 03                                        ; local index
00008d2: 36                                        ; i32.store
00008d3: 02                                        ; alignment
00008d4: 00                                        ; store offset
00008d5: 20                                        ; local.get
00008d6: 10                                        ; local index
00008d7: 41                                        ; i32.const
00008d8: 00                                        ; i32 literal
00008d9: 6a                                        ; i32.add
00008da: 20                                        ; local.get
00008db: 0e                                        ; local index
00008dc: 41                                        ; i32.const
00008dd: 08                                        ; i32 literal
00008de: 6a                                        ; i32.add
00008df: 20                                        ; local.get
00008e0: 0f                                        ; local index
00008e1: 41                                        ; i32.const
00008e2: 04                                        ; i32 literal
00008e3: 6c                                        ; i32.mul
00008e4: 6a                                        ; i32.add
00008e5: 28                                        ; i32.load
00008e6: 02                                        ; alignment
00008e7: 00                                        ; load offset
00008e8: 36                                        ; i32.store
00008e9: 02                                        ; alignment
00008ea: 00                                        ; store offset
00008eb: 20                                        ; local.get
00008ec: 0e                                        ; local index
00008ed: 41                                        ; i32.const
00008ee: 08                                        ; i32 literal
00008ef: 6a                                        ; i32.add
00008f0: 20                                        ; local.get
00008f1: 0f                                        ; local index
00008f2: 41                                        ; i32.const
00008f3: 04                                        ; i32 literal
00008f4: 6c                                        ; i32.mul
00008f5: 6a                                        ; i32.add
00008f6: 20                                        ; local.get
00008f7: 10                                        ; local index
00008f8: 36                                        ; i32.store
00008f9: 02                                        ; alignment
00008fa: 00                                        ; store offset
00008fb: 20                                        ; local.get
00008fc: 0f                                        ; local index
00008fd: 41                                        ; i32.const
00008fe: 01                                        ; i32 literal
00008ff: 6a                                        ; i32.add
0000900: 21                                        ; local.set
0000901: 0f                                        ; local index
0000902: 0c                                        ; br
0000903: 00                                        ; break depth
0000904: 0b                                        ; end
0000905: 0b                                        ; end
0000906: 20                                        ; local.get
0000907: 0d                                        ; local index
0000908: 41                                        ; i32.const
0000909: 01                                        ; i32 literal
000090a: 6a                                        ; i32.add
000090b: 21                                        ; local.set
000090c: 0d                                        ; local index
000090d: 0c                                        ; br
000090e: 00                                        ; break depth
000090f: 0b                                        ; end
0000910: 0b                                        ; end
0000911: 20                                        ; local.get
0000912: 03                                        ; local index
0000913: 41                                        ; i32.const
0000914: 01                                        ; i32 literal
0000915: 6a                                        ; i32.add
0000916: 21                                        ; local.set
0000917: 03                                        ; local index
0000918: 0c                                        ; br
0000919: 00                                        ; break depth
000091a: 0b                                        ; end
000091b: 0b                                        ; end
000091c: 0b                                        ; end
; move data: [6af, 91d) -> [6b0, 91e)
00006ae: ee04                                      ; FIXUP func body size
; function body 10
000091e: 00                                        ; func body size (guess)
000091f: 07                                        ; local decl count
0000920: 05                                        ; local type count
0000921: 7f                                        ; i32
0000922: 05                                        ; local type count
0000923: 7d                                        ; f32
0000924: 02                                        ; local type count
0000925: 7f                                        ; i32
0000926: 07                                        ; local type count
0000927: 7d                                        ; f32
0000928: 01                                        ; local type count
0000929: 7c                                        ; f64
000092a: 04                                        ; local type count
000092b: 7d                                        ; f32
000092c: 04                                        ; local type count
000092d: 7c                                        ; f64
000092e: 41                                        ; i32.const
000092f: 00                                        ; i32 literal
0000930: 21                                        ; local.set
0000931: 00                                        ; local index
0000932: 02                                        ; block
0000933: 40                                        ; void
0000934: 03                                        ; loop
0000935: 40                                        ; void
0000936: 20                                        ; local.get
0000937: 00                                        ; local index
0000938: 23                                        ; global.get
0000939: 0c                                        ; global index
000093a: 41                                        ; i32.const
000093b: 01                                        ; i32 literal
000093c: 6b                                        ; i32.sub
000093d: 4a                                        ; i32.gt_s
000093e: 0d                                        ; br_if
000093f: 01                                        ; break depth
0000940: 23                                        ; global.get
0000941: 11                                        ; global index
0000942: 41                                        ; i32.const
0000943: 08                                        ; i32 literal
0000944: 6a                                        ; i32.add
0000945: 20                                        ; local.get
0000946: 00                                        ; local index
0000947: 41                                        ; i32.const
0000948: 04                                        ; i32 literal
0000949: 6c                                        ; i32.mul
000094a: 6a                                        ; i32.add
000094b: 28                                        ; i32.load
000094c: 02                                        ; alignment
000094d: 00                                        ; load offset
000094e: 21                                        ; local.set
000094f: 01                                        ; local index
0000950: 41                                        ; i32.const
0000951: 00                                        ; i32 literal
0000952: 21                                        ; local.set
0000953: 02                                        ; local index
0000954: 02                                        ; block
0000955: 40                                        ; void
0000956: 03                                        ; loop
0000957: 40                                        ; void
0000958: 20                                        ; local.get
0000959: 02                                        ; local index
000095a: 23                                        ; global.get
000095b: 0b                                        ; global index
000095c: 41                                        ; i32.const
000095d: 01                                        ; i32 literal
000095e: 6b                                        ; i32.sub
000095f: 4a                                        ; i32.gt_s
0000960: 0d                                        ; br_if
0000961: 01                                        ; break depth
0000962: 20                                        ; local.get
0000963: 01                                        ; local index
0000964: 41                                        ; i32.const
0000965: 08                                        ; i32 literal
0000966: 6a                                        ; i32.add
0000967: 20                                        ; local.get
0000968: 02                                        ; local index
0000969: 41                                        ; i32.const
000096a: 04                                        ; i32 literal
000096b: 6c                                        ; i32.mul
000096c: 6a                                        ; i32.add
000096d: 28                                        ; i32.load
000096e: 02                                        ; alignment
000096f: 00                                        ; load offset
0000970: 21                                        ; local.set
0000971: 03                                        ; local index
0000972: 02                                        ; block
0000973: 40                                        ; void
0000974: 03                                        ; loop
0000975: 40                                        ; void
0000976: 20                                        ; local.get
0000977: 03                                        ; local index
0000978: 41                                        ; i32.const
0000979: 00                                        ; i32 literal
000097a: 46                                        ; i32.eq
000097b: 45                                        ; i32.eqz
000097c: 45                                        ; i32.eqz
000097d: 0d                                        ; br_if
000097e: 01                                        ; break depth
000097f: 20                                        ; local.get
0000980: 03                                        ; local index
0000981: 41                                        ; i32.const
0000982: 04                                        ; i32 literal
0000983: 6a                                        ; i32.add
0000984: 28                                        ; i32.load
0000985: 02                                        ; alignment
0000986: 00                                        ; load offset
0000987: 21                                        ; local.set
0000988: 04                                        ; local index
0000989: 23                                        ; global.get
000098a: 0e                                        ; global index
000098b: 41                                        ; i32.const
000098c: 08                                        ; i32 literal
000098d: 6a                                        ; i32.add
000098e: 20                                        ; local.get
000098f: 04                                        ; local index
0000990: 41                                        ; i32.const
0000991: 0c                                        ; i32 literal
0000992: 6c                                        ; i32.mul
0000993: 6a                                        ; i32.add
0000994: 28                                        ; i32.load
0000995: 02                                        ; alignment
0000996: 00                                        ; load offset
0000997: 41                                        ; i32.const
0000998: 04                                        ; i32 literal
0000999: 6a                                        ; i32.add
000099a: 2a                                        ; f32.load
000099b: 02                                        ; alignment
000099c: 00                                        ; load offset
000099d: 21                                        ; local.set
000099e: 05                                        ; local index
000099f: 23                                        ; global.get
00009a0: 0e                                        ; global index
00009a1: 41                                        ; i32.const
00009a2: 08                                        ; i32 literal
00009a3: 6a                                        ; i32.add
00009a4: 20                                        ; local.get
00009a5: 04                                        ; local index
00009a6: 41                                        ; i32.const
00009a7: 0c                                        ; i32 literal
00009a8: 6c                                        ; i32.mul
00009a9: 6a                                        ; i32.add
00009aa: 28                                        ; i32.load
00009ab: 02                                        ; alignment
00009ac: 00                                        ; load offset
00009ad: 41                                        ; i32.const
00009ae: 00                                        ; i32 literal
00009af: 6a                                        ; i32.add
00009b0: 2a                                        ; f32.load
00009b1: 02                                        ; alignment
00009b2: 00                                        ; load offset
00009b3: 21                                        ; local.set
00009b4: 06                                        ; local index
00009b5: 23                                        ; global.get
00009b6: 0e                                        ; global index
00009b7: 41                                        ; i32.const
00009b8: 08                                        ; i32 literal
00009b9: 6a                                        ; i32.add
00009ba: 20                                        ; local.get
00009bb: 04                                        ; local index
00009bc: 41                                        ; i32.const
00009bd: 0c                                        ; i32 literal
00009be: 6c                                        ; i32.mul
00009bf: 6a                                        ; i32.add
00009c0: 28                                        ; i32.load
00009c1: 02                                        ; alignment
00009c2: 00                                        ; load offset
00009c3: 41                                        ; i32.const
00009c4: 08                                        ; i32 literal
00009c5: 6a                                        ; i32.add
00009c6: 2a                                        ; f32.load
00009c7: 02                                        ; alignment
00009c8: 00                                        ; load offset
00009c9: 21                                        ; local.set
00009ca: 07                                        ; local index
00009cb: 23                                        ; global.get
00009cc: 0f                                        ; global index
00009cd: 41                                        ; i32.const
00009ce: 08                                        ; i32 literal
00009cf: 6a                                        ; i32.add
00009d0: 20                                        ; local.get
00009d1: 04                                        ; local index
00009d2: 41                                        ; i32.const
00009d3: 04                                        ; i32 literal
00009d4: 6c                                        ; i32.mul
00009d5: 6a                                        ; i32.add
00009d6: 28                                        ; i32.load
00009d7: 02                                        ; alignment
00009d8: 00                                        ; load offset
00009d9: 41                                        ; i32.const
00009da: 00                                        ; i32 literal
00009db: 6a                                        ; i32.add
00009dc: 2a                                        ; f32.load
00009dd: 02                                        ; alignment
00009de: 00                                        ; load offset
00009df: 21                                        ; local.set
00009e0: 08                                        ; local index
00009e1: 23                                        ; global.get
00009e2: 0f                                        ; global index
00009e3: 41                                        ; i32.const
00009e4: 08                                        ; i32 literal
00009e5: 6a                                        ; i32.add
00009e6: 20                                        ; local.get
00009e7: 04                                        ; local index
00009e8: 41                                        ; i32.const
00009e9: 04                                        ; i32 literal
00009ea: 6c                                        ; i32.mul
00009eb: 6a                                        ; i32.add
00009ec: 28                                        ; i32.load
00009ed: 02                                        ; alignment
00009ee: 00                                        ; load offset
00009ef: 41                                        ; i32.const
00009f0: 04                                        ; i32 literal
00009f1: 6a                                        ; i32.add
00009f2: 2a                                        ; f32.load
00009f3: 02                                        ; alignment
00009f4: 00                                        ; load offset
00009f5: 21                                        ; local.set
00009f6: 09                                        ; local index
00009f7: 20                                        ; local.get
00009f8: 03                                        ; local index
00009f9: 21                                        ; local.set
00009fa: 0a                                        ; local index
00009fb: 20                                        ; local.get
00009fc: 0a                                        ; local index
00009fd: 41                                        ; i32.const
00009fe: 00                                        ; i32 literal
00009ff: 6a                                        ; i32.add
0000a00: 28                                        ; i32.load
0000a01: 02                                        ; alignment
0000a02: 00                                        ; load offset
0000a03: 21                                        ; local.set
0000a04: 0a                                        ; local index
0000a05: 02                                        ; block
0000a06: 40                                        ; void
0000a07: 03                                        ; loop
0000a08: 40                                        ; void
0000a09: 20                                        ; local.get
0000a0a: 0a                                        ; local index
0000a0b: 41                                        ; i32.const
0000a0c: 00                                        ; i32 literal
0000a0d: 46                                        ; i32.eq
0000a0e: 45                                        ; i32.eqz
0000a0f: 45                                        ; i32.eqz
0000a10: 0d                                        ; br_if
0000a11: 01                                        ; break depth
0000a12: 20                                        ; local.get
0000a13: 0a                                        ; local index
0000a14: 41                                        ; i32.const
0000a15: 04                                        ; i32 literal
0000a16: 6a                                        ; i32.add
0000a17: 28                                        ; i32.load
0000a18: 02                                        ; alignment
0000a19: 00                                        ; load offset
0000a1a: 21                                        ; local.set
0000a1b: 0b                                        ; local index
0000a1c: 23                                        ; global.get
0000a1d: 0e                                        ; global index
0000a1e: 41                                        ; i32.const
0000a1f: 08                                        ; i32 literal
0000a20: 6a                                        ; i32.add
0000a21: 20                                        ; local.get
0000a22: 0b                                        ; local index
0000a23: 41                                        ; i32.const
0000a24: 0c                                        ; i32 literal
0000a25: 6c                                        ; i32.mul
0000a26: 6a                                        ; i32.add
0000a27: 28                                        ; i32.load
0000a28: 02                                        ; alignment
0000a29: 00                                        ; load offset
0000a2a: 41                                        ; i32.const
0000a2b: 04                                        ; i32 literal
0000a2c: 6a                                        ; i32.add
0000a2d: 2a                                        ; f32.load
0000a2e: 02                                        ; alignment
0000a2f: 00                                        ; load offset
0000a30: 21                                        ; local.set
0000a31: 0c                                        ; local index
0000a32: 23                                        ; global.get
0000a33: 0e                                        ; global index
0000a34: 41                                        ; i32.const
0000a35: 08                                        ; i32 literal
0000a36: 6a                                        ; i32.add
0000a37: 20                                        ; local.get
0000a38: 0b                                        ; local index
0000a39: 41                                        ; i32.const
0000a3a: 0c                                        ; i32 literal
0000a3b: 6c                                        ; i32.mul
0000a3c: 6a                                        ; i32.add
0000a3d: 28                                        ; i32.load
0000a3e: 02                                        ; alignment
0000a3f: 00                                        ; load offset
0000a40: 41                                        ; i32.const
0000a41: 00                                        ; i32 literal
0000a42: 6a                                        ; i32.add
0000a43: 2a                                        ; f32.load
0000a44: 02                                        ; alignment
0000a45: 00                                        ; load offset
0000a46: 21                                        ; local.set
0000a47: 0d                                        ; local index
0000a48: 23                                        ; global.get
0000a49: 0e                                        ; global index
0000a4a: 41                                        ; i32.const
0000a4b: 08                                        ; i32 literal
0000a4c: 6a                                        ; i32.add
0000a4d: 20                                        ; local.get
0000a4e: 0b                                        ; local index
0000a4f: 41                                        ; i32.const
0000a50: 0c                                        ; i32 literal
0000a51: 6c                                        ; i32.mul
0000a52: 6a                                        ; i32.add
0000a53: 28                                        ; i32.load
0000a54: 02                                        ; alignment
0000a55: 00                                        ; load offset
0000a56: 41                                        ; i32.const
0000a57: 08                                        ; i32 literal
0000a58: 6a                                        ; i32.add
0000a59: 2a                                        ; f32.load
0000a5a: 02                                        ; alignment
0000a5b: 00                                        ; load offset
0000a5c: 21                                        ; local.set
0000a5d: 0e                                        ; local index
0000a5e: 20                                        ; local.get
0000a5f: 05                                        ; local index
0000a60: 20                                        ; local.get
0000a61: 06                                        ; local index
0000a62: 20                                        ; local.get
0000a63: 07                                        ; local index
0000a64: 20                                        ; local.get
0000a65: 0c                                        ; local index
0000a66: 20                                        ; local.get
0000a67: 0d                                        ; local index
0000a68: 20                                        ; local.get
0000a69: 0e                                        ; local index
0000a6a: 10                                        ; call
0000a6b: 1a                                        ; function index
0000a6c: 04                                        ; if
0000a6d: 40                                        ; void
0000a6e: 23                                        ; global.get
0000a6f: 0f                                        ; global index
0000a70: 41                                        ; i32.const
0000a71: 08                                        ; i32 literal
0000a72: 6a                                        ; i32.add
0000a73: 20                                        ; local.get
0000a74: 0b                                        ; local index
0000a75: 41                                        ; i32.const
0000a76: 04                                        ; i32 literal
0000a77: 6c                                        ; i32.mul
0000a78: 6a                                        ; i32.add
0000a79: 28                                        ; i32.load
0000a7a: 02                                        ; alignment
0000a7b: 00                                        ; load offset
0000a7c: 41                                        ; i32.const
0000a7d: 00                                        ; i32 literal
0000a7e: 6a                                        ; i32.add
0000a7f: 2a                                        ; f32.load
0000a80: 02                                        ; alignment
0000a81: 00                                        ; load offset
0000a82: 21                                        ; local.set
0000a83: 0f                                        ; local index
0000a84: 23                                        ; global.get
0000a85: 0f                                        ; global index
0000a86: 41                                        ; i32.const
0000a87: 08                                        ; i32 literal
0000a88: 6a                                        ; i32.add
0000a89: 20                                        ; local.get
0000a8a: 0b                                        ; local index
0000a8b: 41                                        ; i32.const
0000a8c: 04                                        ; i32 literal
0000a8d: 6c                                        ; i32.mul
0000a8e: 6a                                        ; i32.add
0000a8f: 28                                        ; i32.load
0000a90: 02                                        ; alignment
0000a91: 00                                        ; load offset
0000a92: 41                                        ; i32.const
0000a93: 04                                        ; i32 literal
0000a94: 6a                                        ; i32.add
0000a95: 2a                                        ; f32.load
0000a96: 02                                        ; alignment
0000a97: 00                                        ; load offset
0000a98: 21                                        ; local.set
0000a99: 10                                        ; local index
0000a9a: 20                                        ; local.get
0000a9b: 0c                                        ; local index
0000a9c: 20                                        ; local.get
0000a9d: 05                                        ; local index
0000a9e: 93                                        ; f32.sub
0000a9f: 21                                        ; local.set
0000aa0: 11                                        ; local index
0000aa1: 20                                        ; local.get
0000aa2: 0d                                        ; local index
0000aa3: 20                                        ; local.get
0000aa4: 06                                        ; local index
0000aa5: 93                                        ; f32.sub
0000aa6: 21                                        ; local.set
0000aa7: 12                                        ; local index
0000aa8: 20                                        ; local.get
0000aa9: 11                                        ; local index
0000aaa: 20                                        ; local.get
0000aab: 11                                        ; local index
0000aac: 94                                        ; f32.mul
0000aad: 20                                        ; local.get
0000aae: 12                                        ; local index
0000aaf: 20                                        ; local.get
0000ab0: 12                                        ; local index
0000ab1: 94                                        ; f32.mul
0000ab2: 92                                        ; f32.add
0000ab3: bb                                        ; f64.promote_f32
0000ab4: 10                                        ; call
0000ab5: 01                                        ; function index
0000ab6: 21                                        ; local.set
0000ab7: 13                                        ; local index
0000ab8: 20                                        ; local.get
0000ab9: 11                                        ; local index
0000aba: bb                                        ; f64.promote_f32
0000abb: 20                                        ; local.get
0000abc: 13                                        ; local index
0000abd: a3                                        ; f64.div
0000abe: b6                                        ; f32.demote_f64
0000abf: 21                                        ; local.set
0000ac0: 11                                        ; local index
0000ac1: 20                                        ; local.get
0000ac2: 12                                        ; local index
0000ac3: bb                                        ; f64.promote_f32
0000ac4: 20                                        ; local.get
0000ac5: 13                                        ; local index
0000ac6: a3                                        ; f64.div
0000ac7: b6                                        ; f32.demote_f64
0000ac8: 21                                        ; local.set
0000ac9: 12                                        ; local index
0000aca: 20                                        ; local.get
0000acb: 11                                        ; local index
0000acc: 20                                        ; local.get
0000acd: 08                                        ; local index
0000ace: 94                                        ; f32.mul
0000acf: 20                                        ; local.get
0000ad0: 12                                        ; local index
0000ad1: 20                                        ; local.get
0000ad2: 09                                        ; local index
0000ad3: 94                                        ; f32.mul
0000ad4: 92                                        ; f32.add
0000ad5: 21                                        ; local.set
0000ad6: 14                                        ; local index
0000ad7: 20                                        ; local.get
0000ad8: 11                                        ; local index
0000ad9: 20                                        ; local.get
0000ada: 0f                                        ; local index
0000adb: 94                                        ; f32.mul
0000adc: 20                                        ; local.get
0000add: 12                                        ; local index
0000ade: 20                                        ; local.get
0000adf: 10                                        ; local index
0000ae0: 94                                        ; f32.mul
0000ae1: 92                                        ; f32.add
0000ae2: 21                                        ; local.set
0000ae3: 15                                        ; local index
0000ae4: 20                                        ; local.get
0000ae5: 14                                        ; local index
0000ae6: 20                                        ; local.get
0000ae7: 15                                        ; local index
0000ae8: 93                                        ; f32.sub
0000ae9: 41                                        ; i32.const
0000aea: 00                                        ; i32 literal
0000aeb: b2                                        ; f32.convert_i32_s
0000aec: 5f                                        ; f32.le
0000aed: 45                                        ; i32.eqz
0000aee: 04                                        ; if
0000aef: 40                                        ; void
0000af0: 20                                        ; local.get
0000af1: 07                                        ; local index
0000af2: 20                                        ; local.get
0000af3: 0e                                        ; local index
0000af4: 92                                        ; f32.add
0000af5: 21                                        ; local.set
0000af6: 16                                        ; local index
0000af7: 20                                        ; local.get
0000af8: 07                                        ; local index
0000af9: 20                                        ; local.get
0000afa: 0e                                        ; local index
0000afb: 93                                        ; f32.sub
0000afc: 21                                        ; local.set
0000afd: 17                                        ; local index
0000afe: 20                                        ; local.get
0000aff: 14                                        ; local index
0000b00: 20                                        ; local.get
0000b01: 17                                        ; local index
0000b02: 94                                        ; f32.mul
0000b03: 41                                        ; i32.const
0000b04: 02                                        ; i32 literal
0000b05: b2                                        ; f32.convert_i32_s
0000b06: 20                                        ; local.get
0000b07: 0e                                        ; local index
0000b08: 94                                        ; f32.mul
0000b09: 20                                        ; local.get
0000b0a: 15                                        ; local index
0000b0b: 94                                        ; f32.mul
0000b0c: 92                                        ; f32.add
0000b0d: bb                                        ; f64.promote_f32
0000b0e: 20                                        ; local.get
0000b0f: 16                                        ; local index
0000b10: bb                                        ; f64.promote_f32
0000b11: a3                                        ; f64.div
0000b12: 21                                        ; local.set
0000b13: 18                                        ; local index
0000b14: 41                                        ; i32.const
0000b15: 02                                        ; i32 literal
0000b16: b2                                        ; f32.convert_i32_s
0000b17: 20                                        ; local.get
0000b18: 07                                        ; local index
0000b19: 94                                        ; f32.mul
0000b1a: 20                                        ; local.get
0000b1b: 14                                        ; local index
0000b1c: 94                                        ; f32.mul
0000b1d: 20                                        ; local.get
0000b1e: 15                                        ; local index
0000b1f: 20                                        ; local.get
0000b20: 17                                        ; local index
0000b21: 94                                        ; f32.mul
0000b22: 93                                        ; f32.sub
0000b23: bb                                        ; f64.promote_f32
0000b24: 20                                        ; local.get
0000b25: 16                                        ; local index
0000b26: bb                                        ; f64.promote_f32
0000b27: a3                                        ; f64.div
0000b28: 21                                        ; local.set
0000b29: 19                                        ; local index
0000b2a: 20                                        ; local.get
0000b2b: 18                                        ; local index
0000b2c: 20                                        ; local.get
0000b2d: 14                                        ; local index
0000b2e: bb                                        ; f64.promote_f32
0000b2f: a1                                        ; f64.sub
0000b30: 21                                        ; local.set
0000b31: 1a                                        ; local index
0000b32: 20                                        ; local.get
0000b33: 19                                        ; local index
0000b34: 20                                        ; local.get
0000b35: 15                                        ; local index
0000b36: bb                                        ; f64.promote_f32
0000b37: a1                                        ; f64.sub
0000b38: 21                                        ; local.set
0000b39: 1b                                        ; local index
0000b3a: 23                                        ; global.get
0000b3b: 0f                                        ; global index
0000b3c: 41                                        ; i32.const
0000b3d: 08                                        ; i32 literal
0000b3e: 6a                                        ; i32.add
0000b3f: 20                                        ; local.get
0000b40: 04                                        ; local index
0000b41: 41                                        ; i32.const
0000b42: 04                                        ; i32 literal
0000b43: 6c                                        ; i32.mul
0000b44: 6a                                        ; i32.add
0000b45: 28                                        ; i32.load
0000b46: 02                                        ; alignment
0000b47: 00                                        ; load offset
0000b48: 41                                        ; i32.const
0000b49: 00                                        ; i32 literal
0000b4a: 6a                                        ; i32.add
0000b4b: 20                                        ; local.get
0000b4c: 08                                        ; local index
0000b4d: bb                                        ; f64.promote_f32
0000b4e: 20                                        ; local.get
0000b4f: 11                                        ; local index
0000b50: bb                                        ; f64.promote_f32
0000b51: 20                                        ; local.get
0000b52: 1a                                        ; local index
0000b53: a2                                        ; f64.mul
0000b54: a0                                        ; f64.add
0000b55: b6                                        ; f32.demote_f64
0000b56: 38                                        ; f32.store
0000b57: 02                                        ; alignment
0000b58: 00                                        ; store offset
0000b59: 23                                        ; global.get
0000b5a: 0f                                        ; global index
0000b5b: 41                                        ; i32.const
0000b5c: 08                                        ; i32 literal
0000b5d: 6a                                        ; i32.add
0000b5e: 20                                        ; local.get
0000b5f: 04                                        ; local index
0000b60: 41                                        ; i32.const
0000b61: 04                                        ; i32 literal
0000b62: 6c                                        ; i32.mul
0000b63: 6a                                        ; i32.add
0000b64: 28                                        ; i32.load
0000b65: 02                                        ; alignment
0000b66: 00                                        ; load offset
0000b67: 41                                        ; i32.const
0000b68: 04                                        ; i32 literal
0000b69: 6a                                        ; i32.add
0000b6a: 20                                        ; local.get
0000b6b: 09                                        ; local index
0000b6c: bb                                        ; f64.promote_f32
0000b6d: 20                                        ; local.get
0000b6e: 12                                        ; local index
0000b6f: bb                                        ; f64.promote_f32
0000b70: 20                                        ; local.get
0000b71: 1a                                        ; local index
0000b72: a2                                        ; f64.mul
0000b73: a0                                        ; f64.add
0000b74: b6                                        ; f32.demote_f64
0000b75: 38                                        ; f32.store
0000b76: 02                                        ; alignment
0000b77: 00                                        ; store offset
0000b78: 23                                        ; global.get
0000b79: 0f                                        ; global index
0000b7a: 41                                        ; i32.const
0000b7b: 08                                        ; i32 literal
0000b7c: 6a                                        ; i32.add
0000b7d: 20                                        ; local.get
0000b7e: 0b                                        ; local index
0000b7f: 41                                        ; i32.const
0000b80: 04                                        ; i32 literal
0000b81: 6c                                        ; i32.mul
0000b82: 6a                                        ; i32.add
0000b83: 28                                        ; i32.load
0000b84: 02                                        ; alignment
0000b85: 00                                        ; load offset
0000b86: 41                                        ; i32.const
0000b87: 00                                        ; i32 literal
0000b88: 6a                                        ; i32.add
0000b89: 20                                        ; local.get
0000b8a: 0f                                        ; local index
0000b8b: bb                                        ; f64.promote_f32
0000b8c: 20                                        ; local.get
0000b8d: 11                                        ; local index
0000b8e: bb                                        ; f64.promote_f32
0000b8f: 20                                        ; local.get
0000b90: 1b                                        ; local index
0000b91: a2                                        ; f64.mul
0000b92: a0                                        ; f64.add
0000b93: b6                                        ; f32.demote_f64
0000b94: 38                                        ; f32.store
0000b95: 02                                        ; alignment
0000b96: 00                                        ; store offset
0000b97: 23                                        ; global.get
0000b98: 0f                                        ; global index
0000b99: 41                                        ; i32.const
0000b9a: 08                                        ; i32 literal
0000b9b: 6a                                        ; i32.add
0000b9c: 20                                        ; local.get
0000b9d: 0b                                        ; local index
0000b9e: 41                                        ; i32.const
0000b9f: 04                                        ; i32 literal
0000ba0: 6c                                        ; i32.mul
0000ba1: 6a                                        ; i32.add
0000ba2: 28                                        ; i32.load
0000ba3: 02                                        ; alignment
0000ba4: 00                                        ; load offset
0000ba5: 41                                        ; i32.const
0000ba6: 04                                        ; i32 literal
0000ba7: 6a                                        ; i32.add
0000ba8: 20                                        ; local.get
0000ba9: 10                                        ; local index
0000baa: bb                                        ; f64.promote_f32
0000bab: 20                                        ; local.get
0000bac: 12                                        ; local index
0000bad: bb                                        ; f64.promote_f32
0000bae: 20                                        ; local.get
0000baf: 1b                                        ; local index
0000bb0: a2                                        ; f64.mul
0000bb1: a0                                        ; f64.add
0000bb2: b6                                        ; f32.demote_f64
0000bb3: 38                                        ; f32.store
0000bb4: 02                                        ; alignment
0000bb5: 00                                        ; store offset
0000bb6: 20                                        ; local.get
0000bb7: 0a                                        ; local index
0000bb8: 41                                        ; i32.const
0000bb9: 00                                        ; i32 literal
0000bba: 6a                                        ; i32.add
0000bbb: 28                                        ; i32.load
0000bbc: 02                                        ; alignment
0000bbd: 00                                        ; load offset
0000bbe: 21                                        ; local.set
0000bbf: 0a                                        ; local index
0000bc0: 0b                                        ; end
0000bc1: 05                                        ; else
0000bc2: 20                                        ; local.get
0000bc3: 0a                                        ; local index
0000bc4: 41                                        ; i32.const
0000bc5: 00                                        ; i32 literal
0000bc6: 6a                                        ; i32.add
0000bc7: 28                                        ; i32.load
0000bc8: 02                                        ; alignment
0000bc9: 00                                        ; load offset
0000bca: 21                                        ; local.set
0000bcb: 0a                                        ; local index
0000bcc: 0b                                        ; end
0000bcd: 0c                                        ; br
0000bce: 00                                        ; break depth
0000bcf: 0b                                        ; end
0000bd0: 0b                                        ; end
0000bd1: 20                                        ; local.get
0000bd2: 03                                        ; local index
0000bd3: 41                                        ; i32.const
0000bd4: 00                                        ; i32 literal
0000bd5: 6a                                        ; i32.add
0000bd6: 28                                        ; i32.load
0000bd7: 02                                        ; alignment
0000bd8: 00                                        ; load offset
0000bd9: 21                                        ; local.set
0000bda: 03                                        ; local index
0000bdb: 0c                                        ; br
0000bdc: 00                                        ; break depth
0000bdd: 0b                                        ; end
0000bde: 0b                                        ; end
0000bdf: 20                                        ; local.get
0000be0: 02                                        ; local index
0000be1: 41                                        ; i32.const
0000be2: 01                                        ; i32 literal
0000be3: 6a                                        ; i32.add
0000be4: 21                                        ; local.set
0000be5: 02                                        ; local index
0000be6: 0c                                        ; br
0000be7: 00                                        ; break depth
0000be8: 0b                                        ; end
0000be9: 0b                                        ; end
0000bea: 20                                        ; local.get
0000beb: 00                                        ; local index
0000bec: 41                                        ; i32.const
0000bed: 01                                        ; i32 literal
0000bee: 6a                                        ; i32.add
0000bef: 21                                        ; local.set
0000bf0: 00                                        ; local index
0000bf1: 0c                                        ; br
0000bf2: 00                                        ; break depth
0000bf3: 0b                                        ; end
0000bf4: 0b                                        ; end
0000bf5: 0b                                        ; end
; move data: [91f, bf6) -> [920, bf7)
000091e: d705                                      ; FIXUP func body size
; function body 11
0000bf7: 00                                        ; func body size (guess)
0000bf8: 00                                        ; local decl count
0000bf9: 10                                        ; call
0000bfa: 16                                        ; function index
0000bfb: 20                                        ; local.get
0000bfc: 00                                        ; local index
0000bfd: 20                                        ; local.get
0000bfe: 01                                        ; local index
0000bff: 10                                        ; call
0000c00: 17                                        ; function index
0000c01: 10                                        ; call
0000c02: 18                                        ; function index
0000c03: 0b                                        ; end
0000bf7: 0c                                        ; FIXUP func body size
; function body 12
0000c04: 00                                        ; func body size (guess)
0000c05: 01                                        ; local decl count
0000c06: 05                                        ; local type count
0000c07: 7f                                        ; i32
0000c08: 20                                        ; local.get
0000c09: 00                                        ; local index
0000c0a: 20                                        ; local.get
0000c0b: 02                                        ; local index
0000c0c: 92                                        ; f32.add
0000c0d: 20                                        ; local.get
0000c0e: 03                                        ; local index
0000c0f: 20                                        ; local.get
0000c10: 05                                        ; local index
0000c11: 93                                        ; f32.sub
0000c12: 5d                                        ; f32.lt
0000c13: 20                                        ; local.get
0000c14: 00                                        ; local index
0000c15: 20                                        ; local.get
0000c16: 02                                        ; local index
0000c17: 93                                        ; f32.sub
0000c18: 20                                        ; local.get
0000c19: 03                                        ; local index
0000c1a: 20                                        ; local.get
0000c1b: 05                                        ; local index
0000c1c: 92                                        ; f32.add
0000c1d: 5e                                        ; f32.gt
0000c1e: 6a                                        ; i32.add
0000c1f: 20                                        ; local.get
0000c20: 01                                        ; local index
0000c21: 20                                        ; local.get
0000c22: 02                                        ; local index
0000c23: 92                                        ; f32.add
0000c24: 20                                        ; local.get
0000c25: 04                                        ; local index
0000c26: 20                                        ; local.get
0000c27: 05                                        ; local index
0000c28: 93                                        ; f32.sub
0000c29: 5d                                        ; f32.lt
0000c2a: 6a                                        ; i32.add
0000c2b: 20                                        ; local.get
0000c2c: 01                                        ; local index
0000c2d: 20                                        ; local.get
0000c2e: 02                                        ; local index
0000c2f: 93                                        ; f32.sub
0000c30: 20                                        ; local.get
0000c31: 04                                        ; local index
0000c32: 20                                        ; local.get
0000c33: 05                                        ; local index
0000c34: 92                                        ; f32.add
0000c35: 5e                                        ; f32.gt
0000c36: 6a                                        ; i32.add
0000c37: 04                                        ; if
0000c38: 40                                        ; void
0000c39: 41                                        ; i32.const
0000c3a: 00                                        ; i32 literal
0000c3b: 0f                                        ; return
0000c3c: 0b                                        ; end
0000c3d: 20                                        ; local.get
0000c3e: 03                                        ; local index
0000c3f: 20                                        ; local.get
0000c40: 00                                        ; local index
0000c41: 93                                        ; f32.sub
0000c42: bb                                        ; f64.promote_f32
0000c43: 41                                        ; i32.const
0000c44: 02                                        ; i32 literal
0000c45: b2                                        ; f32.convert_i32_s
0000c46: bb                                        ; f64.promote_f32
0000c47: 10                                        ; call
0000c48: 00                                        ; function index
0000c49: 20                                        ; local.get
0000c4a: 04                                        ; local index
0000c4b: 20                                        ; local.get
0000c4c: 01                                        ; local index
0000c4d: 93                                        ; f32.sub
0000c4e: bb                                        ; f64.promote_f32
0000c4f: 41                                        ; i32.const
0000c50: 02                                        ; i32 literal
0000c51: b2                                        ; f32.convert_i32_s
0000c52: bb                                        ; f64.promote_f32
0000c53: 10                                        ; call
0000c54: 00                                        ; function index
0000c55: a0                                        ; f64.add
0000c56: 10                                        ; call
0000c57: 01                                        ; function index
0000c58: 20                                        ; local.get
0000c59: 02                                        ; local index
0000c5a: 20                                        ; local.get
0000c5b: 05                                        ; local index
0000c5c: 92                                        ; f32.add
0000c5d: bb                                        ; f64.promote_f32
0000c5e: 65                                        ; f64.le
0000c5f: 0f                                        ; return
0000c60: 0b                                        ; end
0000c04: 5c                                        ; FIXUP func body size
; function body 13
0000c61: 00                                        ; func body size (guess)
0000c62: 00                                        ; local decl count
0000c63: 41                                        ; i32.const
0000c64: a808                                      ; i32 literal
0000c66: 0f                                        ; return
0000c67: 0b                                        ; end
0000c61: 06                                        ; FIXUP func body size
; function body 14
0000c68: 00                                        ; func body size (guess)
0000c69: 00                                        ; local decl count
0000c6a: 41                                        ; i32.const
0000c6b: b808                                      ; i32 literal
0000c6d: 0f                                        ; return
0000c6e: 0b                                        ; end
0000c68: 06                                        ; FIXUP func body size
; function body 15
0000c6f: 00                                        ; func body size (guess)
0000c70: 00                                        ; local decl count
0000c71: 41                                        ; i32.const
0000c72: 9009                                      ; i32 literal
0000c74: 0f                                        ; return
0000c75: 0b                                        ; end
0000c6f: 06                                        ; FIXUP func body size
; function body 16
0000c76: 00                                        ; func body size (guess)
0000c77: 00                                        ; local decl count
0000c78: 41                                        ; i32.const
0000c79: 9809                                      ; i32 literal
0000c7b: 0f                                        ; return
0000c7c: 0b                                        ; end
0000c76: 06                                        ; FIXUP func body size
; function body 17
0000c7d: 00                                        ; func body size (guess)
0000c7e: 00                                        ; local decl count
0000c7f: 41                                        ; i32.const
0000c80: a809                                      ; i32 literal
0000c82: 0f                                        ; return
0000c83: 0b                                        ; end
0000c7d: 06                                        ; FIXUP func body size
; function body 18
0000c84: 00                                        ; func body size (guess)
0000c85: 00                                        ; local decl count
0000c86: 41                                        ; i32.const
0000c87: f009                                      ; i32 literal
0000c89: 0f                                        ; return
0000c8a: 0b                                        ; end
0000c84: 06                                        ; FIXUP func body size
; function body 19
0000c8b: 00                                        ; func body size (guess)
0000c8c: 00                                        ; local decl count
0000c8d: 41                                        ; i32.const
0000c8e: 800a                                      ; i32 literal
0000c90: 0f                                        ; return
0000c91: 0b                                        ; end
0000c8b: 06                                        ; FIXUP func body size
; function body 20
0000c92: 00                                        ; func body size (guess)
0000c93: 00                                        ; local decl count
0000c94: 41                                        ; i32.const
0000c95: a80a                                      ; i32 literal
0000c97: 0f                                        ; return
0000c98: 0b                                        ; end
0000c92: 06                                        ; FIXUP func body size
; function body 21
0000c99: 00                                        ; func body size (guess)
0000c9a: 00                                        ; local decl count
0000c9b: 41                                        ; i32.const
0000c9c: b00a                                      ; i32 literal
0000c9e: 0f                                        ; return
0000c9f: 0b                                        ; end
0000c99: 06                                        ; FIXUP func body size
; function body 22
0000ca0: 00                                        ; func body size (guess)
0000ca1: 00                                        ; local decl count
0000ca2: 10                                        ; call
0000ca3: 25                                        ; function index
0000ca4: 10                                        ; call
0000ca5: 26                                        ; function index
0000ca6: 10                                        ; call
0000ca7: 27                                        ; function index
0000ca8: 10                                        ; call
0000ca9: 28                                        ; function index
0000caa: 10                                        ; call
0000cab: 29                                        ; function index
0000cac: 0b                                        ; end
0000ca0: 0c                                        ; FIXUP func body size
; function body 23
0000cad: 00                                        ; func body size (guess)
0000cae: 01                                        ; local decl count
0000caf: 04                                        ; local type count
0000cb0: 7f                                        ; i32
0000cb1: 41                                        ; i32.const
0000cb2: 08                                        ; i32 literal
0000cb3: 23                                        ; global.get
0000cb4: 0d                                        ; global index
0000cb5: 41                                        ; i32.const
0000cb6: 01                                        ; i32 literal
0000cb7: 6b                                        ; i32.sub
0000cb8: 41                                        ; i32.const
0000cb9: 0c                                        ; i32 literal
0000cba: 6c                                        ; i32.mul
0000cbb: 6a                                        ; i32.add
0000cbc: 41                                        ; i32.const
0000cbd: 07                                        ; i32 literal
0000cbe: 10                                        ; call
0000cbf: 0e                                        ; function index
0000cc0: 21                                        ; local.set
0000cc1: 00                                        ; local index
0000cc2: 20                                        ; local.get
0000cc3: 00                                        ; local index
0000cc4: 41                                        ; i32.const
0000cc5: d804                                      ; i32 literal
0000cc7: 36                                        ; i32.store
0000cc8: 02                                        ; alignment
0000cc9: 00                                        ; store offset
0000cca: 20                                        ; local.get
0000ccb: 00                                        ; local index
0000ccc: 41                                        ; i32.const
0000ccd: 04                                        ; i32 literal
0000cce: 6a                                        ; i32.add
0000ccf: 23                                        ; global.get
0000cd0: 0d                                        ; global index
0000cd1: 41                                        ; i32.const
0000cd2: 01                                        ; i32 literal
0000cd3: 6b                                        ; i32.sub
0000cd4: 36                                        ; i32.store
0000cd5: 02                                        ; alignment
0000cd6: 00                                        ; store offset
0000cd7: 20                                        ; local.get
0000cd8: 00                                        ; local index
0000cd9: 24                                        ; global.set
0000cda: 0e                                        ; global index
0000cdb: 41                                        ; i32.const
0000cdc: 08                                        ; i32 literal
0000cdd: 23                                        ; global.get
0000cde: 0d                                        ; global index
0000cdf: 41                                        ; i32.const
0000ce0: 01                                        ; i32 literal
0000ce1: 6b                                        ; i32.sub
0000ce2: 41                                        ; i32.const
0000ce3: 04                                        ; i32 literal
0000ce4: 6c                                        ; i32.mul
0000ce5: 6a                                        ; i32.add
0000ce6: 41                                        ; i32.const
0000ce7: 07                                        ; i32 literal
0000ce8: 10                                        ; call
0000ce9: 0e                                        ; function index
0000cea: 21                                        ; local.set
0000ceb: 01                                        ; local index
0000cec: 20                                        ; local.get
0000ced: 01                                        ; local index
0000cee: 41                                        ; i32.const
0000cef: 0d                                        ; i32 literal
0000cf0: 36                                        ; i32.store
0000cf1: 02                                        ; alignment
0000cf2: 00                                        ; store offset
0000cf3: 20                                        ; local.get
0000cf4: 01                                        ; local index
0000cf5: 41                                        ; i32.const
0000cf6: 04                                        ; i32 literal
0000cf7: 6a                                        ; i32.add
0000cf8: 23                                        ; global.get
0000cf9: 0d                                        ; global index
0000cfa: 41                                        ; i32.const
0000cfb: 01                                        ; i32 literal
0000cfc: 6b                                        ; i32.sub
0000cfd: 36                                        ; i32.store
0000cfe: 02                                        ; alignment
0000cff: 00                                        ; store offset
0000d00: 20                                        ; local.get
0000d01: 01                                        ; local index
0000d02: 24                                        ; global.set
0000d03: 0f                                        ; global index
0000d04: 41                                        ; i32.const
0000d05: 08                                        ; i32 literal
0000d06: 23                                        ; global.get
0000d07: 0d                                        ; global index
0000d08: 41                                        ; i32.const
0000d09: 04                                        ; i32 literal
0000d0a: 6c                                        ; i32.mul
0000d0b: 41                                        ; i32.const
0000d0c: 01                                        ; i32 literal
0000d0d: 6b                                        ; i32.sub
0000d0e: 41                                        ; i32.const
0000d0f: 04                                        ; i32 literal
0000d10: 6c                                        ; i32.mul
0000d11: 6a                                        ; i32.add
0000d12: 41                                        ; i32.const
0000d13: 07                                        ; i32 literal
0000d14: 10                                        ; call
0000d15: 0e                                        ; function index
0000d16: 21                                        ; local.set
0000d17: 02                                        ; local index
0000d18: 20                                        ; local.get
0000d19: 02                                        ; local index
0000d1a: 41                                        ; i32.const
0000d1b: 9002                                      ; i32 literal
0000d1d: 36                                        ; i32.store
0000d1e: 02                                        ; alignment
0000d1f: 00                                        ; store offset
0000d20: 20                                        ; local.get
0000d21: 02                                        ; local index
0000d22: 41                                        ; i32.const
0000d23: 04                                        ; i32 literal
0000d24: 6a                                        ; i32.add
0000d25: 23                                        ; global.get
0000d26: 0d                                        ; global index
0000d27: 41                                        ; i32.const
0000d28: 04                                        ; i32 literal
0000d29: 6c                                        ; i32.mul
0000d2a: 41                                        ; i32.const
0000d2b: 01                                        ; i32 literal
0000d2c: 6b                                        ; i32.sub
0000d2d: 36                                        ; i32.store
0000d2e: 02                                        ; alignment
0000d2f: 00                                        ; store offset
0000d30: 20                                        ; local.get
0000d31: 02                                        ; local index
0000d32: 24                                        ; global.set
0000d33: 10                                        ; global index
0000d34: 41                                        ; i32.const
0000d35: 08                                        ; i32 literal
0000d36: 23                                        ; global.get
0000d37: 0c                                        ; global index
0000d38: 41                                        ; i32.const
0000d39: 01                                        ; i32 literal
0000d3a: 6b                                        ; i32.sub
0000d3b: 41                                        ; i32.const
0000d3c: 04                                        ; i32 literal
0000d3d: 6c                                        ; i32.mul
0000d3e: 6a                                        ; i32.add
0000d3f: 41                                        ; i32.const
0000d40: 07                                        ; i32 literal
0000d41: 10                                        ; call
0000d42: 0e                                        ; function index
0000d43: 21                                        ; local.set
0000d44: 03                                        ; local index
0000d45: 20                                        ; local.get
0000d46: 03                                        ; local index
0000d47: 41                                        ; i32.const
0000d48: 9002                                      ; i32 literal
0000d4a: 36                                        ; i32.store
0000d4b: 02                                        ; alignment
0000d4c: 00                                        ; store offset
0000d4d: 20                                        ; local.get
0000d4e: 03                                        ; local index
0000d4f: 41                                        ; i32.const
0000d50: 04                                        ; i32 literal
0000d51: 6a                                        ; i32.add
0000d52: 23                                        ; global.get
0000d53: 0c                                        ; global index
0000d54: 41                                        ; i32.const
0000d55: 01                                        ; i32 literal
0000d56: 6b                                        ; i32.sub
0000d57: 36                                        ; i32.store
0000d58: 02                                        ; alignment
0000d59: 00                                        ; store offset
0000d5a: 20                                        ; local.get
0000d5b: 03                                        ; local index
0000d5c: 24                                        ; global.set
0000d5d: 11                                        ; global index
0000d5e: 0b                                        ; end
; move data: [cae, d5f) -> [caf, d60)
0000cad: b101                                      ; FIXUP func body size
; function body 24
0000d60: 00                                        ; func body size (guess)
0000d61: 00                                        ; local decl count
0000d62: 0b                                        ; end
0000d60: 02                                        ; FIXUP func body size
; function body 25
0000d63: 00                                        ; func body size (guess)
0000d64: 01                                        ; local decl count
0000d65: 05                                        ; local type count
0000d66: 7f                                        ; i32
0000d67: 41                                        ; i32.const
0000d68: 00                                        ; i32 literal
0000d69: 21                                        ; local.set
0000d6a: 00                                        ; local index
0000d6b: 41                                        ; i32.const
0000d6c: d007                                      ; i32 literal
0000d6e: 10                                        ; call
0000d6f: 08                                        ; function index
0000d70: 41                                        ; i32.const
0000d71: 00                                        ; i32 literal
0000d72: 21                                        ; local.set
0000d73: 01                                        ; local index
0000d74: 02                                        ; block
0000d75: 40                                        ; void
0000d76: 03                                        ; loop
0000d77: 40                                        ; void
0000d78: 20                                        ; local.get
0000d79: 01                                        ; local index
0000d7a: 23                                        ; global.get
0000d7b: 11                                        ; global index
0000d7c: 41                                        ; i32.const
0000d7d: 04                                        ; i32 literal
0000d7e: 6a                                        ; i32.add
0000d7f: 28                                        ; i32.load
0000d80: 02                                        ; alignment
0000d81: 00                                        ; load offset
0000d82: 41                                        ; i32.const
0000d83: 01                                        ; i32 literal
0000d84: 6b                                        ; i32.sub
0000d85: 4a                                        ; i32.gt_s
0000d86: 0d                                        ; br_if
0000d87: 01                                        ; break depth
0000d88: 10                                        ; call
0000d89: 10                                        ; function index
0000d8a: 21                                        ; local.set
0000d8b: 00                                        ; local index
0000d8c: 23                                        ; global.get
0000d8d: 11                                        ; global index
0000d8e: 41                                        ; i32.const
0000d8f: 08                                        ; i32 literal
0000d90: 6a                                        ; i32.add
0000d91: 20                                        ; local.get
0000d92: 01                                        ; local index
0000d93: 41                                        ; i32.const
0000d94: 04                                        ; i32 literal
0000d95: 6c                                        ; i32.mul
0000d96: 6a                                        ; i32.add
0000d97: 20                                        ; local.get
0000d98: 00                                        ; local index
0000d99: 36                                        ; i32.store
0000d9a: 02                                        ; alignment
0000d9b: 00                                        ; store offset
0000d9c: 41                                        ; i32.const
0000d9d: e807                                      ; i32 literal
0000d9f: 20                                        ; local.get
0000da0: 01                                        ; local index
0000da1: 10                                        ; call
0000da2: 0d                                        ; function index
0000da3: 10                                        ; call
0000da4: 0a                                        ; function index
0000da5: 41                                        ; i32.const
0000da6: f007                                      ; i32 literal
0000da8: 10                                        ; call
0000da9: 0a                                        ; function index
0000daa: 20                                        ; local.get
0000dab: 00                                        ; local index
0000dac: 10                                        ; call
0000dad: 0d                                        ; function index
0000dae: 10                                        ; call
0000daf: 0a                                        ; function index
0000db0: 10                                        ; call
0000db1: 08                                        ; function index
0000db2: 41                                        ; i32.const
0000db3: 00                                        ; i32 literal
0000db4: 21                                        ; local.set
0000db5: 02                                        ; local index
0000db6: 02                                        ; block
0000db7: 40                                        ; void
0000db8: 03                                        ; loop
0000db9: 40                                        ; void
0000dba: 20                                        ; local.get
0000dbb: 02                                        ; local index
0000dbc: 20                                        ; local.get
0000dbd: 00                                        ; local index
0000dbe: 41                                        ; i32.const
0000dbf: 04                                        ; i32 literal
0000dc0: 6a                                        ; i32.add
0000dc1: 28                                        ; i32.load
0000dc2: 02                                        ; alignment
0000dc3: 00                                        ; load offset
0000dc4: 41                                        ; i32.const
0000dc5: 01                                        ; i32 literal
0000dc6: 6b                                        ; i32.sub
0000dc7: 4a                                        ; i32.gt_s
0000dc8: 0d                                        ; br_if
0000dc9: 01                                        ; break depth
0000dca: 20                                        ; local.get
0000dcb: 00                                        ; local index
0000dcc: 41                                        ; i32.const
0000dcd: 08                                        ; i32 literal
0000dce: 6a                                        ; i32.add
0000dcf: 20                                        ; local.get
0000dd0: 02                                        ; local index
0000dd1: 41                                        ; i32.const
0000dd2: 04                                        ; i32 literal
0000dd3: 6c                                        ; i32.mul
0000dd4: 6a                                        ; i32.add
0000dd5: 10                                        ; call
0000dd6: 11                                        ; function index
0000dd7: 36                                        ; i32.store
0000dd8: 02                                        ; alignment
0000dd9: 00                                        ; store offset
0000dda: 20                                        ; local.get
0000ddb: 02                                        ; local index
0000ddc: 41                                        ; i32.const
0000ddd: 01                                        ; i32 literal
0000dde: 6a                                        ; i32.add
0000ddf: 21                                        ; local.set
0000de0: 02                                        ; local index
0000de1: 0c                                        ; br
0000de2: 00                                        ; break depth
0000de3: 0b                                        ; end
0000de4: 0b                                        ; end
0000de5: 20                                        ; local.get
0000de6: 01                                        ; local index
0000de7: 41                                        ; i32.const
0000de8: 01                                        ; i32 literal
0000de9: 6a                                        ; i32.add
0000dea: 21                                        ; local.set
0000deb: 01                                        ; local index
0000dec: 0c                                        ; br
0000ded: 00                                        ; break depth
0000dee: 0b                                        ; end
0000def: 0b                                        ; end
0000df0: 41                                        ; i32.const
0000df1: 00                                        ; i32 literal
0000df2: 21                                        ; local.set
0000df3: 03                                        ; local index
0000df4: 02                                        ; block
0000df5: 40                                        ; void
0000df6: 03                                        ; loop
0000df7: 40                                        ; void
0000df8: 20                                        ; local.get
0000df9: 03                                        ; local index
0000dfa: 23                                        ; global.get
0000dfb: 0f                                        ; global index
0000dfc: 41                                        ; i32.const
0000dfd: 04                                        ; i32 literal
0000dfe: 6a                                        ; i32.add
0000dff: 28                                        ; i32.load
0000e00: 02                                        ; alignment
0000e01: 00                                        ; load offset
0000e02: 41                                        ; i32.const
0000e03: 01                                        ; i32 literal
0000e04: 6b                                        ; i32.sub
0000e05: 4a                                        ; i32.gt_s
0000e06: 0d                                        ; br_if
0000e07: 01                                        ; break depth
0000e08: 23                                        ; global.get
0000e09: 0f                                        ; global index
0000e0a: 41                                        ; i32.const
0000e0b: 08                                        ; i32 literal
0000e0c: 6a                                        ; i32.add
0000e0d: 20                                        ; local.get
0000e0e: 03                                        ; local index
0000e0f: 41                                        ; i32.const
0000e10: 04                                        ; i32 literal
0000e11: 6c                                        ; i32.mul
0000e12: 6a                                        ; i32.add
0000e13: 10                                        ; call
0000e14: 12                                        ; function index
0000e15: 36                                        ; i32.store
0000e16: 02                                        ; alignment
0000e17: 00                                        ; store offset
0000e18: 20                                        ; local.get
0000e19: 03                                        ; local index
0000e1a: 41                                        ; i32.const
0000e1b: 01                                        ; i32 literal
0000e1c: 6a                                        ; i32.add
0000e1d: 21                                        ; local.set
0000e1e: 03                                        ; local index
0000e1f: 0c                                        ; br
0000e20: 00                                        ; break depth
0000e21: 0b                                        ; end
0000e22: 0b                                        ; end
0000e23: 41                                        ; i32.const
0000e24: f807                                      ; i32 literal
0000e26: 23                                        ; global.get
0000e27: 0f                                        ; global index
0000e28: 10                                        ; call
0000e29: 0d                                        ; function index
0000e2a: 10                                        ; call
0000e2b: 0a                                        ; function index
0000e2c: 10                                        ; call
0000e2d: 08                                        ; function index
0000e2e: 41                                        ; i32.const
0000e2f: 00                                        ; i32 literal
0000e30: 21                                        ; local.set
0000e31: 04                                        ; local index
0000e32: 02                                        ; block
0000e33: 40                                        ; void
0000e34: 03                                        ; loop
0000e35: 40                                        ; void
0000e36: 20                                        ; local.get
0000e37: 04                                        ; local index
0000e38: 23                                        ; global.get
0000e39: 10                                        ; global index
0000e3a: 41                                        ; i32.const
0000e3b: 04                                        ; i32 literal
0000e3c: 6a                                        ; i32.add
0000e3d: 28                                        ; i32.load
0000e3e: 02                                        ; alignment
0000e3f: 00                                        ; load offset
0000e40: 41                                        ; i32.const
0000e41: 01                                        ; i32 literal
0000e42: 6b                                        ; i32.sub
0000e43: 4a                                        ; i32.gt_s
0000e44: 0d                                        ; br_if
0000e45: 01                                        ; break depth
0000e46: 23                                        ; global.get
0000e47: 10                                        ; global index
0000e48: 41                                        ; i32.const
0000e49: 08                                        ; i32 literal
0000e4a: 6a                                        ; i32.add
0000e4b: 20                                        ; local.get
0000e4c: 04                                        ; local index
0000e4d: 41                                        ; i32.const
0000e4e: 04                                        ; i32 literal
0000e4f: 6c                                        ; i32.mul
0000e50: 6a                                        ; i32.add
0000e51: 10                                        ; call
0000e52: 11                                        ; function index
0000e53: 36                                        ; i32.store
0000e54: 02                                        ; alignment
0000e55: 00                                        ; store offset
0000e56: 20                                        ; local.get
0000e57: 04                                        ; local index
0000e58: 41                                        ; i32.const
0000e59: 01                                        ; i32 literal
0000e5a: 6a                                        ; i32.add
0000e5b: 21                                        ; local.set
0000e5c: 04                                        ; local index
0000e5d: 0c                                        ; br
0000e5e: 00                                        ; break depth
0000e5f: 0b                                        ; end
0000e60: 0b                                        ; end
0000e61: 41                                        ; i32.const
0000e62: 9008                                      ; i32 literal
0000e64: 23                                        ; global.get
0000e65: 10                                        ; global index
0000e66: 10                                        ; call
0000e67: 0d                                        ; function index
0000e68: 10                                        ; call
0000e69: 0a                                        ; function index
0000e6a: 10                                        ; call
0000e6b: 08                                        ; function index
0000e6c: 0b                                        ; end
; move data: [d64, e6d) -> [d65, e6e)
0000d63: 8902                                      ; FIXUP func body size
; function body 26
0000e6e: 00                                        ; func body size (guess)
0000e6f: 00                                        ; local decl count
0000e70: 0b                                        ; end
0000e6e: 02                                        ; FIXUP func body size
; function body 27
0000e71: 00                                        ; func body size (guess)
0000e72: 00                                        ; local decl count
0000e73: 0b                                        ; end
0000e71: 02                                        ; FIXUP func body size
; move data: [395, e74) -> [396, e75)
0000394: df15                                      ; FIXUP section size
; section "Data" (11)
0000e75: 0b                                        ; section code
0000e76: 00                                        ; section size (guess)
0000e77: 16                                        ; num data segments
; data segment header 0
0000e78: 00                                      
0000e79: 41                                        ; i32.const
0000e7a: 8807                                      ; i32 literal
0000e7c: 0b                                        ; end
0000e7d: 15                                        ; data segment size
; data segment data 0
0000e7e: 6172 7261 7928 6f66 2063 6972 636c 6529 
0000e8e: 203d 2026 00                              ; data segment data
; data segment header 1
0000e93: 00                                      
0000e94: 41                                        ; i32.const
0000e95: a007                                      ; i32 literal
0000e97: 0b                                        ; end
0000e98: 0b                                        ; data segment size
; data segment data 1
0000e99: 6369 7263 6c65 203d 2023 00               ; data segment data
; data segment header 2
0000ea4: 00                                      
0000ea5: 41                                        ; i32.const
0000ea6: b007                                      ; i32 literal
0000ea8: 0b                                        ; end
0000ea9: 04                                        ; data segment size
; data segment data 2
0000eaa: 2028 2600                                 ; data segment data
; data segment header 3
0000eae: 00                                      
0000eaf: 41                                        ; i32.const
0000eb0: b807                                      ; i32 literal
0000eb2: 0b                                        ; end
0000eb3: 02                                        ; data segment size
; data segment data 3
0000eb4: 2900                                      ; data segment data
; data segment header 4
0000eb6: 00                                      
0000eb7: 41                                        ; i32.const
0000eb8: c007                                      ; i32 literal
0000eba: 0b                                        ; end
0000ebb: 0c                                        ; data segment size
; data segment data 4
0000ebc: 6369 7263 6c65 5620 3d20 2600             ; data segment data
; data segment header 5
0000ec8: 00                                      
0000ec9: 41                                        ; i32.const
0000eca: d007                                      ; i32 literal
0000ecc: 0b                                        ; end
0000ecd: 17                                        ; data segment size
; data segment data 5
0000ece: 496e 6974 6961 6c69 7a65 2061 7070 6c69 
0000ede: 6361 7469 6f6e 00                         ; data segment data
; data segment header 6
0000ee5: 00                                      
0000ee6: 41                                        ; i32.const
0000ee7: e807                                      ; i32 literal
0000ee9: 0b                                        ; end
0000eea: 06                                        ; data segment size
; data segment data 6
0000eeb: 726f 7720 2300                            ; data segment data
; data segment header 7
0000ef1: 00                                      
0000ef2: 41                                        ; i32.const
0000ef3: f007                                      ; i32 literal
0000ef5: 0b                                        ; end
0000ef6: 05                                        ; data segment size
; data segment data 7
0000ef7: 203d 2026 00                              ; data segment data
; data segment header 8
0000efc: 00                                      
0000efd: 41                                        ; i32.const
0000efe: f807                                      ; i32 literal
0000f00: 0b                                        ; end
0000f01: 11                                        ; data segment size
; data segment data 8
0000f02: 6369 7263 6c65 7664 6174 6120 3d3e 2026 
0000f12: 00                                        ; data segment data
; data segment header 9
0000f13: 00                                      
0000f14: 41                                        ; i32.const
0000f15: 9008                                      ; i32 literal
0000f17: 0b                                        ; end
0000f18: 11                                        ; data segment size
; data segment data 9
0000f19: 6365 6c6c 6369 7263 6c65 7320 3d3e 2026 
0000f29: 00                                        ; data segment data
; data segment header 10
0000f2a: 00                                      
0000f2b: 41                                        ; i32.const
0000f2c: a808                                      ; i32 literal
0000f2e: 0b                                        ; end
0000f2f: 0b                                        ; data segment size
; data segment data 10
0000f30: 5765 6247 4c2d 4465 6d6f 00               ; data segment data
; data segment header 11
0000f3b: 00                                      
0000f3c: 41                                        ; i32.const
0000f3d: b808                                      ; i32 literal
0000f3f: 0b                                        ; end
0000f40: 51                                        ; data segment size
; data segment data 11
0000f41: 5765 6241 7373 656d 626c 7920 636f 6e76 
0000f51: 6572 7369 6f6e 2064 656d 6f6e 7374 7261 
0000f61: 7469 6e67 2074 6865 2066 6173 7465 722d 
0000f71: 7065 7266 6f72 6d69 6e67 2067 7269 6420 
0000f81: 6f66 206c 696e 6b65 642d 6c69 7374 732e 
0000f91: 00                                        ; data segment data
; data segment header 12
0000f92: 00                                      
0000f93: 41                                        ; i32.const
0000f94: 9009                                      ; i32 literal
0000f96: 0b                                        ; end
0000f97: 04                                        ; data segment size
; data segment data 12
0000f98: 4d49 5400                                 ; data segment data
; data segment header 13
0000f9c: 00                                      
0000f9d: 41                                        ; i32.const
0000f9e: 9809                                      ; i32 literal
0000fa0: 0b                                        ; end
0000fa1: 0b                                        ; data segment size
; data segment data 13
0000fa2: 5765 6247 4c2d 4465 6d6f 00               ; data segment data
; data segment header 14
0000fad: 00                                      
0000fae: 41                                        ; i32.const
0000faf: a809                                      ; i32 literal
0000fb1: 0b                                        ; end
0000fb2: 46                                        ; data segment size
; data segment data 14
0000fb3: 6874 7470 733a 2f2f 6769 7468 7562 2e63 
0000fc3: 6f6d 2f67 7579 6265 6466 6f72 642f 7761 
0000fd3: 736d 2d64 656d 6f2f 626c 6f62 2f6d 6173 
0000fe3: 7465 722f 6e61 7469 7665 2f64 656d 6f2d 
0000ff3: 6f70 742e 6300                            ; data segment data
; data segment header 15
0000ff9: 00                                      
0000ffa: 41                                        ; i32.const
0000ffb: f009                                      ; i32 literal
0000ffd: 0b                                        ; end
0000ffe: 0e                                        ; data segment size
; data segment data 15
0000fff: 7661 6e69 6c6c 6176 622e 6170 7000        ; data segment data
; data segment header 16
000100d: 00                                      
000100e: 41                                        ; i32.const
000100f: 800a                                      ; i32 literal
0001011: 0b                                        ; end
0001012: 25                                        ; data segment size
; data segment data 16
0001013: 3833 6361 3262 3933 2d34 6535 372d 3464 
0001023: 3434 2d62 3262 632d 3136 3332 3532 6139 
0001033: 3330 3564 00                              ; data segment data
; data segment header 17
0001038: 00                                      
0001039: 41                                        ; i32.const
000103a: a80a                                      ; i32 literal
000103c: 0b                                        ; end
000103d: 08                                        ; data segment size
; data segment data 17
000103e: 312e 302e 302e 3000                       ; data segment data
; data segment header 18
0001046: 00                                      
0001047: 41                                        ; i32.const
0001048: b00a                                      ; i32 literal
000104a: 0b                                        ; end
000104b: 08                                        ; data segment size
; data segment data 18
000104c: 312e 302e 302e 3000                       ; data segment data
; data segment header 19
0001054: 00                                      
0001055: 41                                        ; i32.const
0001056: 0d                                        ; i32 literal
0001057: 0b                                        ; end
0001058: fd01                                      ; data segment size
; data segment data 19
000105a: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
000106a: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
000107a: 496b 4e70 636d 4e73 5a56 5969 4c43 4a6a 
000108a: 6247 467a 6331 3970 5a43 4936 4d54 4d73 
000109a: 496d 5a70 5a57 786b 6379 4936 6579 4a32 
00010aa: 6543 4936 6579 4a6e 5a57 356c 636d 6c6a 
00010ba: 496a 7062 5853 7769 636d 4633 496a 6f69 
00010ca: 5a6a 4d79 4969 7769 6448 6c77 5a53 4936 
00010da: 4d33 3073 496e 5a35 496a 7037 496d 646c 
00010ea: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
00010fa: 5958 6369 4f69 4a6d 4d7a 4969 4c43 4a30 
000110a: 6558 426c 496a 6f7a 6658 3073 496d 6c7a 
000111a: 5533 5279 6457 4e30 496a 706d 5957 787a 
000112a: 5a53 7769 6257 5630 6147 396b 6379 4936 
000113a: 6533 3073 496d 3568 6257 567a 6347 466a 
000114a: 5a53 4936 626e 5673 6248 303d 00          ; data segment data
; data segment header 20
0001157: 00                                      
0001158: 41                                        ; i32.const
0001159: 9002                                      ; i32 literal
000115b: 0b                                        ; end
000115c: a102                                      ; data segment size
; data segment data 20
000115e: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
000116e: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
000117e: 496b 4e6c 6247 7844 6158 4a6a 6247 5569 
000118e: 4c43 4a6a 6247 467a 6331 3970 5a43 4936 
000119e: 4d6a 6379 4c43 4a6d 6157 5673 5a48 4d69 
00011ae: 4f6e 7369 626d 5634 6443 4936 6579 4a6e 
00011be: 5a57 356c 636d 6c6a 496a 7062 5853 7769 
00011ce: 636d 4633 496a 6f69 577a 4933 4d6c 3144 
00011de: 5a57 7873 5132 6c79 5932 786c 4969 7769 
00011ee: 6448 6c77 5a53 4936 4d54 4239 4c43 4a6a 
00011fe: 6158 4a6a 6247 564a 626d 526c 6543 4936 
000120e: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
000121e: 5853 7769 636d 4633 496a 6f69 6154 4d79 
000122e: 4969 7769 6448 6c77 5a53 4936 4d58 3139 
000123e: 4c43 4a70 6331 4e30 636e 566a 6443 4936 
000124e: 5a6d 4673 6332 5573 496d 316c 6447 6876 
000125e: 5a48 4d69 4f6e 7439 4c43 4a75 5957 316c 
000126e: 6333 4268 5932 5569 4f6d 3531 6247 7839 
000127e: 00                                        ; data segment data
; data segment header 21
000127f: 00                                      
0001280: 41                                        ; i32.const
0001281: d804                                      ; i32 literal
0001283: 0b                                        ; end
0001284: ad02                                      ; data segment size
; data segment data 21
0001286: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0001296: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
00012a6: 496b 4e70 636d 4e73 5a53 4973 496d 4e73 
00012b6: 5958 4e7a 5832 6c6b 496a 6f32 4d44 4173 
00012c6: 496d 5a70 5a57 786b 6379 4936 6579 4a35 
00012d6: 496a 7037 496d 646c 626d 5679 6157 4d69 
00012e6: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a6d 
00012f6: 4d7a 4969 4c43 4a30 6558 426c 496a 6f7a 
0001306: 6653 7769 6543 4936 6579 4a6e 5a57 356c 
0001316: 636d 6c6a 496a 7062 5853 7769 636d 4633 
0001326: 496a 6f69 5a6a 4d79 4969 7769 6448 6c77 
0001336: 5a53 4936 4d33 3073 496e 4969 4f6e 7369 
0001346: 5a32 5675 5a58 4a70 5979 4936 5731 3073 
0001356: 496e 4a68 6479 4936 496d 597a 4d69 4973 
0001366: 496e 5235 6347 5569 4f6a 4e39 6653 7769 
0001376: 6158 4e54 6448 4a31 5933 5169 4f6e 5279 
0001386: 6457 5573 496d 316c 6447 6876 5a48 4d69 
0001396: 4f6e 7439 4c43 4a75 5957 316c 6333 4268 
00013a6: 5932 5569 4f6d 3531 6247 7839 00          ; data segment data
; move data: [e77, 13b3) -> [e78, 13b4)
0000e76: bc0a                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0141 0c60 027c 7c01 
0000010: 7c60 017c 017c 6000 017c 6002 7f7f 0060 
0000020: 017f 0060 037f 7f7f 017f 6002 7f7f 017f 
0000030: 6001 7f01 7f60 0001 7f60 027d 7d00 6000 
0000040: 0060 067d 7d7d 7d7d 7d01 7f02 d501 0f04 
0000050: 4d61 7468 0370 6f77 0000 044d 6174 6804 
0000060: 7371 7274 0001 044d 6174 6803 6578 7000 
0000070: 0104 4d61 7468 0363 6f73 0001 044d 6174 
0000080: 6806 7261 6e64 6f6d 0002 044d 6174 6804 
0000090: 6365 696c 0001 044d 6174 6805 666c 6f6f 
00000a0: 7200 0102 4743 0961 6464 4f62 6a65 6374 
00000b0: 0003 0763 6f6e 736f 6c65 036c 6f67 0004 
00000c0: 0673 7472 696e 6707 7265 706c 6163 6500 
00000d0: 0506 7374 7269 6e67 0361 6464 0006 0673 
00000e0: 7472 696e 6706 6c65 6e67 7468 0007 0673 
00000f0: 7472 696e 6707 696e 6465 784f 6600 0606 
0000100: 7374 7269 6e67 0874 6f53 7472 696e 6700 
0000110: 0703 656e 760a 6279 7465 6368 756e 6b73 
0000120: 0200 0103 1d1c 0608 0808 0808 0809 0a09 
0000130: 0a09 0b08 0808 0808 0808 0808 0a0a 0a0a 
0000140: 0a0a 069c 0112 7f01 41b8 0a0b 7c01 4469 
0000150: 5714 8b0a bf05 400b 7c01 4418 2d44 54fb 
0000160: 2109 400b 7f01 41ff ffff ff07 0b7e 0142 
0000170: ffff ffff ffff ffff ff00 0b7d 0143 ffff 
0000180: 7f7f 0b7c 0144 ffff ffff ffff ef7f 0b7f 
0000190: 0141 8080 8080 780b 7e01 4280 8080 8080 
00001a0: 8080 8080 7f0b 7d01 43ff ff7f ff0b 7c01 
00001b0: 44ff ffff ffff ffef ff0b 7f01 41f8 000b 
00001c0: 7f01 41c6 000b 7f01 4190 ce00 0b7f 0141 
00001d0: 000b 7f01 4100 0b7f 0141 000b 7f01 4100 
00001e0: 0b07 ac03 0f14 676c 6f62 616c 2e47 6574 
00001f0: 4d65 6d6f 7279 5369 7a65 000f 1841 6c67 
0000200: 6f72 6974 686d 2e67 6574 4369 7263 6c65 
0000210: 436f 756e 7400 131d 416c 676f 7269 7468 
0000220: 6d2e 6765 7443 6972 636c 6544 6174 614f 
0000230: 6666 7365 7400 140e 416c 676f 7269 7468 
0000240: 6d2e 696e 6974 0015 1241 6c67 6f72 6974 
0000250: 686d 2e74 696d 6553 7465 7000 191a 4d61 
0000260: 7468 2e64 6574 6563 7443 6972 636c 6543 
0000270: 6f6c 6c69 7369 6f6e 001a 1a41 7373 656d 
0000280: 626c 7949 6e66 6f2e 4173 7365 6d62 6c79 
0000290: 5469 746c 6500 1b20 4173 7365 6d62 6c79 
00002a0: 496e 666f 2e41 7373 656d 626c 7944 6573 
00002b0: 6372 6970 7469 6f6e 001c 1c41 7373 656d 
00002c0: 626c 7949 6e66 6f2e 4173 7365 6d62 6c79 
00002d0: 436f 6d70 616e 7900 1d1c 4173 7365 6d62 
00002e0: 6c79 496e 666f 2e41 7373 656d 626c 7950 
00002f0: 726f 6475 6374 001e 1e41 7373 656d 626c 
0000300: 7949 6e66 6f2e 4173 7365 6d62 6c79 436f 
0000310: 7079 7269 6768 7400 1f1e 4173 7365 6d62 
0000320: 6c79 496e 666f 2e41 7373 656d 626c 7954 
0000330: 7261 6465 6d61 726b 0020 1141 7373 656d 
0000340: 626c 7949 6e66 6f2e 4775 6964 0021 1c41 
0000350: 7373 656d 626c 7949 6e66 6f2e 4173 7365 
0000360: 6d62 6c79 5665 7273 696f 6e00 2220 4173 
0000370: 7365 6d62 6c79 496e 666f 2e41 7373 656d 
0000380: 626c 7946 696c 6556 6572 7369 6f6e 0023 
0000390: 0801 240a df15 1c3a 0102 7f23 0021 0220 
00003a0: 0220 006a 2400 2300 4108 6f21 0320 0304 
00003b0: 4041 0820 036b 2103 2300 2003 6a24 0005 
00003c0: 2300 4108 6a24 000b 2002 2001 1007 2002 
00003d0: 0f0b 0500 2300 0f0b 2d01 057f 4108 230b 
00003e0: 4101 6b41 046c 6a41 0710 0e21 0420 0441 
00003f0: 9002 3602 0020 0441 046a 230b 4101 6b36 
0000400: 0200 2004 0f0b 2401 017f 4108 4190 0210 
0000410: 0e21 0020 0041 006a 4100 3602 0020 0041 
0000420: 046a 4100 3602 0020 000f 0b25 0101 7f41 
0000430: 0841 0d10 0e21 0020 0041 006a 1004 b638 
0000440: 0200 2000 4104 6a10 04b6 3802 0020 000f 
0000450: 0b05 0023 0d0f 0b05 0023 0e0f 0bf1 0303 
0000460: 027f 037d 017f 4188 0723 0e10 0d10 0a10 
0000470: 0841 0021 0202 4003 4020 0223 0d41 016b 
0000480: 4a0d 0141 0021 0343 0000 0000 2104 4300 
0000490: 0000 0021 0543 0000 0000 2106 0240 0340 
00004a0: 4100 2103 2000 bb10 04a2 b621 0420 01bb 
00004b0: 1004 a2b6 2105 1004 4108 b7a2 1002 44ee 
00004c0: 5a42 3ee8 4937 40a3 1005 b621 0620 0020 
00004d0: 0420 0692 9341 00b2 5d20 0420 0693 4100 
00004e0: b25d 6a20 0120 0520 0692 9341 00b2 5d6a 
00004f0: 2005 2006 9341 00b2 5d6a 0440 4101 2103 
0000500: 0541 0021 0702 4003 4020 0720 0241 016b 
0000510: 4a0d 0120 0420 0520 0623 0e41 086a 2007 
0000520: 410c 6c6a 2802 0041 046a 2a02 0023 0e41 
0000530: 086a 2007 410c 6c6a 2802 0041 006a 2a02 
0000540: 0023 0e41 086a 2007 410c 6c6a 2802 0041 
0000550: 086a 2a02 0010 1a04 4041 0121 0341 010d 
0000560: 050b 2007 4101 6a21 070c 000b 0b0b 2003 
0000570: 450d 010c 000b 0b23 0e41 086a 2002 410c 
0000580: 6c6a 4104 6a20 0438 0200 230e 4108 6a20 
0000590: 0241 0c6c 6a41 006a 2005 3802 0023 0e41 
00005a0: 086a 2002 410c 6c6a 4108 6a20 0638 0200 
00005b0: 41a0 0720 0210 0d10 0a41 b007 100a 230e 
00005c0: 4108 6a20 0241 0c6c 6a28 0200 100d 100a 
00005d0: 41b8 0710 0a10 0841 c007 230f 4108 6a20 
00005e0: 0241 046c 6a28 0200 100d 100a 1008 230f 
00005f0: 4108 6a20 0241 046c 6a28 0200 4100 6a10 
0000600: 0444 0000 0000 0000 e03f a144 9a99 9999 
0000610: 9999 b93f a2b6 3802 0023 0f41 086a 2002 
0000620: 4104 6c6a 2802 0041 046a 1004 4400 0000 
0000630: 0000 00e0 3fa1 449a 9999 9999 99b9 3fa2 
0000640: b638 0200 2002 4101 6a21 020c 000b 0b0b 
0000650: 5e01 037f 4100 2100 0240 0340 2000 230c 
0000660: 4101 6b4a 0d01 2311 4108 6a20 0041 046c 
0000670: 6a28 0200 2101 4100 2102 0240 0340 2002 
0000680: 230b 4101 6b4a 0d01 2001 4108 6a20 0241 
0000690: 046c 6a41 0036 0200 2002 4101 6a21 020c 
00006a0: 000b 0b20 0041 016a 2100 0c00 0b0b 0bee 
00006b0: 0403 027f 057d 087f 4100 2102 4100 2103 
00006c0: 0240 0340 2003 230d 4101 6b4a 0d01 230e 
00006d0: 4108 6a20 0341 0c6c 6a28 0200 4104 6a2a 
00006e0: 0200 2104 230e 4108 6a20 0341 0c6c 6a28 
00006f0: 0200 4100 6a2a 0200 2105 230e 4108 6a20 
0000700: 0341 0c6c 6a28 0200 4108 6a2a 0200 2106 
0000710: 230f 4108 6a20 0341 046c 6a28 0200 4100 
0000720: 6a2a 0200 2107 230f 4108 6a20 0341 046c 
0000730: 6a28 0200 4104 6a2a 0200 2108 2008 bb44 
0000740: 2d43 1ceb e236 1a3f a0b6 2108 2000 2004 
0000750: 2006 9293 4100 b25d 2007 4100 b25e 6c20 
0000760: 0420 0693 4100 b25d 2007 4100 b25d 6c6a 
0000770: 0440 4300 0000 0020 0793 2107 0b20 0120 
0000780: 0520 0692 9341 00b2 5d20 0841 00b2 5e6c 
0000790: 2005 2006 9341 00b2 5d20 0841 00b2 5d6c 
00007a0: 6a04 4043 0000 0000 2008 9321 080b 230e 
00007b0: 4108 6a20 0341 0c6c 6a41 046a 2004 2007 
00007c0: 9238 0200 230e 4108 6a20 0341 0c6c 6a41 
00007d0: 006a 2005 2008 9238 0200 230f 4108 6a20 
00007e0: 0341 046c 6a28 0200 4100 6a20 0738 0200 
00007f0: 230f 4108 6a20 0341 046c 6a28 0200 4104 
0000800: 6a20 0838 0200 2004 2006 93bb 2000 bba3 
0000810: 230c b7a2 1006 aa21 0920 0420 0692 bb20 
0000820: 00bb a323 0cb7 a210 06aa 210a 2005 2006 
0000830: 93bb 2001 bba3 230b b7a2 1006 aa21 0b20 
0000840: 0520 0692 bb20 01bb a323 0bb7 a210 06aa 
0000850: 210c 2009 4100 4804 4041 0021 090b 200a 
0000860: 230c 4e04 4023 0c41 016b 210a 0b20 0b41 
0000870: 0048 0440 4100 210b 0b20 0c23 0b4e 0440 
0000880: 230b 4101 6b21 0c0b 2009 210d 0240 0340 
0000890: 200d 200a 4a0d 0123 1141 086a 200d 4104 
00008a0: 6c6a 2802 0021 0e20 0b21 0f02 4003 4020 
00008b0: 0f20 0c4a 0d01 2310 4108 6a20 0241 046c 
00008c0: 6a28 0200 2110 2002 4101 6a21 0220 1041 
00008d0: 046a 2003 3602 0020 1041 006a 200e 4108 
00008e0: 6a20 0f41 046c 6a28 0200 3602 0020 0e41 
00008f0: 086a 200f 4104 6c6a 2010 3602 0020 0f41 
0000900: 016a 210f 0c00 0b0b 200d 4101 6a21 0d0c 
0000910: 000b 0b20 0341 016a 2103 0c00 0b0b 0bd7 
0000920: 0507 057f 057d 027f 077d 017c 047d 047c 
0000930: 4100 2100 0240 0340 2000 230c 4101 6b4a 
0000940: 0d01 2311 4108 6a20 0041 046c 6a28 0200 
0000950: 2101 4100 2102 0240 0340 2002 230b 4101 
0000960: 6b4a 0d01 2001 4108 6a20 0241 046c 6a28 
0000970: 0200 2103 0240 0340 2003 4100 4645 450d 
0000980: 0120 0341 046a 2802 0021 0423 0e41 086a 
0000990: 2004 410c 6c6a 2802 0041 046a 2a02 0021 
00009a0: 0523 0e41 086a 2004 410c 6c6a 2802 0041 
00009b0: 006a 2a02 0021 0623 0e41 086a 2004 410c 
00009c0: 6c6a 2802 0041 086a 2a02 0021 0723 0f41 
00009d0: 086a 2004 4104 6c6a 2802 0041 006a 2a02 
00009e0: 0021 0823 0f41 086a 2004 4104 6c6a 2802 
00009f0: 0041 046a 2a02 0021 0920 0321 0a20 0a41 
0000a00: 006a 2802 0021 0a02 4003 4020 0a41 0046 
0000a10: 4545 0d01 200a 4104 6a28 0200 210b 230e 
0000a20: 4108 6a20 0b41 0c6c 6a28 0200 4104 6a2a 
0000a30: 0200 210c 230e 4108 6a20 0b41 0c6c 6a28 
0000a40: 0200 4100 6a2a 0200 210d 230e 4108 6a20 
0000a50: 0b41 0c6c 6a28 0200 4108 6a2a 0200 210e 
0000a60: 2005 2006 2007 200c 200d 200e 101a 0440 
0000a70: 230f 4108 6a20 0b41 046c 6a28 0200 4100 
0000a80: 6a2a 0200 210f 230f 4108 6a20 0b41 046c 
0000a90: 6a28 0200 4104 6a2a 0200 2110 200c 2005 
0000aa0: 9321 1120 0d20 0693 2112 2011 2011 9420 
0000ab0: 1220 1294 92bb 1001 2113 2011 bb20 13a3 
0000ac0: b621 1120 12bb 2013 a3b6 2112 2011 2008 
0000ad0: 9420 1220 0994 9221 1420 1120 0f94 2012 
0000ae0: 2010 9492 2115 2014 2015 9341 00b2 5f45 
0000af0: 0440 2007 200e 9221 1620 0720 0e93 2117 
0000b00: 2014 2017 9441 02b2 200e 9420 1594 92bb 
0000b10: 2016 bba3 2118 4102 b220 0794 2014 9420 
0000b20: 1520 1794 93bb 2016 bba3 2119 2018 2014 
0000b30: bba1 211a 2019 2015 bba1 211b 230f 4108 
0000b40: 6a20 0441 046c 6a28 0200 4100 6a20 08bb 
0000b50: 2011 bb20 1aa2 a0b6 3802 0023 0f41 086a 
0000b60: 2004 4104 6c6a 2802 0041 046a 2009 bb20 
0000b70: 12bb 201a a2a0 b638 0200 230f 4108 6a20 
0000b80: 0b41 046c 6a28 0200 4100 6a20 0fbb 2011 
0000b90: bb20 1ba2 a0b6 3802 0023 0f41 086a 200b 
0000ba0: 4104 6c6a 2802 0041 046a 2010 bb20 12bb 
0000bb0: 201b a2a0 b638 0200 200a 4100 6a28 0200 
0000bc0: 210a 0b05 200a 4100 6a28 0200 210a 0b0c 
0000bd0: 000b 0b20 0341 006a 2802 0021 030c 000b 
0000be0: 0b20 0241 016a 2102 0c00 0b0b 2000 4101 
0000bf0: 6a21 000c 000b 0b0b 0c00 1016 2000 2001 
0000c00: 1017 1018 0b5c 0105 7f20 0020 0292 2003 
0000c10: 2005 935d 2000 2002 9320 0320 0592 5e6a 
0000c20: 2001 2002 9220 0420 0593 5d6a 2001 2002 
0000c30: 9320 0420 0592 5e6a 0440 4100 0f0b 2003 
0000c40: 2000 93bb 4102 b2bb 1000 2004 2001 93bb 
0000c50: 4102 b2bb 1000 a010 0120 0220 0592 bb65 
0000c60: 0f0b 0600 41a8 080f 0b06 0041 b808 0f0b 
0000c70: 0600 4190 090f 0b06 0041 9809 0f0b 0600 
0000c80: 41a8 090f 0b06 0041 f009 0f0b 0600 4180 
0000c90: 0a0f 0b06 0041 a80a 0f0b 0600 41b0 0a0f 
0000ca0: 0b0c 0010 2510 2610 2710 2810 290b b101 
0000cb0: 0104 7f41 0823 0d41 016b 410c 6c6a 4107 
0000cc0: 100e 2100 2000 41d8 0436 0200 2000 4104 
0000cd0: 6a23 0d41 016b 3602 0020 0024 0e41 0823 
0000ce0: 0d41 016b 4104 6c6a 4107 100e 2101 2001 
0000cf0: 410d 3602 0020 0141 046a 230d 4101 6b36 
0000d00: 0200 2001 240f 4108 230d 4104 6c41 016b 
0000d10: 4104 6c6a 4107 100e 2102 2002 4190 0236 
0000d20: 0200 2002 4104 6a23 0d41 046c 4101 6b36 
0000d30: 0200 2002 2410 4108 230c 4101 6b41 046c 
0000d40: 6a41 0710 0e21 0320 0341 9002 3602 0020 
0000d50: 0341 046a 230c 4101 6b36 0200 2003 2411 
0000d60: 0b02 000b 8902 0105 7f41 0021 0041 d007 
0000d70: 1008 4100 2101 0240 0340 2001 2311 4104 
0000d80: 6a28 0200 4101 6b4a 0d01 1010 2100 2311 
0000d90: 4108 6a20 0141 046c 6a20 0036 0200 41e8 
0000da0: 0720 0110 0d10 0a41 f007 100a 2000 100d 
0000db0: 100a 1008 4100 2102 0240 0340 2002 2000 
0000dc0: 4104 6a28 0200 4101 6b4a 0d01 2000 4108 
0000dd0: 6a20 0241 046c 6a10 1136 0200 2002 4101 
0000de0: 6a21 020c 000b 0b20 0141 016a 2101 0c00 
0000df0: 0b0b 4100 2103 0240 0340 2003 230f 4104 
0000e00: 6a28 0200 4101 6b4a 0d01 230f 4108 6a20 
0000e10: 0341 046c 6a10 1236 0200 2003 4101 6a21 
0000e20: 030c 000b 0b41 f807 230f 100d 100a 1008 
0000e30: 4100 2104 0240 0340 2004 2310 4104 6a28 
0000e40: 0200 4101 6b4a 0d01 2310 4108 6a20 0441 
0000e50: 046c 6a10 1136 0200 2004 4101 6a21 040c 
0000e60: 000b 0b41 9008 2310 100d 100a 1008 0b02 
0000e70: 000b 0200 0b0b bc0a 1600 4188 070b 1561 
0000e80: 7272 6179 286f 6620 6369 7263 6c65 2920 
0000e90: 3d20 2600 0041 a007 0b0b 6369 7263 6c65 
0000ea0: 203d 2023 0000 41b0 070b 0420 2826 0000 
0000eb0: 41b8 070b 0229 0000 41c0 070b 0c63 6972 
0000ec0: 636c 6556 203d 2026 0000 41d0 070b 1749 
0000ed0: 6e69 7469 616c 697a 6520 6170 706c 6963 
0000ee0: 6174 696f 6e00 0041 e807 0b06 726f 7720 
0000ef0: 2300 0041 f007 0b05 203d 2026 0000 41f8 
0000f00: 070b 1163 6972 636c 6576 6461 7461 203d 
0000f10: 3e20 2600 0041 9008 0b11 6365 6c6c 6369 
0000f20: 7263 6c65 7320 3d3e 2026 0000 41a8 080b 
0000f30: 0b57 6562 474c 2d44 656d 6f00 0041 b808 
0000f40: 0b51 5765 6241 7373 656d 626c 7920 636f 
0000f50: 6e76 6572 7369 6f6e 2064 656d 6f6e 7374 
0000f60: 7261 7469 6e67 2074 6865 2066 6173 7465 
0000f70: 722d 7065 7266 6f72 6d69 6e67 2067 7269 
0000f80: 6420 6f66 206c 696e 6b65 642d 6c69 7374 
0000f90: 732e 0000 4190 090b 044d 4954 0000 4198 
0000fa0: 090b 0b57 6562 474c 2d44 656d 6f00 0041 
0000fb0: a809 0b46 6874 7470 733a 2f2f 6769 7468 
0000fc0: 7562 2e63 6f6d 2f67 7579 6265 6466 6f72 
0000fd0: 642f 7761 736d 2d64 656d 6f2f 626c 6f62 
0000fe0: 2f6d 6173 7465 722f 6e61 7469 7665 2f64 
0000ff0: 656d 6f2d 6f70 742e 6300 0041 f009 0b0e 
0001000: 7661 6e69 6c6c 6176 622e 6170 7000 0041 
0001010: 800a 0b25 3833 6361 3262 3933 2d34 6535 
0001020: 372d 3464 3434 2d62 3262 632d 3136 3332 
0001030: 3532 6139 3330 3564 0000 41a8 0a0b 0831 
0001040: 2e30 2e30 2e30 0000 41b0 0a0b 0831 2e30 
0001050: 2e30 2e30 0000 410d 0bfd 0165 794a 6a62 
0001060: 3231 745a 5735 3049 6a70 7564 5778 734c 
0001070: 434a 6a62 4746 7a63 7949 3649 6b4e 7063 
0001080: 6d4e 735a 5659 694c 434a 6a62 4746 7a63 
0001090: 3139 705a 4349 364d 544d 7349 6d5a 705a 
00010a0: 5778 6b63 7949 3665 794a 3265 4349 3665 
00010b0: 794a 6e5a 5735 6c63 6d6c 6a49 6a70 6258 
00010c0: 5377 6963 6d46 3349 6a6f 695a 6a4d 7949 
00010d0: 6977 6964 486c 775a 5349 364d 3330 7349 
00010e0: 6e5a 3549 6a70 3749 6d64 6c62 6d56 7961 
00010f0: 574d 694f 6c74 644c 434a 7959 5863 694f 
0001100: 694a 6d4d 7a49 694c 434a 3065 5842 6c49 
0001110: 6a6f 7a66 5830 7349 6d6c 7a55 3352 7964 
0001120: 574e 3049 6a70 6d59 5778 7a5a 5377 6962 
0001130: 5756 3061 4739 6b63 7949 3665 3330 7349 
0001140: 6d35 6862 5756 7a63 4746 6a5a 5349 3662 
0001150: 6e56 7362 4830 3d00 0041 9002 0ba1 0265 
0001160: 794a 6a62 3231 745a 5735 3049 6a70 7564 
0001170: 5778 734c 434a 6a62 4746 7a63 7949 3649 
0001180: 6b4e 6c62 4778 4461 584a 6a62 4755 694c 
0001190: 434a 6a62 4746 7a63 3139 705a 4349 364d 
00011a0: 6a63 794c 434a 6d61 5756 735a 484d 694f 
00011b0: 6e73 6962 6d56 3464 4349 3665 794a 6e5a 
00011c0: 5735 6c63 6d6c 6a49 6a70 6258 5377 6963 
00011d0: 6d46 3349 6a6f 6957 7a49 334d 6c31 445a 
00011e0: 5778 7351 326c 7959 3278 6c49 6977 6964 
00011f0: 486c 775a 5349 364d 5442 394c 434a 6a61 
0001200: 584a 6a62 4756 4a62 6d52 6c65 4349 3665 
0001210: 794a 6e5a 5735 6c63 6d6c 6a49 6a70 6258 
0001220: 5377 6963 6d46 3349 6a6f 6961 544d 7949 
0001230: 6977 6964 486c 775a 5349 364d 5831 394c 
0001240: 434a 7063 314e 3063 6e56 6a64 4349 365a 
0001250: 6d46 7363 3255 7349 6d31 6c64 4768 765a 
0001260: 484d 694f 6e74 394c 434a 7559 5731 6c63 
0001270: 3342 6859 3255 694f 6d35 3162 4778 3900 
0001280: 0041 d804 0bad 0265 794a 6a62 3231 745a 
0001290: 5735 3049 6a70 7564 5778 734c 434a 6a62 
00012a0: 4746 7a63 7949 3649 6b4e 7063 6d4e 735a 
00012b0: 5349 7349 6d4e 7359 584e 7a58 326c 6b49 
00012c0: 6a6f 324d 4441 7349 6d5a 705a 5778 6b63 
00012d0: 7949 3665 794a 3549 6a70 3749 6d64 6c62 
00012e0: 6d56 7961 574d 694f 6c74 644c 434a 7959 
00012f0: 5863 694f 694a 6d4d 7a49 694c 434a 3065 
0001300: 5842 6c49 6a6f 7a66 5377 6965 4349 3665 
0001310: 794a 6e5a 5735 6c63 6d6c 6a49 6a70 6258 
0001320: 5377 6963 6d46 3349 6a6f 695a 6a4d 7949 
0001330: 6977 6964 486c 775a 5349 364d 3330 7349 
0001340: 6e49 694f 6e73 695a 3256 755a 584a 7059 
0001350: 7949 3657 3130 7349 6e4a 6864 7949 3649 
0001360: 6d59 7a4d 6949 7349 6e52 3563 4755 694f 
0001370: 6a4e 3966 5377 6961 584e 5464 484a 3159 
0001380: 3351 694f 6e52 7964 5755 7349 6d31 6c64 
0001390: 4768 765a 484d 694f 6e74 394c 434a 7559 
00013a0: 5731 6c63 3342 6859 3255 694f 6d35 3162 
00013b0: 4778 3900                               
