0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 09                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7c                                        ; f64
000000e: 7c                                        ; f64
000000f: 01                                        ; num results
0000010: 7c                                        ; f64
; type 1
0000011: 60                                        ; func
0000012: 01                                        ; num params
0000013: 7c                                        ; f64
0000014: 01                                        ; num results
0000015: 7c                                        ; f64
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 00                                        ; num results
; type 4
000001f: 60                                        ; func
0000020: 02                                        ; num params
0000021: 7f                                        ; i32
0000022: 7f                                        ; i32
0000023: 01                                        ; num results
0000024: 7f                                        ; i32
; type 5
0000025: 60                                        ; func
0000026: 00                                        ; num params
0000027: 01                                        ; num results
0000028: 7f                                        ; i32
; type 6
0000029: 60                                        ; func
000002a: 02                                        ; num params
000002b: 7d                                        ; f32
000002c: 7d                                        ; f32
000002d: 00                                        ; num results
; type 7
000002e: 60                                        ; func
000002f: 00                                        ; num params
0000030: 00                                        ; num results
; type 8
0000031: 60                                        ; func
0000032: 06                                        ; num params
0000033: 7d                                        ; f32
0000034: 7d                                        ; f32
0000035: 7d                                        ; f32
0000036: 7d                                        ; f32
0000037: 7d                                        ; f32
0000038: 7d                                        ; f32
0000039: 01                                        ; num results
000003a: 7f                                        ; i32
0000009: 31                                        ; FIXUP section size
; section "Import" (2)
000003b: 02                                        ; section code
000003c: 00                                        ; section size (guess)
000003d: 09                                        ; num imports
; import header 0
000003e: 04                                        ; string length
000003f: 4d61 7468                                Math  ; import module name
0000043: 03                                        ; string length
0000044: 706f 77                                  pow  ; import field name
0000047: 00                                        ; import kind
0000048: 00                                        ; import signature index
; import header 1
0000049: 04                                        ; string length
000004a: 4d61 7468                                Math  ; import module name
000004e: 04                                        ; string length
000004f: 7371 7274                                sqrt  ; import field name
0000053: 00                                        ; import kind
0000054: 01                                        ; import signature index
; import header 2
0000055: 04                                        ; string length
0000056: 4d61 7468                                Math  ; import module name
000005a: 03                                        ; string length
000005b: 6578 70                                  exp  ; import field name
000005e: 00                                        ; import kind
000005f: 01                                        ; import signature index
; import header 3
0000060: 04                                        ; string length
0000061: 4d61 7468                                Math  ; import module name
0000065: 03                                        ; string length
0000066: 636f 73                                  cos  ; import field name
0000069: 00                                        ; import kind
000006a: 01                                        ; import signature index
; import header 4
000006b: 04                                        ; string length
000006c: 4d61 7468                                Math  ; import module name
0000070: 06                                        ; string length
0000071: 7261 6e64 6f6d                           random  ; import field name
0000077: 00                                        ; import kind
0000078: 02                                        ; import signature index
; import header 5
0000079: 04                                        ; string length
000007a: 4d61 7468                                Math  ; import module name
000007e: 04                                        ; string length
000007f: 6365 696c                                ceil  ; import field name
0000083: 00                                        ; import kind
0000084: 01                                        ; import signature index
; import header 6
0000085: 04                                        ; string length
0000086: 4d61 7468                                Math  ; import module name
000008a: 05                                        ; string length
000008b: 666c 6f6f 72                             floor  ; import field name
0000090: 00                                        ; import kind
0000091: 01                                        ; import signature index
; import header 7
0000092: 02                                        ; string length
0000093: 4743                                     GC  ; import module name
0000095: 09                                        ; string length
0000096: 6164 644f 626a 6563 74                   addObject  ; import field name
000009f: 00                                        ; import kind
00000a0: 03                                        ; import signature index
; import header 8
00000a1: 03                                        ; string length
00000a2: 656e 76                                  env  ; import module name
00000a5: 0a                                        ; string length
00000a6: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000b0: 02                                        ; import kind
00000b1: 00                                        ; limits: flags
00000b2: 01                                        ; limits: initial
000003c: 76                                        ; FIXUP section size
; section "Function" (3)
00000b3: 03                                        ; section code
00000b4: 00                                        ; section size (guess)
00000b5: 18                                        ; num functions
00000b6: 04                                        ; function 0 signature index
00000b7: 05                                        ; function 1 signature index
00000b8: 05                                        ; function 2 signature index
00000b9: 05                                        ; function 3 signature index
00000ba: 06                                        ; function 4 signature index
00000bb: 07                                        ; function 5 signature index
00000bc: 06                                        ; function 6 signature index
00000bd: 07                                        ; function 7 signature index
00000be: 06                                        ; function 8 signature index
00000bf: 08                                        ; function 9 signature index
00000c0: 05                                        ; function 10 signature index
00000c1: 05                                        ; function 11 signature index
00000c2: 05                                        ; function 12 signature index
00000c3: 05                                        ; function 13 signature index
00000c4: 05                                        ; function 14 signature index
00000c5: 05                                        ; function 15 signature index
00000c6: 05                                        ; function 16 signature index
00000c7: 05                                        ; function 17 signature index
00000c8: 05                                        ; function 18 signature index
00000c9: 07                                        ; function 19 signature index
00000ca: 07                                        ; function 20 signature index
00000cb: 07                                        ; function 21 signature index
00000cc: 07                                        ; function 22 signature index
00000cd: 07                                        ; function 23 signature index
00000b4: 19                                        ; FIXUP section size
; section "Global" (6)
00000ce: 06                                        ; section code
00000cf: 00                                        ; section size (guess)
00000d0: 12                                        ; num globals
00000d1: 7f                                        ; i32
00000d2: 01                                        ; global mutability
00000d3: 41                                        ; i32.const
00000d4: 9809                                      ; i32 literal
00000d6: 0b                                        ; end
00000d7: 7c                                        ; f64
00000d8: 01                                        ; global mutability
00000d9: 44                                        ; f64.const
00000da: 6957 148b 0abf 0540                       ; f64 literal
00000e2: 0b                                        ; end
00000e3: 7c                                        ; f64
00000e4: 01                                        ; global mutability
00000e5: 44                                        ; f64.const
00000e6: 182d 4454 fb21 0940                       ; f64 literal
00000ee: 0b                                        ; end
00000ef: 7f                                        ; i32
00000f0: 01                                        ; global mutability
00000f1: 41                                        ; i32.const
00000f2: ffff ffff 07                              ; i32 literal
00000f7: 0b                                        ; end
00000f8: 7e                                        ; i64
00000f9: 01                                        ; global mutability
00000fa: 42                                        ; i64.const
00000fb: ffff ffff ffff ffff ff00                  ; i64 literal
0000105: 0b                                        ; end
0000106: 7d                                        ; f32
0000107: 01                                        ; global mutability
0000108: 43                                        ; f32.const
0000109: ffff 7f7f                                 ; f32 literal
000010d: 0b                                        ; end
000010e: 7c                                        ; f64
000010f: 01                                        ; global mutability
0000110: 44                                        ; f64.const
0000111: ffff ffff ffff ef7f                       ; f64 literal
0000119: 0b                                        ; end
000011a: 7f                                        ; i32
000011b: 01                                        ; global mutability
000011c: 41                                        ; i32.const
000011d: 8080 8080 78                              ; i32 literal
0000122: 0b                                        ; end
0000123: 7e                                        ; i64
0000124: 01                                        ; global mutability
0000125: 42                                        ; i64.const
0000126: 8080 8080 8080 8080 807f                  ; i64 literal
0000130: 0b                                        ; end
0000131: 7d                                        ; f32
0000132: 01                                        ; global mutability
0000133: 43                                        ; f32.const
0000134: ffff 7fff                                 ; f32 literal
0000138: 0b                                        ; end
0000139: 7c                                        ; f64
000013a: 01                                        ; global mutability
000013b: 44                                        ; f64.const
000013c: ffff ffff ffff efff                       ; f64 literal
0000144: 0b                                        ; end
0000145: 7f                                        ; i32
0000146: 01                                        ; global mutability
0000147: 41                                        ; i32.const
0000148: f800                                      ; i32 literal
000014a: 0b                                        ; end
000014b: 7f                                        ; i32
000014c: 01                                        ; global mutability
000014d: 41                                        ; i32.const
000014e: c600                                      ; i32 literal
0000150: 0b                                        ; end
0000151: 7f                                        ; i32
0000152: 01                                        ; global mutability
0000153: 41                                        ; i32.const
0000154: 90ce 00                                   ; i32 literal
0000157: 0b                                        ; end
0000158: 7f                                        ; i32
0000159: 01                                        ; global mutability
000015a: 41                                        ; i32.const
000015b: 00                                        ; i32 literal
000015c: 0b                                        ; end
000015d: 7f                                        ; i32
000015e: 01                                        ; global mutability
000015f: 41                                        ; i32.const
0000160: 00                                        ; i32 literal
0000161: 0b                                        ; end
0000162: 7f                                        ; i32
0000163: 01                                        ; global mutability
0000164: 41                                        ; i32.const
0000165: 00                                        ; i32 literal
0000166: 0b                                        ; end
0000167: 7f                                        ; i32
0000168: 01                                        ; global mutability
0000169: 41                                        ; i32.const
000016a: 00                                        ; i32 literal
000016b: 0b                                        ; end
; move data: [d0, 16c) -> [d1, 16d)
00000cf: 9c01                                      ; FIXUP section size
; section "Export" (7)
000016d: 07                                        ; section code
000016e: 00                                        ; section size (guess)
000016f: 0f                                        ; num exports
0000170: 14                                        ; string length
0000171: 676c 6f62 616c 2e47 6574 4d65 6d6f 7279  global.GetMemory
0000181: 5369 7a65                                Size  ; export name
0000185: 00                                        ; export kind
0000186: 09                                        ; export func index
0000187: 18                                        ; string length
0000188: 416c 676f 7269 7468 6d2e 6765 7443 6972  Algorithm.getCir
0000198: 636c 6543 6f75 6e74                      cleCount  ; export name
00001a0: 00                                        ; export kind
00001a1: 0a                                        ; export func index
00001a2: 1d                                        ; string length
00001a3: 416c 676f 7269 7468 6d2e 6765 7443 6972  Algorithm.getCir
00001b3: 636c 6544 6174 614f 6666 7365 74         cleDataOffset  ; export name
00001c0: 00                                        ; export kind
00001c1: 0b                                        ; export func index
00001c2: 0e                                        ; string length
00001c3: 416c 676f 7269 7468 6d2e 696e 6974       Algorithm.init  ; export name
00001d1: 00                                        ; export kind
00001d2: 0c                                        ; export func index
00001d3: 12                                        ; string length
00001d4: 416c 676f 7269 7468 6d2e 7469 6d65 5374  Algorithm.timeSt
00001e4: 6570                                     ep  ; export name
00001e6: 00                                        ; export kind
00001e7: 10                                        ; export func index
00001e8: 1a                                        ; string length
00001e9: 4d61 7468 2e64 6574 6563 7443 6972 636c  Math.detectCircl
00001f9: 6543 6f6c 6c69 7369 6f6e                 eCollision  ; export name
0000203: 00                                        ; export kind
0000204: 11                                        ; export func index
0000205: 1a                                        ; string length
0000206: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000216: 656d 626c 7954 6974 6c65                 emblyTitle  ; export name
0000220: 00                                        ; export kind
0000221: 12                                        ; export func index
0000222: 20                                        ; string length
0000223: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000233: 656d 626c 7944 6573 6372 6970 7469 6f6e  emblyDescription  ; export name
0000243: 00                                        ; export kind
0000244: 13                                        ; export func index
0000245: 1c                                        ; string length
0000246: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000256: 656d 626c 7943 6f6d 7061 6e79            emblyCompany  ; export name
0000262: 00                                        ; export kind
0000263: 14                                        ; export func index
0000264: 1c                                        ; string length
0000265: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000275: 656d 626c 7950 726f 6475 6374            emblyProduct  ; export name
0000281: 00                                        ; export kind
0000282: 15                                        ; export func index
0000283: 1e                                        ; string length
0000284: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000294: 656d 626c 7943 6f70 7972 6967 6874       emblyCopyright  ; export name
00002a2: 00                                        ; export kind
00002a3: 16                                        ; export func index
00002a4: 1e                                        ; string length
00002a5: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002b5: 656d 626c 7954 7261 6465 6d61 726b       emblyTrademark  ; export name
00002c3: 00                                        ; export kind
00002c4: 17                                        ; export func index
00002c5: 11                                        ; string length
00002c6: 4173 7365 6d62 6c79 496e 666f 2e47 7569  AssemblyInfo.Gui
00002d6: 64                                       d  ; export name
00002d7: 00                                        ; export kind
00002d8: 18                                        ; export func index
00002d9: 1c                                        ; string length
00002da: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002ea: 656d 626c 7956 6572 7369 6f6e            emblyVersion  ; export name
00002f6: 00                                        ; export kind
00002f7: 19                                        ; export func index
00002f8: 20                                        ; string length
00002f9: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000309: 656d 626c 7946 696c 6556 6572 7369 6f6e  emblyFileVersion  ; export name
0000319: 00                                        ; export kind
000031a: 1a                                        ; export func index
; move data: [16f, 31b) -> [170, 31c)
000016e: ac03                                      ; FIXUP section size
; section "Start" (8)
000031c: 08                                        ; section code
000031d: 00                                        ; section size (guess)
000031e: 1b                                        ; start func index
000031d: 01                                        ; FIXUP section size
; section "Code" (10)
000031f: 0a                                        ; section code
0000320: 00                                        ; section size (guess)
0000321: 18                                        ; num functions
; function body 0
0000322: 00                                        ; func body size (guess)
0000323: 01                                        ; local decl count
0000324: 01                                        ; local type count
0000325: 7f                                        ; i32
0000326: 23                                        ; global.get
0000327: 00                                        ; global index
0000328: 21                                        ; local.set
0000329: 02                                        ; local index
000032a: 20                                        ; local.get
000032b: 02                                        ; local index
000032c: 20                                        ; local.get
000032d: 00                                        ; local index
000032e: 6a                                        ; i32.add
000032f: 24                                        ; global.set
0000330: 00                                        ; global index
0000331: 20                                        ; local.get
0000332: 02                                        ; local index
0000333: 20                                        ; local.get
0000334: 01                                        ; local index
0000335: 10                                        ; call
0000336: 07                                        ; function index
0000337: 20                                        ; local.get
0000338: 02                                        ; local index
0000339: 0f                                        ; return
000033a: 0b                                        ; end
0000322: 18                                        ; FIXUP func body size
; function body 1
000033b: 00                                        ; func body size (guess)
000033c: 00                                        ; local decl count
000033d: 23                                        ; global.get
000033e: 00                                        ; global index
000033f: 0f                                        ; return
0000340: 0b                                        ; end
000033b: 05                                        ; FIXUP func body size
; function body 2
0000341: 00                                        ; func body size (guess)
0000342: 01                                        ; local decl count
0000343: 04                                        ; local type count
0000344: 7f                                        ; i32
0000345: 23                                        ; global.get
0000346: 0d                                        ; global index
0000347: 0f                                        ; return
0000348: 0b                                        ; end
0000341: 07                                        ; FIXUP func body size
; function body 3
0000349: 00                                        ; func body size (guess)
000034a: 00                                        ; local decl count
000034b: 23                                        ; global.get
000034c: 0e                                        ; global index
000034d: 0f                                        ; return
000034e: 0b                                        ; end
0000349: 05                                        ; FIXUP func body size
; function body 4
000034f: 00                                        ; func body size (guess)
0000350: 03                                        ; local decl count
0000351: 02                                        ; local type count
0000352: 7f                                        ; i32
0000353: 03                                        ; local type count
0000354: 7d                                        ; f32
0000355: 01                                        ; local type count
0000356: 7f                                        ; i32
0000357: 41                                        ; i32.const
0000358: 00                                        ; i32 literal
0000359: 21                                        ; local.set
000035a: 02                                        ; local index
000035b: 02                                        ; block
000035c: 40                                        ; void
000035d: 03                                        ; loop
000035e: 40                                        ; void
000035f: 20                                        ; local.get
0000360: 02                                        ; local index
0000361: 23                                        ; global.get
0000362: 0d                                        ; global index
0000363: 41                                        ; i32.const
0000364: 01                                        ; i32 literal
0000365: 6b                                        ; i32.sub
0000366: 4a                                        ; i32.gt_s
0000367: 0d                                        ; br_if
0000368: 01                                        ; break depth
0000369: 41                                        ; i32.const
000036a: 00                                        ; i32 literal
000036b: 21                                        ; local.set
000036c: 03                                        ; local index
000036d: 43                                        ; f32.const
000036e: 0000 0000                                 ; f32 literal
0000372: 21                                        ; local.set
0000373: 04                                        ; local index
0000374: 43                                        ; f32.const
0000375: 0000 0000                                 ; f32 literal
0000379: 21                                        ; local.set
000037a: 05                                        ; local index
000037b: 43                                        ; f32.const
000037c: 0000 0000                                 ; f32 literal
0000380: 21                                        ; local.set
0000381: 06                                        ; local index
0000382: 02                                        ; block
0000383: 40                                        ; void
0000384: 03                                        ; loop
0000385: 40                                        ; void
0000386: 41                                        ; i32.const
0000387: 00                                        ; i32 literal
0000388: 21                                        ; local.set
0000389: 03                                        ; local index
000038a: 20                                        ; local.get
000038b: 00                                        ; local index
000038c: bb                                        ; f64.promote_f32
000038d: 10                                        ; call
000038e: 04                                        ; function index
000038f: a2                                        ; f64.mul
0000390: b6                                        ; f32.demote_f64
0000391: 21                                        ; local.set
0000392: 04                                        ; local index
0000393: 20                                        ; local.get
0000394: 01                                        ; local index
0000395: bb                                        ; f64.promote_f32
0000396: 10                                        ; call
0000397: 04                                        ; function index
0000398: a2                                        ; f64.mul
0000399: b6                                        ; f32.demote_f64
000039a: 21                                        ; local.set
000039b: 05                                        ; local index
000039c: 10                                        ; call
000039d: 04                                        ; function index
000039e: 41                                        ; i32.const
000039f: 08                                        ; i32 literal
00003a0: b7                                        ; f64.convert_i32_s
00003a1: a2                                        ; f64.mul
00003a2: 10                                        ; call
00003a3: 02                                        ; function index
00003a4: 44                                        ; f64.const
00003a5: ee5a 423e e849 3740                       ; f64 literal
00003ad: a3                                        ; f64.div
00003ae: 10                                        ; call
00003af: 05                                        ; function index
00003b0: b6                                        ; f32.demote_f64
00003b1: 21                                        ; local.set
00003b2: 06                                        ; local index
00003b3: 20                                        ; local.get
00003b4: 00                                        ; local index
00003b5: 20                                        ; local.get
00003b6: 04                                        ; local index
00003b7: 20                                        ; local.get
00003b8: 06                                        ; local index
00003b9: 92                                        ; f32.add
00003ba: 93                                        ; f32.sub
00003bb: 41                                        ; i32.const
00003bc: 00                                        ; i32 literal
00003bd: b2                                        ; f32.convert_i32_s
00003be: 5d                                        ; f32.lt
00003bf: 20                                        ; local.get
00003c0: 04                                        ; local index
00003c1: 20                                        ; local.get
00003c2: 06                                        ; local index
00003c3: 93                                        ; f32.sub
00003c4: 41                                        ; i32.const
00003c5: 00                                        ; i32 literal
00003c6: b2                                        ; f32.convert_i32_s
00003c7: 5d                                        ; f32.lt
00003c8: 6a                                        ; i32.add
00003c9: 20                                        ; local.get
00003ca: 01                                        ; local index
00003cb: 20                                        ; local.get
00003cc: 05                                        ; local index
00003cd: 20                                        ; local.get
00003ce: 06                                        ; local index
00003cf: 92                                        ; f32.add
00003d0: 93                                        ; f32.sub
00003d1: 41                                        ; i32.const
00003d2: 00                                        ; i32 literal
00003d3: b2                                        ; f32.convert_i32_s
00003d4: 5d                                        ; f32.lt
00003d5: 6a                                        ; i32.add
00003d6: 20                                        ; local.get
00003d7: 05                                        ; local index
00003d8: 20                                        ; local.get
00003d9: 06                                        ; local index
00003da: 93                                        ; f32.sub
00003db: 41                                        ; i32.const
00003dc: 00                                        ; i32 literal
00003dd: b2                                        ; f32.convert_i32_s
00003de: 5d                                        ; f32.lt
00003df: 6a                                        ; i32.add
00003e0: 04                                        ; if
00003e1: 40                                        ; void
00003e2: 41                                        ; i32.const
00003e3: 01                                        ; i32 literal
00003e4: 21                                        ; local.set
00003e5: 03                                        ; local index
00003e6: 05                                        ; else
00003e7: 41                                        ; i32.const
00003e8: 00                                        ; i32 literal
00003e9: 21                                        ; local.set
00003ea: 07                                        ; local index
00003eb: 02                                        ; block
00003ec: 40                                        ; void
00003ed: 03                                        ; loop
00003ee: 40                                        ; void
00003ef: 20                                        ; local.get
00003f0: 07                                        ; local index
00003f1: 20                                        ; local.get
00003f2: 02                                        ; local index
00003f3: 41                                        ; i32.const
00003f4: 01                                        ; i32 literal
00003f5: 6b                                        ; i32.sub
00003f6: 4a                                        ; i32.gt_s
00003f7: 0d                                        ; br_if
00003f8: 01                                        ; break depth
00003f9: 20                                        ; local.get
00003fa: 04                                        ; local index
00003fb: 20                                        ; local.get
00003fc: 05                                        ; local index
00003fd: 20                                        ; local.get
00003fe: 06                                        ; local index
00003ff: 23                                        ; global.get
0000400: 0e                                        ; global index
0000401: 41                                        ; i32.const
0000402: 08                                        ; i32 literal
0000403: 6a                                        ; i32.add
0000404: 20                                        ; local.get
0000405: 07                                        ; local index
0000406: 41                                        ; i32.const
0000407: 0c                                        ; i32 literal
0000408: 6c                                        ; i32.mul
0000409: 6a                                        ; i32.add
000040a: 28                                        ; i32.load
000040b: 02                                        ; alignment
000040c: 00                                        ; load offset
000040d: 41                                        ; i32.const
000040e: 04                                        ; i32 literal
000040f: 6a                                        ; i32.add
0000410: 2a                                        ; f32.load
0000411: 02                                        ; alignment
0000412: 00                                        ; load offset
0000413: 23                                        ; global.get
0000414: 0e                                        ; global index
0000415: 41                                        ; i32.const
0000416: 08                                        ; i32 literal
0000417: 6a                                        ; i32.add
0000418: 20                                        ; local.get
0000419: 07                                        ; local index
000041a: 41                                        ; i32.const
000041b: 0c                                        ; i32 literal
000041c: 6c                                        ; i32.mul
000041d: 6a                                        ; i32.add
000041e: 28                                        ; i32.load
000041f: 02                                        ; alignment
0000420: 00                                        ; load offset
0000421: 41                                        ; i32.const
0000422: 00                                        ; i32 literal
0000423: 6a                                        ; i32.add
0000424: 2a                                        ; f32.load
0000425: 02                                        ; alignment
0000426: 00                                        ; load offset
0000427: 23                                        ; global.get
0000428: 0e                                        ; global index
0000429: 41                                        ; i32.const
000042a: 08                                        ; i32 literal
000042b: 6a                                        ; i32.add
000042c: 20                                        ; local.get
000042d: 07                                        ; local index
000042e: 41                                        ; i32.const
000042f: 0c                                        ; i32 literal
0000430: 6c                                        ; i32.mul
0000431: 6a                                        ; i32.add
0000432: 28                                        ; i32.load
0000433: 02                                        ; alignment
0000434: 00                                        ; load offset
0000435: 41                                        ; i32.const
0000436: 08                                        ; i32 literal
0000437: 6a                                        ; i32.add
0000438: 2a                                        ; f32.load
0000439: 02                                        ; alignment
000043a: 00                                        ; load offset
000043b: 10                                        ; call
000043c: 11                                        ; function index
000043d: 04                                        ; if
000043e: 40                                        ; void
000043f: 41                                        ; i32.const
0000440: 01                                        ; i32 literal
0000441: 21                                        ; local.set
0000442: 03                                        ; local index
0000443: 41                                        ; i32.const
0000444: 01                                        ; i32 literal
0000445: 0d                                        ; br_if
0000446: 05                                        ; break depth
0000447: 0b                                        ; end
0000448: 20                                        ; local.get
0000449: 07                                        ; local index
000044a: 41                                        ; i32.const
000044b: 01                                        ; i32 literal
000044c: 6a                                        ; i32.add
000044d: 21                                        ; local.set
000044e: 07                                        ; local index
000044f: 0c                                        ; br
0000450: 00                                        ; break depth
0000451: 0b                                        ; end
0000452: 0b                                        ; end
0000453: 0b                                        ; end
0000454: 20                                        ; local.get
0000455: 03                                        ; local index
0000456: 45                                        ; i32.eqz
0000457: 0d                                        ; br_if
0000458: 01                                        ; break depth
0000459: 0c                                        ; br
000045a: 00                                        ; break depth
000045b: 0b                                        ; end
000045c: 0b                                        ; end
000045d: 23                                        ; global.get
000045e: 0e                                        ; global index
000045f: 41                                        ; i32.const
0000460: 08                                        ; i32 literal
0000461: 6a                                        ; i32.add
0000462: 20                                        ; local.get
0000463: 02                                        ; local index
0000464: 41                                        ; i32.const
0000465: 0c                                        ; i32 literal
0000466: 6c                                        ; i32.mul
0000467: 6a                                        ; i32.add
0000468: 41                                        ; i32.const
0000469: 04                                        ; i32 literal
000046a: 6a                                        ; i32.add
000046b: 20                                        ; local.get
000046c: 04                                        ; local index
000046d: 38                                        ; f32.store
000046e: 02                                        ; alignment
000046f: 00                                        ; store offset
0000470: 23                                        ; global.get
0000471: 0e                                        ; global index
0000472: 41                                        ; i32.const
0000473: 08                                        ; i32 literal
0000474: 6a                                        ; i32.add
0000475: 20                                        ; local.get
0000476: 02                                        ; local index
0000477: 41                                        ; i32.const
0000478: 0c                                        ; i32 literal
0000479: 6c                                        ; i32.mul
000047a: 6a                                        ; i32.add
000047b: 41                                        ; i32.const
000047c: 00                                        ; i32 literal
000047d: 6a                                        ; i32.add
000047e: 20                                        ; local.get
000047f: 05                                        ; local index
0000480: 38                                        ; f32.store
0000481: 02                                        ; alignment
0000482: 00                                        ; store offset
0000483: 23                                        ; global.get
0000484: 0e                                        ; global index
0000485: 41                                        ; i32.const
0000486: 08                                        ; i32 literal
0000487: 6a                                        ; i32.add
0000488: 20                                        ; local.get
0000489: 02                                        ; local index
000048a: 41                                        ; i32.const
000048b: 0c                                        ; i32 literal
000048c: 6c                                        ; i32.mul
000048d: 6a                                        ; i32.add
000048e: 41                                        ; i32.const
000048f: 08                                        ; i32 literal
0000490: 6a                                        ; i32.add
0000491: 20                                        ; local.get
0000492: 06                                        ; local index
0000493: 38                                        ; f32.store
0000494: 02                                        ; alignment
0000495: 00                                        ; store offset
0000496: 23                                        ; global.get
0000497: 0f                                        ; global index
0000498: 41                                        ; i32.const
0000499: 08                                        ; i32 literal
000049a: 6a                                        ; i32.add
000049b: 20                                        ; local.get
000049c: 02                                        ; local index
000049d: 41                                        ; i32.const
000049e: 04                                        ; i32 literal
000049f: 6c                                        ; i32.mul
00004a0: 6a                                        ; i32.add
00004a1: 28                                        ; i32.load
00004a2: 02                                        ; alignment
00004a3: 00                                        ; load offset
00004a4: 41                                        ; i32.const
00004a5: 00                                        ; i32 literal
00004a6: 6a                                        ; i32.add
00004a7: 10                                        ; call
00004a8: 04                                        ; function index
00004a9: 44                                        ; f64.const
00004aa: 0000 0000 0000 e03f                       ; f64 literal
00004b2: a1                                        ; f64.sub
00004b3: 44                                        ; f64.const
00004b4: 9a99 9999 9999 b93f                       ; f64 literal
00004bc: a2                                        ; f64.mul
00004bd: b6                                        ; f32.demote_f64
00004be: 38                                        ; f32.store
00004bf: 02                                        ; alignment
00004c0: 00                                        ; store offset
00004c1: 23                                        ; global.get
00004c2: 0f                                        ; global index
00004c3: 41                                        ; i32.const
00004c4: 08                                        ; i32 literal
00004c5: 6a                                        ; i32.add
00004c6: 20                                        ; local.get
00004c7: 02                                        ; local index
00004c8: 41                                        ; i32.const
00004c9: 04                                        ; i32 literal
00004ca: 6c                                        ; i32.mul
00004cb: 6a                                        ; i32.add
00004cc: 28                                        ; i32.load
00004cd: 02                                        ; alignment
00004ce: 00                                        ; load offset
00004cf: 41                                        ; i32.const
00004d0: 04                                        ; i32 literal
00004d1: 6a                                        ; i32.add
00004d2: 10                                        ; call
00004d3: 04                                        ; function index
00004d4: 44                                        ; f64.const
00004d5: 0000 0000 0000 e03f                       ; f64 literal
00004dd: a1                                        ; f64.sub
00004de: 44                                        ; f64.const
00004df: 9a99 9999 9999 b93f                       ; f64 literal
00004e7: a2                                        ; f64.mul
00004e8: b6                                        ; f32.demote_f64
00004e9: 38                                        ; f32.store
00004ea: 02                                        ; alignment
00004eb: 00                                        ; store offset
00004ec: 20                                        ; local.get
00004ed: 02                                        ; local index
00004ee: 41                                        ; i32.const
00004ef: 01                                        ; i32 literal
00004f0: 6a                                        ; i32.add
00004f1: 21                                        ; local.set
00004f2: 02                                        ; local index
00004f3: 0c                                        ; br
00004f4: 00                                        ; break depth
00004f5: 0b                                        ; end
00004f6: 0b                                        ; end
00004f7: 0b                                        ; end
; move data: [350, 4f8) -> [351, 4f9)
000034f: a803                                      ; FIXUP func body size
; function body 5
00004f9: 00                                        ; func body size (guess)
00004fa: 01                                        ; local decl count
00004fb: 03                                        ; local type count
00004fc: 7f                                        ; i32
00004fd: 41                                        ; i32.const
00004fe: 00                                        ; i32 literal
00004ff: 21                                        ; local.set
0000500: 00                                        ; local index
0000501: 02                                        ; block
0000502: 40                                        ; void
0000503: 03                                        ; loop
0000504: 40                                        ; void
0000505: 20                                        ; local.get
0000506: 00                                        ; local index
0000507: 23                                        ; global.get
0000508: 0c                                        ; global index
0000509: 41                                        ; i32.const
000050a: 01                                        ; i32 literal
000050b: 6b                                        ; i32.sub
000050c: 4a                                        ; i32.gt_s
000050d: 0d                                        ; br_if
000050e: 01                                        ; break depth
000050f: 23                                        ; global.get
0000510: 11                                        ; global index
0000511: 41                                        ; i32.const
0000512: 08                                        ; i32 literal
0000513: 6a                                        ; i32.add
0000514: 20                                        ; local.get
0000515: 00                                        ; local index
0000516: 41                                        ; i32.const
0000517: 04                                        ; i32 literal
0000518: 6c                                        ; i32.mul
0000519: 6a                                        ; i32.add
000051a: 28                                        ; i32.load
000051b: 02                                        ; alignment
000051c: 00                                        ; load offset
000051d: 21                                        ; local.set
000051e: 01                                        ; local index
000051f: 41                                        ; i32.const
0000520: 00                                        ; i32 literal
0000521: 21                                        ; local.set
0000522: 02                                        ; local index
0000523: 02                                        ; block
0000524: 40                                        ; void
0000525: 03                                        ; loop
0000526: 40                                        ; void
0000527: 20                                        ; local.get
0000528: 02                                        ; local index
0000529: 23                                        ; global.get
000052a: 0b                                        ; global index
000052b: 41                                        ; i32.const
000052c: 01                                        ; i32 literal
000052d: 6b                                        ; i32.sub
000052e: 4a                                        ; i32.gt_s
000052f: 0d                                        ; br_if
0000530: 01                                        ; break depth
0000531: 20                                        ; local.get
0000532: 01                                        ; local index
0000533: 41                                        ; i32.const
0000534: 08                                        ; i32 literal
0000535: 6a                                        ; i32.add
0000536: 20                                        ; local.get
0000537: 02                                        ; local index
0000538: 41                                        ; i32.const
0000539: 04                                        ; i32 literal
000053a: 6c                                        ; i32.mul
000053b: 6a                                        ; i32.add
000053c: 41                                        ; i32.const
000053d: 00                                        ; i32 literal
000053e: 36                                        ; i32.store
000053f: 02                                        ; alignment
0000540: 00                                        ; store offset
0000541: 20                                        ; local.get
0000542: 02                                        ; local index
0000543: 41                                        ; i32.const
0000544: 01                                        ; i32 literal
0000545: 6a                                        ; i32.add
0000546: 21                                        ; local.set
0000547: 02                                        ; local index
0000548: 0c                                        ; br
0000549: 00                                        ; break depth
000054a: 0b                                        ; end
000054b: 0b                                        ; end
000054c: 20                                        ; local.get
000054d: 00                                        ; local index
000054e: 41                                        ; i32.const
000054f: 01                                        ; i32 literal
0000550: 6a                                        ; i32.add
0000551: 21                                        ; local.set
0000552: 00                                        ; local index
0000553: 0c                                        ; br
0000554: 00                                        ; break depth
0000555: 0b                                        ; end
0000556: 0b                                        ; end
0000557: 0b                                        ; end
00004f9: 5e                                        ; FIXUP func body size
; function body 6
0000558: 00                                        ; func body size (guess)
0000559: 03                                        ; local decl count
000055a: 02                                        ; local type count
000055b: 7f                                        ; i32
000055c: 05                                        ; local type count
000055d: 7d                                        ; f32
000055e: 08                                        ; local type count
000055f: 7f                                        ; i32
0000560: 41                                        ; i32.const
0000561: 00                                        ; i32 literal
0000562: 21                                        ; local.set
0000563: 02                                        ; local index
0000564: 41                                        ; i32.const
0000565: 00                                        ; i32 literal
0000566: 21                                        ; local.set
0000567: 03                                        ; local index
0000568: 02                                        ; block
0000569: 40                                        ; void
000056a: 03                                        ; loop
000056b: 40                                        ; void
000056c: 20                                        ; local.get
000056d: 03                                        ; local index
000056e: 23                                        ; global.get
000056f: 0d                                        ; global index
0000570: 41                                        ; i32.const
0000571: 01                                        ; i32 literal
0000572: 6b                                        ; i32.sub
0000573: 4a                                        ; i32.gt_s
0000574: 0d                                        ; br_if
0000575: 01                                        ; break depth
0000576: 23                                        ; global.get
0000577: 0e                                        ; global index
0000578: 41                                        ; i32.const
0000579: 08                                        ; i32 literal
000057a: 6a                                        ; i32.add
000057b: 20                                        ; local.get
000057c: 03                                        ; local index
000057d: 41                                        ; i32.const
000057e: 0c                                        ; i32 literal
000057f: 6c                                        ; i32.mul
0000580: 6a                                        ; i32.add
0000581: 28                                        ; i32.load
0000582: 02                                        ; alignment
0000583: 00                                        ; load offset
0000584: 41                                        ; i32.const
0000585: 04                                        ; i32 literal
0000586: 6a                                        ; i32.add
0000587: 2a                                        ; f32.load
0000588: 02                                        ; alignment
0000589: 00                                        ; load offset
000058a: 21                                        ; local.set
000058b: 04                                        ; local index
000058c: 23                                        ; global.get
000058d: 0e                                        ; global index
000058e: 41                                        ; i32.const
000058f: 08                                        ; i32 literal
0000590: 6a                                        ; i32.add
0000591: 20                                        ; local.get
0000592: 03                                        ; local index
0000593: 41                                        ; i32.const
0000594: 0c                                        ; i32 literal
0000595: 6c                                        ; i32.mul
0000596: 6a                                        ; i32.add
0000597: 28                                        ; i32.load
0000598: 02                                        ; alignment
0000599: 00                                        ; load offset
000059a: 41                                        ; i32.const
000059b: 00                                        ; i32 literal
000059c: 6a                                        ; i32.add
000059d: 2a                                        ; f32.load
000059e: 02                                        ; alignment
000059f: 00                                        ; load offset
00005a0: 21                                        ; local.set
00005a1: 05                                        ; local index
00005a2: 23                                        ; global.get
00005a3: 0e                                        ; global index
00005a4: 41                                        ; i32.const
00005a5: 08                                        ; i32 literal
00005a6: 6a                                        ; i32.add
00005a7: 20                                        ; local.get
00005a8: 03                                        ; local index
00005a9: 41                                        ; i32.const
00005aa: 0c                                        ; i32 literal
00005ab: 6c                                        ; i32.mul
00005ac: 6a                                        ; i32.add
00005ad: 28                                        ; i32.load
00005ae: 02                                        ; alignment
00005af: 00                                        ; load offset
00005b0: 41                                        ; i32.const
00005b1: 08                                        ; i32 literal
00005b2: 6a                                        ; i32.add
00005b3: 2a                                        ; f32.load
00005b4: 02                                        ; alignment
00005b5: 00                                        ; load offset
00005b6: 21                                        ; local.set
00005b7: 06                                        ; local index
00005b8: 23                                        ; global.get
00005b9: 0f                                        ; global index
00005ba: 41                                        ; i32.const
00005bb: 08                                        ; i32 literal
00005bc: 6a                                        ; i32.add
00005bd: 20                                        ; local.get
00005be: 03                                        ; local index
00005bf: 41                                        ; i32.const
00005c0: 04                                        ; i32 literal
00005c1: 6c                                        ; i32.mul
00005c2: 6a                                        ; i32.add
00005c3: 28                                        ; i32.load
00005c4: 02                                        ; alignment
00005c5: 00                                        ; load offset
00005c6: 41                                        ; i32.const
00005c7: 00                                        ; i32 literal
00005c8: 6a                                        ; i32.add
00005c9: 2a                                        ; f32.load
00005ca: 02                                        ; alignment
00005cb: 00                                        ; load offset
00005cc: 21                                        ; local.set
00005cd: 07                                        ; local index
00005ce: 23                                        ; global.get
00005cf: 0f                                        ; global index
00005d0: 41                                        ; i32.const
00005d1: 08                                        ; i32 literal
00005d2: 6a                                        ; i32.add
00005d3: 20                                        ; local.get
00005d4: 03                                        ; local index
00005d5: 41                                        ; i32.const
00005d6: 04                                        ; i32 literal
00005d7: 6c                                        ; i32.mul
00005d8: 6a                                        ; i32.add
00005d9: 28                                        ; i32.load
00005da: 02                                        ; alignment
00005db: 00                                        ; load offset
00005dc: 41                                        ; i32.const
00005dd: 04                                        ; i32 literal
00005de: 6a                                        ; i32.add
00005df: 2a                                        ; f32.load
00005e0: 02                                        ; alignment
00005e1: 00                                        ; load offset
00005e2: 21                                        ; local.set
00005e3: 08                                        ; local index
00005e4: 20                                        ; local.get
00005e5: 08                                        ; local index
00005e6: bb                                        ; f64.promote_f32
00005e7: 44                                        ; f64.const
00005e8: 2d43 1ceb e236 1a3f                       ; f64 literal
00005f0: a0                                        ; f64.add
00005f1: b6                                        ; f32.demote_f64
00005f2: 21                                        ; local.set
00005f3: 08                                        ; local index
00005f4: 20                                        ; local.get
00005f5: 00                                        ; local index
00005f6: 20                                        ; local.get
00005f7: 04                                        ; local index
00005f8: 20                                        ; local.get
00005f9: 06                                        ; local index
00005fa: 92                                        ; f32.add
00005fb: 93                                        ; f32.sub
00005fc: 41                                        ; i32.const
00005fd: 00                                        ; i32 literal
00005fe: b2                                        ; f32.convert_i32_s
00005ff: 5d                                        ; f32.lt
0000600: 20                                        ; local.get
0000601: 07                                        ; local index
0000602: 41                                        ; i32.const
0000603: 00                                        ; i32 literal
0000604: b2                                        ; f32.convert_i32_s
0000605: 5e                                        ; f32.gt
0000606: 6c                                        ; i32.mul
0000607: 20                                        ; local.get
0000608: 04                                        ; local index
0000609: 20                                        ; local.get
000060a: 06                                        ; local index
000060b: 93                                        ; f32.sub
000060c: 41                                        ; i32.const
000060d: 00                                        ; i32 literal
000060e: b2                                        ; f32.convert_i32_s
000060f: 5d                                        ; f32.lt
0000610: 20                                        ; local.get
0000611: 07                                        ; local index
0000612: 41                                        ; i32.const
0000613: 00                                        ; i32 literal
0000614: b2                                        ; f32.convert_i32_s
0000615: 5d                                        ; f32.lt
0000616: 6c                                        ; i32.mul
0000617: 6a                                        ; i32.add
0000618: 04                                        ; if
0000619: 40                                        ; void
000061a: 43                                        ; f32.const
000061b: 0000 0000                                 ; f32 literal
000061f: 20                                        ; local.get
0000620: 07                                        ; local index
0000621: 93                                        ; f32.sub
0000622: 21                                        ; local.set
0000623: 07                                        ; local index
0000624: 0b                                        ; end
0000625: 20                                        ; local.get
0000626: 01                                        ; local index
0000627: 20                                        ; local.get
0000628: 05                                        ; local index
0000629: 20                                        ; local.get
000062a: 06                                        ; local index
000062b: 92                                        ; f32.add
000062c: 93                                        ; f32.sub
000062d: 41                                        ; i32.const
000062e: 00                                        ; i32 literal
000062f: b2                                        ; f32.convert_i32_s
0000630: 5d                                        ; f32.lt
0000631: 20                                        ; local.get
0000632: 08                                        ; local index
0000633: 41                                        ; i32.const
0000634: 00                                        ; i32 literal
0000635: b2                                        ; f32.convert_i32_s
0000636: 5e                                        ; f32.gt
0000637: 6c                                        ; i32.mul
0000638: 20                                        ; local.get
0000639: 05                                        ; local index
000063a: 20                                        ; local.get
000063b: 06                                        ; local index
000063c: 93                                        ; f32.sub
000063d: 41                                        ; i32.const
000063e: 00                                        ; i32 literal
000063f: b2                                        ; f32.convert_i32_s
0000640: 5d                                        ; f32.lt
0000641: 20                                        ; local.get
0000642: 08                                        ; local index
0000643: 41                                        ; i32.const
0000644: 00                                        ; i32 literal
0000645: b2                                        ; f32.convert_i32_s
0000646: 5d                                        ; f32.lt
0000647: 6c                                        ; i32.mul
0000648: 6a                                        ; i32.add
0000649: 04                                        ; if
000064a: 40                                        ; void
000064b: 43                                        ; f32.const
000064c: 0000 0000                                 ; f32 literal
0000650: 20                                        ; local.get
0000651: 08                                        ; local index
0000652: 93                                        ; f32.sub
0000653: 21                                        ; local.set
0000654: 08                                        ; local index
0000655: 0b                                        ; end
0000656: 23                                        ; global.get
0000657: 0e                                        ; global index
0000658: 41                                        ; i32.const
0000659: 08                                        ; i32 literal
000065a: 6a                                        ; i32.add
000065b: 20                                        ; local.get
000065c: 03                                        ; local index
000065d: 41                                        ; i32.const
000065e: 0c                                        ; i32 literal
000065f: 6c                                        ; i32.mul
0000660: 6a                                        ; i32.add
0000661: 41                                        ; i32.const
0000662: 04                                        ; i32 literal
0000663: 6a                                        ; i32.add
0000664: 20                                        ; local.get
0000665: 04                                        ; local index
0000666: 20                                        ; local.get
0000667: 07                                        ; local index
0000668: 92                                        ; f32.add
0000669: 38                                        ; f32.store
000066a: 02                                        ; alignment
000066b: 00                                        ; store offset
000066c: 23                                        ; global.get
000066d: 0e                                        ; global index
000066e: 41                                        ; i32.const
000066f: 08                                        ; i32 literal
0000670: 6a                                        ; i32.add
0000671: 20                                        ; local.get
0000672: 03                                        ; local index
0000673: 41                                        ; i32.const
0000674: 0c                                        ; i32 literal
0000675: 6c                                        ; i32.mul
0000676: 6a                                        ; i32.add
0000677: 41                                        ; i32.const
0000678: 00                                        ; i32 literal
0000679: 6a                                        ; i32.add
000067a: 20                                        ; local.get
000067b: 05                                        ; local index
000067c: 20                                        ; local.get
000067d: 08                                        ; local index
000067e: 92                                        ; f32.add
000067f: 38                                        ; f32.store
0000680: 02                                        ; alignment
0000681: 00                                        ; store offset
0000682: 23                                        ; global.get
0000683: 0f                                        ; global index
0000684: 41                                        ; i32.const
0000685: 08                                        ; i32 literal
0000686: 6a                                        ; i32.add
0000687: 20                                        ; local.get
0000688: 03                                        ; local index
0000689: 41                                        ; i32.const
000068a: 04                                        ; i32 literal
000068b: 6c                                        ; i32.mul
000068c: 6a                                        ; i32.add
000068d: 28                                        ; i32.load
000068e: 02                                        ; alignment
000068f: 00                                        ; load offset
0000690: 41                                        ; i32.const
0000691: 00                                        ; i32 literal
0000692: 6a                                        ; i32.add
0000693: 20                                        ; local.get
0000694: 07                                        ; local index
0000695: 38                                        ; f32.store
0000696: 02                                        ; alignment
0000697: 00                                        ; store offset
0000698: 23                                        ; global.get
0000699: 0f                                        ; global index
000069a: 41                                        ; i32.const
000069b: 08                                        ; i32 literal
000069c: 6a                                        ; i32.add
000069d: 20                                        ; local.get
000069e: 03                                        ; local index
000069f: 41                                        ; i32.const
00006a0: 04                                        ; i32 literal
00006a1: 6c                                        ; i32.mul
00006a2: 6a                                        ; i32.add
00006a3: 28                                        ; i32.load
00006a4: 02                                        ; alignment
00006a5: 00                                        ; load offset
00006a6: 41                                        ; i32.const
00006a7: 04                                        ; i32 literal
00006a8: 6a                                        ; i32.add
00006a9: 20                                        ; local.get
00006aa: 08                                        ; local index
00006ab: 38                                        ; f32.store
00006ac: 02                                        ; alignment
00006ad: 00                                        ; store offset
00006ae: 20                                        ; local.get
00006af: 04                                        ; local index
00006b0: 20                                        ; local.get
00006b1: 06                                        ; local index
00006b2: 93                                        ; f32.sub
00006b3: bb                                        ; f64.promote_f32
00006b4: 20                                        ; local.get
00006b5: 00                                        ; local index
00006b6: bb                                        ; f64.promote_f32
00006b7: a3                                        ; f64.div
00006b8: 23                                        ; global.get
00006b9: 0c                                        ; global index
00006ba: b7                                        ; f64.convert_i32_s
00006bb: a2                                        ; f64.mul
00006bc: 10                                        ; call
00006bd: 06                                        ; function index
00006be: aa                                        ; i32.trunc_f64_s
00006bf: 21                                        ; local.set
00006c0: 09                                        ; local index
00006c1: 20                                        ; local.get
00006c2: 04                                        ; local index
00006c3: 20                                        ; local.get
00006c4: 06                                        ; local index
00006c5: 92                                        ; f32.add
00006c6: bb                                        ; f64.promote_f32
00006c7: 20                                        ; local.get
00006c8: 00                                        ; local index
00006c9: bb                                        ; f64.promote_f32
00006ca: a3                                        ; f64.div
00006cb: 23                                        ; global.get
00006cc: 0c                                        ; global index
00006cd: b7                                        ; f64.convert_i32_s
00006ce: a2                                        ; f64.mul
00006cf: 10                                        ; call
00006d0: 06                                        ; function index
00006d1: aa                                        ; i32.trunc_f64_s
00006d2: 21                                        ; local.set
00006d3: 0a                                        ; local index
00006d4: 20                                        ; local.get
00006d5: 05                                        ; local index
00006d6: 20                                        ; local.get
00006d7: 06                                        ; local index
00006d8: 93                                        ; f32.sub
00006d9: bb                                        ; f64.promote_f32
00006da: 20                                        ; local.get
00006db: 01                                        ; local index
00006dc: bb                                        ; f64.promote_f32
00006dd: a3                                        ; f64.div
00006de: 23                                        ; global.get
00006df: 0b                                        ; global index
00006e0: b7                                        ; f64.convert_i32_s
00006e1: a2                                        ; f64.mul
00006e2: 10                                        ; call
00006e3: 06                                        ; function index
00006e4: aa                                        ; i32.trunc_f64_s
00006e5: 21                                        ; local.set
00006e6: 0b                                        ; local index
00006e7: 20                                        ; local.get
00006e8: 05                                        ; local index
00006e9: 20                                        ; local.get
00006ea: 06                                        ; local index
00006eb: 92                                        ; f32.add
00006ec: bb                                        ; f64.promote_f32
00006ed: 20                                        ; local.get
00006ee: 01                                        ; local index
00006ef: bb                                        ; f64.promote_f32
00006f0: a3                                        ; f64.div
00006f1: 23                                        ; global.get
00006f2: 0b                                        ; global index
00006f3: b7                                        ; f64.convert_i32_s
00006f4: a2                                        ; f64.mul
00006f5: 10                                        ; call
00006f6: 06                                        ; function index
00006f7: aa                                        ; i32.trunc_f64_s
00006f8: 21                                        ; local.set
00006f9: 0c                                        ; local index
00006fa: 20                                        ; local.get
00006fb: 09                                        ; local index
00006fc: 41                                        ; i32.const
00006fd: 00                                        ; i32 literal
00006fe: 48                                        ; i32.lt_s
00006ff: 04                                        ; if
0000700: 40                                        ; void
0000701: 41                                        ; i32.const
0000702: 00                                        ; i32 literal
0000703: 21                                        ; local.set
0000704: 09                                        ; local index
0000705: 0b                                        ; end
0000706: 20                                        ; local.get
0000707: 0a                                        ; local index
0000708: 23                                        ; global.get
0000709: 0c                                        ; global index
000070a: 4e                                        ; i32.ge_s
000070b: 04                                        ; if
000070c: 40                                        ; void
000070d: 23                                        ; global.get
000070e: 0c                                        ; global index
000070f: 41                                        ; i32.const
0000710: 01                                        ; i32 literal
0000711: 6b                                        ; i32.sub
0000712: 21                                        ; local.set
0000713: 0a                                        ; local index
0000714: 0b                                        ; end
0000715: 20                                        ; local.get
0000716: 0b                                        ; local index
0000717: 41                                        ; i32.const
0000718: 00                                        ; i32 literal
0000719: 48                                        ; i32.lt_s
000071a: 04                                        ; if
000071b: 40                                        ; void
000071c: 41                                        ; i32.const
000071d: 00                                        ; i32 literal
000071e: 21                                        ; local.set
000071f: 0b                                        ; local index
0000720: 0b                                        ; end
0000721: 20                                        ; local.get
0000722: 0c                                        ; local index
0000723: 23                                        ; global.get
0000724: 0b                                        ; global index
0000725: 4e                                        ; i32.ge_s
0000726: 04                                        ; if
0000727: 40                                        ; void
0000728: 23                                        ; global.get
0000729: 0b                                        ; global index
000072a: 41                                        ; i32.const
000072b: 01                                        ; i32 literal
000072c: 6b                                        ; i32.sub
000072d: 21                                        ; local.set
000072e: 0c                                        ; local index
000072f: 0b                                        ; end
0000730: 20                                        ; local.get
0000731: 09                                        ; local index
0000732: 21                                        ; local.set
0000733: 0d                                        ; local index
0000734: 02                                        ; block
0000735: 40                                        ; void
0000736: 03                                        ; loop
0000737: 40                                        ; void
0000738: 20                                        ; local.get
0000739: 0d                                        ; local index
000073a: 20                                        ; local.get
000073b: 0a                                        ; local index
000073c: 4a                                        ; i32.gt_s
000073d: 0d                                        ; br_if
000073e: 01                                        ; break depth
000073f: 23                                        ; global.get
0000740: 11                                        ; global index
0000741: 41                                        ; i32.const
0000742: 08                                        ; i32 literal
0000743: 6a                                        ; i32.add
0000744: 20                                        ; local.get
0000745: 0d                                        ; local index
0000746: 41                                        ; i32.const
0000747: 04                                        ; i32 literal
0000748: 6c                                        ; i32.mul
0000749: 6a                                        ; i32.add
000074a: 28                                        ; i32.load
000074b: 02                                        ; alignment
000074c: 00                                        ; load offset
000074d: 21                                        ; local.set
000074e: 0e                                        ; local index
000074f: 20                                        ; local.get
0000750: 0b                                        ; local index
0000751: 21                                        ; local.set
0000752: 0f                                        ; local index
0000753: 02                                        ; block
0000754: 40                                        ; void
0000755: 03                                        ; loop
0000756: 40                                        ; void
0000757: 20                                        ; local.get
0000758: 0f                                        ; local index
0000759: 20                                        ; local.get
000075a: 0c                                        ; local index
000075b: 4a                                        ; i32.gt_s
000075c: 0d                                        ; br_if
000075d: 01                                        ; break depth
000075e: 23                                        ; global.get
000075f: 10                                        ; global index
0000760: 41                                        ; i32.const
0000761: 08                                        ; i32 literal
0000762: 6a                                        ; i32.add
0000763: 20                                        ; local.get
0000764: 02                                        ; local index
0000765: 41                                        ; i32.const
0000766: 04                                        ; i32 literal
0000767: 6c                                        ; i32.mul
0000768: 6a                                        ; i32.add
0000769: 28                                        ; i32.load
000076a: 02                                        ; alignment
000076b: 00                                        ; load offset
000076c: 21                                        ; local.set
000076d: 10                                        ; local index
000076e: 20                                        ; local.get
000076f: 02                                        ; local index
0000770: 41                                        ; i32.const
0000771: 01                                        ; i32 literal
0000772: 6a                                        ; i32.add
0000773: 21                                        ; local.set
0000774: 02                                        ; local index
0000775: 20                                        ; local.get
0000776: 10                                        ; local index
0000777: 41                                        ; i32.const
0000778: 04                                        ; i32 literal
0000779: 6a                                        ; i32.add
000077a: 20                                        ; local.get
000077b: 03                                        ; local index
000077c: 36                                        ; i32.store
000077d: 02                                        ; alignment
000077e: 00                                        ; store offset
000077f: 20                                        ; local.get
0000780: 10                                        ; local index
0000781: 41                                        ; i32.const
0000782: 00                                        ; i32 literal
0000783: 6a                                        ; i32.add
0000784: 20                                        ; local.get
0000785: 0e                                        ; local index
0000786: 41                                        ; i32.const
0000787: 08                                        ; i32 literal
0000788: 6a                                        ; i32.add
0000789: 20                                        ; local.get
000078a: 0f                                        ; local index
000078b: 41                                        ; i32.const
000078c: 04                                        ; i32 literal
000078d: 6c                                        ; i32.mul
000078e: 6a                                        ; i32.add
000078f: 28                                        ; i32.load
0000790: 02                                        ; alignment
0000791: 00                                        ; load offset
0000792: 36                                        ; i32.store
0000793: 02                                        ; alignment
0000794: 00                                        ; store offset
0000795: 20                                        ; local.get
0000796: 0e                                        ; local index
0000797: 41                                        ; i32.const
0000798: 08                                        ; i32 literal
0000799: 6a                                        ; i32.add
000079a: 20                                        ; local.get
000079b: 0f                                        ; local index
000079c: 41                                        ; i32.const
000079d: 04                                        ; i32 literal
000079e: 6c                                        ; i32.mul
000079f: 6a                                        ; i32.add
00007a0: 20                                        ; local.get
00007a1: 10                                        ; local index
00007a2: 36                                        ; i32.store
00007a3: 02                                        ; alignment
00007a4: 00                                        ; store offset
00007a5: 20                                        ; local.get
00007a6: 0f                                        ; local index
00007a7: 41                                        ; i32.const
00007a8: 01                                        ; i32 literal
00007a9: 6a                                        ; i32.add
00007aa: 21                                        ; local.set
00007ab: 0f                                        ; local index
00007ac: 0c                                        ; br
00007ad: 00                                        ; break depth
00007ae: 0b                                        ; end
00007af: 0b                                        ; end
00007b0: 20                                        ; local.get
00007b1: 0d                                        ; local index
00007b2: 41                                        ; i32.const
00007b3: 01                                        ; i32 literal
00007b4: 6a                                        ; i32.add
00007b5: 21                                        ; local.set
00007b6: 0d                                        ; local index
00007b7: 0c                                        ; br
00007b8: 00                                        ; break depth
00007b9: 0b                                        ; end
00007ba: 0b                                        ; end
00007bb: 20                                        ; local.get
00007bc: 03                                        ; local index
00007bd: 41                                        ; i32.const
00007be: 01                                        ; i32 literal
00007bf: 6a                                        ; i32.add
00007c0: 21                                        ; local.set
00007c1: 03                                        ; local index
00007c2: 0c                                        ; br
00007c3: 00                                        ; break depth
00007c4: 0b                                        ; end
00007c5: 0b                                        ; end
00007c6: 0b                                        ; end
; move data: [559, 7c7) -> [55a, 7c8)
0000558: ee04                                      ; FIXUP func body size
; function body 7
00007c8: 00                                        ; func body size (guess)
00007c9: 07                                        ; local decl count
00007ca: 05                                        ; local type count
00007cb: 7f                                        ; i32
00007cc: 05                                        ; local type count
00007cd: 7d                                        ; f32
00007ce: 02                                        ; local type count
00007cf: 7f                                        ; i32
00007d0: 07                                        ; local type count
00007d1: 7d                                        ; f32
00007d2: 01                                        ; local type count
00007d3: 7c                                        ; f64
00007d4: 04                                        ; local type count
00007d5: 7d                                        ; f32
00007d6: 04                                        ; local type count
00007d7: 7c                                        ; f64
00007d8: 41                                        ; i32.const
00007d9: 00                                        ; i32 literal
00007da: 21                                        ; local.set
00007db: 00                                        ; local index
00007dc: 02                                        ; block
00007dd: 40                                        ; void
00007de: 03                                        ; loop
00007df: 40                                        ; void
00007e0: 20                                        ; local.get
00007e1: 00                                        ; local index
00007e2: 23                                        ; global.get
00007e3: 0c                                        ; global index
00007e4: 41                                        ; i32.const
00007e5: 01                                        ; i32 literal
00007e6: 6b                                        ; i32.sub
00007e7: 4a                                        ; i32.gt_s
00007e8: 0d                                        ; br_if
00007e9: 01                                        ; break depth
00007ea: 23                                        ; global.get
00007eb: 11                                        ; global index
00007ec: 41                                        ; i32.const
00007ed: 08                                        ; i32 literal
00007ee: 6a                                        ; i32.add
00007ef: 20                                        ; local.get
00007f0: 00                                        ; local index
00007f1: 41                                        ; i32.const
00007f2: 04                                        ; i32 literal
00007f3: 6c                                        ; i32.mul
00007f4: 6a                                        ; i32.add
00007f5: 28                                        ; i32.load
00007f6: 02                                        ; alignment
00007f7: 00                                        ; load offset
00007f8: 21                                        ; local.set
00007f9: 01                                        ; local index
00007fa: 41                                        ; i32.const
00007fb: 00                                        ; i32 literal
00007fc: 21                                        ; local.set
00007fd: 02                                        ; local index
00007fe: 02                                        ; block
00007ff: 40                                        ; void
0000800: 03                                        ; loop
0000801: 40                                        ; void
0000802: 20                                        ; local.get
0000803: 02                                        ; local index
0000804: 23                                        ; global.get
0000805: 0b                                        ; global index
0000806: 41                                        ; i32.const
0000807: 01                                        ; i32 literal
0000808: 6b                                        ; i32.sub
0000809: 4a                                        ; i32.gt_s
000080a: 0d                                        ; br_if
000080b: 01                                        ; break depth
000080c: 20                                        ; local.get
000080d: 01                                        ; local index
000080e: 41                                        ; i32.const
000080f: 08                                        ; i32 literal
0000810: 6a                                        ; i32.add
0000811: 20                                        ; local.get
0000812: 02                                        ; local index
0000813: 41                                        ; i32.const
0000814: 04                                        ; i32 literal
0000815: 6c                                        ; i32.mul
0000816: 6a                                        ; i32.add
0000817: 28                                        ; i32.load
0000818: 02                                        ; alignment
0000819: 00                                        ; load offset
000081a: 21                                        ; local.set
000081b: 03                                        ; local index
000081c: 02                                        ; block
000081d: 40                                        ; void
000081e: 03                                        ; loop
000081f: 40                                        ; void
0000820: 20                                        ; local.get
0000821: 03                                        ; local index
0000822: 41                                        ; i32.const
0000823: 00                                        ; i32 literal
0000824: 46                                        ; i32.eq
0000825: 45                                        ; i32.eqz
0000826: 45                                        ; i32.eqz
0000827: 0d                                        ; br_if
0000828: 01                                        ; break depth
0000829: 20                                        ; local.get
000082a: 03                                        ; local index
000082b: 41                                        ; i32.const
000082c: 04                                        ; i32 literal
000082d: 6a                                        ; i32.add
000082e: 28                                        ; i32.load
000082f: 02                                        ; alignment
0000830: 00                                        ; load offset
0000831: 21                                        ; local.set
0000832: 04                                        ; local index
0000833: 23                                        ; global.get
0000834: 0e                                        ; global index
0000835: 41                                        ; i32.const
0000836: 08                                        ; i32 literal
0000837: 6a                                        ; i32.add
0000838: 20                                        ; local.get
0000839: 04                                        ; local index
000083a: 41                                        ; i32.const
000083b: 0c                                        ; i32 literal
000083c: 6c                                        ; i32.mul
000083d: 6a                                        ; i32.add
000083e: 28                                        ; i32.load
000083f: 02                                        ; alignment
0000840: 00                                        ; load offset
0000841: 41                                        ; i32.const
0000842: 04                                        ; i32 literal
0000843: 6a                                        ; i32.add
0000844: 2a                                        ; f32.load
0000845: 02                                        ; alignment
0000846: 00                                        ; load offset
0000847: 21                                        ; local.set
0000848: 05                                        ; local index
0000849: 23                                        ; global.get
000084a: 0e                                        ; global index
000084b: 41                                        ; i32.const
000084c: 08                                        ; i32 literal
000084d: 6a                                        ; i32.add
000084e: 20                                        ; local.get
000084f: 04                                        ; local index
0000850: 41                                        ; i32.const
0000851: 0c                                        ; i32 literal
0000852: 6c                                        ; i32.mul
0000853: 6a                                        ; i32.add
0000854: 28                                        ; i32.load
0000855: 02                                        ; alignment
0000856: 00                                        ; load offset
0000857: 41                                        ; i32.const
0000858: 00                                        ; i32 literal
0000859: 6a                                        ; i32.add
000085a: 2a                                        ; f32.load
000085b: 02                                        ; alignment
000085c: 00                                        ; load offset
000085d: 21                                        ; local.set
000085e: 06                                        ; local index
000085f: 23                                        ; global.get
0000860: 0e                                        ; global index
0000861: 41                                        ; i32.const
0000862: 08                                        ; i32 literal
0000863: 6a                                        ; i32.add
0000864: 20                                        ; local.get
0000865: 04                                        ; local index
0000866: 41                                        ; i32.const
0000867: 0c                                        ; i32 literal
0000868: 6c                                        ; i32.mul
0000869: 6a                                        ; i32.add
000086a: 28                                        ; i32.load
000086b: 02                                        ; alignment
000086c: 00                                        ; load offset
000086d: 41                                        ; i32.const
000086e: 08                                        ; i32 literal
000086f: 6a                                        ; i32.add
0000870: 2a                                        ; f32.load
0000871: 02                                        ; alignment
0000872: 00                                        ; load offset
0000873: 21                                        ; local.set
0000874: 07                                        ; local index
0000875: 23                                        ; global.get
0000876: 0f                                        ; global index
0000877: 41                                        ; i32.const
0000878: 08                                        ; i32 literal
0000879: 6a                                        ; i32.add
000087a: 20                                        ; local.get
000087b: 04                                        ; local index
000087c: 41                                        ; i32.const
000087d: 04                                        ; i32 literal
000087e: 6c                                        ; i32.mul
000087f: 6a                                        ; i32.add
0000880: 28                                        ; i32.load
0000881: 02                                        ; alignment
0000882: 00                                        ; load offset
0000883: 41                                        ; i32.const
0000884: 00                                        ; i32 literal
0000885: 6a                                        ; i32.add
0000886: 2a                                        ; f32.load
0000887: 02                                        ; alignment
0000888: 00                                        ; load offset
0000889: 21                                        ; local.set
000088a: 08                                        ; local index
000088b: 23                                        ; global.get
000088c: 0f                                        ; global index
000088d: 41                                        ; i32.const
000088e: 08                                        ; i32 literal
000088f: 6a                                        ; i32.add
0000890: 20                                        ; local.get
0000891: 04                                        ; local index
0000892: 41                                        ; i32.const
0000893: 04                                        ; i32 literal
0000894: 6c                                        ; i32.mul
0000895: 6a                                        ; i32.add
0000896: 28                                        ; i32.load
0000897: 02                                        ; alignment
0000898: 00                                        ; load offset
0000899: 41                                        ; i32.const
000089a: 04                                        ; i32 literal
000089b: 6a                                        ; i32.add
000089c: 2a                                        ; f32.load
000089d: 02                                        ; alignment
000089e: 00                                        ; load offset
000089f: 21                                        ; local.set
00008a0: 09                                        ; local index
00008a1: 20                                        ; local.get
00008a2: 03                                        ; local index
00008a3: 21                                        ; local.set
00008a4: 0a                                        ; local index
00008a5: 20                                        ; local.get
00008a6: 0a                                        ; local index
00008a7: 41                                        ; i32.const
00008a8: 00                                        ; i32 literal
00008a9: 6a                                        ; i32.add
00008aa: 28                                        ; i32.load
00008ab: 02                                        ; alignment
00008ac: 00                                        ; load offset
00008ad: 21                                        ; local.set
00008ae: 0a                                        ; local index
00008af: 02                                        ; block
00008b0: 40                                        ; void
00008b1: 03                                        ; loop
00008b2: 40                                        ; void
00008b3: 20                                        ; local.get
00008b4: 0a                                        ; local index
00008b5: 41                                        ; i32.const
00008b6: 00                                        ; i32 literal
00008b7: 46                                        ; i32.eq
00008b8: 45                                        ; i32.eqz
00008b9: 45                                        ; i32.eqz
00008ba: 0d                                        ; br_if
00008bb: 01                                        ; break depth
00008bc: 20                                        ; local.get
00008bd: 0a                                        ; local index
00008be: 41                                        ; i32.const
00008bf: 04                                        ; i32 literal
00008c0: 6a                                        ; i32.add
00008c1: 28                                        ; i32.load
00008c2: 02                                        ; alignment
00008c3: 00                                        ; load offset
00008c4: 21                                        ; local.set
00008c5: 0b                                        ; local index
00008c6: 23                                        ; global.get
00008c7: 0e                                        ; global index
00008c8: 41                                        ; i32.const
00008c9: 08                                        ; i32 literal
00008ca: 6a                                        ; i32.add
00008cb: 20                                        ; local.get
00008cc: 0b                                        ; local index
00008cd: 41                                        ; i32.const
00008ce: 0c                                        ; i32 literal
00008cf: 6c                                        ; i32.mul
00008d0: 6a                                        ; i32.add
00008d1: 28                                        ; i32.load
00008d2: 02                                        ; alignment
00008d3: 00                                        ; load offset
00008d4: 41                                        ; i32.const
00008d5: 04                                        ; i32 literal
00008d6: 6a                                        ; i32.add
00008d7: 2a                                        ; f32.load
00008d8: 02                                        ; alignment
00008d9: 00                                        ; load offset
00008da: 21                                        ; local.set
00008db: 0c                                        ; local index
00008dc: 23                                        ; global.get
00008dd: 0e                                        ; global index
00008de: 41                                        ; i32.const
00008df: 08                                        ; i32 literal
00008e0: 6a                                        ; i32.add
00008e1: 20                                        ; local.get
00008e2: 0b                                        ; local index
00008e3: 41                                        ; i32.const
00008e4: 0c                                        ; i32 literal
00008e5: 6c                                        ; i32.mul
00008e6: 6a                                        ; i32.add
00008e7: 28                                        ; i32.load
00008e8: 02                                        ; alignment
00008e9: 00                                        ; load offset
00008ea: 41                                        ; i32.const
00008eb: 00                                        ; i32 literal
00008ec: 6a                                        ; i32.add
00008ed: 2a                                        ; f32.load
00008ee: 02                                        ; alignment
00008ef: 00                                        ; load offset
00008f0: 21                                        ; local.set
00008f1: 0d                                        ; local index
00008f2: 23                                        ; global.get
00008f3: 0e                                        ; global index
00008f4: 41                                        ; i32.const
00008f5: 08                                        ; i32 literal
00008f6: 6a                                        ; i32.add
00008f7: 20                                        ; local.get
00008f8: 0b                                        ; local index
00008f9: 41                                        ; i32.const
00008fa: 0c                                        ; i32 literal
00008fb: 6c                                        ; i32.mul
00008fc: 6a                                        ; i32.add
00008fd: 28                                        ; i32.load
00008fe: 02                                        ; alignment
00008ff: 00                                        ; load offset
0000900: 41                                        ; i32.const
0000901: 08                                        ; i32 literal
0000902: 6a                                        ; i32.add
0000903: 2a                                        ; f32.load
0000904: 02                                        ; alignment
0000905: 00                                        ; load offset
0000906: 21                                        ; local.set
0000907: 0e                                        ; local index
0000908: 20                                        ; local.get
0000909: 05                                        ; local index
000090a: 20                                        ; local.get
000090b: 06                                        ; local index
000090c: 20                                        ; local.get
000090d: 07                                        ; local index
000090e: 20                                        ; local.get
000090f: 0c                                        ; local index
0000910: 20                                        ; local.get
0000911: 0d                                        ; local index
0000912: 20                                        ; local.get
0000913: 0e                                        ; local index
0000914: 10                                        ; call
0000915: 11                                        ; function index
0000916: 04                                        ; if
0000917: 40                                        ; void
0000918: 23                                        ; global.get
0000919: 0f                                        ; global index
000091a: 41                                        ; i32.const
000091b: 08                                        ; i32 literal
000091c: 6a                                        ; i32.add
000091d: 20                                        ; local.get
000091e: 0b                                        ; local index
000091f: 41                                        ; i32.const
0000920: 04                                        ; i32 literal
0000921: 6c                                        ; i32.mul
0000922: 6a                                        ; i32.add
0000923: 28                                        ; i32.load
0000924: 02                                        ; alignment
0000925: 00                                        ; load offset
0000926: 41                                        ; i32.const
0000927: 00                                        ; i32 literal
0000928: 6a                                        ; i32.add
0000929: 2a                                        ; f32.load
000092a: 02                                        ; alignment
000092b: 00                                        ; load offset
000092c: 21                                        ; local.set
000092d: 0f                                        ; local index
000092e: 23                                        ; global.get
000092f: 0f                                        ; global index
0000930: 41                                        ; i32.const
0000931: 08                                        ; i32 literal
0000932: 6a                                        ; i32.add
0000933: 20                                        ; local.get
0000934: 0b                                        ; local index
0000935: 41                                        ; i32.const
0000936: 04                                        ; i32 literal
0000937: 6c                                        ; i32.mul
0000938: 6a                                        ; i32.add
0000939: 28                                        ; i32.load
000093a: 02                                        ; alignment
000093b: 00                                        ; load offset
000093c: 41                                        ; i32.const
000093d: 04                                        ; i32 literal
000093e: 6a                                        ; i32.add
000093f: 2a                                        ; f32.load
0000940: 02                                        ; alignment
0000941: 00                                        ; load offset
0000942: 21                                        ; local.set
0000943: 10                                        ; local index
0000944: 20                                        ; local.get
0000945: 0c                                        ; local index
0000946: 20                                        ; local.get
0000947: 05                                        ; local index
0000948: 93                                        ; f32.sub
0000949: 21                                        ; local.set
000094a: 11                                        ; local index
000094b: 20                                        ; local.get
000094c: 0d                                        ; local index
000094d: 20                                        ; local.get
000094e: 06                                        ; local index
000094f: 93                                        ; f32.sub
0000950: 21                                        ; local.set
0000951: 12                                        ; local index
0000952: 20                                        ; local.get
0000953: 11                                        ; local index
0000954: 20                                        ; local.get
0000955: 11                                        ; local index
0000956: 94                                        ; f32.mul
0000957: 20                                        ; local.get
0000958: 12                                        ; local index
0000959: 20                                        ; local.get
000095a: 12                                        ; local index
000095b: 94                                        ; f32.mul
000095c: 92                                        ; f32.add
000095d: bb                                        ; f64.promote_f32
000095e: 10                                        ; call
000095f: 01                                        ; function index
0000960: 21                                        ; local.set
0000961: 13                                        ; local index
0000962: 20                                        ; local.get
0000963: 11                                        ; local index
0000964: bb                                        ; f64.promote_f32
0000965: 20                                        ; local.get
0000966: 13                                        ; local index
0000967: a3                                        ; f64.div
0000968: b6                                        ; f32.demote_f64
0000969: 21                                        ; local.set
000096a: 11                                        ; local index
000096b: 20                                        ; local.get
000096c: 12                                        ; local index
000096d: bb                                        ; f64.promote_f32
000096e: 20                                        ; local.get
000096f: 13                                        ; local index
0000970: a3                                        ; f64.div
0000971: b6                                        ; f32.demote_f64
0000972: 21                                        ; local.set
0000973: 12                                        ; local index
0000974: 20                                        ; local.get
0000975: 11                                        ; local index
0000976: 20                                        ; local.get
0000977: 08                                        ; local index
0000978: 94                                        ; f32.mul
0000979: 20                                        ; local.get
000097a: 12                                        ; local index
000097b: 20                                        ; local.get
000097c: 09                                        ; local index
000097d: 94                                        ; f32.mul
000097e: 92                                        ; f32.add
000097f: 21                                        ; local.set
0000980: 14                                        ; local index
0000981: 20                                        ; local.get
0000982: 11                                        ; local index
0000983: 20                                        ; local.get
0000984: 0f                                        ; local index
0000985: 94                                        ; f32.mul
0000986: 20                                        ; local.get
0000987: 12                                        ; local index
0000988: 20                                        ; local.get
0000989: 10                                        ; local index
000098a: 94                                        ; f32.mul
000098b: 92                                        ; f32.add
000098c: 21                                        ; local.set
000098d: 15                                        ; local index
000098e: 20                                        ; local.get
000098f: 14                                        ; local index
0000990: 20                                        ; local.get
0000991: 15                                        ; local index
0000992: 93                                        ; f32.sub
0000993: 41                                        ; i32.const
0000994: 00                                        ; i32 literal
0000995: b2                                        ; f32.convert_i32_s
0000996: 5f                                        ; f32.le
0000997: 45                                        ; i32.eqz
0000998: 04                                        ; if
0000999: 40                                        ; void
000099a: 20                                        ; local.get
000099b: 07                                        ; local index
000099c: 20                                        ; local.get
000099d: 0e                                        ; local index
000099e: 92                                        ; f32.add
000099f: 21                                        ; local.set
00009a0: 16                                        ; local index
00009a1: 20                                        ; local.get
00009a2: 07                                        ; local index
00009a3: 20                                        ; local.get
00009a4: 0e                                        ; local index
00009a5: 93                                        ; f32.sub
00009a6: 21                                        ; local.set
00009a7: 17                                        ; local index
00009a8: 20                                        ; local.get
00009a9: 14                                        ; local index
00009aa: 20                                        ; local.get
00009ab: 17                                        ; local index
00009ac: 94                                        ; f32.mul
00009ad: 41                                        ; i32.const
00009ae: 02                                        ; i32 literal
00009af: b2                                        ; f32.convert_i32_s
00009b0: 20                                        ; local.get
00009b1: 0e                                        ; local index
00009b2: 94                                        ; f32.mul
00009b3: 20                                        ; local.get
00009b4: 15                                        ; local index
00009b5: 94                                        ; f32.mul
00009b6: 92                                        ; f32.add
00009b7: bb                                        ; f64.promote_f32
00009b8: 20                                        ; local.get
00009b9: 16                                        ; local index
00009ba: bb                                        ; f64.promote_f32
00009bb: a3                                        ; f64.div
00009bc: 21                                        ; local.set
00009bd: 18                                        ; local index
00009be: 41                                        ; i32.const
00009bf: 02                                        ; i32 literal
00009c0: b2                                        ; f32.convert_i32_s
00009c1: 20                                        ; local.get
00009c2: 07                                        ; local index
00009c3: 94                                        ; f32.mul
00009c4: 20                                        ; local.get
00009c5: 14                                        ; local index
00009c6: 94                                        ; f32.mul
00009c7: 20                                        ; local.get
00009c8: 15                                        ; local index
00009c9: 20                                        ; local.get
00009ca: 17                                        ; local index
00009cb: 94                                        ; f32.mul
00009cc: 93                                        ; f32.sub
00009cd: bb                                        ; f64.promote_f32
00009ce: 20                                        ; local.get
00009cf: 16                                        ; local index
00009d0: bb                                        ; f64.promote_f32
00009d1: a3                                        ; f64.div
00009d2: 21                                        ; local.set
00009d3: 19                                        ; local index
00009d4: 20                                        ; local.get
00009d5: 18                                        ; local index
00009d6: 20                                        ; local.get
00009d7: 14                                        ; local index
00009d8: bb                                        ; f64.promote_f32
00009d9: a1                                        ; f64.sub
00009da: 21                                        ; local.set
00009db: 1a                                        ; local index
00009dc: 20                                        ; local.get
00009dd: 19                                        ; local index
00009de: 20                                        ; local.get
00009df: 15                                        ; local index
00009e0: bb                                        ; f64.promote_f32
00009e1: a1                                        ; f64.sub
00009e2: 21                                        ; local.set
00009e3: 1b                                        ; local index
00009e4: 23                                        ; global.get
00009e5: 0f                                        ; global index
00009e6: 41                                        ; i32.const
00009e7: 08                                        ; i32 literal
00009e8: 6a                                        ; i32.add
00009e9: 20                                        ; local.get
00009ea: 04                                        ; local index
00009eb: 41                                        ; i32.const
00009ec: 04                                        ; i32 literal
00009ed: 6c                                        ; i32.mul
00009ee: 6a                                        ; i32.add
00009ef: 28                                        ; i32.load
00009f0: 02                                        ; alignment
00009f1: 00                                        ; load offset
00009f2: 41                                        ; i32.const
00009f3: 00                                        ; i32 literal
00009f4: 6a                                        ; i32.add
00009f5: 20                                        ; local.get
00009f6: 08                                        ; local index
00009f7: bb                                        ; f64.promote_f32
00009f8: 20                                        ; local.get
00009f9: 11                                        ; local index
00009fa: bb                                        ; f64.promote_f32
00009fb: 20                                        ; local.get
00009fc: 1a                                        ; local index
00009fd: a2                                        ; f64.mul
00009fe: a0                                        ; f64.add
00009ff: b6                                        ; f32.demote_f64
0000a00: 38                                        ; f32.store
0000a01: 02                                        ; alignment
0000a02: 00                                        ; store offset
0000a03: 23                                        ; global.get
0000a04: 0f                                        ; global index
0000a05: 41                                        ; i32.const
0000a06: 08                                        ; i32 literal
0000a07: 6a                                        ; i32.add
0000a08: 20                                        ; local.get
0000a09: 04                                        ; local index
0000a0a: 41                                        ; i32.const
0000a0b: 04                                        ; i32 literal
0000a0c: 6c                                        ; i32.mul
0000a0d: 6a                                        ; i32.add
0000a0e: 28                                        ; i32.load
0000a0f: 02                                        ; alignment
0000a10: 00                                        ; load offset
0000a11: 41                                        ; i32.const
0000a12: 04                                        ; i32 literal
0000a13: 6a                                        ; i32.add
0000a14: 20                                        ; local.get
0000a15: 09                                        ; local index
0000a16: bb                                        ; f64.promote_f32
0000a17: 20                                        ; local.get
0000a18: 12                                        ; local index
0000a19: bb                                        ; f64.promote_f32
0000a1a: 20                                        ; local.get
0000a1b: 1a                                        ; local index
0000a1c: a2                                        ; f64.mul
0000a1d: a0                                        ; f64.add
0000a1e: b6                                        ; f32.demote_f64
0000a1f: 38                                        ; f32.store
0000a20: 02                                        ; alignment
0000a21: 00                                        ; store offset
0000a22: 23                                        ; global.get
0000a23: 0f                                        ; global index
0000a24: 41                                        ; i32.const
0000a25: 08                                        ; i32 literal
0000a26: 6a                                        ; i32.add
0000a27: 20                                        ; local.get
0000a28: 0b                                        ; local index
0000a29: 41                                        ; i32.const
0000a2a: 04                                        ; i32 literal
0000a2b: 6c                                        ; i32.mul
0000a2c: 6a                                        ; i32.add
0000a2d: 28                                        ; i32.load
0000a2e: 02                                        ; alignment
0000a2f: 00                                        ; load offset
0000a30: 41                                        ; i32.const
0000a31: 00                                        ; i32 literal
0000a32: 6a                                        ; i32.add
0000a33: 20                                        ; local.get
0000a34: 0f                                        ; local index
0000a35: bb                                        ; f64.promote_f32
0000a36: 20                                        ; local.get
0000a37: 11                                        ; local index
0000a38: bb                                        ; f64.promote_f32
0000a39: 20                                        ; local.get
0000a3a: 1b                                        ; local index
0000a3b: a2                                        ; f64.mul
0000a3c: a0                                        ; f64.add
0000a3d: b6                                        ; f32.demote_f64
0000a3e: 38                                        ; f32.store
0000a3f: 02                                        ; alignment
0000a40: 00                                        ; store offset
0000a41: 23                                        ; global.get
0000a42: 0f                                        ; global index
0000a43: 41                                        ; i32.const
0000a44: 08                                        ; i32 literal
0000a45: 6a                                        ; i32.add
0000a46: 20                                        ; local.get
0000a47: 0b                                        ; local index
0000a48: 41                                        ; i32.const
0000a49: 04                                        ; i32 literal
0000a4a: 6c                                        ; i32.mul
0000a4b: 6a                                        ; i32.add
0000a4c: 28                                        ; i32.load
0000a4d: 02                                        ; alignment
0000a4e: 00                                        ; load offset
0000a4f: 41                                        ; i32.const
0000a50: 04                                        ; i32 literal
0000a51: 6a                                        ; i32.add
0000a52: 20                                        ; local.get
0000a53: 10                                        ; local index
0000a54: bb                                        ; f64.promote_f32
0000a55: 20                                        ; local.get
0000a56: 12                                        ; local index
0000a57: bb                                        ; f64.promote_f32
0000a58: 20                                        ; local.get
0000a59: 1b                                        ; local index
0000a5a: a2                                        ; f64.mul
0000a5b: a0                                        ; f64.add
0000a5c: b6                                        ; f32.demote_f64
0000a5d: 38                                        ; f32.store
0000a5e: 02                                        ; alignment
0000a5f: 00                                        ; store offset
0000a60: 20                                        ; local.get
0000a61: 0a                                        ; local index
0000a62: 41                                        ; i32.const
0000a63: 00                                        ; i32 literal
0000a64: 6a                                        ; i32.add
0000a65: 28                                        ; i32.load
0000a66: 02                                        ; alignment
0000a67: 00                                        ; load offset
0000a68: 21                                        ; local.set
0000a69: 0a                                        ; local index
0000a6a: 0b                                        ; end
0000a6b: 05                                        ; else
0000a6c: 20                                        ; local.get
0000a6d: 0a                                        ; local index
0000a6e: 41                                        ; i32.const
0000a6f: 00                                        ; i32 literal
0000a70: 6a                                        ; i32.add
0000a71: 28                                        ; i32.load
0000a72: 02                                        ; alignment
0000a73: 00                                        ; load offset
0000a74: 21                                        ; local.set
0000a75: 0a                                        ; local index
0000a76: 0b                                        ; end
0000a77: 0c                                        ; br
0000a78: 00                                        ; break depth
0000a79: 0b                                        ; end
0000a7a: 0b                                        ; end
0000a7b: 20                                        ; local.get
0000a7c: 03                                        ; local index
0000a7d: 41                                        ; i32.const
0000a7e: 00                                        ; i32 literal
0000a7f: 6a                                        ; i32.add
0000a80: 28                                        ; i32.load
0000a81: 02                                        ; alignment
0000a82: 00                                        ; load offset
0000a83: 21                                        ; local.set
0000a84: 03                                        ; local index
0000a85: 0c                                        ; br
0000a86: 00                                        ; break depth
0000a87: 0b                                        ; end
0000a88: 0b                                        ; end
0000a89: 20                                        ; local.get
0000a8a: 02                                        ; local index
0000a8b: 41                                        ; i32.const
0000a8c: 01                                        ; i32 literal
0000a8d: 6a                                        ; i32.add
0000a8e: 21                                        ; local.set
0000a8f: 02                                        ; local index
0000a90: 0c                                        ; br
0000a91: 00                                        ; break depth
0000a92: 0b                                        ; end
0000a93: 0b                                        ; end
0000a94: 20                                        ; local.get
0000a95: 00                                        ; local index
0000a96: 41                                        ; i32.const
0000a97: 01                                        ; i32 literal
0000a98: 6a                                        ; i32.add
0000a99: 21                                        ; local.set
0000a9a: 00                                        ; local index
0000a9b: 0c                                        ; br
0000a9c: 00                                        ; break depth
0000a9d: 0b                                        ; end
0000a9e: 0b                                        ; end
0000a9f: 0b                                        ; end
; move data: [7c9, aa0) -> [7ca, aa1)
00007c8: d705                                      ; FIXUP func body size
; function body 8
0000aa1: 00                                        ; func body size (guess)
0000aa2: 00                                        ; local decl count
0000aa3: 10                                        ; call
0000aa4: 0d                                        ; function index
0000aa5: 20                                        ; local.get
0000aa6: 00                                        ; local index
0000aa7: 20                                        ; local.get
0000aa8: 01                                        ; local index
0000aa9: 10                                        ; call
0000aaa: 0e                                        ; function index
0000aab: 10                                        ; call
0000aac: 0f                                        ; function index
0000aad: 0b                                        ; end
0000aa1: 0c                                        ; FIXUP func body size
; function body 9
0000aae: 00                                        ; func body size (guess)
0000aaf: 01                                        ; local decl count
0000ab0: 02                                        ; local type count
0000ab1: 7f                                        ; i32
0000ab2: 20                                        ; local.get
0000ab3: 00                                        ; local index
0000ab4: 20                                        ; local.get
0000ab5: 02                                        ; local index
0000ab6: 92                                        ; f32.add
0000ab7: 20                                        ; local.get
0000ab8: 03                                        ; local index
0000ab9: 20                                        ; local.get
0000aba: 05                                        ; local index
0000abb: 93                                        ; f32.sub
0000abc: 5d                                        ; f32.lt
0000abd: 20                                        ; local.get
0000abe: 00                                        ; local index
0000abf: 20                                        ; local.get
0000ac0: 02                                        ; local index
0000ac1: 93                                        ; f32.sub
0000ac2: 20                                        ; local.get
0000ac3: 03                                        ; local index
0000ac4: 20                                        ; local.get
0000ac5: 05                                        ; local index
0000ac6: 92                                        ; f32.add
0000ac7: 5e                                        ; f32.gt
0000ac8: 6a                                        ; i32.add
0000ac9: 20                                        ; local.get
0000aca: 01                                        ; local index
0000acb: 20                                        ; local.get
0000acc: 02                                        ; local index
0000acd: 92                                        ; f32.add
0000ace: 20                                        ; local.get
0000acf: 04                                        ; local index
0000ad0: 20                                        ; local.get
0000ad1: 05                                        ; local index
0000ad2: 93                                        ; f32.sub
0000ad3: 5d                                        ; f32.lt
0000ad4: 6a                                        ; i32.add
0000ad5: 20                                        ; local.get
0000ad6: 01                                        ; local index
0000ad7: 20                                        ; local.get
0000ad8: 02                                        ; local index
0000ad9: 93                                        ; f32.sub
0000ada: 20                                        ; local.get
0000adb: 04                                        ; local index
0000adc: 20                                        ; local.get
0000add: 05                                        ; local index
0000ade: 92                                        ; f32.add
0000adf: 5e                                        ; f32.gt
0000ae0: 6a                                        ; i32.add
0000ae1: 04                                        ; if
0000ae2: 40                                        ; void
0000ae3: 41                                        ; i32.const
0000ae4: 00                                        ; i32 literal
0000ae5: 0f                                        ; return
0000ae6: 0b                                        ; end
0000ae7: 20                                        ; local.get
0000ae8: 03                                        ; local index
0000ae9: 20                                        ; local.get
0000aea: 00                                        ; local index
0000aeb: 93                                        ; f32.sub
0000aec: bb                                        ; f64.promote_f32
0000aed: 41                                        ; i32.const
0000aee: 02                                        ; i32 literal
0000aef: b2                                        ; f32.convert_i32_s
0000af0: bb                                        ; f64.promote_f32
0000af1: 10                                        ; call
0000af2: 00                                        ; function index
0000af3: 20                                        ; local.get
0000af4: 04                                        ; local index
0000af5: 20                                        ; local.get
0000af6: 01                                        ; local index
0000af7: 93                                        ; f32.sub
0000af8: bb                                        ; f64.promote_f32
0000af9: 41                                        ; i32.const
0000afa: 02                                        ; i32 literal
0000afb: b2                                        ; f32.convert_i32_s
0000afc: bb                                        ; f64.promote_f32
0000afd: 10                                        ; call
0000afe: 00                                        ; function index
0000aff: a0                                        ; f64.add
0000b00: 10                                        ; call
0000b01: 01                                        ; function index
0000b02: 20                                        ; local.get
0000b03: 02                                        ; local index
0000b04: 20                                        ; local.get
0000b05: 05                                        ; local index
0000b06: 92                                        ; f32.add
0000b07: bb                                        ; f64.promote_f32
0000b08: 65                                        ; f64.le
0000b09: 0f                                        ; return
0000b0a: 0b                                        ; end
0000aae: 5c                                        ; FIXUP func body size
; function body 10
0000b0b: 00                                        ; func body size (guess)
0000b0c: 00                                        ; local decl count
0000b0d: 41                                        ; i32.const
0000b0e: 8807                                      ; i32 literal
0000b10: 0f                                        ; return
0000b11: 0b                                        ; end
0000b0b: 06                                        ; FIXUP func body size
; function body 11
0000b12: 00                                        ; func body size (guess)
0000b13: 00                                        ; local decl count
0000b14: 41                                        ; i32.const
0000b15: 9807                                      ; i32 literal
0000b17: 0f                                        ; return
0000b18: 0b                                        ; end
0000b12: 06                                        ; FIXUP func body size
; function body 12
0000b19: 00                                        ; func body size (guess)
0000b1a: 00                                        ; local decl count
0000b1b: 41                                        ; i32.const
0000b1c: f007                                      ; i32 literal
0000b1e: 0f                                        ; return
0000b1f: 0b                                        ; end
0000b19: 06                                        ; FIXUP func body size
; function body 13
0000b20: 00                                        ; func body size (guess)
0000b21: 00                                        ; local decl count
0000b22: 41                                        ; i32.const
0000b23: f807                                      ; i32 literal
0000b25: 0f                                        ; return
0000b26: 0b                                        ; end
0000b20: 06                                        ; FIXUP func body size
; function body 14
0000b27: 00                                        ; func body size (guess)
0000b28: 00                                        ; local decl count
0000b29: 41                                        ; i32.const
0000b2a: 8808                                      ; i32 literal
0000b2c: 0f                                        ; return
0000b2d: 0b                                        ; end
0000b27: 06                                        ; FIXUP func body size
; function body 15
0000b2e: 00                                        ; func body size (guess)
0000b2f: 00                                        ; local decl count
0000b30: 41                                        ; i32.const
0000b31: d008                                      ; i32 literal
0000b33: 0f                                        ; return
0000b34: 0b                                        ; end
0000b2e: 06                                        ; FIXUP func body size
; function body 16
0000b35: 00                                        ; func body size (guess)
0000b36: 00                                        ; local decl count
0000b37: 41                                        ; i32.const
0000b38: e008                                      ; i32 literal
0000b3a: 0f                                        ; return
0000b3b: 0b                                        ; end
0000b35: 06                                        ; FIXUP func body size
; function body 17
0000b3c: 00                                        ; func body size (guess)
0000b3d: 00                                        ; local decl count
0000b3e: 41                                        ; i32.const
0000b3f: 8809                                      ; i32 literal
0000b41: 0f                                        ; return
0000b42: 0b                                        ; end
0000b3c: 06                                        ; FIXUP func body size
; function body 18
0000b43: 00                                        ; func body size (guess)
0000b44: 00                                        ; local decl count
0000b45: 41                                        ; i32.const
0000b46: 9009                                      ; i32 literal
0000b48: 0f                                        ; return
0000b49: 0b                                        ; end
0000b43: 06                                        ; FIXUP func body size
; function body 19
0000b4a: 00                                        ; func body size (guess)
0000b4b: 00                                        ; local decl count
0000b4c: 10                                        ; call
0000b4d: 1c                                        ; function index
0000b4e: 10                                        ; call
0000b4f: 1d                                        ; function index
0000b50: 10                                        ; call
0000b51: 1e                                        ; function index
0000b52: 10                                        ; call
0000b53: 1f                                        ; function index
0000b54: 0b                                        ; end
0000b4a: 0a                                        ; FIXUP func body size
; function body 20
0000b55: 00                                        ; func body size (guess)
0000b56: 01                                        ; local decl count
0000b57: 04                                        ; local type count
0000b58: 7f                                        ; i32
0000b59: 41                                        ; i32.const
0000b5a: 08                                        ; i32 literal
0000b5b: 23                                        ; global.get
0000b5c: 0d                                        ; global index
0000b5d: 41                                        ; i32.const
0000b5e: 01                                        ; i32 literal
0000b5f: 6b                                        ; i32.sub
0000b60: 41                                        ; i32.const
0000b61: 0c                                        ; i32 literal
0000b62: 6c                                        ; i32.mul
0000b63: 6a                                        ; i32.add
0000b64: 41                                        ; i32.const
0000b65: 07                                        ; i32 literal
0000b66: 10                                        ; call
0000b67: 08                                        ; function index
0000b68: 21                                        ; local.set
0000b69: 00                                        ; local index
0000b6a: 20                                        ; local.get
0000b6b: 00                                        ; local index
0000b6c: 41                                        ; i32.const
0000b6d: d804                                      ; i32 literal
0000b6f: 36                                        ; i32.store
0000b70: 02                                        ; alignment
0000b71: 00                                        ; store offset
0000b72: 20                                        ; local.get
0000b73: 00                                        ; local index
0000b74: 41                                        ; i32.const
0000b75: 04                                        ; i32 literal
0000b76: 6a                                        ; i32.add
0000b77: 23                                        ; global.get
0000b78: 0d                                        ; global index
0000b79: 41                                        ; i32.const
0000b7a: 01                                        ; i32 literal
0000b7b: 6b                                        ; i32.sub
0000b7c: 36                                        ; i32.store
0000b7d: 02                                        ; alignment
0000b7e: 00                                        ; store offset
0000b7f: 20                                        ; local.get
0000b80: 00                                        ; local index
0000b81: 24                                        ; global.set
0000b82: 0e                                        ; global index
0000b83: 41                                        ; i32.const
0000b84: 08                                        ; i32 literal
0000b85: 23                                        ; global.get
0000b86: 0d                                        ; global index
0000b87: 41                                        ; i32.const
0000b88: 01                                        ; i32 literal
0000b89: 6b                                        ; i32.sub
0000b8a: 41                                        ; i32.const
0000b8b: 04                                        ; i32 literal
0000b8c: 6c                                        ; i32.mul
0000b8d: 6a                                        ; i32.add
0000b8e: 41                                        ; i32.const
0000b8f: 07                                        ; i32 literal
0000b90: 10                                        ; call
0000b91: 08                                        ; function index
0000b92: 21                                        ; local.set
0000b93: 01                                        ; local index
0000b94: 20                                        ; local.get
0000b95: 01                                        ; local index
0000b96: 41                                        ; i32.const
0000b97: 0d                                        ; i32 literal
0000b98: 36                                        ; i32.store
0000b99: 02                                        ; alignment
0000b9a: 00                                        ; store offset
0000b9b: 20                                        ; local.get
0000b9c: 01                                        ; local index
0000b9d: 41                                        ; i32.const
0000b9e: 04                                        ; i32 literal
0000b9f: 6a                                        ; i32.add
0000ba0: 23                                        ; global.get
0000ba1: 0d                                        ; global index
0000ba2: 41                                        ; i32.const
0000ba3: 01                                        ; i32 literal
0000ba4: 6b                                        ; i32.sub
0000ba5: 36                                        ; i32.store
0000ba6: 02                                        ; alignment
0000ba7: 00                                        ; store offset
0000ba8: 20                                        ; local.get
0000ba9: 01                                        ; local index
0000baa: 24                                        ; global.set
0000bab: 0f                                        ; global index
0000bac: 41                                        ; i32.const
0000bad: 08                                        ; i32 literal
0000bae: 23                                        ; global.get
0000baf: 0d                                        ; global index
0000bb0: 41                                        ; i32.const
0000bb1: 04                                        ; i32 literal
0000bb2: 6c                                        ; i32.mul
0000bb3: 41                                        ; i32.const
0000bb4: 01                                        ; i32 literal
0000bb5: 6b                                        ; i32.sub
0000bb6: 41                                        ; i32.const
0000bb7: 04                                        ; i32 literal
0000bb8: 6c                                        ; i32.mul
0000bb9: 6a                                        ; i32.add
0000bba: 41                                        ; i32.const
0000bbb: 07                                        ; i32 literal
0000bbc: 10                                        ; call
0000bbd: 08                                        ; function index
0000bbe: 21                                        ; local.set
0000bbf: 02                                        ; local index
0000bc0: 20                                        ; local.get
0000bc1: 02                                        ; local index
0000bc2: 41                                        ; i32.const
0000bc3: 9002                                      ; i32 literal
0000bc5: 36                                        ; i32.store
0000bc6: 02                                        ; alignment
0000bc7: 00                                        ; store offset
0000bc8: 20                                        ; local.get
0000bc9: 02                                        ; local index
0000bca: 41                                        ; i32.const
0000bcb: 04                                        ; i32 literal
0000bcc: 6a                                        ; i32.add
0000bcd: 23                                        ; global.get
0000bce: 0d                                        ; global index
0000bcf: 41                                        ; i32.const
0000bd0: 04                                        ; i32 literal
0000bd1: 6c                                        ; i32.mul
0000bd2: 41                                        ; i32.const
0000bd3: 01                                        ; i32 literal
0000bd4: 6b                                        ; i32.sub
0000bd5: 36                                        ; i32.store
0000bd6: 02                                        ; alignment
0000bd7: 00                                        ; store offset
0000bd8: 20                                        ; local.get
0000bd9: 02                                        ; local index
0000bda: 24                                        ; global.set
0000bdb: 10                                        ; global index
0000bdc: 41                                        ; i32.const
0000bdd: 08                                        ; i32 literal
0000bde: 23                                        ; global.get
0000bdf: 0c                                        ; global index
0000be0: 41                                        ; i32.const
0000be1: 01                                        ; i32 literal
0000be2: 6b                                        ; i32.sub
0000be3: 41                                        ; i32.const
0000be4: 04                                        ; i32 literal
0000be5: 6c                                        ; i32.mul
0000be6: 6a                                        ; i32.add
0000be7: 41                                        ; i32.const
0000be8: 07                                        ; i32 literal
0000be9: 10                                        ; call
0000bea: 08                                        ; function index
0000beb: 21                                        ; local.set
0000bec: 03                                        ; local index
0000bed: 20                                        ; local.get
0000bee: 03                                        ; local index
0000bef: 41                                        ; i32.const
0000bf0: 9002                                      ; i32 literal
0000bf2: 36                                        ; i32.store
0000bf3: 02                                        ; alignment
0000bf4: 00                                        ; store offset
0000bf5: 20                                        ; local.get
0000bf6: 03                                        ; local index
0000bf7: 41                                        ; i32.const
0000bf8: 04                                        ; i32 literal
0000bf9: 6a                                        ; i32.add
0000bfa: 23                                        ; global.get
0000bfb: 0c                                        ; global index
0000bfc: 41                                        ; i32.const
0000bfd: 01                                        ; i32 literal
0000bfe: 6b                                        ; i32.sub
0000bff: 36                                        ; i32.store
0000c00: 02                                        ; alignment
0000c01: 00                                        ; store offset
0000c02: 20                                        ; local.get
0000c03: 03                                        ; local index
0000c04: 24                                        ; global.set
0000c05: 11                                        ; global index
0000c06: 0b                                        ; end
; move data: [b56, c07) -> [b57, c08)
0000b55: b101                                      ; FIXUP func body size
; function body 21
0000c08: 00                                        ; func body size (guess)
0000c09: 00                                        ; local decl count
0000c0a: 0b                                        ; end
0000c08: 02                                        ; FIXUP func body size
; function body 22
0000c0b: 00                                        ; func body size (guess)
0000c0c: 01                                        ; local decl count
0000c0d: 02                                        ; local type count
0000c0e: 7f                                        ; i32
0000c0f: 41                                        ; i32.const
0000c10: 00                                        ; i32 literal
0000c11: 21                                        ; local.set
0000c12: 00                                        ; local index
0000c13: 02                                        ; block
0000c14: 40                                        ; void
0000c15: 03                                        ; loop
0000c16: 40                                        ; void
0000c17: 20                                        ; local.get
0000c18: 00                                        ; local index
0000c19: 23                                        ; global.get
0000c1a: 11                                        ; global index
0000c1b: 41                                        ; i32.const
0000c1c: 04                                        ; i32 literal
0000c1d: 6a                                        ; i32.add
0000c1e: 28                                        ; i32.load
0000c1f: 02                                        ; alignment
0000c20: 00                                        ; load offset
0000c21: 41                                        ; i32.const
0000c22: 01                                        ; i32 literal
0000c23: 6b                                        ; i32.sub
0000c24: 4a                                        ; i32.gt_s
0000c25: 0d                                        ; br_if
0000c26: 01                                        ; break depth
0000c27: 23                                        ; global.get
0000c28: 11                                        ; global index
0000c29: 41                                        ; i32.const
0000c2a: 08                                        ; i32 literal
0000c2b: 6a                                        ; i32.add
0000c2c: 20                                        ; local.get
0000c2d: 00                                        ; local index
0000c2e: 41                                        ; i32.const
0000c2f: 04                                        ; i32 literal
0000c30: 6c                                        ; i32.mul
0000c31: 6a                                        ; i32.add
0000c32: 20                                        ; local.get
0000c33: 01                                        ; local index
0000c34: 36                                        ; i32.store
0000c35: 02                                        ; alignment
0000c36: 00                                        ; store offset
0000c37: 20                                        ; local.get
0000c38: 00                                        ; local index
0000c39: 41                                        ; i32.const
0000c3a: 01                                        ; i32 literal
0000c3b: 6a                                        ; i32.add
0000c3c: 21                                        ; local.set
0000c3d: 00                                        ; local index
0000c3e: 0c                                        ; br
0000c3f: 00                                        ; break depth
0000c40: 0b                                        ; end
0000c41: 0b                                        ; end
0000c42: 0b                                        ; end
0000c0b: 37                                        ; FIXUP func body size
; function body 23
0000c43: 00                                        ; func body size (guess)
0000c44: 00                                        ; local decl count
0000c45: 0b                                        ; end
0000c43: 02                                        ; FIXUP func body size
; move data: [321, c46) -> [322, c47)
0000320: a512                                      ; FIXUP section size
; section "Data" (11)
0000c47: 0b                                        ; section code
0000c48: 00                                        ; section size (guess)
0000c49: 0c                                        ; num data segments
; data segment header 0
0000c4a: 00                                      
0000c4b: 41                                        ; i32.const
0000c4c: 8807                                      ; i32 literal
0000c4e: 0b                                        ; end
0000c4f: 0b                                        ; data segment size
; data segment data 0
0000c50: 5765 6247 4c2d 4465 6d6f 00               ; data segment data
; data segment header 1
0000c5b: 00                                      
0000c5c: 41                                        ; i32.const
0000c5d: 9807                                      ; i32 literal
0000c5f: 0b                                        ; end
0000c60: 51                                        ; data segment size
; data segment data 1
0000c61: 5765 6241 7373 656d 626c 7920 636f 6e76 
0000c71: 6572 7369 6f6e 2064 656d 6f6e 7374 7261 
0000c81: 7469 6e67 2074 6865 2066 6173 7465 722d 
0000c91: 7065 7266 6f72 6d69 6e67 2067 7269 6420 
0000ca1: 6f66 206c 696e 6b65 642d 6c69 7374 732e 
0000cb1: 00                                        ; data segment data
; data segment header 2
0000cb2: 00                                      
0000cb3: 41                                        ; i32.const
0000cb4: f007                                      ; i32 literal
0000cb6: 0b                                        ; end
0000cb7: 04                                        ; data segment size
; data segment data 2
0000cb8: 4d49 5400                                 ; data segment data
; data segment header 3
0000cbc: 00                                      
0000cbd: 41                                        ; i32.const
0000cbe: f807                                      ; i32 literal
0000cc0: 0b                                        ; end
0000cc1: 0b                                        ; data segment size
; data segment data 3
0000cc2: 5765 6247 4c2d 4465 6d6f 00               ; data segment data
; data segment header 4
0000ccd: 00                                      
0000cce: 41                                        ; i32.const
0000ccf: 8808                                      ; i32 literal
0000cd1: 0b                                        ; end
0000cd2: 46                                        ; data segment size
; data segment data 4
0000cd3: 6874 7470 733a 2f2f 6769 7468 7562 2e63 
0000ce3: 6f6d 2f67 7579 6265 6466 6f72 642f 7761 
0000cf3: 736d 2d64 656d 6f2f 626c 6f62 2f6d 6173 
0000d03: 7465 722f 6e61 7469 7665 2f64 656d 6f2d 
0000d13: 6f70 742e 6300                            ; data segment data
; data segment header 5
0000d19: 00                                      
0000d1a: 41                                        ; i32.const
0000d1b: d008                                      ; i32 literal
0000d1d: 0b                                        ; end
0000d1e: 0e                                        ; data segment size
; data segment data 5
0000d1f: 7661 6e69 6c6c 6176 622e 6170 7000        ; data segment data
; data segment header 6
0000d2d: 00                                      
0000d2e: 41                                        ; i32.const
0000d2f: e008                                      ; i32 literal
0000d31: 0b                                        ; end
0000d32: 25                                        ; data segment size
; data segment data 6
0000d33: 3833 6361 3262 3933 2d34 6535 372d 3464 
0000d43: 3434 2d62 3262 632d 3136 3332 3532 6139 
0000d53: 3330 3564 00                              ; data segment data
; data segment header 7
0000d58: 00                                      
0000d59: 41                                        ; i32.const
0000d5a: 8809                                      ; i32 literal
0000d5c: 0b                                        ; end
0000d5d: 08                                        ; data segment size
; data segment data 7
0000d5e: 312e 302e 302e 3000                       ; data segment data
; data segment header 8
0000d66: 00                                      
0000d67: 41                                        ; i32.const
0000d68: 9009                                      ; i32 literal
0000d6a: 0b                                        ; end
0000d6b: 08                                        ; data segment size
; data segment data 8
0000d6c: 312e 302e 302e 3000                       ; data segment data
; data segment header 9
0000d74: 00                                      
0000d75: 41                                        ; i32.const
0000d76: 0d                                        ; i32 literal
0000d77: 0b                                        ; end
0000d78: fd01                                      ; data segment size
; data segment data 9
0000d7a: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000d8a: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0000d9a: 496b 4e70 636d 4e73 5a56 5969 4c43 4a6a 
0000daa: 6247 467a 6331 3970 5a43 4936 4d54 4d73 
0000dba: 496d 5a70 5a57 786b 6379 4936 6579 4a32 
0000dca: 6543 4936 6579 4a6e 5a57 356c 636d 6c6a 
0000dda: 496a 7062 5853 7769 636d 4633 496a 6f69 
0000dea: 5a6a 4d79 4969 7769 6448 6c77 5a53 4936 
0000dfa: 4d33 3073 496e 5a35 496a 7037 496d 646c 
0000e0a: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
0000e1a: 5958 6369 4f69 4a6d 4d7a 4969 4c43 4a30 
0000e2a: 6558 426c 496a 6f7a 6658 3073 496d 6c7a 
0000e3a: 5533 5279 6457 4e30 496a 706d 5957 787a 
0000e4a: 5a53 7769 6257 5630 6147 396b 6379 4936 
0000e5a: 6533 3073 496d 3568 6257 567a 6347 466a 
0000e6a: 5a53 4936 626e 5673 6248 303d 00          ; data segment data
; data segment header 10
0000e77: 00                                      
0000e78: 41                                        ; i32.const
0000e79: 9002                                      ; i32 literal
0000e7b: 0b                                        ; end
0000e7c: a102                                      ; data segment size
; data segment data 10
0000e7e: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000e8e: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0000e9e: 496b 4e6c 6247 7844 6158 4a6a 6247 5569 
0000eae: 4c43 4a6a 6247 467a 6331 3970 5a43 4936 
0000ebe: 4d6a 6379 4c43 4a6d 6157 5673 5a48 4d69 
0000ece: 4f6e 7369 626d 5634 6443 4936 6579 4a6e 
0000ede: 5a57 356c 636d 6c6a 496a 7062 5853 7769 
0000eee: 636d 4633 496a 6f69 577a 4933 4d6c 3144 
0000efe: 5a57 7873 5132 6c79 5932 786c 4969 7769 
0000f0e: 6448 6c77 5a53 4936 4d54 4239 4c43 4a6a 
0000f1e: 6158 4a6a 6247 564a 626d 526c 6543 4936 
0000f2e: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
0000f3e: 5853 7769 636d 4633 496a 6f69 6154 4d79 
0000f4e: 4969 7769 6448 6c77 5a53 4936 4d58 3139 
0000f5e: 4c43 4a70 6331 4e30 636e 566a 6443 4936 
0000f6e: 5a6d 4673 6332 5573 496d 316c 6447 6876 
0000f7e: 5a48 4d69 4f6e 7439 4c43 4a75 5957 316c 
0000f8e: 6333 4268 5932 5569 4f6d 3531 6247 7839 
0000f9e: 00                                        ; data segment data
; data segment header 11
0000f9f: 00                                      
0000fa0: 41                                        ; i32.const
0000fa1: d804                                      ; i32 literal
0000fa3: 0b                                        ; end
0000fa4: ad02                                      ; data segment size
; data segment data 11
0000fa6: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000fb6: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0000fc6: 496b 4e70 636d 4e73 5a53 4973 496d 4e73 
0000fd6: 5958 4e7a 5832 6c6b 496a 6f32 4d44 4173 
0000fe6: 496d 5a70 5a57 786b 6379 4936 6579 4a35 
0000ff6: 496a 7037 496d 646c 626d 5679 6157 4d69 
0001006: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a6d 
0001016: 4d7a 4969 4c43 4a30 6558 426c 496a 6f7a 
0001026: 6653 7769 6543 4936 6579 4a6e 5a57 356c 
0001036: 636d 6c6a 496a 7062 5853 7769 636d 4633 
0001046: 496a 6f69 5a6a 4d79 4969 7769 6448 6c77 
0001056: 5a53 4936 4d33 3073 496e 4969 4f6e 7369 
0001066: 5a32 5675 5a58 4a70 5979 4936 5731 3073 
0001076: 496e 4a68 6479 4936 496d 597a 4d69 4973 
0001086: 496e 5235 6347 5569 4f6a 4e39 6653 7769 
0001096: 6158 4e54 6448 4a31 5933 5169 4f6e 5279 
00010a6: 6457 5573 496d 316c 6447 6876 5a48 4d69 
00010b6: 4f6e 7439 4c43 4a75 5957 316c 6333 4268 
00010c6: 5932 5569 4f6d 3531 6247 7839 00          ; data segment data
; move data: [c49, 10d3) -> [c4a, 10d4)
0000c48: 8a09                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0131 0960 027c 7c01 
0000010: 7c60 017c 017c 6000 017c 6002 7f7f 0060 
0000020: 027f 7f01 7f60 0001 7f60 027d 7d00 6000 
0000030: 0060 067d 7d7d 7d7d 7d01 7f02 7609 044d 
0000040: 6174 6803 706f 7700 0004 4d61 7468 0473 
0000050: 7172 7400 0104 4d61 7468 0365 7870 0001 
0000060: 044d 6174 6803 636f 7300 0104 4d61 7468 
0000070: 0672 616e 646f 6d00 0204 4d61 7468 0463 
0000080: 6569 6c00 0104 4d61 7468 0566 6c6f 6f72 
0000090: 0001 0247 4309 6164 644f 626a 6563 7400 
00000a0: 0303 656e 760a 6279 7465 6368 756e 6b73 
00000b0: 0200 0103 1918 0405 0505 0607 0607 0608 
00000c0: 0505 0505 0505 0505 0507 0707 0707 069c 
00000d0: 0112 7f01 4198 090b 7c01 4469 5714 8b0a 
00000e0: bf05 400b 7c01 4418 2d44 54fb 2109 400b 
00000f0: 7f01 41ff ffff ff07 0b7e 0142 ffff ffff 
0000100: ffff ffff ff00 0b7d 0143 ffff 7f7f 0b7c 
0000110: 0144 ffff ffff ffff ef7f 0b7f 0141 8080 
0000120: 8080 780b 7e01 4280 8080 8080 8080 8080 
0000130: 7f0b 7d01 43ff ff7f ff0b 7c01 44ff ffff 
0000140: ffff ffef ff0b 7f01 41f8 000b 7f01 41c6 
0000150: 000b 7f01 4190 ce00 0b7f 0141 000b 7f01 
0000160: 4100 0b7f 0141 000b 7f01 4100 0b07 ac03 
0000170: 0f14 676c 6f62 616c 2e47 6574 4d65 6d6f 
0000180: 7279 5369 7a65 0009 1841 6c67 6f72 6974 
0000190: 686d 2e67 6574 4369 7263 6c65 436f 756e 
00001a0: 7400 0a1d 416c 676f 7269 7468 6d2e 6765 
00001b0: 7443 6972 636c 6544 6174 614f 6666 7365 
00001c0: 7400 0b0e 416c 676f 7269 7468 6d2e 696e 
00001d0: 6974 000c 1241 6c67 6f72 6974 686d 2e74 
00001e0: 696d 6553 7465 7000 101a 4d61 7468 2e64 
00001f0: 6574 6563 7443 6972 636c 6543 6f6c 6c69 
0000200: 7369 6f6e 0011 1a41 7373 656d 626c 7949 
0000210: 6e66 6f2e 4173 7365 6d62 6c79 5469 746c 
0000220: 6500 1220 4173 7365 6d62 6c79 496e 666f 
0000230: 2e41 7373 656d 626c 7944 6573 6372 6970 
0000240: 7469 6f6e 0013 1c41 7373 656d 626c 7949 
0000250: 6e66 6f2e 4173 7365 6d62 6c79 436f 6d70 
0000260: 616e 7900 141c 4173 7365 6d62 6c79 496e 
0000270: 666f 2e41 7373 656d 626c 7950 726f 6475 
0000280: 6374 0015 1e41 7373 656d 626c 7949 6e66 
0000290: 6f2e 4173 7365 6d62 6c79 436f 7079 7269 
00002a0: 6768 7400 161e 4173 7365 6d62 6c79 496e 
00002b0: 666f 2e41 7373 656d 626c 7954 7261 6465 
00002c0: 6d61 726b 0017 1141 7373 656d 626c 7949 
00002d0: 6e66 6f2e 4775 6964 0018 1c41 7373 656d 
00002e0: 626c 7949 6e66 6f2e 4173 7365 6d62 6c79 
00002f0: 5665 7273 696f 6e00 1920 4173 7365 6d62 
0000300: 6c79 496e 666f 2e41 7373 656d 626c 7946 
0000310: 696c 6556 6572 7369 6f6e 001a 0801 1b0a 
0000320: a512 1818 0101 7f23 0021 0220 0220 006a 
0000330: 2400 2002 2001 1007 2002 0f0b 0500 2300 
0000340: 0f0b 0701 047f 230d 0f0b 0500 230e 0f0b 
0000350: a803 0302 7f03 7d01 7f41 0021 0202 4003 
0000360: 4020 0223 0d41 016b 4a0d 0141 0021 0343 
0000370: 0000 0000 2104 4300 0000 0021 0543 0000 
0000380: 0000 2106 0240 0340 4100 2103 2000 bb10 
0000390: 04a2 b621 0420 01bb 1004 a2b6 2105 1004 
00003a0: 4108 b7a2 1002 44ee 5a42 3ee8 4937 40a3 
00003b0: 1005 b621 0620 0020 0420 0692 9341 00b2 
00003c0: 5d20 0420 0693 4100 b25d 6a20 0120 0520 
00003d0: 0692 9341 00b2 5d6a 2005 2006 9341 00b2 
00003e0: 5d6a 0440 4101 2103 0541 0021 0702 4003 
00003f0: 4020 0720 0241 016b 4a0d 0120 0420 0520 
0000400: 0623 0e41 086a 2007 410c 6c6a 2802 0041 
0000410: 046a 2a02 0023 0e41 086a 2007 410c 6c6a 
0000420: 2802 0041 006a 2a02 0023 0e41 086a 2007 
0000430: 410c 6c6a 2802 0041 086a 2a02 0010 1104 
0000440: 4041 0121 0341 010d 050b 2007 4101 6a21 
0000450: 070c 000b 0b0b 2003 450d 010c 000b 0b23 
0000460: 0e41 086a 2002 410c 6c6a 4104 6a20 0438 
0000470: 0200 230e 4108 6a20 0241 0c6c 6a41 006a 
0000480: 2005 3802 0023 0e41 086a 2002 410c 6c6a 
0000490: 4108 6a20 0638 0200 230f 4108 6a20 0241 
00004a0: 046c 6a28 0200 4100 6a10 0444 0000 0000 
00004b0: 0000 e03f a144 9a99 9999 9999 b93f a2b6 
00004c0: 3802 0023 0f41 086a 2002 4104 6c6a 2802 
00004d0: 0041 046a 1004 4400 0000 0000 00e0 3fa1 
00004e0: 449a 9999 9999 99b9 3fa2 b638 0200 2002 
00004f0: 4101 6a21 020c 000b 0b0b 5e01 037f 4100 
0000500: 2100 0240 0340 2000 230c 4101 6b4a 0d01 
0000510: 2311 4108 6a20 0041 046c 6a28 0200 2101 
0000520: 4100 2102 0240 0340 2002 230b 4101 6b4a 
0000530: 0d01 2001 4108 6a20 0241 046c 6a41 0036 
0000540: 0200 2002 4101 6a21 020c 000b 0b20 0041 
0000550: 016a 2100 0c00 0b0b 0bee 0403 027f 057d 
0000560: 087f 4100 2102 4100 2103 0240 0340 2003 
0000570: 230d 4101 6b4a 0d01 230e 4108 6a20 0341 
0000580: 0c6c 6a28 0200 4104 6a2a 0200 2104 230e 
0000590: 4108 6a20 0341 0c6c 6a28 0200 4100 6a2a 
00005a0: 0200 2105 230e 4108 6a20 0341 0c6c 6a28 
00005b0: 0200 4108 6a2a 0200 2106 230f 4108 6a20 
00005c0: 0341 046c 6a28 0200 4100 6a2a 0200 2107 
00005d0: 230f 4108 6a20 0341 046c 6a28 0200 4104 
00005e0: 6a2a 0200 2108 2008 bb44 2d43 1ceb e236 
00005f0: 1a3f a0b6 2108 2000 2004 2006 9293 4100 
0000600: b25d 2007 4100 b25e 6c20 0420 0693 4100 
0000610: b25d 2007 4100 b25d 6c6a 0440 4300 0000 
0000620: 0020 0793 2107 0b20 0120 0520 0692 9341 
0000630: 00b2 5d20 0841 00b2 5e6c 2005 2006 9341 
0000640: 00b2 5d20 0841 00b2 5d6c 6a04 4043 0000 
0000650: 0000 2008 9321 080b 230e 4108 6a20 0341 
0000660: 0c6c 6a41 046a 2004 2007 9238 0200 230e 
0000670: 4108 6a20 0341 0c6c 6a41 006a 2005 2008 
0000680: 9238 0200 230f 4108 6a20 0341 046c 6a28 
0000690: 0200 4100 6a20 0738 0200 230f 4108 6a20 
00006a0: 0341 046c 6a28 0200 4104 6a20 0838 0200 
00006b0: 2004 2006 93bb 2000 bba3 230c b7a2 1006 
00006c0: aa21 0920 0420 0692 bb20 00bb a323 0cb7 
00006d0: a210 06aa 210a 2005 2006 93bb 2001 bba3 
00006e0: 230b b7a2 1006 aa21 0b20 0520 0692 bb20 
00006f0: 01bb a323 0bb7 a210 06aa 210c 2009 4100 
0000700: 4804 4041 0021 090b 200a 230c 4e04 4023 
0000710: 0c41 016b 210a 0b20 0b41 0048 0440 4100 
0000720: 210b 0b20 0c23 0b4e 0440 230b 4101 6b21 
0000730: 0c0b 2009 210d 0240 0340 200d 200a 4a0d 
0000740: 0123 1141 086a 200d 4104 6c6a 2802 0021 
0000750: 0e20 0b21 0f02 4003 4020 0f20 0c4a 0d01 
0000760: 2310 4108 6a20 0241 046c 6a28 0200 2110 
0000770: 2002 4101 6a21 0220 1041 046a 2003 3602 
0000780: 0020 1041 006a 200e 4108 6a20 0f41 046c 
0000790: 6a28 0200 3602 0020 0e41 086a 200f 4104 
00007a0: 6c6a 2010 3602 0020 0f41 016a 210f 0c00 
00007b0: 0b0b 200d 4101 6a21 0d0c 000b 0b20 0341 
00007c0: 016a 2103 0c00 0b0b 0bd7 0507 057f 057d 
00007d0: 027f 077d 017c 047d 047c 4100 2100 0240 
00007e0: 0340 2000 230c 4101 6b4a 0d01 2311 4108 
00007f0: 6a20 0041 046c 6a28 0200 2101 4100 2102 
0000800: 0240 0340 2002 230b 4101 6b4a 0d01 2001 
0000810: 4108 6a20 0241 046c 6a28 0200 2103 0240 
0000820: 0340 2003 4100 4645 450d 0120 0341 046a 
0000830: 2802 0021 0423 0e41 086a 2004 410c 6c6a 
0000840: 2802 0041 046a 2a02 0021 0523 0e41 086a 
0000850: 2004 410c 6c6a 2802 0041 006a 2a02 0021 
0000860: 0623 0e41 086a 2004 410c 6c6a 2802 0041 
0000870: 086a 2a02 0021 0723 0f41 086a 2004 4104 
0000880: 6c6a 2802 0041 006a 2a02 0021 0823 0f41 
0000890: 086a 2004 4104 6c6a 2802 0041 046a 2a02 
00008a0: 0021 0920 0321 0a20 0a41 006a 2802 0021 
00008b0: 0a02 4003 4020 0a41 0046 4545 0d01 200a 
00008c0: 4104 6a28 0200 210b 230e 4108 6a20 0b41 
00008d0: 0c6c 6a28 0200 4104 6a2a 0200 210c 230e 
00008e0: 4108 6a20 0b41 0c6c 6a28 0200 4100 6a2a 
00008f0: 0200 210d 230e 4108 6a20 0b41 0c6c 6a28 
0000900: 0200 4108 6a2a 0200 210e 2005 2006 2007 
0000910: 200c 200d 200e 1011 0440 230f 4108 6a20 
0000920: 0b41 046c 6a28 0200 4100 6a2a 0200 210f 
0000930: 230f 4108 6a20 0b41 046c 6a28 0200 4104 
0000940: 6a2a 0200 2110 200c 2005 9321 1120 0d20 
0000950: 0693 2112 2011 2011 9420 1220 1294 92bb 
0000960: 1001 2113 2011 bb20 13a3 b621 1120 12bb 
0000970: 2013 a3b6 2112 2011 2008 9420 1220 0994 
0000980: 9221 1420 1120 0f94 2012 2010 9492 2115 
0000990: 2014 2015 9341 00b2 5f45 0440 2007 200e 
00009a0: 9221 1620 0720 0e93 2117 2014 2017 9441 
00009b0: 02b2 200e 9420 1594 92bb 2016 bba3 2118 
00009c0: 4102 b220 0794 2014 9420 1520 1794 93bb 
00009d0: 2016 bba3 2119 2018 2014 bba1 211a 2019 
00009e0: 2015 bba1 211b 230f 4108 6a20 0441 046c 
00009f0: 6a28 0200 4100 6a20 08bb 2011 bb20 1aa2 
0000a00: a0b6 3802 0023 0f41 086a 2004 4104 6c6a 
0000a10: 2802 0041 046a 2009 bb20 12bb 201a a2a0 
0000a20: b638 0200 230f 4108 6a20 0b41 046c 6a28 
0000a30: 0200 4100 6a20 0fbb 2011 bb20 1ba2 a0b6 
0000a40: 3802 0023 0f41 086a 200b 4104 6c6a 2802 
0000a50: 0041 046a 2010 bb20 12bb 201b a2a0 b638 
0000a60: 0200 200a 4100 6a28 0200 210a 0b05 200a 
0000a70: 4100 6a28 0200 210a 0b0c 000b 0b20 0341 
0000a80: 006a 2802 0021 030c 000b 0b20 0241 016a 
0000a90: 2102 0c00 0b0b 2000 4101 6a21 000c 000b 
0000aa0: 0b0b 0c00 100d 2000 2001 100e 100f 0b5c 
0000ab0: 0102 7f20 0020 0292 2003 2005 935d 2000 
0000ac0: 2002 9320 0320 0592 5e6a 2001 2002 9220 
0000ad0: 0420 0593 5d6a 2001 2002 9320 0420 0592 
0000ae0: 5e6a 0440 4100 0f0b 2003 2000 93bb 4102 
0000af0: b2bb 1000 2004 2001 93bb 4102 b2bb 1000 
0000b00: a010 0120 0220 0592 bb65 0f0b 0600 4188 
0000b10: 070f 0b06 0041 9807 0f0b 0600 41f0 070f 
0000b20: 0b06 0041 f807 0f0b 0600 4188 080f 0b06 
0000b30: 0041 d008 0f0b 0600 41e0 080f 0b06 0041 
0000b40: 8809 0f0b 0600 4190 090f 0b0a 0010 1c10 
0000b50: 1d10 1e10 1f0b b101 0104 7f41 0823 0d41 
0000b60: 016b 410c 6c6a 4107 1008 2100 2000 41d8 
0000b70: 0436 0200 2000 4104 6a23 0d41 016b 3602 
0000b80: 0020 0024 0e41 0823 0d41 016b 4104 6c6a 
0000b90: 4107 1008 2101 2001 410d 3602 0020 0141 
0000ba0: 046a 230d 4101 6b36 0200 2001 240f 4108 
0000bb0: 230d 4104 6c41 016b 4104 6c6a 4107 1008 
0000bc0: 2102 2002 4190 0236 0200 2002 4104 6a23 
0000bd0: 0d41 046c 4101 6b36 0200 2002 2410 4108 
0000be0: 230c 4101 6b41 046c 6a41 0710 0821 0320 
0000bf0: 0341 9002 3602 0020 0341 046a 230c 4101 
0000c00: 6b36 0200 2003 2411 0b02 000b 3701 027f 
0000c10: 4100 2100 0240 0340 2000 2311 4104 6a28 
0000c20: 0200 4101 6b4a 0d01 2311 4108 6a20 0041 
0000c30: 046c 6a20 0136 0200 2000 4101 6a21 000c 
0000c40: 000b 0b0b 0200 0b0b 8a09 0c00 4188 070b 
0000c50: 0b57 6562 474c 2d44 656d 6f00 0041 9807 
0000c60: 0b51 5765 6241 7373 656d 626c 7920 636f 
0000c70: 6e76 6572 7369 6f6e 2064 656d 6f6e 7374 
0000c80: 7261 7469 6e67 2074 6865 2066 6173 7465 
0000c90: 722d 7065 7266 6f72 6d69 6e67 2067 7269 
0000ca0: 6420 6f66 206c 696e 6b65 642d 6c69 7374 
0000cb0: 732e 0000 41f0 070b 044d 4954 0000 41f8 
0000cc0: 070b 0b57 6562 474c 2d44 656d 6f00 0041 
0000cd0: 8808 0b46 6874 7470 733a 2f2f 6769 7468 
0000ce0: 7562 2e63 6f6d 2f67 7579 6265 6466 6f72 
0000cf0: 642f 7761 736d 2d64 656d 6f2f 626c 6f62 
0000d00: 2f6d 6173 7465 722f 6e61 7469 7665 2f64 
0000d10: 656d 6f2d 6f70 742e 6300 0041 d008 0b0e 
0000d20: 7661 6e69 6c6c 6176 622e 6170 7000 0041 
0000d30: e008 0b25 3833 6361 3262 3933 2d34 6535 
0000d40: 372d 3464 3434 2d62 3262 632d 3136 3332 
0000d50: 3532 6139 3330 3564 0000 4188 090b 0831 
0000d60: 2e30 2e30 2e30 0000 4190 090b 0831 2e30 
0000d70: 2e30 2e30 0000 410d 0bfd 0165 794a 6a62 
0000d80: 3231 745a 5735 3049 6a70 7564 5778 734c 
0000d90: 434a 6a62 4746 7a63 7949 3649 6b4e 7063 
0000da0: 6d4e 735a 5659 694c 434a 6a62 4746 7a63 
0000db0: 3139 705a 4349 364d 544d 7349 6d5a 705a 
0000dc0: 5778 6b63 7949 3665 794a 3265 4349 3665 
0000dd0: 794a 6e5a 5735 6c63 6d6c 6a49 6a70 6258 
0000de0: 5377 6963 6d46 3349 6a6f 695a 6a4d 7949 
0000df0: 6977 6964 486c 775a 5349 364d 3330 7349 
0000e00: 6e5a 3549 6a70 3749 6d64 6c62 6d56 7961 
0000e10: 574d 694f 6c74 644c 434a 7959 5863 694f 
0000e20: 694a 6d4d 7a49 694c 434a 3065 5842 6c49 
0000e30: 6a6f 7a66 5830 7349 6d6c 7a55 3352 7964 
0000e40: 574e 3049 6a70 6d59 5778 7a5a 5377 6962 
0000e50: 5756 3061 4739 6b63 7949 3665 3330 7349 
0000e60: 6d35 6862 5756 7a63 4746 6a5a 5349 3662 
0000e70: 6e56 7362 4830 3d00 0041 9002 0ba1 0265 
0000e80: 794a 6a62 3231 745a 5735 3049 6a70 7564 
0000e90: 5778 734c 434a 6a62 4746 7a63 7949 3649 
0000ea0: 6b4e 6c62 4778 4461 584a 6a62 4755 694c 
0000eb0: 434a 6a62 4746 7a63 3139 705a 4349 364d 
0000ec0: 6a63 794c 434a 6d61 5756 735a 484d 694f 
0000ed0: 6e73 6962 6d56 3464 4349 3665 794a 6e5a 
0000ee0: 5735 6c63 6d6c 6a49 6a70 6258 5377 6963 
0000ef0: 6d46 3349 6a6f 6957 7a49 334d 6c31 445a 
0000f00: 5778 7351 326c 7959 3278 6c49 6977 6964 
0000f10: 486c 775a 5349 364d 5442 394c 434a 6a61 
0000f20: 584a 6a62 4756 4a62 6d52 6c65 4349 3665 
0000f30: 794a 6e5a 5735 6c63 6d6c 6a49 6a70 6258 
0000f40: 5377 6963 6d46 3349 6a6f 6961 544d 7949 
0000f50: 6977 6964 486c 775a 5349 364d 5831 394c 
0000f60: 434a 7063 314e 3063 6e56 6a64 4349 365a 
0000f70: 6d46 7363 3255 7349 6d31 6c64 4768 765a 
0000f80: 484d 694f 6e74 394c 434a 7559 5731 6c63 
0000f90: 3342 6859 3255 694f 6d35 3162 4778 3900 
0000fa0: 0041 d804 0bad 0265 794a 6a62 3231 745a 
0000fb0: 5735 3049 6a70 7564 5778 734c 434a 6a62 
0000fc0: 4746 7a63 7949 3649 6b4e 7063 6d4e 735a 
0000fd0: 5349 7349 6d4e 7359 584e 7a58 326c 6b49 
0000fe0: 6a6f 324d 4441 7349 6d5a 705a 5778 6b63 
0000ff0: 7949 3665 794a 3549 6a70 3749 6d64 6c62 
0001000: 6d56 7961 574d 694f 6c74 644c 434a 7959 
0001010: 5863 694f 694a 6d4d 7a49 694c 434a 3065 
0001020: 5842 6c49 6a6f 7a66 5377 6965 4349 3665 
0001030: 794a 6e5a 5735 6c63 6d6c 6a49 6a70 6258 
0001040: 5377 6963 6d46 3349 6a6f 695a 6a4d 7949 
0001050: 6977 6964 486c 775a 5349 364d 3330 7349 
0001060: 6e49 694f 6e73 695a 3256 755a 584a 7059 
0001070: 7949 3657 3130 7349 6e4a 6864 7949 3649 
0001080: 6d59 7a4d 6949 7349 6e52 3563 4755 694f 
0001090: 6a4e 3966 5377 6961 584e 5464 484a 3159 
00010a0: 3351 694f 6e52 7964 5755 7349 6d31 6c64 
00010b0: 4768 765a 484d 694f 6e74 394c 434a 7559 
00010c0: 5731 6c63 3342 6859 3255 694f 6d35 3162 
00010d0: 4778 3900                               
