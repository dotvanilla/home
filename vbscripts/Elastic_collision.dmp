0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 0c                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7c                                        ; f64
000000e: 7c                                        ; f64
000000f: 01                                        ; num results
0000010: 7c                                        ; f64
; type 1
0000011: 60                                        ; func
0000012: 01                                        ; num params
0000013: 7c                                        ; f64
0000014: 01                                        ; num results
0000015: 7c                                        ; f64
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 00                                        ; num results
; type 4
000001f: 60                                        ; func
0000020: 01                                        ; num params
0000021: 7f                                        ; i32
0000022: 00                                        ; num results
; type 5
0000023: 60                                        ; func
0000024: 03                                        ; num params
0000025: 7f                                        ; i32
0000026: 7f                                        ; i32
0000027: 7f                                        ; i32
0000028: 01                                        ; num results
0000029: 7f                                        ; i32
; type 6
000002a: 60                                        ; func
000002b: 02                                        ; num params
000002c: 7f                                        ; i32
000002d: 7f                                        ; i32
000002e: 01                                        ; num results
000002f: 7f                                        ; i32
; type 7
0000030: 60                                        ; func
0000031: 01                                        ; num params
0000032: 7f                                        ; i32
0000033: 01                                        ; num results
0000034: 7f                                        ; i32
; type 8
0000035: 60                                        ; func
0000036: 00                                        ; num params
0000037: 01                                        ; num results
0000038: 7f                                        ; i32
; type 9
0000039: 60                                        ; func
000003a: 02                                        ; num params
000003b: 7d                                        ; f32
000003c: 7d                                        ; f32
000003d: 00                                        ; num results
; type 10
000003e: 60                                        ; func
000003f: 00                                        ; num params
0000040: 00                                        ; num results
; type 11
0000041: 60                                        ; func
0000042: 06                                        ; num params
0000043: 7d                                        ; f32
0000044: 7d                                        ; f32
0000045: 7d                                        ; f32
0000046: 7d                                        ; f32
0000047: 7d                                        ; f32
0000048: 7d                                        ; f32
0000049: 01                                        ; num results
000004a: 7f                                        ; i32
0000009: 41                                        ; FIXUP section size
; section "Import" (2)
000004b: 02                                        ; section code
000004c: 00                                        ; section size (guess)
000004d: 0f                                        ; num imports
; import header 0
000004e: 04                                        ; string length
000004f: 4d61 7468                                Math  ; import module name
0000053: 03                                        ; string length
0000054: 706f 77                                  pow  ; import field name
0000057: 00                                        ; import kind
0000058: 00                                        ; import signature index
; import header 1
0000059: 04                                        ; string length
000005a: 4d61 7468                                Math  ; import module name
000005e: 04                                        ; string length
000005f: 7371 7274                                sqrt  ; import field name
0000063: 00                                        ; import kind
0000064: 01                                        ; import signature index
; import header 2
0000065: 04                                        ; string length
0000066: 4d61 7468                                Math  ; import module name
000006a: 03                                        ; string length
000006b: 6578 70                                  exp  ; import field name
000006e: 00                                        ; import kind
000006f: 01                                        ; import signature index
; import header 3
0000070: 04                                        ; string length
0000071: 4d61 7468                                Math  ; import module name
0000075: 03                                        ; string length
0000076: 636f 73                                  cos  ; import field name
0000079: 00                                        ; import kind
000007a: 01                                        ; import signature index
; import header 4
000007b: 04                                        ; string length
000007c: 4d61 7468                                Math  ; import module name
0000080: 06                                        ; string length
0000081: 7261 6e64 6f6d                           random  ; import field name
0000087: 00                                        ; import kind
0000088: 02                                        ; import signature index
; import header 5
0000089: 04                                        ; string length
000008a: 4d61 7468                                Math  ; import module name
000008e: 04                                        ; string length
000008f: 6365 696c                                ceil  ; import field name
0000093: 00                                        ; import kind
0000094: 01                                        ; import signature index
; import header 6
0000095: 04                                        ; string length
0000096: 4d61 7468                                Math  ; import module name
000009a: 05                                        ; string length
000009b: 666c 6f6f 72                             floor  ; import field name
00000a0: 00                                        ; import kind
00000a1: 01                                        ; import signature index
; import header 7
00000a2: 02                                        ; string length
00000a3: 4743                                     GC  ; import module name
00000a5: 09                                        ; string length
00000a6: 6164 644f 626a 6563 74                   addObject  ; import field name
00000af: 00                                        ; import kind
00000b0: 03                                        ; import signature index
; import header 8
00000b1: 07                                        ; string length
00000b2: 636f 6e73 6f6c 65                        console  ; import module name
00000b9: 03                                        ; string length
00000ba: 6c6f 67                                  log  ; import field name
00000bd: 00                                        ; import kind
00000be: 04                                        ; import signature index
; import header 9
00000bf: 06                                        ; string length
00000c0: 7374 7269 6e67                           string  ; import module name
00000c6: 07                                        ; string length
00000c7: 7265 706c 6163 65                        replace  ; import field name
00000ce: 00                                        ; import kind
00000cf: 05                                        ; import signature index
; import header 10
00000d0: 06                                        ; string length
00000d1: 7374 7269 6e67                           string  ; import module name
00000d7: 03                                        ; string length
00000d8: 6164 64                                  add  ; import field name
00000db: 00                                        ; import kind
00000dc: 06                                        ; import signature index
; import header 11
00000dd: 06                                        ; string length
00000de: 7374 7269 6e67                           string  ; import module name
00000e4: 06                                        ; string length
00000e5: 6c65 6e67 7468                           length  ; import field name
00000eb: 00                                        ; import kind
00000ec: 07                                        ; import signature index
; import header 12
00000ed: 06                                        ; string length
00000ee: 7374 7269 6e67                           string  ; import module name
00000f4: 07                                        ; string length
00000f5: 696e 6465 784f 66                        indexOf  ; import field name
00000fc: 00                                        ; import kind
00000fd: 06                                        ; import signature index
; import header 13
00000fe: 06                                        ; string length
00000ff: 7374 7269 6e67                           string  ; import module name
0000105: 08                                        ; string length
0000106: 746f 5374 7269 6e67                      toString  ; import field name
000010e: 00                                        ; import kind
000010f: 07                                        ; import signature index
; import header 14
0000110: 03                                        ; string length
0000111: 656e 76                                  env  ; import module name
0000114: 0a                                        ; string length
0000115: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
000011f: 02                                        ; import kind
0000120: 00                                        ; limits: flags
0000121: 01                                        ; limits: initial
; move data: [4d, 122) -> [4e, 123)
000004c: d501                                      ; FIXUP section size
; section "Function" (3)
0000123: 03                                        ; section code
0000124: 00                                        ; section size (guess)
0000125: 1c                                        ; num functions
0000126: 06                                        ; function 0 signature index
0000127: 08                                        ; function 1 signature index
0000128: 08                                        ; function 2 signature index
0000129: 08                                        ; function 3 signature index
000012a: 08                                        ; function 4 signature index
000012b: 08                                        ; function 5 signature index
000012c: 08                                        ; function 6 signature index
000012d: 09                                        ; function 7 signature index
000012e: 0a                                        ; function 8 signature index
000012f: 09                                        ; function 9 signature index
0000130: 0a                                        ; function 10 signature index
0000131: 09                                        ; function 11 signature index
0000132: 0b                                        ; function 12 signature index
0000133: 08                                        ; function 13 signature index
0000134: 08                                        ; function 14 signature index
0000135: 08                                        ; function 15 signature index
0000136: 08                                        ; function 16 signature index
0000137: 08                                        ; function 17 signature index
0000138: 08                                        ; function 18 signature index
0000139: 08                                        ; function 19 signature index
000013a: 08                                        ; function 20 signature index
000013b: 08                                        ; function 21 signature index
000013c: 0a                                        ; function 22 signature index
000013d: 0a                                        ; function 23 signature index
000013e: 0a                                        ; function 24 signature index
000013f: 0a                                        ; function 25 signature index
0000140: 0a                                        ; function 26 signature index
0000141: 0a                                        ; function 27 signature index
0000124: 1d                                        ; FIXUP section size
; section "Global" (6)
0000142: 06                                        ; section code
0000143: 00                                        ; section size (guess)
0000144: 12                                        ; num globals
0000145: 7f                                        ; i32
0000146: 01                                        ; global mutability
0000147: 41                                        ; i32.const
0000148: a00b                                      ; i32 literal
000014a: 0b                                        ; end
000014b: 7c                                        ; f64
000014c: 01                                        ; global mutability
000014d: 44                                        ; f64.const
000014e: 6957 148b 0abf 0540                       ; f64 literal
0000156: 0b                                        ; end
0000157: 7c                                        ; f64
0000158: 01                                        ; global mutability
0000159: 44                                        ; f64.const
000015a: 182d 4454 fb21 0940                       ; f64 literal
0000162: 0b                                        ; end
0000163: 7f                                        ; i32
0000164: 01                                        ; global mutability
0000165: 41                                        ; i32.const
0000166: ffff ffff 07                              ; i32 literal
000016b: 0b                                        ; end
000016c: 7e                                        ; i64
000016d: 01                                        ; global mutability
000016e: 42                                        ; i64.const
000016f: ffff ffff ffff ffff ff00                  ; i64 literal
0000179: 0b                                        ; end
000017a: 7d                                        ; f32
000017b: 01                                        ; global mutability
000017c: 43                                        ; f32.const
000017d: ffff 7f7f                                 ; f32 literal
0000181: 0b                                        ; end
0000182: 7c                                        ; f64
0000183: 01                                        ; global mutability
0000184: 44                                        ; f64.const
0000185: ffff ffff ffff ef7f                       ; f64 literal
000018d: 0b                                        ; end
000018e: 7f                                        ; i32
000018f: 01                                        ; global mutability
0000190: 41                                        ; i32.const
0000191: 8080 8080 78                              ; i32 literal
0000196: 0b                                        ; end
0000197: 7e                                        ; i64
0000198: 01                                        ; global mutability
0000199: 42                                        ; i64.const
000019a: 8080 8080 8080 8080 807f                  ; i64 literal
00001a4: 0b                                        ; end
00001a5: 7d                                        ; f32
00001a6: 01                                        ; global mutability
00001a7: 43                                        ; f32.const
00001a8: ffff 7fff                                 ; f32 literal
00001ac: 0b                                        ; end
00001ad: 7c                                        ; f64
00001ae: 01                                        ; global mutability
00001af: 44                                        ; f64.const
00001b0: ffff ffff ffff efff                       ; f64 literal
00001b8: 0b                                        ; end
00001b9: 7f                                        ; i32
00001ba: 01                                        ; global mutability
00001bb: 41                                        ; i32.const
00001bc: f800                                      ; i32 literal
00001be: 0b                                        ; end
00001bf: 7f                                        ; i32
00001c0: 01                                        ; global mutability
00001c1: 41                                        ; i32.const
00001c2: c600                                      ; i32 literal
00001c4: 0b                                        ; end
00001c5: 7f                                        ; i32
00001c6: 01                                        ; global mutability
00001c7: 41                                        ; i32.const
00001c8: e400                                      ; i32 literal
00001ca: 0b                                        ; end
00001cb: 7f                                        ; i32
00001cc: 01                                        ; global mutability
00001cd: 41                                        ; i32.const
00001ce: 00                                        ; i32 literal
00001cf: 0b                                        ; end
00001d0: 7f                                        ; i32
00001d1: 01                                        ; global mutability
00001d2: 41                                        ; i32.const
00001d3: 00                                        ; i32 literal
00001d4: 0b                                        ; end
00001d5: 7f                                        ; i32
00001d6: 01                                        ; global mutability
00001d7: 41                                        ; i32.const
00001d8: 00                                        ; i32 literal
00001d9: 0b                                        ; end
00001da: 7f                                        ; i32
00001db: 01                                        ; global mutability
00001dc: 41                                        ; i32.const
00001dd: 00                                        ; i32 literal
00001de: 0b                                        ; end
; move data: [144, 1df) -> [145, 1e0)
0000143: 9b01                                      ; FIXUP section size
; section "Export" (7)
00001e0: 07                                        ; section code
00001e1: 00                                        ; section size (guess)
00001e2: 0f                                        ; num exports
00001e3: 14                                        ; string length
00001e4: 676c 6f62 616c 2e47 6574 4d65 6d6f 7279  global.GetMemory
00001f4: 5369 7a65                                Size  ; export name
00001f8: 00                                        ; export kind
00001f9: 0f                                        ; export func index
00001fa: 18                                        ; string length
00001fb: 416c 676f 7269 7468 6d2e 6765 7443 6972  Algorithm.getCir
000020b: 636c 6543 6f75 6e74                      cleCount  ; export name
0000213: 00                                        ; export kind
0000214: 13                                        ; export func index
0000215: 1d                                        ; string length
0000216: 416c 676f 7269 7468 6d2e 6765 7443 6972  Algorithm.getCir
0000226: 636c 6544 6174 614f 6666 7365 74         cleDataOffset  ; export name
0000233: 00                                        ; export kind
0000234: 14                                        ; export func index
0000235: 0e                                        ; string length
0000236: 416c 676f 7269 7468 6d2e 696e 6974       Algorithm.init  ; export name
0000244: 00                                        ; export kind
0000245: 15                                        ; export func index
0000246: 12                                        ; string length
0000247: 416c 676f 7269 7468 6d2e 7469 6d65 5374  Algorithm.timeSt
0000257: 6570                                     ep  ; export name
0000259: 00                                        ; export kind
000025a: 19                                        ; export func index
000025b: 1a                                        ; string length
000025c: 4d61 7468 2e64 6574 6563 7443 6972 636c  Math.detectCircl
000026c: 6543 6f6c 6c69 7369 6f6e                 eCollision  ; export name
0000276: 00                                        ; export kind
0000277: 1a                                        ; export func index
0000278: 1a                                        ; string length
0000279: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000289: 656d 626c 7954 6974 6c65                 emblyTitle  ; export name
0000293: 00                                        ; export kind
0000294: 1b                                        ; export func index
0000295: 20                                        ; string length
0000296: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002a6: 656d 626c 7944 6573 6372 6970 7469 6f6e  emblyDescription  ; export name
00002b6: 00                                        ; export kind
00002b7: 1c                                        ; export func index
00002b8: 1c                                        ; string length
00002b9: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002c9: 656d 626c 7943 6f6d 7061 6e79            emblyCompany  ; export name
00002d5: 00                                        ; export kind
00002d6: 1d                                        ; export func index
00002d7: 1c                                        ; string length
00002d8: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002e8: 656d 626c 7950 726f 6475 6374            emblyProduct  ; export name
00002f4: 00                                        ; export kind
00002f5: 1e                                        ; export func index
00002f6: 1e                                        ; string length
00002f7: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000307: 656d 626c 7943 6f70 7972 6967 6874       emblyCopyright  ; export name
0000315: 00                                        ; export kind
0000316: 1f                                        ; export func index
0000317: 1e                                        ; string length
0000318: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000328: 656d 626c 7954 7261 6465 6d61 726b       emblyTrademark  ; export name
0000336: 00                                        ; export kind
0000337: 20                                        ; export func index
0000338: 11                                        ; string length
0000339: 4173 7365 6d62 6c79 496e 666f 2e47 7569  AssemblyInfo.Gui
0000349: 64                                       d  ; export name
000034a: 00                                        ; export kind
000034b: 21                                        ; export func index
000034c: 1c                                        ; string length
000034d: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000035d: 656d 626c 7956 6572 7369 6f6e            emblyVersion  ; export name
0000369: 00                                        ; export kind
000036a: 22                                        ; export func index
000036b: 20                                        ; string length
000036c: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000037c: 656d 626c 7946 696c 6556 6572 7369 6f6e  emblyFileVersion  ; export name
000038c: 00                                        ; export kind
000038d: 23                                        ; export func index
; move data: [1e2, 38e) -> [1e3, 38f)
00001e1: ac03                                      ; FIXUP section size
; section "Start" (8)
000038f: 08                                        ; section code
0000390: 00                                        ; section size (guess)
0000391: 24                                        ; start func index
0000390: 01                                        ; FIXUP section size
; section "Code" (10)
0000392: 0a                                        ; section code
0000393: 00                                        ; section size (guess)
0000394: 1c                                        ; num functions
; function body 0
0000395: 00                                        ; func body size (guess)
0000396: 01                                        ; local decl count
0000397: 02                                        ; local type count
0000398: 7f                                        ; i32
0000399: 23                                        ; global.get
000039a: 00                                        ; global index
000039b: 21                                        ; local.set
000039c: 02                                        ; local index
000039d: 20                                        ; local.get
000039e: 02                                        ; local index
000039f: 20                                        ; local.get
00003a0: 00                                        ; local index
00003a1: 6a                                        ; i32.add
00003a2: 24                                        ; global.set
00003a3: 00                                        ; global index
00003a4: 23                                        ; global.get
00003a5: 00                                        ; global index
00003a6: 41                                        ; i32.const
00003a7: 08                                        ; i32 literal
00003a8: 6f                                        ; i32.rem_s
00003a9: 21                                        ; local.set
00003aa: 03                                        ; local index
00003ab: 20                                        ; local.get
00003ac: 03                                        ; local index
00003ad: 04                                        ; if
00003ae: 40                                        ; void
00003af: 41                                        ; i32.const
00003b0: 08                                        ; i32 literal
00003b1: 20                                        ; local.get
00003b2: 03                                        ; local index
00003b3: 6b                                        ; i32.sub
00003b4: 21                                        ; local.set
00003b5: 03                                        ; local index
00003b6: 23                                        ; global.get
00003b7: 00                                        ; global index
00003b8: 20                                        ; local.get
00003b9: 03                                        ; local index
00003ba: 6a                                        ; i32.add
00003bb: 24                                        ; global.set
00003bc: 00                                        ; global index
00003bd: 05                                        ; else
00003be: 23                                        ; global.get
00003bf: 00                                        ; global index
00003c0: 41                                        ; i32.const
00003c1: 08                                        ; i32 literal
00003c2: 6a                                        ; i32.add
00003c3: 24                                        ; global.set
00003c4: 00                                        ; global index
00003c5: 0b                                        ; end
00003c6: 20                                        ; local.get
00003c7: 02                                        ; local index
00003c8: 20                                        ; local.get
00003c9: 01                                        ; local index
00003ca: 10                                        ; call
00003cb: 07                                        ; function index
00003cc: 20                                        ; local.get
00003cd: 02                                        ; local index
00003ce: 0f                                        ; return
00003cf: 0b                                        ; end
0000395: 3a                                        ; FIXUP func body size
; function body 1
00003d0: 00                                        ; func body size (guess)
00003d1: 00                                        ; local decl count
00003d2: 23                                        ; global.get
00003d3: 00                                        ; global index
00003d4: 0f                                        ; return
00003d5: 0b                                        ; end
00003d0: 05                                        ; FIXUP func body size
; function body 2
00003d6: 00                                        ; func body size (guess)
00003d7: 01                                        ; local decl count
00003d8: 05                                        ; local type count
00003d9: 7f                                        ; i32
00003da: 41                                        ; i32.const
00003db: 08                                        ; i32 literal
00003dc: 23                                        ; global.get
00003dd: 0b                                        ; global index
00003de: 41                                        ; i32.const
00003df: 01                                        ; i32 literal
00003e0: 6b                                        ; i32.sub
00003e1: 41                                        ; i32.const
00003e2: 04                                        ; i32 literal
00003e3: 6c                                        ; i32.mul
00003e4: 6a                                        ; i32.add
00003e5: 41                                        ; i32.const
00003e6: 07                                        ; i32 literal
00003e7: 10                                        ; call
00003e8: 0e                                        ; function index
00003e9: 21                                        ; local.set
00003ea: 04                                        ; local index
00003eb: 20                                        ; local.get
00003ec: 04                                        ; local index
00003ed: 41                                        ; i32.const
00003ee: 9002                                      ; i32 literal
00003f0: 36                                        ; i32.store
00003f1: 02                                        ; alignment
00003f2: 00                                        ; store offset
00003f3: 20                                        ; local.get
00003f4: 04                                        ; local index
00003f5: 41                                        ; i32.const
00003f6: 04                                        ; i32 literal
00003f7: 6a                                        ; i32.add
00003f8: 23                                        ; global.get
00003f9: 0b                                        ; global index
00003fa: 41                                        ; i32.const
00003fb: 01                                        ; i32 literal
00003fc: 6b                                        ; i32.sub
00003fd: 36                                        ; i32.store
00003fe: 02                                        ; alignment
00003ff: 00                                        ; store offset
0000400: 20                                        ; local.get
0000401: 04                                        ; local index
0000402: 0f                                        ; return
0000403: 0b                                        ; end
00003d6: 2d                                        ; FIXUP func body size
; function body 3
0000404: 00                                        ; func body size (guess)
0000405: 01                                        ; local decl count
0000406: 01                                        ; local type count
0000407: 7f                                        ; i32
0000408: 41                                        ; i32.const
0000409: 08                                        ; i32 literal
000040a: 41                                        ; i32.const
000040b: 9002                                      ; i32 literal
000040d: 10                                        ; call
000040e: 0e                                        ; function index
000040f: 21                                        ; local.set
0000410: 00                                        ; local index
0000411: 20                                        ; local.get
0000412: 00                                        ; local index
0000413: 41                                        ; i32.const
0000414: 00                                        ; i32 literal
0000415: 6a                                        ; i32.add
0000416: 41                                        ; i32.const
0000417: 00                                        ; i32 literal
0000418: 36                                        ; i32.store
0000419: 02                                        ; alignment
000041a: 00                                        ; store offset
000041b: 20                                        ; local.get
000041c: 00                                        ; local index
000041d: 41                                        ; i32.const
000041e: 04                                        ; i32 literal
000041f: 6a                                        ; i32.add
0000420: 41                                        ; i32.const
0000421: 00                                        ; i32 literal
0000422: 36                                        ; i32.store
0000423: 02                                        ; alignment
0000424: 00                                        ; store offset
0000425: 20                                        ; local.get
0000426: 00                                        ; local index
0000427: 0f                                        ; return
0000428: 0b                                        ; end
0000404: 24                                        ; FIXUP func body size
; function body 4
0000429: 00                                        ; func body size (guess)
000042a: 01                                        ; local decl count
000042b: 01                                        ; local type count
000042c: 7f                                        ; i32
000042d: 41                                        ; i32.const
000042e: 08                                        ; i32 literal
000042f: 41                                        ; i32.const
0000430: 0d                                        ; i32 literal
0000431: 10                                        ; call
0000432: 0e                                        ; function index
0000433: 21                                        ; local.set
0000434: 00                                        ; local index
0000435: 20                                        ; local.get
0000436: 00                                        ; local index
0000437: 41                                        ; i32.const
0000438: 00                                        ; i32 literal
0000439: 6a                                        ; i32.add
000043a: 10                                        ; call
000043b: 04                                        ; function index
000043c: b6                                        ; f32.demote_f64
000043d: 38                                        ; f32.store
000043e: 02                                        ; alignment
000043f: 00                                        ; store offset
0000440: 20                                        ; local.get
0000441: 00                                        ; local index
0000442: 41                                        ; i32.const
0000443: 04                                        ; i32 literal
0000444: 6a                                        ; i32.add
0000445: 10                                        ; call
0000446: 04                                        ; function index
0000447: b6                                        ; f32.demote_f64
0000448: 38                                        ; f32.store
0000449: 02                                        ; alignment
000044a: 00                                        ; store offset
000044b: 20                                        ; local.get
000044c: 00                                        ; local index
000044d: 0f                                        ; return
000044e: 0b                                        ; end
0000429: 25                                        ; FIXUP func body size
; function body 5
000044f: 00                                        ; func body size (guess)
0000450: 00                                        ; local decl count
0000451: 23                                        ; global.get
0000452: 0d                                        ; global index
0000453: 0f                                        ; return
0000454: 0b                                        ; end
000044f: 05                                        ; FIXUP func body size
; function body 6
0000455: 00                                        ; func body size (guess)
0000456: 00                                        ; local decl count
0000457: 23                                        ; global.get
0000458: 0e                                        ; global index
0000459: 0f                                        ; return
000045a: 0b                                        ; end
0000455: 05                                        ; FIXUP func body size
; function body 7
000045b: 00                                        ; func body size (guess)
000045c: 04                                        ; local decl count
000045d: 03                                        ; local type count
000045e: 7d                                        ; f32
000045f: 03                                        ; local type count
0000460: 7f                                        ; i32
0000461: 03                                        ; local type count
0000462: 7d                                        ; f32
0000463: 01                                        ; local type count
0000464: 7f                                        ; i32
0000465: 43                                        ; f32.const
0000466: 0000 0000                                 ; f32 literal
000046a: 21                                        ; local.set
000046b: 02                                        ; local index
000046c: 43                                        ; f32.const
000046d: 0000 0000                                 ; f32 literal
0000471: 21                                        ; local.set
0000472: 03                                        ; local index
0000473: 43                                        ; f32.const
0000474: 0000 0000                                 ; f32 literal
0000478: 21                                        ; local.set
0000479: 04                                        ; local index
000047a: 41                                        ; i32.const
000047b: 00                                        ; i32 literal
000047c: 21                                        ; local.set
000047d: 05                                        ; local index
000047e: 41                                        ; i32.const
000047f: 8807                                      ; i32 literal
0000481: 23                                        ; global.get
0000482: 0e                                        ; global index
0000483: 10                                        ; call
0000484: 0d                                        ; function index
0000485: 10                                        ; call
0000486: 0a                                        ; function index
0000487: 10                                        ; call
0000488: 08                                        ; function index
0000489: 41                                        ; i32.const
000048a: 00                                        ; i32 literal
000048b: 21                                        ; local.set
000048c: 06                                        ; local index
000048d: 02                                        ; block
000048e: 40                                        ; void
000048f: 03                                        ; loop
0000490: 40                                        ; void
0000491: 20                                        ; local.get
0000492: 06                                        ; local index
0000493: 23                                        ; global.get
0000494: 0d                                        ; global index
0000495: 41                                        ; i32.const
0000496: 01                                        ; i32 literal
0000497: 6b                                        ; i32.sub
0000498: 4a                                        ; i32.gt_s
0000499: 0d                                        ; br_if
000049a: 01                                        ; break depth
000049b: 41                                        ; i32.const
000049c: 00                                        ; i32 literal
000049d: 21                                        ; local.set
000049e: 07                                        ; local index
000049f: 43                                        ; f32.const
00004a0: 0000 0000                                 ; f32 literal
00004a4: 21                                        ; local.set
00004a5: 08                                        ; local index
00004a6: 43                                        ; f32.const
00004a7: 0000 0000                                 ; f32 literal
00004ab: 21                                        ; local.set
00004ac: 09                                        ; local index
00004ad: 43                                        ; f32.const
00004ae: 0000 0000                                 ; f32 literal
00004b2: 21                                        ; local.set
00004b3: 0a                                        ; local index
00004b4: 02                                        ; block
00004b5: 40                                        ; void
00004b6: 03                                        ; loop
00004b7: 40                                        ; void
00004b8: 41                                        ; i32.const
00004b9: 00                                        ; i32 literal
00004ba: 21                                        ; local.set
00004bb: 07                                        ; local index
00004bc: 20                                        ; local.get
00004bd: 00                                        ; local index
00004be: bb                                        ; f64.promote_f32
00004bf: 10                                        ; call
00004c0: 04                                        ; function index
00004c1: a2                                        ; f64.mul
00004c2: b6                                        ; f32.demote_f64
00004c3: 21                                        ; local.set
00004c4: 08                                        ; local index
00004c5: 20                                        ; local.get
00004c6: 01                                        ; local index
00004c7: bb                                        ; f64.promote_f32
00004c8: 10                                        ; call
00004c9: 04                                        ; function index
00004ca: a2                                        ; f64.mul
00004cb: b6                                        ; f32.demote_f64
00004cc: 21                                        ; local.set
00004cd: 09                                        ; local index
00004ce: 10                                        ; call
00004cf: 04                                        ; function index
00004d0: 41                                        ; i32.const
00004d1: 08                                        ; i32 literal
00004d2: b7                                        ; f64.convert_i32_s
00004d3: a2                                        ; f64.mul
00004d4: 10                                        ; call
00004d5: 02                                        ; function index
00004d6: 44                                        ; f64.const
00004d7: ee5a 423e e849 3740                       ; f64 literal
00004df: a3                                        ; f64.div
00004e0: 10                                        ; call
00004e1: 05                                        ; function index
00004e2: b6                                        ; f32.demote_f64
00004e3: 21                                        ; local.set
00004e4: 0a                                        ; local index
00004e5: 20                                        ; local.get
00004e6: 00                                        ; local index
00004e7: 20                                        ; local.get
00004e8: 08                                        ; local index
00004e9: 20                                        ; local.get
00004ea: 0a                                        ; local index
00004eb: 92                                        ; f32.add
00004ec: 93                                        ; f32.sub
00004ed: 41                                        ; i32.const
00004ee: 00                                        ; i32 literal
00004ef: b2                                        ; f32.convert_i32_s
00004f0: 5d                                        ; f32.lt
00004f1: 20                                        ; local.get
00004f2: 08                                        ; local index
00004f3: 20                                        ; local.get
00004f4: 0a                                        ; local index
00004f5: 93                                        ; f32.sub
00004f6: 41                                        ; i32.const
00004f7: 00                                        ; i32 literal
00004f8: b2                                        ; f32.convert_i32_s
00004f9: 5d                                        ; f32.lt
00004fa: 6a                                        ; i32.add
00004fb: 20                                        ; local.get
00004fc: 01                                        ; local index
00004fd: 20                                        ; local.get
00004fe: 09                                        ; local index
00004ff: 20                                        ; local.get
0000500: 0a                                        ; local index
0000501: 92                                        ; f32.add
0000502: 93                                        ; f32.sub
0000503: 41                                        ; i32.const
0000504: 00                                        ; i32 literal
0000505: b2                                        ; f32.convert_i32_s
0000506: 5d                                        ; f32.lt
0000507: 6a                                        ; i32.add
0000508: 20                                        ; local.get
0000509: 09                                        ; local index
000050a: 20                                        ; local.get
000050b: 0a                                        ; local index
000050c: 93                                        ; f32.sub
000050d: 41                                        ; i32.const
000050e: 00                                        ; i32 literal
000050f: b2                                        ; f32.convert_i32_s
0000510: 5d                                        ; f32.lt
0000511: 6a                                        ; i32.add
0000512: 04                                        ; if
0000513: 40                                        ; void
0000514: 41                                        ; i32.const
0000515: 01                                        ; i32 literal
0000516: 21                                        ; local.set
0000517: 07                                        ; local index
0000518: 05                                        ; else
0000519: 41                                        ; i32.const
000051a: a007                                      ; i32 literal
000051c: 10                                        ; call
000051d: 08                                        ; function index
000051e: 41                                        ; i32.const
000051f: 00                                        ; i32 literal
0000520: 21                                        ; local.set
0000521: 0b                                        ; local index
0000522: 02                                        ; block
0000523: 40                                        ; void
0000524: 03                                        ; loop
0000525: 40                                        ; void
0000526: 20                                        ; local.get
0000527: 0b                                        ; local index
0000528: 20                                        ; local.get
0000529: 06                                        ; local index
000052a: 41                                        ; i32.const
000052b: 01                                        ; i32 literal
000052c: 6b                                        ; i32.sub
000052d: 4a                                        ; i32.gt_s
000052e: 0d                                        ; br_if
000052f: 01                                        ; break depth
0000530: 23                                        ; global.get
0000531: 0e                                        ; global index
0000532: 41                                        ; i32.const
0000533: 08                                        ; i32 literal
0000534: 6a                                        ; i32.add
0000535: 20                                        ; local.get
0000536: 0b                                        ; local index
0000537: 41                                        ; i32.const
0000538: 0c                                        ; i32 literal
0000539: 6c                                        ; i32.mul
000053a: 6a                                        ; i32.add
000053b: 28                                        ; i32.load
000053c: 02                                        ; alignment
000053d: 00                                        ; load offset
000053e: 21                                        ; local.set
000053f: 05                                        ; local index
0000540: 20                                        ; local.get
0000541: 05                                        ; local index
0000542: 41                                        ; i32.const
0000543: 04                                        ; i32 literal
0000544: 6a                                        ; i32.add
0000545: 2a                                        ; f32.load
0000546: 02                                        ; alignment
0000547: 00                                        ; load offset
0000548: 21                                        ; local.set
0000549: 02                                        ; local index
000054a: 20                                        ; local.get
000054b: 05                                        ; local index
000054c: 41                                        ; i32.const
000054d: 00                                        ; i32 literal
000054e: 6a                                        ; i32.add
000054f: 2a                                        ; f32.load
0000550: 02                                        ; alignment
0000551: 00                                        ; load offset
0000552: 21                                        ; local.set
0000553: 03                                        ; local index
0000554: 20                                        ; local.get
0000555: 05                                        ; local index
0000556: 41                                        ; i32.const
0000557: 08                                        ; i32 literal
0000558: 6a                                        ; i32.add
0000559: 2a                                        ; f32.load
000055a: 02                                        ; alignment
000055b: 00                                        ; load offset
000055c: 21                                        ; local.set
000055d: 04                                        ; local index
000055e: 20                                        ; local.get
000055f: 08                                        ; local index
0000560: 20                                        ; local.get
0000561: 09                                        ; local index
0000562: 20                                        ; local.get
0000563: 0a                                        ; local index
0000564: 20                                        ; local.get
0000565: 02                                        ; local index
0000566: 20                                        ; local.get
0000567: 03                                        ; local index
0000568: 20                                        ; local.get
0000569: 04                                        ; local index
000056a: 10                                        ; call
000056b: 1a                                        ; function index
000056c: 04                                        ; if
000056d: 40                                        ; void
000056e: 41                                        ; i32.const
000056f: 01                                        ; i32 literal
0000570: 21                                        ; local.set
0000571: 07                                        ; local index
0000572: 41                                        ; i32.const
0000573: 01                                        ; i32 literal
0000574: 0d                                        ; br_if
0000575: 05                                        ; break depth
0000576: 0b                                        ; end
0000577: 20                                        ; local.get
0000578: 0b                                        ; local index
0000579: 41                                        ; i32.const
000057a: 01                                        ; i32 literal
000057b: 6a                                        ; i32.add
000057c: 21                                        ; local.set
000057d: 0b                                        ; local index
000057e: 0c                                        ; br
000057f: 00                                        ; break depth
0000580: 0b                                        ; end
0000581: 0b                                        ; end
0000582: 0b                                        ; end
0000583: 20                                        ; local.get
0000584: 07                                        ; local index
0000585: 45                                        ; i32.eqz
0000586: 0d                                        ; br_if
0000587: 01                                        ; break depth
0000588: 0c                                        ; br
0000589: 00                                        ; break depth
000058a: 0b                                        ; end
000058b: 0b                                        ; end
000058c: 23                                        ; global.get
000058d: 0e                                        ; global index
000058e: 41                                        ; i32.const
000058f: 08                                        ; i32 literal
0000590: 6a                                        ; i32.add
0000591: 20                                        ; local.get
0000592: 06                                        ; local index
0000593: 41                                        ; i32.const
0000594: 0c                                        ; i32 literal
0000595: 6c                                        ; i32.mul
0000596: 6a                                        ; i32.add
0000597: 41                                        ; i32.const
0000598: 04                                        ; i32 literal
0000599: 6a                                        ; i32.add
000059a: 20                                        ; local.get
000059b: 08                                        ; local index
000059c: 38                                        ; f32.store
000059d: 02                                        ; alignment
000059e: 00                                        ; store offset
000059f: 23                                        ; global.get
00005a0: 0e                                        ; global index
00005a1: 41                                        ; i32.const
00005a2: 08                                        ; i32 literal
00005a3: 6a                                        ; i32.add
00005a4: 20                                        ; local.get
00005a5: 06                                        ; local index
00005a6: 41                                        ; i32.const
00005a7: 0c                                        ; i32 literal
00005a8: 6c                                        ; i32.mul
00005a9: 6a                                        ; i32.add
00005aa: 41                                        ; i32.const
00005ab: 00                                        ; i32 literal
00005ac: 6a                                        ; i32.add
00005ad: 20                                        ; local.get
00005ae: 09                                        ; local index
00005af: 38                                        ; f32.store
00005b0: 02                                        ; alignment
00005b1: 00                                        ; store offset
00005b2: 23                                        ; global.get
00005b3: 0e                                        ; global index
00005b4: 41                                        ; i32.const
00005b5: 08                                        ; i32 literal
00005b6: 6a                                        ; i32.add
00005b7: 20                                        ; local.get
00005b8: 06                                        ; local index
00005b9: 41                                        ; i32.const
00005ba: 0c                                        ; i32 literal
00005bb: 6c                                        ; i32.mul
00005bc: 6a                                        ; i32.add
00005bd: 41                                        ; i32.const
00005be: 08                                        ; i32 literal
00005bf: 6a                                        ; i32.add
00005c0: 20                                        ; local.get
00005c1: 0a                                        ; local index
00005c2: 38                                        ; f32.store
00005c3: 02                                        ; alignment
00005c4: 00                                        ; store offset
00005c5: 41                                        ; i32.const
00005c6: d007                                      ; i32 literal
00005c8: 20                                        ; local.get
00005c9: 06                                        ; local index
00005ca: 10                                        ; call
00005cb: 0d                                        ; function index
00005cc: 10                                        ; call
00005cd: 0a                                        ; function index
00005ce: 41                                        ; i32.const
00005cf: e007                                      ; i32 literal
00005d1: 10                                        ; call
00005d2: 0a                                        ; function index
00005d3: 23                                        ; global.get
00005d4: 0e                                        ; global index
00005d5: 41                                        ; i32.const
00005d6: 08                                        ; i32 literal
00005d7: 6a                                        ; i32.add
00005d8: 20                                        ; local.get
00005d9: 06                                        ; local index
00005da: 41                                        ; i32.const
00005db: 0c                                        ; i32 literal
00005dc: 6c                                        ; i32.mul
00005dd: 6a                                        ; i32.add
00005de: 28                                        ; i32.load
00005df: 02                                        ; alignment
00005e0: 00                                        ; load offset
00005e1: 10                                        ; call
00005e2: 0d                                        ; function index
00005e3: 10                                        ; call
00005e4: 0a                                        ; function index
00005e5: 41                                        ; i32.const
00005e6: e807                                      ; i32 literal
00005e8: 10                                        ; call
00005e9: 0a                                        ; function index
00005ea: 10                                        ; call
00005eb: 08                                        ; function index
00005ec: 41                                        ; i32.const
00005ed: f007                                      ; i32 literal
00005ef: 23                                        ; global.get
00005f0: 0f                                        ; global index
00005f1: 41                                        ; i32.const
00005f2: 08                                        ; i32 literal
00005f3: 6a                                        ; i32.add
00005f4: 20                                        ; local.get
00005f5: 06                                        ; local index
00005f6: 41                                        ; i32.const
00005f7: 04                                        ; i32 literal
00005f8: 6c                                        ; i32.mul
00005f9: 6a                                        ; i32.add
00005fa: 28                                        ; i32.load
00005fb: 02                                        ; alignment
00005fc: 00                                        ; load offset
00005fd: 10                                        ; call
00005fe: 0d                                        ; function index
00005ff: 10                                        ; call
0000600: 0a                                        ; function index
0000601: 10                                        ; call
0000602: 08                                        ; function index
0000603: 23                                        ; global.get
0000604: 0f                                        ; global index
0000605: 41                                        ; i32.const
0000606: 08                                        ; i32 literal
0000607: 6a                                        ; i32.add
0000608: 20                                        ; local.get
0000609: 06                                        ; local index
000060a: 41                                        ; i32.const
000060b: 04                                        ; i32 literal
000060c: 6c                                        ; i32.mul
000060d: 6a                                        ; i32.add
000060e: 28                                        ; i32.load
000060f: 02                                        ; alignment
0000610: 00                                        ; load offset
0000611: 41                                        ; i32.const
0000612: 00                                        ; i32 literal
0000613: 6a                                        ; i32.add
0000614: 10                                        ; call
0000615: 04                                        ; function index
0000616: 44                                        ; f64.const
0000617: 0000 0000 0000 e03f                       ; f64 literal
000061f: a1                                        ; f64.sub
0000620: 44                                        ; f64.const
0000621: 9a99 9999 9999 b93f                       ; f64 literal
0000629: a2                                        ; f64.mul
000062a: b6                                        ; f32.demote_f64
000062b: 38                                        ; f32.store
000062c: 02                                        ; alignment
000062d: 00                                        ; store offset
000062e: 23                                        ; global.get
000062f: 0f                                        ; global index
0000630: 41                                        ; i32.const
0000631: 08                                        ; i32 literal
0000632: 6a                                        ; i32.add
0000633: 20                                        ; local.get
0000634: 06                                        ; local index
0000635: 41                                        ; i32.const
0000636: 04                                        ; i32 literal
0000637: 6c                                        ; i32.mul
0000638: 6a                                        ; i32.add
0000639: 28                                        ; i32.load
000063a: 02                                        ; alignment
000063b: 00                                        ; load offset
000063c: 41                                        ; i32.const
000063d: 04                                        ; i32 literal
000063e: 6a                                        ; i32.add
000063f: 10                                        ; call
0000640: 04                                        ; function index
0000641: 44                                        ; f64.const
0000642: 0000 0000 0000 e03f                       ; f64 literal
000064a: a1                                        ; f64.sub
000064b: 44                                        ; f64.const
000064c: 9a99 9999 9999 b93f                       ; f64 literal
0000654: a2                                        ; f64.mul
0000655: b6                                        ; f32.demote_f64
0000656: 38                                        ; f32.store
0000657: 02                                        ; alignment
0000658: 00                                        ; store offset
0000659: 41                                        ; i32.const
000065a: 8008                                      ; i32 literal
000065c: 10                                        ; call
000065d: 08                                        ; function index
000065e: 20                                        ; local.get
000065f: 06                                        ; local index
0000660: 41                                        ; i32.const
0000661: 01                                        ; i32 literal
0000662: 6a                                        ; i32.add
0000663: 21                                        ; local.set
0000664: 06                                        ; local index
0000665: 0c                                        ; br
0000666: 00                                        ; break depth
0000667: 0b                                        ; end
0000668: 0b                                        ; end
0000669: 0b                                        ; end
; move data: [45c, 66a) -> [45d, 66b)
000045b: 8e04                                      ; FIXUP func body size
; function body 8
000066b: 00                                        ; func body size (guess)
000066c: 01                                        ; local decl count
000066d: 03                                        ; local type count
000066e: 7f                                        ; i32
000066f: 41                                        ; i32.const
0000670: 00                                        ; i32 literal
0000671: 21                                        ; local.set
0000672: 00                                        ; local index
0000673: 02                                        ; block
0000674: 40                                        ; void
0000675: 03                                        ; loop
0000676: 40                                        ; void
0000677: 20                                        ; local.get
0000678: 00                                        ; local index
0000679: 23                                        ; global.get
000067a: 0c                                        ; global index
000067b: 41                                        ; i32.const
000067c: 01                                        ; i32 literal
000067d: 6b                                        ; i32.sub
000067e: 4a                                        ; i32.gt_s
000067f: 0d                                        ; br_if
0000680: 01                                        ; break depth
0000681: 23                                        ; global.get
0000682: 11                                        ; global index
0000683: 41                                        ; i32.const
0000684: 08                                        ; i32 literal
0000685: 6a                                        ; i32.add
0000686: 20                                        ; local.get
0000687: 00                                        ; local index
0000688: 41                                        ; i32.const
0000689: 04                                        ; i32 literal
000068a: 6c                                        ; i32.mul
000068b: 6a                                        ; i32.add
000068c: 28                                        ; i32.load
000068d: 02                                        ; alignment
000068e: 00                                        ; load offset
000068f: 21                                        ; local.set
0000690: 01                                        ; local index
0000691: 41                                        ; i32.const
0000692: 00                                        ; i32 literal
0000693: 21                                        ; local.set
0000694: 02                                        ; local index
0000695: 02                                        ; block
0000696: 40                                        ; void
0000697: 03                                        ; loop
0000698: 40                                        ; void
0000699: 20                                        ; local.get
000069a: 02                                        ; local index
000069b: 23                                        ; global.get
000069c: 0b                                        ; global index
000069d: 41                                        ; i32.const
000069e: 01                                        ; i32 literal
000069f: 6b                                        ; i32.sub
00006a0: 4a                                        ; i32.gt_s
00006a1: 0d                                        ; br_if
00006a2: 01                                        ; break depth
00006a3: 20                                        ; local.get
00006a4: 01                                        ; local index
00006a5: 41                                        ; i32.const
00006a6: 08                                        ; i32 literal
00006a7: 6a                                        ; i32.add
00006a8: 20                                        ; local.get
00006a9: 02                                        ; local index
00006aa: 41                                        ; i32.const
00006ab: 04                                        ; i32 literal
00006ac: 6c                                        ; i32.mul
00006ad: 6a                                        ; i32.add
00006ae: 41                                        ; i32.const
00006af: 00                                        ; i32 literal
00006b0: 36                                        ; i32.store
00006b1: 02                                        ; alignment
00006b2: 00                                        ; store offset
00006b3: 20                                        ; local.get
00006b4: 02                                        ; local index
00006b5: 41                                        ; i32.const
00006b6: 01                                        ; i32 literal
00006b7: 6a                                        ; i32.add
00006b8: 21                                        ; local.set
00006b9: 02                                        ; local index
00006ba: 0c                                        ; br
00006bb: 00                                        ; break depth
00006bc: 0b                                        ; end
00006bd: 0b                                        ; end
00006be: 20                                        ; local.get
00006bf: 00                                        ; local index
00006c0: 41                                        ; i32.const
00006c1: 01                                        ; i32 literal
00006c2: 6a                                        ; i32.add
00006c3: 21                                        ; local.set
00006c4: 00                                        ; local index
00006c5: 0c                                        ; br
00006c6: 00                                        ; break depth
00006c7: 0b                                        ; end
00006c8: 0b                                        ; end
00006c9: 0b                                        ; end
000066b: 5e                                        ; FIXUP func body size
; function body 9
00006ca: 00                                        ; func body size (guess)
00006cb: 03                                        ; local decl count
00006cc: 02                                        ; local type count
00006cd: 7f                                        ; i32
00006ce: 05                                        ; local type count
00006cf: 7d                                        ; f32
00006d0: 08                                        ; local type count
00006d1: 7f                                        ; i32
00006d2: 41                                        ; i32.const
00006d3: 00                                        ; i32 literal
00006d4: 21                                        ; local.set
00006d5: 02                                        ; local index
00006d6: 41                                        ; i32.const
00006d7: 00                                        ; i32 literal
00006d8: 21                                        ; local.set
00006d9: 03                                        ; local index
00006da: 02                                        ; block
00006db: 40                                        ; void
00006dc: 03                                        ; loop
00006dd: 40                                        ; void
00006de: 20                                        ; local.get
00006df: 03                                        ; local index
00006e0: 23                                        ; global.get
00006e1: 0d                                        ; global index
00006e2: 41                                        ; i32.const
00006e3: 01                                        ; i32 literal
00006e4: 6b                                        ; i32.sub
00006e5: 4a                                        ; i32.gt_s
00006e6: 0d                                        ; br_if
00006e7: 01                                        ; break depth
00006e8: 23                                        ; global.get
00006e9: 0e                                        ; global index
00006ea: 41                                        ; i32.const
00006eb: 08                                        ; i32 literal
00006ec: 6a                                        ; i32.add
00006ed: 20                                        ; local.get
00006ee: 03                                        ; local index
00006ef: 41                                        ; i32.const
00006f0: 0c                                        ; i32 literal
00006f1: 6c                                        ; i32.mul
00006f2: 6a                                        ; i32.add
00006f3: 28                                        ; i32.load
00006f4: 02                                        ; alignment
00006f5: 00                                        ; load offset
00006f6: 41                                        ; i32.const
00006f7: 04                                        ; i32 literal
00006f8: 6a                                        ; i32.add
00006f9: 2a                                        ; f32.load
00006fa: 02                                        ; alignment
00006fb: 00                                        ; load offset
00006fc: 21                                        ; local.set
00006fd: 04                                        ; local index
00006fe: 23                                        ; global.get
00006ff: 0e                                        ; global index
0000700: 41                                        ; i32.const
0000701: 08                                        ; i32 literal
0000702: 6a                                        ; i32.add
0000703: 20                                        ; local.get
0000704: 03                                        ; local index
0000705: 41                                        ; i32.const
0000706: 0c                                        ; i32 literal
0000707: 6c                                        ; i32.mul
0000708: 6a                                        ; i32.add
0000709: 28                                        ; i32.load
000070a: 02                                        ; alignment
000070b: 00                                        ; load offset
000070c: 41                                        ; i32.const
000070d: 00                                        ; i32 literal
000070e: 6a                                        ; i32.add
000070f: 2a                                        ; f32.load
0000710: 02                                        ; alignment
0000711: 00                                        ; load offset
0000712: 21                                        ; local.set
0000713: 05                                        ; local index
0000714: 23                                        ; global.get
0000715: 0e                                        ; global index
0000716: 41                                        ; i32.const
0000717: 08                                        ; i32 literal
0000718: 6a                                        ; i32.add
0000719: 20                                        ; local.get
000071a: 03                                        ; local index
000071b: 41                                        ; i32.const
000071c: 0c                                        ; i32 literal
000071d: 6c                                        ; i32.mul
000071e: 6a                                        ; i32.add
000071f: 28                                        ; i32.load
0000720: 02                                        ; alignment
0000721: 00                                        ; load offset
0000722: 41                                        ; i32.const
0000723: 08                                        ; i32 literal
0000724: 6a                                        ; i32.add
0000725: 2a                                        ; f32.load
0000726: 02                                        ; alignment
0000727: 00                                        ; load offset
0000728: 21                                        ; local.set
0000729: 06                                        ; local index
000072a: 23                                        ; global.get
000072b: 0f                                        ; global index
000072c: 41                                        ; i32.const
000072d: 08                                        ; i32 literal
000072e: 6a                                        ; i32.add
000072f: 20                                        ; local.get
0000730: 03                                        ; local index
0000731: 41                                        ; i32.const
0000732: 04                                        ; i32 literal
0000733: 6c                                        ; i32.mul
0000734: 6a                                        ; i32.add
0000735: 28                                        ; i32.load
0000736: 02                                        ; alignment
0000737: 00                                        ; load offset
0000738: 41                                        ; i32.const
0000739: 00                                        ; i32 literal
000073a: 6a                                        ; i32.add
000073b: 2a                                        ; f32.load
000073c: 02                                        ; alignment
000073d: 00                                        ; load offset
000073e: 21                                        ; local.set
000073f: 07                                        ; local index
0000740: 23                                        ; global.get
0000741: 0f                                        ; global index
0000742: 41                                        ; i32.const
0000743: 08                                        ; i32 literal
0000744: 6a                                        ; i32.add
0000745: 20                                        ; local.get
0000746: 03                                        ; local index
0000747: 41                                        ; i32.const
0000748: 04                                        ; i32 literal
0000749: 6c                                        ; i32.mul
000074a: 6a                                        ; i32.add
000074b: 28                                        ; i32.load
000074c: 02                                        ; alignment
000074d: 00                                        ; load offset
000074e: 41                                        ; i32.const
000074f: 04                                        ; i32 literal
0000750: 6a                                        ; i32.add
0000751: 2a                                        ; f32.load
0000752: 02                                        ; alignment
0000753: 00                                        ; load offset
0000754: 21                                        ; local.set
0000755: 08                                        ; local index
0000756: 20                                        ; local.get
0000757: 08                                        ; local index
0000758: bb                                        ; f64.promote_f32
0000759: 44                                        ; f64.const
000075a: 2d43 1ceb e236 1a3f                       ; f64 literal
0000762: a0                                        ; f64.add
0000763: b6                                        ; f32.demote_f64
0000764: 21                                        ; local.set
0000765: 08                                        ; local index
0000766: 20                                        ; local.get
0000767: 00                                        ; local index
0000768: 20                                        ; local.get
0000769: 04                                        ; local index
000076a: 20                                        ; local.get
000076b: 06                                        ; local index
000076c: 92                                        ; f32.add
000076d: 93                                        ; f32.sub
000076e: 41                                        ; i32.const
000076f: 00                                        ; i32 literal
0000770: b2                                        ; f32.convert_i32_s
0000771: 5d                                        ; f32.lt
0000772: 20                                        ; local.get
0000773: 07                                        ; local index
0000774: 41                                        ; i32.const
0000775: 00                                        ; i32 literal
0000776: b2                                        ; f32.convert_i32_s
0000777: 5e                                        ; f32.gt
0000778: 6c                                        ; i32.mul
0000779: 20                                        ; local.get
000077a: 04                                        ; local index
000077b: 20                                        ; local.get
000077c: 06                                        ; local index
000077d: 93                                        ; f32.sub
000077e: 41                                        ; i32.const
000077f: 00                                        ; i32 literal
0000780: b2                                        ; f32.convert_i32_s
0000781: 5d                                        ; f32.lt
0000782: 20                                        ; local.get
0000783: 07                                        ; local index
0000784: 41                                        ; i32.const
0000785: 00                                        ; i32 literal
0000786: b2                                        ; f32.convert_i32_s
0000787: 5d                                        ; f32.lt
0000788: 6c                                        ; i32.mul
0000789: 6a                                        ; i32.add
000078a: 04                                        ; if
000078b: 40                                        ; void
000078c: 43                                        ; f32.const
000078d: 0000 0000                                 ; f32 literal
0000791: 20                                        ; local.get
0000792: 07                                        ; local index
0000793: 93                                        ; f32.sub
0000794: 21                                        ; local.set
0000795: 07                                        ; local index
0000796: 0b                                        ; end
0000797: 20                                        ; local.get
0000798: 01                                        ; local index
0000799: 20                                        ; local.get
000079a: 05                                        ; local index
000079b: 20                                        ; local.get
000079c: 06                                        ; local index
000079d: 92                                        ; f32.add
000079e: 93                                        ; f32.sub
000079f: 41                                        ; i32.const
00007a0: 00                                        ; i32 literal
00007a1: b2                                        ; f32.convert_i32_s
00007a2: 5d                                        ; f32.lt
00007a3: 20                                        ; local.get
00007a4: 08                                        ; local index
00007a5: 41                                        ; i32.const
00007a6: 00                                        ; i32 literal
00007a7: b2                                        ; f32.convert_i32_s
00007a8: 5e                                        ; f32.gt
00007a9: 6c                                        ; i32.mul
00007aa: 20                                        ; local.get
00007ab: 05                                        ; local index
00007ac: 20                                        ; local.get
00007ad: 06                                        ; local index
00007ae: 93                                        ; f32.sub
00007af: 41                                        ; i32.const
00007b0: 00                                        ; i32 literal
00007b1: b2                                        ; f32.convert_i32_s
00007b2: 5d                                        ; f32.lt
00007b3: 20                                        ; local.get
00007b4: 08                                        ; local index
00007b5: 41                                        ; i32.const
00007b6: 00                                        ; i32 literal
00007b7: b2                                        ; f32.convert_i32_s
00007b8: 5d                                        ; f32.lt
00007b9: 6c                                        ; i32.mul
00007ba: 6a                                        ; i32.add
00007bb: 04                                        ; if
00007bc: 40                                        ; void
00007bd: 43                                        ; f32.const
00007be: 0000 0000                                 ; f32 literal
00007c2: 20                                        ; local.get
00007c3: 08                                        ; local index
00007c4: 93                                        ; f32.sub
00007c5: 21                                        ; local.set
00007c6: 08                                        ; local index
00007c7: 0b                                        ; end
00007c8: 23                                        ; global.get
00007c9: 0e                                        ; global index
00007ca: 41                                        ; i32.const
00007cb: 08                                        ; i32 literal
00007cc: 6a                                        ; i32.add
00007cd: 20                                        ; local.get
00007ce: 03                                        ; local index
00007cf: 41                                        ; i32.const
00007d0: 0c                                        ; i32 literal
00007d1: 6c                                        ; i32.mul
00007d2: 6a                                        ; i32.add
00007d3: 41                                        ; i32.const
00007d4: 04                                        ; i32 literal
00007d5: 6a                                        ; i32.add
00007d6: 20                                        ; local.get
00007d7: 04                                        ; local index
00007d8: 20                                        ; local.get
00007d9: 07                                        ; local index
00007da: 92                                        ; f32.add
00007db: 38                                        ; f32.store
00007dc: 02                                        ; alignment
00007dd: 00                                        ; store offset
00007de: 23                                        ; global.get
00007df: 0e                                        ; global index
00007e0: 41                                        ; i32.const
00007e1: 08                                        ; i32 literal
00007e2: 6a                                        ; i32.add
00007e3: 20                                        ; local.get
00007e4: 03                                        ; local index
00007e5: 41                                        ; i32.const
00007e6: 0c                                        ; i32 literal
00007e7: 6c                                        ; i32.mul
00007e8: 6a                                        ; i32.add
00007e9: 41                                        ; i32.const
00007ea: 00                                        ; i32 literal
00007eb: 6a                                        ; i32.add
00007ec: 20                                        ; local.get
00007ed: 05                                        ; local index
00007ee: 20                                        ; local.get
00007ef: 08                                        ; local index
00007f0: 92                                        ; f32.add
00007f1: 38                                        ; f32.store
00007f2: 02                                        ; alignment
00007f3: 00                                        ; store offset
00007f4: 23                                        ; global.get
00007f5: 0f                                        ; global index
00007f6: 41                                        ; i32.const
00007f7: 08                                        ; i32 literal
00007f8: 6a                                        ; i32.add
00007f9: 20                                        ; local.get
00007fa: 03                                        ; local index
00007fb: 41                                        ; i32.const
00007fc: 04                                        ; i32 literal
00007fd: 6c                                        ; i32.mul
00007fe: 6a                                        ; i32.add
00007ff: 28                                        ; i32.load
0000800: 02                                        ; alignment
0000801: 00                                        ; load offset
0000802: 41                                        ; i32.const
0000803: 00                                        ; i32 literal
0000804: 6a                                        ; i32.add
0000805: 20                                        ; local.get
0000806: 07                                        ; local index
0000807: 38                                        ; f32.store
0000808: 02                                        ; alignment
0000809: 00                                        ; store offset
000080a: 23                                        ; global.get
000080b: 0f                                        ; global index
000080c: 41                                        ; i32.const
000080d: 08                                        ; i32 literal
000080e: 6a                                        ; i32.add
000080f: 20                                        ; local.get
0000810: 03                                        ; local index
0000811: 41                                        ; i32.const
0000812: 04                                        ; i32 literal
0000813: 6c                                        ; i32.mul
0000814: 6a                                        ; i32.add
0000815: 28                                        ; i32.load
0000816: 02                                        ; alignment
0000817: 00                                        ; load offset
0000818: 41                                        ; i32.const
0000819: 04                                        ; i32 literal
000081a: 6a                                        ; i32.add
000081b: 20                                        ; local.get
000081c: 08                                        ; local index
000081d: 38                                        ; f32.store
000081e: 02                                        ; alignment
000081f: 00                                        ; store offset
0000820: 20                                        ; local.get
0000821: 04                                        ; local index
0000822: 20                                        ; local.get
0000823: 06                                        ; local index
0000824: 93                                        ; f32.sub
0000825: bb                                        ; f64.promote_f32
0000826: 20                                        ; local.get
0000827: 00                                        ; local index
0000828: bb                                        ; f64.promote_f32
0000829: a3                                        ; f64.div
000082a: 23                                        ; global.get
000082b: 0c                                        ; global index
000082c: b7                                        ; f64.convert_i32_s
000082d: a2                                        ; f64.mul
000082e: 10                                        ; call
000082f: 06                                        ; function index
0000830: aa                                        ; i32.trunc_f64_s
0000831: 21                                        ; local.set
0000832: 09                                        ; local index
0000833: 20                                        ; local.get
0000834: 04                                        ; local index
0000835: 20                                        ; local.get
0000836: 06                                        ; local index
0000837: 92                                        ; f32.add
0000838: bb                                        ; f64.promote_f32
0000839: 20                                        ; local.get
000083a: 00                                        ; local index
000083b: bb                                        ; f64.promote_f32
000083c: a3                                        ; f64.div
000083d: 23                                        ; global.get
000083e: 0c                                        ; global index
000083f: b7                                        ; f64.convert_i32_s
0000840: a2                                        ; f64.mul
0000841: 10                                        ; call
0000842: 06                                        ; function index
0000843: aa                                        ; i32.trunc_f64_s
0000844: 21                                        ; local.set
0000845: 0a                                        ; local index
0000846: 20                                        ; local.get
0000847: 05                                        ; local index
0000848: 20                                        ; local.get
0000849: 06                                        ; local index
000084a: 93                                        ; f32.sub
000084b: bb                                        ; f64.promote_f32
000084c: 20                                        ; local.get
000084d: 01                                        ; local index
000084e: bb                                        ; f64.promote_f32
000084f: a3                                        ; f64.div
0000850: 23                                        ; global.get
0000851: 0b                                        ; global index
0000852: b7                                        ; f64.convert_i32_s
0000853: a2                                        ; f64.mul
0000854: 10                                        ; call
0000855: 06                                        ; function index
0000856: aa                                        ; i32.trunc_f64_s
0000857: 21                                        ; local.set
0000858: 0b                                        ; local index
0000859: 20                                        ; local.get
000085a: 05                                        ; local index
000085b: 20                                        ; local.get
000085c: 06                                        ; local index
000085d: 92                                        ; f32.add
000085e: bb                                        ; f64.promote_f32
000085f: 20                                        ; local.get
0000860: 01                                        ; local index
0000861: bb                                        ; f64.promote_f32
0000862: a3                                        ; f64.div
0000863: 23                                        ; global.get
0000864: 0b                                        ; global index
0000865: b7                                        ; f64.convert_i32_s
0000866: a2                                        ; f64.mul
0000867: 10                                        ; call
0000868: 06                                        ; function index
0000869: aa                                        ; i32.trunc_f64_s
000086a: 21                                        ; local.set
000086b: 0c                                        ; local index
000086c: 20                                        ; local.get
000086d: 09                                        ; local index
000086e: 41                                        ; i32.const
000086f: 00                                        ; i32 literal
0000870: 48                                        ; i32.lt_s
0000871: 04                                        ; if
0000872: 40                                        ; void
0000873: 41                                        ; i32.const
0000874: 00                                        ; i32 literal
0000875: 21                                        ; local.set
0000876: 09                                        ; local index
0000877: 0b                                        ; end
0000878: 20                                        ; local.get
0000879: 0a                                        ; local index
000087a: 23                                        ; global.get
000087b: 0c                                        ; global index
000087c: 4e                                        ; i32.ge_s
000087d: 04                                        ; if
000087e: 40                                        ; void
000087f: 23                                        ; global.get
0000880: 0c                                        ; global index
0000881: 41                                        ; i32.const
0000882: 01                                        ; i32 literal
0000883: 6b                                        ; i32.sub
0000884: 21                                        ; local.set
0000885: 0a                                        ; local index
0000886: 0b                                        ; end
0000887: 20                                        ; local.get
0000888: 0b                                        ; local index
0000889: 41                                        ; i32.const
000088a: 00                                        ; i32 literal
000088b: 48                                        ; i32.lt_s
000088c: 04                                        ; if
000088d: 40                                        ; void
000088e: 41                                        ; i32.const
000088f: 00                                        ; i32 literal
0000890: 21                                        ; local.set
0000891: 0b                                        ; local index
0000892: 0b                                        ; end
0000893: 20                                        ; local.get
0000894: 0c                                        ; local index
0000895: 23                                        ; global.get
0000896: 0b                                        ; global index
0000897: 4e                                        ; i32.ge_s
0000898: 04                                        ; if
0000899: 40                                        ; void
000089a: 23                                        ; global.get
000089b: 0b                                        ; global index
000089c: 41                                        ; i32.const
000089d: 01                                        ; i32 literal
000089e: 6b                                        ; i32.sub
000089f: 21                                        ; local.set
00008a0: 0c                                        ; local index
00008a1: 0b                                        ; end
00008a2: 20                                        ; local.get
00008a3: 09                                        ; local index
00008a4: 21                                        ; local.set
00008a5: 0d                                        ; local index
00008a6: 02                                        ; block
00008a7: 40                                        ; void
00008a8: 03                                        ; loop
00008a9: 40                                        ; void
00008aa: 20                                        ; local.get
00008ab: 0d                                        ; local index
00008ac: 20                                        ; local.get
00008ad: 0a                                        ; local index
00008ae: 4a                                        ; i32.gt_s
00008af: 0d                                        ; br_if
00008b0: 01                                        ; break depth
00008b1: 23                                        ; global.get
00008b2: 11                                        ; global index
00008b3: 41                                        ; i32.const
00008b4: 08                                        ; i32 literal
00008b5: 6a                                        ; i32.add
00008b6: 20                                        ; local.get
00008b7: 0d                                        ; local index
00008b8: 41                                        ; i32.const
00008b9: 04                                        ; i32 literal
00008ba: 6c                                        ; i32.mul
00008bb: 6a                                        ; i32.add
00008bc: 28                                        ; i32.load
00008bd: 02                                        ; alignment
00008be: 00                                        ; load offset
00008bf: 21                                        ; local.set
00008c0: 0e                                        ; local index
00008c1: 20                                        ; local.get
00008c2: 0b                                        ; local index
00008c3: 21                                        ; local.set
00008c4: 0f                                        ; local index
00008c5: 02                                        ; block
00008c6: 40                                        ; void
00008c7: 03                                        ; loop
00008c8: 40                                        ; void
00008c9: 20                                        ; local.get
00008ca: 0f                                        ; local index
00008cb: 20                                        ; local.get
00008cc: 0c                                        ; local index
00008cd: 4a                                        ; i32.gt_s
00008ce: 0d                                        ; br_if
00008cf: 01                                        ; break depth
00008d0: 23                                        ; global.get
00008d1: 10                                        ; global index
00008d2: 41                                        ; i32.const
00008d3: 08                                        ; i32 literal
00008d4: 6a                                        ; i32.add
00008d5: 20                                        ; local.get
00008d6: 02                                        ; local index
00008d7: 41                                        ; i32.const
00008d8: 04                                        ; i32 literal
00008d9: 6c                                        ; i32.mul
00008da: 6a                                        ; i32.add
00008db: 28                                        ; i32.load
00008dc: 02                                        ; alignment
00008dd: 00                                        ; load offset
00008de: 21                                        ; local.set
00008df: 10                                        ; local index
00008e0: 20                                        ; local.get
00008e1: 02                                        ; local index
00008e2: 41                                        ; i32.const
00008e3: 01                                        ; i32 literal
00008e4: 6a                                        ; i32.add
00008e5: 21                                        ; local.set
00008e6: 02                                        ; local index
00008e7: 20                                        ; local.get
00008e8: 10                                        ; local index
00008e9: 41                                        ; i32.const
00008ea: 04                                        ; i32 literal
00008eb: 6a                                        ; i32.add
00008ec: 20                                        ; local.get
00008ed: 03                                        ; local index
00008ee: 36                                        ; i32.store
00008ef: 02                                        ; alignment
00008f0: 00                                        ; store offset
00008f1: 20                                        ; local.get
00008f2: 10                                        ; local index
00008f3: 41                                        ; i32.const
00008f4: 00                                        ; i32 literal
00008f5: 6a                                        ; i32.add
00008f6: 20                                        ; local.get
00008f7: 0e                                        ; local index
00008f8: 41                                        ; i32.const
00008f9: 08                                        ; i32 literal
00008fa: 6a                                        ; i32.add
00008fb: 20                                        ; local.get
00008fc: 0f                                        ; local index
00008fd: 41                                        ; i32.const
00008fe: 04                                        ; i32 literal
00008ff: 6c                                        ; i32.mul
0000900: 6a                                        ; i32.add
0000901: 28                                        ; i32.load
0000902: 02                                        ; alignment
0000903: 00                                        ; load offset
0000904: 36                                        ; i32.store
0000905: 02                                        ; alignment
0000906: 00                                        ; store offset
0000907: 20                                        ; local.get
0000908: 0e                                        ; local index
0000909: 41                                        ; i32.const
000090a: 08                                        ; i32 literal
000090b: 6a                                        ; i32.add
000090c: 20                                        ; local.get
000090d: 0f                                        ; local index
000090e: 41                                        ; i32.const
000090f: 04                                        ; i32 literal
0000910: 6c                                        ; i32.mul
0000911: 6a                                        ; i32.add
0000912: 20                                        ; local.get
0000913: 10                                        ; local index
0000914: 36                                        ; i32.store
0000915: 02                                        ; alignment
0000916: 00                                        ; store offset
0000917: 20                                        ; local.get
0000918: 0f                                        ; local index
0000919: 41                                        ; i32.const
000091a: 01                                        ; i32 literal
000091b: 6a                                        ; i32.add
000091c: 21                                        ; local.set
000091d: 0f                                        ; local index
000091e: 0c                                        ; br
000091f: 00                                        ; break depth
0000920: 0b                                        ; end
0000921: 0b                                        ; end
0000922: 20                                        ; local.get
0000923: 0d                                        ; local index
0000924: 41                                        ; i32.const
0000925: 01                                        ; i32 literal
0000926: 6a                                        ; i32.add
0000927: 21                                        ; local.set
0000928: 0d                                        ; local index
0000929: 0c                                        ; br
000092a: 00                                        ; break depth
000092b: 0b                                        ; end
000092c: 0b                                        ; end
000092d: 20                                        ; local.get
000092e: 03                                        ; local index
000092f: 41                                        ; i32.const
0000930: 01                                        ; i32 literal
0000931: 6a                                        ; i32.add
0000932: 21                                        ; local.set
0000933: 03                                        ; local index
0000934: 0c                                        ; br
0000935: 00                                        ; break depth
0000936: 0b                                        ; end
0000937: 0b                                        ; end
0000938: 0b                                        ; end
; move data: [6cb, 939) -> [6cc, 93a)
00006ca: ee04                                      ; FIXUP func body size
; function body 10
000093a: 00                                        ; func body size (guess)
000093b: 07                                        ; local decl count
000093c: 05                                        ; local type count
000093d: 7f                                        ; i32
000093e: 05                                        ; local type count
000093f: 7d                                        ; f32
0000940: 02                                        ; local type count
0000941: 7f                                        ; i32
0000942: 07                                        ; local type count
0000943: 7d                                        ; f32
0000944: 01                                        ; local type count
0000945: 7c                                        ; f64
0000946: 04                                        ; local type count
0000947: 7d                                        ; f32
0000948: 04                                        ; local type count
0000949: 7c                                        ; f64
000094a: 41                                        ; i32.const
000094b: 00                                        ; i32 literal
000094c: 21                                        ; local.set
000094d: 00                                        ; local index
000094e: 02                                        ; block
000094f: 40                                        ; void
0000950: 03                                        ; loop
0000951: 40                                        ; void
0000952: 20                                        ; local.get
0000953: 00                                        ; local index
0000954: 23                                        ; global.get
0000955: 0c                                        ; global index
0000956: 41                                        ; i32.const
0000957: 01                                        ; i32 literal
0000958: 6b                                        ; i32.sub
0000959: 4a                                        ; i32.gt_s
000095a: 0d                                        ; br_if
000095b: 01                                        ; break depth
000095c: 23                                        ; global.get
000095d: 11                                        ; global index
000095e: 41                                        ; i32.const
000095f: 08                                        ; i32 literal
0000960: 6a                                        ; i32.add
0000961: 20                                        ; local.get
0000962: 00                                        ; local index
0000963: 41                                        ; i32.const
0000964: 04                                        ; i32 literal
0000965: 6c                                        ; i32.mul
0000966: 6a                                        ; i32.add
0000967: 28                                        ; i32.load
0000968: 02                                        ; alignment
0000969: 00                                        ; load offset
000096a: 21                                        ; local.set
000096b: 01                                        ; local index
000096c: 41                                        ; i32.const
000096d: 00                                        ; i32 literal
000096e: 21                                        ; local.set
000096f: 02                                        ; local index
0000970: 02                                        ; block
0000971: 40                                        ; void
0000972: 03                                        ; loop
0000973: 40                                        ; void
0000974: 20                                        ; local.get
0000975: 02                                        ; local index
0000976: 23                                        ; global.get
0000977: 0b                                        ; global index
0000978: 41                                        ; i32.const
0000979: 01                                        ; i32 literal
000097a: 6b                                        ; i32.sub
000097b: 4a                                        ; i32.gt_s
000097c: 0d                                        ; br_if
000097d: 01                                        ; break depth
000097e: 20                                        ; local.get
000097f: 01                                        ; local index
0000980: 41                                        ; i32.const
0000981: 08                                        ; i32 literal
0000982: 6a                                        ; i32.add
0000983: 20                                        ; local.get
0000984: 02                                        ; local index
0000985: 41                                        ; i32.const
0000986: 04                                        ; i32 literal
0000987: 6c                                        ; i32.mul
0000988: 6a                                        ; i32.add
0000989: 28                                        ; i32.load
000098a: 02                                        ; alignment
000098b: 00                                        ; load offset
000098c: 21                                        ; local.set
000098d: 03                                        ; local index
000098e: 02                                        ; block
000098f: 40                                        ; void
0000990: 03                                        ; loop
0000991: 40                                        ; void
0000992: 20                                        ; local.get
0000993: 03                                        ; local index
0000994: 41                                        ; i32.const
0000995: 00                                        ; i32 literal
0000996: 46                                        ; i32.eq
0000997: 45                                        ; i32.eqz
0000998: 45                                        ; i32.eqz
0000999: 0d                                        ; br_if
000099a: 01                                        ; break depth
000099b: 20                                        ; local.get
000099c: 03                                        ; local index
000099d: 41                                        ; i32.const
000099e: 04                                        ; i32 literal
000099f: 6a                                        ; i32.add
00009a0: 28                                        ; i32.load
00009a1: 02                                        ; alignment
00009a2: 00                                        ; load offset
00009a3: 21                                        ; local.set
00009a4: 04                                        ; local index
00009a5: 23                                        ; global.get
00009a6: 0e                                        ; global index
00009a7: 41                                        ; i32.const
00009a8: 08                                        ; i32 literal
00009a9: 6a                                        ; i32.add
00009aa: 20                                        ; local.get
00009ab: 04                                        ; local index
00009ac: 41                                        ; i32.const
00009ad: 0c                                        ; i32 literal
00009ae: 6c                                        ; i32.mul
00009af: 6a                                        ; i32.add
00009b0: 28                                        ; i32.load
00009b1: 02                                        ; alignment
00009b2: 00                                        ; load offset
00009b3: 41                                        ; i32.const
00009b4: 04                                        ; i32 literal
00009b5: 6a                                        ; i32.add
00009b6: 2a                                        ; f32.load
00009b7: 02                                        ; alignment
00009b8: 00                                        ; load offset
00009b9: 21                                        ; local.set
00009ba: 05                                        ; local index
00009bb: 23                                        ; global.get
00009bc: 0e                                        ; global index
00009bd: 41                                        ; i32.const
00009be: 08                                        ; i32 literal
00009bf: 6a                                        ; i32.add
00009c0: 20                                        ; local.get
00009c1: 04                                        ; local index
00009c2: 41                                        ; i32.const
00009c3: 0c                                        ; i32 literal
00009c4: 6c                                        ; i32.mul
00009c5: 6a                                        ; i32.add
00009c6: 28                                        ; i32.load
00009c7: 02                                        ; alignment
00009c8: 00                                        ; load offset
00009c9: 41                                        ; i32.const
00009ca: 00                                        ; i32 literal
00009cb: 6a                                        ; i32.add
00009cc: 2a                                        ; f32.load
00009cd: 02                                        ; alignment
00009ce: 00                                        ; load offset
00009cf: 21                                        ; local.set
00009d0: 06                                        ; local index
00009d1: 23                                        ; global.get
00009d2: 0e                                        ; global index
00009d3: 41                                        ; i32.const
00009d4: 08                                        ; i32 literal
00009d5: 6a                                        ; i32.add
00009d6: 20                                        ; local.get
00009d7: 04                                        ; local index
00009d8: 41                                        ; i32.const
00009d9: 0c                                        ; i32 literal
00009da: 6c                                        ; i32.mul
00009db: 6a                                        ; i32.add
00009dc: 28                                        ; i32.load
00009dd: 02                                        ; alignment
00009de: 00                                        ; load offset
00009df: 41                                        ; i32.const
00009e0: 08                                        ; i32 literal
00009e1: 6a                                        ; i32.add
00009e2: 2a                                        ; f32.load
00009e3: 02                                        ; alignment
00009e4: 00                                        ; load offset
00009e5: 21                                        ; local.set
00009e6: 07                                        ; local index
00009e7: 23                                        ; global.get
00009e8: 0f                                        ; global index
00009e9: 41                                        ; i32.const
00009ea: 08                                        ; i32 literal
00009eb: 6a                                        ; i32.add
00009ec: 20                                        ; local.get
00009ed: 04                                        ; local index
00009ee: 41                                        ; i32.const
00009ef: 04                                        ; i32 literal
00009f0: 6c                                        ; i32.mul
00009f1: 6a                                        ; i32.add
00009f2: 28                                        ; i32.load
00009f3: 02                                        ; alignment
00009f4: 00                                        ; load offset
00009f5: 41                                        ; i32.const
00009f6: 00                                        ; i32 literal
00009f7: 6a                                        ; i32.add
00009f8: 2a                                        ; f32.load
00009f9: 02                                        ; alignment
00009fa: 00                                        ; load offset
00009fb: 21                                        ; local.set
00009fc: 08                                        ; local index
00009fd: 23                                        ; global.get
00009fe: 0f                                        ; global index
00009ff: 41                                        ; i32.const
0000a00: 08                                        ; i32 literal
0000a01: 6a                                        ; i32.add
0000a02: 20                                        ; local.get
0000a03: 04                                        ; local index
0000a04: 41                                        ; i32.const
0000a05: 04                                        ; i32 literal
0000a06: 6c                                        ; i32.mul
0000a07: 6a                                        ; i32.add
0000a08: 28                                        ; i32.load
0000a09: 02                                        ; alignment
0000a0a: 00                                        ; load offset
0000a0b: 41                                        ; i32.const
0000a0c: 04                                        ; i32 literal
0000a0d: 6a                                        ; i32.add
0000a0e: 2a                                        ; f32.load
0000a0f: 02                                        ; alignment
0000a10: 00                                        ; load offset
0000a11: 21                                        ; local.set
0000a12: 09                                        ; local index
0000a13: 20                                        ; local.get
0000a14: 03                                        ; local index
0000a15: 21                                        ; local.set
0000a16: 0a                                        ; local index
0000a17: 20                                        ; local.get
0000a18: 0a                                        ; local index
0000a19: 41                                        ; i32.const
0000a1a: 00                                        ; i32 literal
0000a1b: 6a                                        ; i32.add
0000a1c: 28                                        ; i32.load
0000a1d: 02                                        ; alignment
0000a1e: 00                                        ; load offset
0000a1f: 21                                        ; local.set
0000a20: 0a                                        ; local index
0000a21: 02                                        ; block
0000a22: 40                                        ; void
0000a23: 03                                        ; loop
0000a24: 40                                        ; void
0000a25: 20                                        ; local.get
0000a26: 0a                                        ; local index
0000a27: 41                                        ; i32.const
0000a28: 00                                        ; i32 literal
0000a29: 46                                        ; i32.eq
0000a2a: 45                                        ; i32.eqz
0000a2b: 45                                        ; i32.eqz
0000a2c: 0d                                        ; br_if
0000a2d: 01                                        ; break depth
0000a2e: 20                                        ; local.get
0000a2f: 0a                                        ; local index
0000a30: 41                                        ; i32.const
0000a31: 04                                        ; i32 literal
0000a32: 6a                                        ; i32.add
0000a33: 28                                        ; i32.load
0000a34: 02                                        ; alignment
0000a35: 00                                        ; load offset
0000a36: 21                                        ; local.set
0000a37: 0b                                        ; local index
0000a38: 23                                        ; global.get
0000a39: 0e                                        ; global index
0000a3a: 41                                        ; i32.const
0000a3b: 08                                        ; i32 literal
0000a3c: 6a                                        ; i32.add
0000a3d: 20                                        ; local.get
0000a3e: 0b                                        ; local index
0000a3f: 41                                        ; i32.const
0000a40: 0c                                        ; i32 literal
0000a41: 6c                                        ; i32.mul
0000a42: 6a                                        ; i32.add
0000a43: 28                                        ; i32.load
0000a44: 02                                        ; alignment
0000a45: 00                                        ; load offset
0000a46: 41                                        ; i32.const
0000a47: 04                                        ; i32 literal
0000a48: 6a                                        ; i32.add
0000a49: 2a                                        ; f32.load
0000a4a: 02                                        ; alignment
0000a4b: 00                                        ; load offset
0000a4c: 21                                        ; local.set
0000a4d: 0c                                        ; local index
0000a4e: 23                                        ; global.get
0000a4f: 0e                                        ; global index
0000a50: 41                                        ; i32.const
0000a51: 08                                        ; i32 literal
0000a52: 6a                                        ; i32.add
0000a53: 20                                        ; local.get
0000a54: 0b                                        ; local index
0000a55: 41                                        ; i32.const
0000a56: 0c                                        ; i32 literal
0000a57: 6c                                        ; i32.mul
0000a58: 6a                                        ; i32.add
0000a59: 28                                        ; i32.load
0000a5a: 02                                        ; alignment
0000a5b: 00                                        ; load offset
0000a5c: 41                                        ; i32.const
0000a5d: 00                                        ; i32 literal
0000a5e: 6a                                        ; i32.add
0000a5f: 2a                                        ; f32.load
0000a60: 02                                        ; alignment
0000a61: 00                                        ; load offset
0000a62: 21                                        ; local.set
0000a63: 0d                                        ; local index
0000a64: 23                                        ; global.get
0000a65: 0e                                        ; global index
0000a66: 41                                        ; i32.const
0000a67: 08                                        ; i32 literal
0000a68: 6a                                        ; i32.add
0000a69: 20                                        ; local.get
0000a6a: 0b                                        ; local index
0000a6b: 41                                        ; i32.const
0000a6c: 0c                                        ; i32 literal
0000a6d: 6c                                        ; i32.mul
0000a6e: 6a                                        ; i32.add
0000a6f: 28                                        ; i32.load
0000a70: 02                                        ; alignment
0000a71: 00                                        ; load offset
0000a72: 41                                        ; i32.const
0000a73: 08                                        ; i32 literal
0000a74: 6a                                        ; i32.add
0000a75: 2a                                        ; f32.load
0000a76: 02                                        ; alignment
0000a77: 00                                        ; load offset
0000a78: 21                                        ; local.set
0000a79: 0e                                        ; local index
0000a7a: 20                                        ; local.get
0000a7b: 05                                        ; local index
0000a7c: 20                                        ; local.get
0000a7d: 06                                        ; local index
0000a7e: 20                                        ; local.get
0000a7f: 07                                        ; local index
0000a80: 20                                        ; local.get
0000a81: 0c                                        ; local index
0000a82: 20                                        ; local.get
0000a83: 0d                                        ; local index
0000a84: 20                                        ; local.get
0000a85: 0e                                        ; local index
0000a86: 10                                        ; call
0000a87: 1a                                        ; function index
0000a88: 04                                        ; if
0000a89: 40                                        ; void
0000a8a: 23                                        ; global.get
0000a8b: 0f                                        ; global index
0000a8c: 41                                        ; i32.const
0000a8d: 08                                        ; i32 literal
0000a8e: 6a                                        ; i32.add
0000a8f: 20                                        ; local.get
0000a90: 0b                                        ; local index
0000a91: 41                                        ; i32.const
0000a92: 04                                        ; i32 literal
0000a93: 6c                                        ; i32.mul
0000a94: 6a                                        ; i32.add
0000a95: 28                                        ; i32.load
0000a96: 02                                        ; alignment
0000a97: 00                                        ; load offset
0000a98: 41                                        ; i32.const
0000a99: 00                                        ; i32 literal
0000a9a: 6a                                        ; i32.add
0000a9b: 2a                                        ; f32.load
0000a9c: 02                                        ; alignment
0000a9d: 00                                        ; load offset
0000a9e: 21                                        ; local.set
0000a9f: 0f                                        ; local index
0000aa0: 23                                        ; global.get
0000aa1: 0f                                        ; global index
0000aa2: 41                                        ; i32.const
0000aa3: 08                                        ; i32 literal
0000aa4: 6a                                        ; i32.add
0000aa5: 20                                        ; local.get
0000aa6: 0b                                        ; local index
0000aa7: 41                                        ; i32.const
0000aa8: 04                                        ; i32 literal
0000aa9: 6c                                        ; i32.mul
0000aaa: 6a                                        ; i32.add
0000aab: 28                                        ; i32.load
0000aac: 02                                        ; alignment
0000aad: 00                                        ; load offset
0000aae: 41                                        ; i32.const
0000aaf: 04                                        ; i32 literal
0000ab0: 6a                                        ; i32.add
0000ab1: 2a                                        ; f32.load
0000ab2: 02                                        ; alignment
0000ab3: 00                                        ; load offset
0000ab4: 21                                        ; local.set
0000ab5: 10                                        ; local index
0000ab6: 20                                        ; local.get
0000ab7: 0c                                        ; local index
0000ab8: 20                                        ; local.get
0000ab9: 05                                        ; local index
0000aba: 93                                        ; f32.sub
0000abb: 21                                        ; local.set
0000abc: 11                                        ; local index
0000abd: 20                                        ; local.get
0000abe: 0d                                        ; local index
0000abf: 20                                        ; local.get
0000ac0: 06                                        ; local index
0000ac1: 93                                        ; f32.sub
0000ac2: 21                                        ; local.set
0000ac3: 12                                        ; local index
0000ac4: 20                                        ; local.get
0000ac5: 11                                        ; local index
0000ac6: 20                                        ; local.get
0000ac7: 11                                        ; local index
0000ac8: 94                                        ; f32.mul
0000ac9: 20                                        ; local.get
0000aca: 12                                        ; local index
0000acb: 20                                        ; local.get
0000acc: 12                                        ; local index
0000acd: 94                                        ; f32.mul
0000ace: 92                                        ; f32.add
0000acf: bb                                        ; f64.promote_f32
0000ad0: 10                                        ; call
0000ad1: 01                                        ; function index
0000ad2: 21                                        ; local.set
0000ad3: 13                                        ; local index
0000ad4: 20                                        ; local.get
0000ad5: 11                                        ; local index
0000ad6: bb                                        ; f64.promote_f32
0000ad7: 20                                        ; local.get
0000ad8: 13                                        ; local index
0000ad9: a3                                        ; f64.div
0000ada: b6                                        ; f32.demote_f64
0000adb: 21                                        ; local.set
0000adc: 11                                        ; local index
0000add: 20                                        ; local.get
0000ade: 12                                        ; local index
0000adf: bb                                        ; f64.promote_f32
0000ae0: 20                                        ; local.get
0000ae1: 13                                        ; local index
0000ae2: a3                                        ; f64.div
0000ae3: b6                                        ; f32.demote_f64
0000ae4: 21                                        ; local.set
0000ae5: 12                                        ; local index
0000ae6: 20                                        ; local.get
0000ae7: 11                                        ; local index
0000ae8: 20                                        ; local.get
0000ae9: 08                                        ; local index
0000aea: 94                                        ; f32.mul
0000aeb: 20                                        ; local.get
0000aec: 12                                        ; local index
0000aed: 20                                        ; local.get
0000aee: 09                                        ; local index
0000aef: 94                                        ; f32.mul
0000af0: 92                                        ; f32.add
0000af1: 21                                        ; local.set
0000af2: 14                                        ; local index
0000af3: 20                                        ; local.get
0000af4: 11                                        ; local index
0000af5: 20                                        ; local.get
0000af6: 0f                                        ; local index
0000af7: 94                                        ; f32.mul
0000af8: 20                                        ; local.get
0000af9: 12                                        ; local index
0000afa: 20                                        ; local.get
0000afb: 10                                        ; local index
0000afc: 94                                        ; f32.mul
0000afd: 92                                        ; f32.add
0000afe: 21                                        ; local.set
0000aff: 15                                        ; local index
0000b00: 20                                        ; local.get
0000b01: 14                                        ; local index
0000b02: 20                                        ; local.get
0000b03: 15                                        ; local index
0000b04: 93                                        ; f32.sub
0000b05: 41                                        ; i32.const
0000b06: 00                                        ; i32 literal
0000b07: b2                                        ; f32.convert_i32_s
0000b08: 5f                                        ; f32.le
0000b09: 45                                        ; i32.eqz
0000b0a: 04                                        ; if
0000b0b: 40                                        ; void
0000b0c: 20                                        ; local.get
0000b0d: 07                                        ; local index
0000b0e: 20                                        ; local.get
0000b0f: 0e                                        ; local index
0000b10: 92                                        ; f32.add
0000b11: 21                                        ; local.set
0000b12: 16                                        ; local index
0000b13: 20                                        ; local.get
0000b14: 07                                        ; local index
0000b15: 20                                        ; local.get
0000b16: 0e                                        ; local index
0000b17: 93                                        ; f32.sub
0000b18: 21                                        ; local.set
0000b19: 17                                        ; local index
0000b1a: 20                                        ; local.get
0000b1b: 14                                        ; local index
0000b1c: 20                                        ; local.get
0000b1d: 17                                        ; local index
0000b1e: 94                                        ; f32.mul
0000b1f: 41                                        ; i32.const
0000b20: 02                                        ; i32 literal
0000b21: b2                                        ; f32.convert_i32_s
0000b22: 20                                        ; local.get
0000b23: 0e                                        ; local index
0000b24: 94                                        ; f32.mul
0000b25: 20                                        ; local.get
0000b26: 15                                        ; local index
0000b27: 94                                        ; f32.mul
0000b28: 92                                        ; f32.add
0000b29: bb                                        ; f64.promote_f32
0000b2a: 20                                        ; local.get
0000b2b: 16                                        ; local index
0000b2c: bb                                        ; f64.promote_f32
0000b2d: a3                                        ; f64.div
0000b2e: 21                                        ; local.set
0000b2f: 18                                        ; local index
0000b30: 41                                        ; i32.const
0000b31: 02                                        ; i32 literal
0000b32: b2                                        ; f32.convert_i32_s
0000b33: 20                                        ; local.get
0000b34: 07                                        ; local index
0000b35: 94                                        ; f32.mul
0000b36: 20                                        ; local.get
0000b37: 14                                        ; local index
0000b38: 94                                        ; f32.mul
0000b39: 20                                        ; local.get
0000b3a: 15                                        ; local index
0000b3b: 20                                        ; local.get
0000b3c: 17                                        ; local index
0000b3d: 94                                        ; f32.mul
0000b3e: 93                                        ; f32.sub
0000b3f: bb                                        ; f64.promote_f32
0000b40: 20                                        ; local.get
0000b41: 16                                        ; local index
0000b42: bb                                        ; f64.promote_f32
0000b43: a3                                        ; f64.div
0000b44: 21                                        ; local.set
0000b45: 19                                        ; local index
0000b46: 20                                        ; local.get
0000b47: 18                                        ; local index
0000b48: 20                                        ; local.get
0000b49: 14                                        ; local index
0000b4a: bb                                        ; f64.promote_f32
0000b4b: a1                                        ; f64.sub
0000b4c: 21                                        ; local.set
0000b4d: 1a                                        ; local index
0000b4e: 20                                        ; local.get
0000b4f: 19                                        ; local index
0000b50: 20                                        ; local.get
0000b51: 15                                        ; local index
0000b52: bb                                        ; f64.promote_f32
0000b53: a1                                        ; f64.sub
0000b54: 21                                        ; local.set
0000b55: 1b                                        ; local index
0000b56: 23                                        ; global.get
0000b57: 0f                                        ; global index
0000b58: 41                                        ; i32.const
0000b59: 08                                        ; i32 literal
0000b5a: 6a                                        ; i32.add
0000b5b: 20                                        ; local.get
0000b5c: 04                                        ; local index
0000b5d: 41                                        ; i32.const
0000b5e: 04                                        ; i32 literal
0000b5f: 6c                                        ; i32.mul
0000b60: 6a                                        ; i32.add
0000b61: 28                                        ; i32.load
0000b62: 02                                        ; alignment
0000b63: 00                                        ; load offset
0000b64: 41                                        ; i32.const
0000b65: 00                                        ; i32 literal
0000b66: 6a                                        ; i32.add
0000b67: 20                                        ; local.get
0000b68: 08                                        ; local index
0000b69: bb                                        ; f64.promote_f32
0000b6a: 20                                        ; local.get
0000b6b: 11                                        ; local index
0000b6c: bb                                        ; f64.promote_f32
0000b6d: 20                                        ; local.get
0000b6e: 1a                                        ; local index
0000b6f: a2                                        ; f64.mul
0000b70: a0                                        ; f64.add
0000b71: b6                                        ; f32.demote_f64
0000b72: 38                                        ; f32.store
0000b73: 02                                        ; alignment
0000b74: 00                                        ; store offset
0000b75: 23                                        ; global.get
0000b76: 0f                                        ; global index
0000b77: 41                                        ; i32.const
0000b78: 08                                        ; i32 literal
0000b79: 6a                                        ; i32.add
0000b7a: 20                                        ; local.get
0000b7b: 04                                        ; local index
0000b7c: 41                                        ; i32.const
0000b7d: 04                                        ; i32 literal
0000b7e: 6c                                        ; i32.mul
0000b7f: 6a                                        ; i32.add
0000b80: 28                                        ; i32.load
0000b81: 02                                        ; alignment
0000b82: 00                                        ; load offset
0000b83: 41                                        ; i32.const
0000b84: 04                                        ; i32 literal
0000b85: 6a                                        ; i32.add
0000b86: 20                                        ; local.get
0000b87: 09                                        ; local index
0000b88: bb                                        ; f64.promote_f32
0000b89: 20                                        ; local.get
0000b8a: 12                                        ; local index
0000b8b: bb                                        ; f64.promote_f32
0000b8c: 20                                        ; local.get
0000b8d: 1a                                        ; local index
0000b8e: a2                                        ; f64.mul
0000b8f: a0                                        ; f64.add
0000b90: b6                                        ; f32.demote_f64
0000b91: 38                                        ; f32.store
0000b92: 02                                        ; alignment
0000b93: 00                                        ; store offset
0000b94: 23                                        ; global.get
0000b95: 0f                                        ; global index
0000b96: 41                                        ; i32.const
0000b97: 08                                        ; i32 literal
0000b98: 6a                                        ; i32.add
0000b99: 20                                        ; local.get
0000b9a: 0b                                        ; local index
0000b9b: 41                                        ; i32.const
0000b9c: 04                                        ; i32 literal
0000b9d: 6c                                        ; i32.mul
0000b9e: 6a                                        ; i32.add
0000b9f: 28                                        ; i32.load
0000ba0: 02                                        ; alignment
0000ba1: 00                                        ; load offset
0000ba2: 41                                        ; i32.const
0000ba3: 00                                        ; i32 literal
0000ba4: 6a                                        ; i32.add
0000ba5: 20                                        ; local.get
0000ba6: 0f                                        ; local index
0000ba7: bb                                        ; f64.promote_f32
0000ba8: 20                                        ; local.get
0000ba9: 11                                        ; local index
0000baa: bb                                        ; f64.promote_f32
0000bab: 20                                        ; local.get
0000bac: 1b                                        ; local index
0000bad: a2                                        ; f64.mul
0000bae: a0                                        ; f64.add
0000baf: b6                                        ; f32.demote_f64
0000bb0: 38                                        ; f32.store
0000bb1: 02                                        ; alignment
0000bb2: 00                                        ; store offset
0000bb3: 23                                        ; global.get
0000bb4: 0f                                        ; global index
0000bb5: 41                                        ; i32.const
0000bb6: 08                                        ; i32 literal
0000bb7: 6a                                        ; i32.add
0000bb8: 20                                        ; local.get
0000bb9: 0b                                        ; local index
0000bba: 41                                        ; i32.const
0000bbb: 04                                        ; i32 literal
0000bbc: 6c                                        ; i32.mul
0000bbd: 6a                                        ; i32.add
0000bbe: 28                                        ; i32.load
0000bbf: 02                                        ; alignment
0000bc0: 00                                        ; load offset
0000bc1: 41                                        ; i32.const
0000bc2: 04                                        ; i32 literal
0000bc3: 6a                                        ; i32.add
0000bc4: 20                                        ; local.get
0000bc5: 10                                        ; local index
0000bc6: bb                                        ; f64.promote_f32
0000bc7: 20                                        ; local.get
0000bc8: 12                                        ; local index
0000bc9: bb                                        ; f64.promote_f32
0000bca: 20                                        ; local.get
0000bcb: 1b                                        ; local index
0000bcc: a2                                        ; f64.mul
0000bcd: a0                                        ; f64.add
0000bce: b6                                        ; f32.demote_f64
0000bcf: 38                                        ; f32.store
0000bd0: 02                                        ; alignment
0000bd1: 00                                        ; store offset
0000bd2: 20                                        ; local.get
0000bd3: 0a                                        ; local index
0000bd4: 41                                        ; i32.const
0000bd5: 00                                        ; i32 literal
0000bd6: 6a                                        ; i32.add
0000bd7: 28                                        ; i32.load
0000bd8: 02                                        ; alignment
0000bd9: 00                                        ; load offset
0000bda: 21                                        ; local.set
0000bdb: 0a                                        ; local index
0000bdc: 0b                                        ; end
0000bdd: 05                                        ; else
0000bde: 20                                        ; local.get
0000bdf: 0a                                        ; local index
0000be0: 41                                        ; i32.const
0000be1: 00                                        ; i32 literal
0000be2: 6a                                        ; i32.add
0000be3: 28                                        ; i32.load
0000be4: 02                                        ; alignment
0000be5: 00                                        ; load offset
0000be6: 21                                        ; local.set
0000be7: 0a                                        ; local index
0000be8: 0b                                        ; end
0000be9: 0c                                        ; br
0000bea: 00                                        ; break depth
0000beb: 0b                                        ; end
0000bec: 0b                                        ; end
0000bed: 20                                        ; local.get
0000bee: 03                                        ; local index
0000bef: 41                                        ; i32.const
0000bf0: 00                                        ; i32 literal
0000bf1: 6a                                        ; i32.add
0000bf2: 28                                        ; i32.load
0000bf3: 02                                        ; alignment
0000bf4: 00                                        ; load offset
0000bf5: 21                                        ; local.set
0000bf6: 03                                        ; local index
0000bf7: 0c                                        ; br
0000bf8: 00                                        ; break depth
0000bf9: 0b                                        ; end
0000bfa: 0b                                        ; end
0000bfb: 20                                        ; local.get
0000bfc: 02                                        ; local index
0000bfd: 41                                        ; i32.const
0000bfe: 01                                        ; i32 literal
0000bff: 6a                                        ; i32.add
0000c00: 21                                        ; local.set
0000c01: 02                                        ; local index
0000c02: 0c                                        ; br
0000c03: 00                                        ; break depth
0000c04: 0b                                        ; end
0000c05: 0b                                        ; end
0000c06: 20                                        ; local.get
0000c07: 00                                        ; local index
0000c08: 41                                        ; i32.const
0000c09: 01                                        ; i32 literal
0000c0a: 6a                                        ; i32.add
0000c0b: 21                                        ; local.set
0000c0c: 00                                        ; local index
0000c0d: 0c                                        ; br
0000c0e: 00                                        ; break depth
0000c0f: 0b                                        ; end
0000c10: 0b                                        ; end
0000c11: 0b                                        ; end
; move data: [93b, c12) -> [93c, c13)
000093a: d705                                      ; FIXUP func body size
; function body 11
0000c13: 00                                        ; func body size (guess)
0000c14: 00                                        ; local decl count
0000c15: 10                                        ; call
0000c16: 16                                        ; function index
0000c17: 20                                        ; local.get
0000c18: 00                                        ; local index
0000c19: 20                                        ; local.get
0000c1a: 01                                        ; local index
0000c1b: 10                                        ; call
0000c1c: 17                                        ; function index
0000c1d: 10                                        ; call
0000c1e: 18                                        ; function index
0000c1f: 0b                                        ; end
0000c13: 0c                                        ; FIXUP func body size
; function body 12
0000c20: 00                                        ; func body size (guess)
0000c21: 01                                        ; local decl count
0000c22: 05                                        ; local type count
0000c23: 7f                                        ; i32
0000c24: 20                                        ; local.get
0000c25: 00                                        ; local index
0000c26: 20                                        ; local.get
0000c27: 02                                        ; local index
0000c28: 92                                        ; f32.add
0000c29: 20                                        ; local.get
0000c2a: 03                                        ; local index
0000c2b: 20                                        ; local.get
0000c2c: 05                                        ; local index
0000c2d: 93                                        ; f32.sub
0000c2e: 5d                                        ; f32.lt
0000c2f: 20                                        ; local.get
0000c30: 00                                        ; local index
0000c31: 20                                        ; local.get
0000c32: 02                                        ; local index
0000c33: 93                                        ; f32.sub
0000c34: 20                                        ; local.get
0000c35: 03                                        ; local index
0000c36: 20                                        ; local.get
0000c37: 05                                        ; local index
0000c38: 92                                        ; f32.add
0000c39: 5e                                        ; f32.gt
0000c3a: 6a                                        ; i32.add
0000c3b: 20                                        ; local.get
0000c3c: 01                                        ; local index
0000c3d: 20                                        ; local.get
0000c3e: 02                                        ; local index
0000c3f: 92                                        ; f32.add
0000c40: 20                                        ; local.get
0000c41: 04                                        ; local index
0000c42: 20                                        ; local.get
0000c43: 05                                        ; local index
0000c44: 93                                        ; f32.sub
0000c45: 5d                                        ; f32.lt
0000c46: 6a                                        ; i32.add
0000c47: 20                                        ; local.get
0000c48: 01                                        ; local index
0000c49: 20                                        ; local.get
0000c4a: 02                                        ; local index
0000c4b: 93                                        ; f32.sub
0000c4c: 20                                        ; local.get
0000c4d: 04                                        ; local index
0000c4e: 20                                        ; local.get
0000c4f: 05                                        ; local index
0000c50: 92                                        ; f32.add
0000c51: 5e                                        ; f32.gt
0000c52: 6a                                        ; i32.add
0000c53: 04                                        ; if
0000c54: 40                                        ; void
0000c55: 41                                        ; i32.const
0000c56: 00                                        ; i32 literal
0000c57: 0f                                        ; return
0000c58: 0b                                        ; end
0000c59: 20                                        ; local.get
0000c5a: 03                                        ; local index
0000c5b: 20                                        ; local.get
0000c5c: 00                                        ; local index
0000c5d: 93                                        ; f32.sub
0000c5e: bb                                        ; f64.promote_f32
0000c5f: 41                                        ; i32.const
0000c60: 02                                        ; i32 literal
0000c61: b2                                        ; f32.convert_i32_s
0000c62: bb                                        ; f64.promote_f32
0000c63: 10                                        ; call
0000c64: 00                                        ; function index
0000c65: 20                                        ; local.get
0000c66: 04                                        ; local index
0000c67: 20                                        ; local.get
0000c68: 01                                        ; local index
0000c69: 93                                        ; f32.sub
0000c6a: bb                                        ; f64.promote_f32
0000c6b: 41                                        ; i32.const
0000c6c: 02                                        ; i32 literal
0000c6d: b2                                        ; f32.convert_i32_s
0000c6e: bb                                        ; f64.promote_f32
0000c6f: 10                                        ; call
0000c70: 00                                        ; function index
0000c71: a0                                        ; f64.add
0000c72: 10                                        ; call
0000c73: 01                                        ; function index
0000c74: 20                                        ; local.get
0000c75: 02                                        ; local index
0000c76: 20                                        ; local.get
0000c77: 05                                        ; local index
0000c78: 92                                        ; f32.add
0000c79: bb                                        ; f64.promote_f32
0000c7a: 65                                        ; f64.le
0000c7b: 0f                                        ; return
0000c7c: 0b                                        ; end
0000c20: 5c                                        ; FIXUP func body size
; function body 13
0000c7d: 00                                        ; func body size (guess)
0000c7e: 00                                        ; local decl count
0000c7f: 41                                        ; i32.const
0000c80: 9009                                      ; i32 literal
0000c82: 0f                                        ; return
0000c83: 0b                                        ; end
0000c7d: 06                                        ; FIXUP func body size
; function body 14
0000c84: 00                                        ; func body size (guess)
0000c85: 00                                        ; local decl count
0000c86: 41                                        ; i32.const
0000c87: a009                                      ; i32 literal
0000c89: 0f                                        ; return
0000c8a: 0b                                        ; end
0000c84: 06                                        ; FIXUP func body size
; function body 15
0000c8b: 00                                        ; func body size (guess)
0000c8c: 00                                        ; local decl count
0000c8d: 41                                        ; i32.const
0000c8e: f809                                      ; i32 literal
0000c90: 0f                                        ; return
0000c91: 0b                                        ; end
0000c8b: 06                                        ; FIXUP func body size
; function body 16
0000c92: 00                                        ; func body size (guess)
0000c93: 00                                        ; local decl count
0000c94: 41                                        ; i32.const
0000c95: 800a                                      ; i32 literal
0000c97: 0f                                        ; return
0000c98: 0b                                        ; end
0000c92: 06                                        ; FIXUP func body size
; function body 17
0000c99: 00                                        ; func body size (guess)
0000c9a: 00                                        ; local decl count
0000c9b: 41                                        ; i32.const
0000c9c: 900a                                      ; i32 literal
0000c9e: 0f                                        ; return
0000c9f: 0b                                        ; end
0000c99: 06                                        ; FIXUP func body size
; function body 18
0000ca0: 00                                        ; func body size (guess)
0000ca1: 00                                        ; local decl count
0000ca2: 41                                        ; i32.const
0000ca3: d80a                                      ; i32 literal
0000ca5: 0f                                        ; return
0000ca6: 0b                                        ; end
0000ca0: 06                                        ; FIXUP func body size
; function body 19
0000ca7: 00                                        ; func body size (guess)
0000ca8: 00                                        ; local decl count
0000ca9: 41                                        ; i32.const
0000caa: e80a                                      ; i32 literal
0000cac: 0f                                        ; return
0000cad: 0b                                        ; end
0000ca7: 06                                        ; FIXUP func body size
; function body 20
0000cae: 00                                        ; func body size (guess)
0000caf: 00                                        ; local decl count
0000cb0: 41                                        ; i32.const
0000cb1: 900b                                      ; i32 literal
0000cb3: 0f                                        ; return
0000cb4: 0b                                        ; end
0000cae: 06                                        ; FIXUP func body size
; function body 21
0000cb5: 00                                        ; func body size (guess)
0000cb6: 00                                        ; local decl count
0000cb7: 41                                        ; i32.const
0000cb8: 980b                                      ; i32 literal
0000cba: 0f                                        ; return
0000cbb: 0b                                        ; end
0000cb5: 06                                        ; FIXUP func body size
; function body 22
0000cbc: 00                                        ; func body size (guess)
0000cbd: 00                                        ; local decl count
0000cbe: 10                                        ; call
0000cbf: 25                                        ; function index
0000cc0: 10                                        ; call
0000cc1: 26                                        ; function index
0000cc2: 10                                        ; call
0000cc3: 27                                        ; function index
0000cc4: 10                                        ; call
0000cc5: 28                                        ; function index
0000cc6: 10                                        ; call
0000cc7: 29                                        ; function index
0000cc8: 0b                                        ; end
0000cbc: 0c                                        ; FIXUP func body size
; function body 23
0000cc9: 00                                        ; func body size (guess)
0000cca: 01                                        ; local decl count
0000ccb: 04                                        ; local type count
0000ccc: 7f                                        ; i32
0000ccd: 41                                        ; i32.const
0000cce: 08                                        ; i32 literal
0000ccf: 23                                        ; global.get
0000cd0: 0d                                        ; global index
0000cd1: 41                                        ; i32.const
0000cd2: 01                                        ; i32 literal
0000cd3: 6b                                        ; i32.sub
0000cd4: 41                                        ; i32.const
0000cd5: 0c                                        ; i32 literal
0000cd6: 6c                                        ; i32.mul
0000cd7: 6a                                        ; i32.add
0000cd8: 41                                        ; i32.const
0000cd9: 07                                        ; i32 literal
0000cda: 10                                        ; call
0000cdb: 0e                                        ; function index
0000cdc: 21                                        ; local.set
0000cdd: 00                                        ; local index
0000cde: 20                                        ; local.get
0000cdf: 00                                        ; local index
0000ce0: 41                                        ; i32.const
0000ce1: d804                                      ; i32 literal
0000ce3: 36                                        ; i32.store
0000ce4: 02                                        ; alignment
0000ce5: 00                                        ; store offset
0000ce6: 20                                        ; local.get
0000ce7: 00                                        ; local index
0000ce8: 41                                        ; i32.const
0000ce9: 04                                        ; i32 literal
0000cea: 6a                                        ; i32.add
0000ceb: 23                                        ; global.get
0000cec: 0d                                        ; global index
0000ced: 41                                        ; i32.const
0000cee: 01                                        ; i32 literal
0000cef: 6b                                        ; i32.sub
0000cf0: 36                                        ; i32.store
0000cf1: 02                                        ; alignment
0000cf2: 00                                        ; store offset
0000cf3: 20                                        ; local.get
0000cf4: 00                                        ; local index
0000cf5: 24                                        ; global.set
0000cf6: 0e                                        ; global index
0000cf7: 41                                        ; i32.const
0000cf8: 08                                        ; i32 literal
0000cf9: 23                                        ; global.get
0000cfa: 0d                                        ; global index
0000cfb: 41                                        ; i32.const
0000cfc: 01                                        ; i32 literal
0000cfd: 6b                                        ; i32.sub
0000cfe: 41                                        ; i32.const
0000cff: 04                                        ; i32 literal
0000d00: 6c                                        ; i32.mul
0000d01: 6a                                        ; i32.add
0000d02: 41                                        ; i32.const
0000d03: 07                                        ; i32 literal
0000d04: 10                                        ; call
0000d05: 0e                                        ; function index
0000d06: 21                                        ; local.set
0000d07: 01                                        ; local index
0000d08: 20                                        ; local.get
0000d09: 01                                        ; local index
0000d0a: 41                                        ; i32.const
0000d0b: 0d                                        ; i32 literal
0000d0c: 36                                        ; i32.store
0000d0d: 02                                        ; alignment
0000d0e: 00                                        ; store offset
0000d0f: 20                                        ; local.get
0000d10: 01                                        ; local index
0000d11: 41                                        ; i32.const
0000d12: 04                                        ; i32 literal
0000d13: 6a                                        ; i32.add
0000d14: 23                                        ; global.get
0000d15: 0d                                        ; global index
0000d16: 41                                        ; i32.const
0000d17: 01                                        ; i32 literal
0000d18: 6b                                        ; i32.sub
0000d19: 36                                        ; i32.store
0000d1a: 02                                        ; alignment
0000d1b: 00                                        ; store offset
0000d1c: 20                                        ; local.get
0000d1d: 01                                        ; local index
0000d1e: 24                                        ; global.set
0000d1f: 0f                                        ; global index
0000d20: 41                                        ; i32.const
0000d21: 08                                        ; i32 literal
0000d22: 23                                        ; global.get
0000d23: 0d                                        ; global index
0000d24: 41                                        ; i32.const
0000d25: 04                                        ; i32 literal
0000d26: 6c                                        ; i32.mul
0000d27: 41                                        ; i32.const
0000d28: 01                                        ; i32 literal
0000d29: 6b                                        ; i32.sub
0000d2a: 41                                        ; i32.const
0000d2b: 04                                        ; i32 literal
0000d2c: 6c                                        ; i32.mul
0000d2d: 6a                                        ; i32.add
0000d2e: 41                                        ; i32.const
0000d2f: 07                                        ; i32 literal
0000d30: 10                                        ; call
0000d31: 0e                                        ; function index
0000d32: 21                                        ; local.set
0000d33: 02                                        ; local index
0000d34: 20                                        ; local.get
0000d35: 02                                        ; local index
0000d36: 41                                        ; i32.const
0000d37: 9002                                      ; i32 literal
0000d39: 36                                        ; i32.store
0000d3a: 02                                        ; alignment
0000d3b: 00                                        ; store offset
0000d3c: 20                                        ; local.get
0000d3d: 02                                        ; local index
0000d3e: 41                                        ; i32.const
0000d3f: 04                                        ; i32 literal
0000d40: 6a                                        ; i32.add
0000d41: 23                                        ; global.get
0000d42: 0d                                        ; global index
0000d43: 41                                        ; i32.const
0000d44: 04                                        ; i32 literal
0000d45: 6c                                        ; i32.mul
0000d46: 41                                        ; i32.const
0000d47: 01                                        ; i32 literal
0000d48: 6b                                        ; i32.sub
0000d49: 36                                        ; i32.store
0000d4a: 02                                        ; alignment
0000d4b: 00                                        ; store offset
0000d4c: 20                                        ; local.get
0000d4d: 02                                        ; local index
0000d4e: 24                                        ; global.set
0000d4f: 10                                        ; global index
0000d50: 41                                        ; i32.const
0000d51: 08                                        ; i32 literal
0000d52: 23                                        ; global.get
0000d53: 0c                                        ; global index
0000d54: 41                                        ; i32.const
0000d55: 01                                        ; i32 literal
0000d56: 6b                                        ; i32.sub
0000d57: 41                                        ; i32.const
0000d58: 04                                        ; i32 literal
0000d59: 6c                                        ; i32.mul
0000d5a: 6a                                        ; i32.add
0000d5b: 41                                        ; i32.const
0000d5c: 07                                        ; i32 literal
0000d5d: 10                                        ; call
0000d5e: 0e                                        ; function index
0000d5f: 21                                        ; local.set
0000d60: 03                                        ; local index
0000d61: 20                                        ; local.get
0000d62: 03                                        ; local index
0000d63: 41                                        ; i32.const
0000d64: 9002                                      ; i32 literal
0000d66: 36                                        ; i32.store
0000d67: 02                                        ; alignment
0000d68: 00                                        ; store offset
0000d69: 20                                        ; local.get
0000d6a: 03                                        ; local index
0000d6b: 41                                        ; i32.const
0000d6c: 04                                        ; i32 literal
0000d6d: 6a                                        ; i32.add
0000d6e: 23                                        ; global.get
0000d6f: 0c                                        ; global index
0000d70: 41                                        ; i32.const
0000d71: 01                                        ; i32 literal
0000d72: 6b                                        ; i32.sub
0000d73: 36                                        ; i32.store
0000d74: 02                                        ; alignment
0000d75: 00                                        ; store offset
0000d76: 20                                        ; local.get
0000d77: 03                                        ; local index
0000d78: 24                                        ; global.set
0000d79: 11                                        ; global index
0000d7a: 0b                                        ; end
; move data: [cca, d7b) -> [ccb, d7c)
0000cc9: b101                                      ; FIXUP func body size
; function body 24
0000d7c: 00                                        ; func body size (guess)
0000d7d: 00                                        ; local decl count
0000d7e: 0b                                        ; end
0000d7c: 02                                        ; FIXUP func body size
; function body 25
0000d7f: 00                                        ; func body size (guess)
0000d80: 01                                        ; local decl count
0000d81: 05                                        ; local type count
0000d82: 7f                                        ; i32
0000d83: 41                                        ; i32.const
0000d84: 00                                        ; i32 literal
0000d85: 21                                        ; local.set
0000d86: 00                                        ; local index
0000d87: 41                                        ; i32.const
0000d88: 9808                                      ; i32 literal
0000d8a: 10                                        ; call
0000d8b: 08                                        ; function index
0000d8c: 41                                        ; i32.const
0000d8d: 00                                        ; i32 literal
0000d8e: 21                                        ; local.set
0000d8f: 01                                        ; local index
0000d90: 02                                        ; block
0000d91: 40                                        ; void
0000d92: 03                                        ; loop
0000d93: 40                                        ; void
0000d94: 20                                        ; local.get
0000d95: 01                                        ; local index
0000d96: 23                                        ; global.get
0000d97: 11                                        ; global index
0000d98: 41                                        ; i32.const
0000d99: 04                                        ; i32 literal
0000d9a: 6a                                        ; i32.add
0000d9b: 28                                        ; i32.load
0000d9c: 02                                        ; alignment
0000d9d: 00                                        ; load offset
0000d9e: 41                                        ; i32.const
0000d9f: 01                                        ; i32 literal
0000da0: 6b                                        ; i32.sub
0000da1: 4a                                        ; i32.gt_s
0000da2: 0d                                        ; br_if
0000da3: 01                                        ; break depth
0000da4: 10                                        ; call
0000da5: 10                                        ; function index
0000da6: 21                                        ; local.set
0000da7: 00                                        ; local index
0000da8: 23                                        ; global.get
0000da9: 11                                        ; global index
0000daa: 41                                        ; i32.const
0000dab: 08                                        ; i32 literal
0000dac: 6a                                        ; i32.add
0000dad: 20                                        ; local.get
0000dae: 01                                        ; local index
0000daf: 41                                        ; i32.const
0000db0: 04                                        ; i32 literal
0000db1: 6c                                        ; i32.mul
0000db2: 6a                                        ; i32.add
0000db3: 20                                        ; local.get
0000db4: 00                                        ; local index
0000db5: 36                                        ; i32.store
0000db6: 02                                        ; alignment
0000db7: 00                                        ; store offset
0000db8: 41                                        ; i32.const
0000db9: b008                                      ; i32 literal
0000dbb: 20                                        ; local.get
0000dbc: 01                                        ; local index
0000dbd: 10                                        ; call
0000dbe: 0d                                        ; function index
0000dbf: 10                                        ; call
0000dc0: 0a                                        ; function index
0000dc1: 41                                        ; i32.const
0000dc2: b808                                      ; i32 literal
0000dc4: 10                                        ; call
0000dc5: 0a                                        ; function index
0000dc6: 20                                        ; local.get
0000dc7: 00                                        ; local index
0000dc8: 10                                        ; call
0000dc9: 0d                                        ; function index
0000dca: 10                                        ; call
0000dcb: 0a                                        ; function index
0000dcc: 10                                        ; call
0000dcd: 08                                        ; function index
0000dce: 41                                        ; i32.const
0000dcf: 00                                        ; i32 literal
0000dd0: 21                                        ; local.set
0000dd1: 02                                        ; local index
0000dd2: 02                                        ; block
0000dd3: 40                                        ; void
0000dd4: 03                                        ; loop
0000dd5: 40                                        ; void
0000dd6: 20                                        ; local.get
0000dd7: 02                                        ; local index
0000dd8: 20                                        ; local.get
0000dd9: 00                                        ; local index
0000dda: 41                                        ; i32.const
0000ddb: 04                                        ; i32 literal
0000ddc: 6a                                        ; i32.add
0000ddd: 28                                        ; i32.load
0000dde: 02                                        ; alignment
0000ddf: 00                                        ; load offset
0000de0: 41                                        ; i32.const
0000de1: 01                                        ; i32 literal
0000de2: 6b                                        ; i32.sub
0000de3: 4a                                        ; i32.gt_s
0000de4: 0d                                        ; br_if
0000de5: 01                                        ; break depth
0000de6: 20                                        ; local.get
0000de7: 00                                        ; local index
0000de8: 41                                        ; i32.const
0000de9: 08                                        ; i32 literal
0000dea: 6a                                        ; i32.add
0000deb: 20                                        ; local.get
0000dec: 02                                        ; local index
0000ded: 41                                        ; i32.const
0000dee: 04                                        ; i32 literal
0000def: 6c                                        ; i32.mul
0000df0: 6a                                        ; i32.add
0000df1: 10                                        ; call
0000df2: 11                                        ; function index
0000df3: 36                                        ; i32.store
0000df4: 02                                        ; alignment
0000df5: 00                                        ; store offset
0000df6: 20                                        ; local.get
0000df7: 02                                        ; local index
0000df8: 41                                        ; i32.const
0000df9: 01                                        ; i32 literal
0000dfa: 6a                                        ; i32.add
0000dfb: 21                                        ; local.set
0000dfc: 02                                        ; local index
0000dfd: 0c                                        ; br
0000dfe: 00                                        ; break depth
0000dff: 0b                                        ; end
0000e00: 0b                                        ; end
0000e01: 20                                        ; local.get
0000e02: 01                                        ; local index
0000e03: 41                                        ; i32.const
0000e04: 01                                        ; i32 literal
0000e05: 6a                                        ; i32.add
0000e06: 21                                        ; local.set
0000e07: 01                                        ; local index
0000e08: 0c                                        ; br
0000e09: 00                                        ; break depth
0000e0a: 0b                                        ; end
0000e0b: 0b                                        ; end
0000e0c: 41                                        ; i32.const
0000e0d: 00                                        ; i32 literal
0000e0e: 21                                        ; local.set
0000e0f: 03                                        ; local index
0000e10: 02                                        ; block
0000e11: 40                                        ; void
0000e12: 03                                        ; loop
0000e13: 40                                        ; void
0000e14: 20                                        ; local.get
0000e15: 03                                        ; local index
0000e16: 23                                        ; global.get
0000e17: 0f                                        ; global index
0000e18: 41                                        ; i32.const
0000e19: 04                                        ; i32 literal
0000e1a: 6a                                        ; i32.add
0000e1b: 28                                        ; i32.load
0000e1c: 02                                        ; alignment
0000e1d: 00                                        ; load offset
0000e1e: 41                                        ; i32.const
0000e1f: 01                                        ; i32 literal
0000e20: 6b                                        ; i32.sub
0000e21: 4a                                        ; i32.gt_s
0000e22: 0d                                        ; br_if
0000e23: 01                                        ; break depth
0000e24: 23                                        ; global.get
0000e25: 0f                                        ; global index
0000e26: 41                                        ; i32.const
0000e27: 08                                        ; i32 literal
0000e28: 6a                                        ; i32.add
0000e29: 20                                        ; local.get
0000e2a: 03                                        ; local index
0000e2b: 41                                        ; i32.const
0000e2c: 04                                        ; i32 literal
0000e2d: 6c                                        ; i32.mul
0000e2e: 6a                                        ; i32.add
0000e2f: 10                                        ; call
0000e30: 12                                        ; function index
0000e31: 36                                        ; i32.store
0000e32: 02                                        ; alignment
0000e33: 00                                        ; store offset
0000e34: 20                                        ; local.get
0000e35: 03                                        ; local index
0000e36: 41                                        ; i32.const
0000e37: 01                                        ; i32 literal
0000e38: 6a                                        ; i32.add
0000e39: 21                                        ; local.set
0000e3a: 03                                        ; local index
0000e3b: 0c                                        ; br
0000e3c: 00                                        ; break depth
0000e3d: 0b                                        ; end
0000e3e: 0b                                        ; end
0000e3f: 41                                        ; i32.const
0000e40: c008                                      ; i32 literal
0000e42: 23                                        ; global.get
0000e43: 0f                                        ; global index
0000e44: 10                                        ; call
0000e45: 0d                                        ; function index
0000e46: 10                                        ; call
0000e47: 0a                                        ; function index
0000e48: 10                                        ; call
0000e49: 08                                        ; function index
0000e4a: 41                                        ; i32.const
0000e4b: 00                                        ; i32 literal
0000e4c: 21                                        ; local.set
0000e4d: 04                                        ; local index
0000e4e: 02                                        ; block
0000e4f: 40                                        ; void
0000e50: 03                                        ; loop
0000e51: 40                                        ; void
0000e52: 20                                        ; local.get
0000e53: 04                                        ; local index
0000e54: 23                                        ; global.get
0000e55: 10                                        ; global index
0000e56: 41                                        ; i32.const
0000e57: 04                                        ; i32 literal
0000e58: 6a                                        ; i32.add
0000e59: 28                                        ; i32.load
0000e5a: 02                                        ; alignment
0000e5b: 00                                        ; load offset
0000e5c: 41                                        ; i32.const
0000e5d: 01                                        ; i32 literal
0000e5e: 6b                                        ; i32.sub
0000e5f: 4a                                        ; i32.gt_s
0000e60: 0d                                        ; br_if
0000e61: 01                                        ; break depth
0000e62: 23                                        ; global.get
0000e63: 10                                        ; global index
0000e64: 41                                        ; i32.const
0000e65: 08                                        ; i32 literal
0000e66: 6a                                        ; i32.add
0000e67: 20                                        ; local.get
0000e68: 04                                        ; local index
0000e69: 41                                        ; i32.const
0000e6a: 04                                        ; i32 literal
0000e6b: 6c                                        ; i32.mul
0000e6c: 6a                                        ; i32.add
0000e6d: 10                                        ; call
0000e6e: 11                                        ; function index
0000e6f: 36                                        ; i32.store
0000e70: 02                                        ; alignment
0000e71: 00                                        ; store offset
0000e72: 41                                        ; i32.const
0000e73: d808                                      ; i32 literal
0000e75: 20                                        ; local.get
0000e76: 04                                        ; local index
0000e77: 10                                        ; call
0000e78: 0d                                        ; function index
0000e79: 10                                        ; call
0000e7a: 0a                                        ; function index
0000e7b: 41                                        ; i32.const
0000e7c: f008                                      ; i32 literal
0000e7e: 10                                        ; call
0000e7f: 0a                                        ; function index
0000e80: 23                                        ; global.get
0000e81: 10                                        ; global index
0000e82: 41                                        ; i32.const
0000e83: 08                                        ; i32 literal
0000e84: 6a                                        ; i32.add
0000e85: 20                                        ; local.get
0000e86: 04                                        ; local index
0000e87: 41                                        ; i32.const
0000e88: 04                                        ; i32 literal
0000e89: 6c                                        ; i32.mul
0000e8a: 6a                                        ; i32.add
0000e8b: 28                                        ; i32.load
0000e8c: 02                                        ; alignment
0000e8d: 00                                        ; load offset
0000e8e: 10                                        ; call
0000e8f: 0d                                        ; function index
0000e90: 10                                        ; call
0000e91: 0a                                        ; function index
0000e92: 10                                        ; call
0000e93: 08                                        ; function index
0000e94: 20                                        ; local.get
0000e95: 04                                        ; local index
0000e96: 41                                        ; i32.const
0000e97: 01                                        ; i32 literal
0000e98: 6a                                        ; i32.add
0000e99: 21                                        ; local.set
0000e9a: 04                                        ; local index
0000e9b: 0c                                        ; br
0000e9c: 00                                        ; break depth
0000e9d: 0b                                        ; end
0000e9e: 0b                                        ; end
0000e9f: 41                                        ; i32.const
0000ea0: f808                                      ; i32 literal
0000ea2: 23                                        ; global.get
0000ea3: 10                                        ; global index
0000ea4: 10                                        ; call
0000ea5: 0d                                        ; function index
0000ea6: 10                                        ; call
0000ea7: 0a                                        ; function index
0000ea8: 10                                        ; call
0000ea9: 08                                        ; function index
0000eaa: 0b                                        ; end
; move data: [d80, eab) -> [d81, eac)
0000d7f: ab02                                      ; FIXUP func body size
; function body 26
0000eac: 00                                        ; func body size (guess)
0000ead: 00                                        ; local decl count
0000eae: 0b                                        ; end
0000eac: 02                                        ; FIXUP func body size
; function body 27
0000eaf: 00                                        ; func body size (guess)
0000eb0: 00                                        ; local decl count
0000eb1: 0b                                        ; end
0000eaf: 02                                        ; FIXUP func body size
; move data: [394, eb2) -> [395, eb3)
0000393: 9e16                                      ; FIXUP section size
; section "Data" (11)
0000eb3: 0b                                        ; section code
0000eb4: 00                                        ; section size (guess)
0000eb5: 1a                                        ; num data segments
; data segment header 0
0000eb6: 00                                      
0000eb7: 41                                        ; i32.const
0000eb8: 8807                                      ; i32 literal
0000eba: 0b                                        ; end
0000ebb: 15                                        ; data segment size
; data segment data 0
0000ebc: 6172 7261 7928 6f66 2063 6972 636c 6529 
0000ecc: 203d 2026 00                              ; data segment data
; data segment header 1
0000ed1: 00                                      
0000ed2: 41                                        ; i32.const
0000ed3: a007                                      ; i32 literal
0000ed5: 0b                                        ; end
0000ed6: 2b                                        ; data segment size
; data segment data 1
0000ed7: 656e 7375 7265 206e 6f20 636f 6c6c 6973 
0000ee7: 696f 6e73 2066 6f72 2073 7461 7274 696e 
0000ef7: 6720 706f 7369 7469 6f6e 00               ; data segment data
; data segment header 2
0000f02: 00                                      
0000f03: 41                                        ; i32.const
0000f04: d007                                      ; i32 literal
0000f06: 0b                                        ; end
0000f07: 0b                                        ; data segment size
; data segment data 2
0000f08: 6369 7263 6c65 203d 2023 00               ; data segment data
; data segment header 3
0000f13: 00                                      
0000f14: 41                                        ; i32.const
0000f15: e007                                      ; i32 literal
0000f17: 0b                                        ; end
0000f18: 04                                        ; data segment size
; data segment data 3
0000f19: 2028 2600                                 ; data segment data
; data segment header 4
0000f1d: 00                                      
0000f1e: 41                                        ; i32.const
0000f1f: e807                                      ; i32 literal
0000f21: 0b                                        ; end
0000f22: 02                                        ; data segment size
; data segment data 4
0000f23: 2900                                      ; data segment data
; data segment header 5
0000f25: 00                                      
0000f26: 41                                        ; i32.const
0000f27: f007                                      ; i32 literal
0000f29: 0b                                        ; end
0000f2a: 0c                                        ; data segment size
; data segment data 5
0000f2b: 6369 7263 6c65 5620 3d20 2600             ; data segment data
; data segment header 6
0000f37: 00                                      
0000f38: 41                                        ; i32.const
0000f39: 8008                                      ; i32 literal
0000f3b: 0b                                        ; end
0000f3c: 11                                        ; data segment size
; data segment data 6
0000f3d: 4c6f 6f70 2066 6f72 206e 6578 742e 2e2e 
0000f4d: 00                                        ; data segment data
; data segment header 7
0000f4e: 00                                      
0000f4f: 41                                        ; i32.const
0000f50: 9808                                      ; i32 literal
0000f52: 0b                                        ; end
0000f53: 17                                        ; data segment size
; data segment data 7
0000f54: 496e 6974 6961 6c69 7a65 2061 7070 6c69 
0000f64: 6361 7469 6f6e 00                         ; data segment data
; data segment header 8
0000f6b: 00                                      
0000f6c: 41                                        ; i32.const
0000f6d: b008                                      ; i32 literal
0000f6f: 0b                                        ; end
0000f70: 06                                        ; data segment size
; data segment data 8
0000f71: 726f 7720 2300                            ; data segment data
; data segment header 9
0000f77: 00                                      
0000f78: 41                                        ; i32.const
0000f79: b808                                      ; i32 literal
0000f7b: 0b                                        ; end
0000f7c: 05                                        ; data segment size
; data segment data 9
0000f7d: 203d 2026 00                              ; data segment data
; data segment header 10
0000f82: 00                                      
0000f83: 41                                        ; i32.const
0000f84: c008                                      ; i32 literal
0000f86: 0b                                        ; end
0000f87: 11                                        ; data segment size
; data segment data 10
0000f88: 6369 7263 6c65 7664 6174 6120 3d3e 2026 
0000f98: 00                                        ; data segment data
; data segment header 11
0000f99: 00                                      
0000f9a: 41                                        ; i32.const
0000f9b: d808                                      ; i32 literal
0000f9d: 0b                                        ; end
0000f9e: 16                                        ; data segment size
; data segment data 11
0000f9f: 6e65 7720 6365 6c6c 2063 6972 636c 6520 
0000faf: 666f 7220 2300                            ; data segment data
; data segment header 12
0000fb5: 00                                      
0000fb6: 41                                        ; i32.const
0000fb7: f008                                      ; i32 literal
0000fb9: 0b                                        ; end
0000fba: 06                                        ; data segment size
; data segment data 12
0000fbb: 2061 7420 2600                            ; data segment data
; data segment header 13
0000fc1: 00                                      
0000fc2: 41                                        ; i32.const
0000fc3: f808                                      ; i32 literal
0000fc5: 0b                                        ; end
0000fc6: 11                                        ; data segment size
; data segment data 13
0000fc7: 6365 6c6c 6369 7263 6c65 7320 3d3e 2026 
0000fd7: 00                                        ; data segment data
; data segment header 14
0000fd8: 00                                      
0000fd9: 41                                        ; i32.const
0000fda: 9009                                      ; i32 literal
0000fdc: 0b                                        ; end
0000fdd: 0b                                        ; data segment size
; data segment data 14
0000fde: 5765 6247 4c2d 4465 6d6f 00               ; data segment data
; data segment header 15
0000fe9: 00                                      
0000fea: 41                                        ; i32.const
0000feb: a009                                      ; i32 literal
0000fed: 0b                                        ; end
0000fee: 51                                        ; data segment size
; data segment data 15
0000fef: 5765 6241 7373 656d 626c 7920 636f 6e76 
0000fff: 6572 7369 6f6e 2064 656d 6f6e 7374 7261 
000100f: 7469 6e67 2074 6865 2066 6173 7465 722d 
000101f: 7065 7266 6f72 6d69 6e67 2067 7269 6420 
000102f: 6f66 206c 696e 6b65 642d 6c69 7374 732e 
000103f: 00                                        ; data segment data
; data segment header 16
0001040: 00                                      
0001041: 41                                        ; i32.const
0001042: f809                                      ; i32 literal
0001044: 0b                                        ; end
0001045: 04                                        ; data segment size
; data segment data 16
0001046: 4d49 5400                                 ; data segment data
; data segment header 17
000104a: 00                                      
000104b: 41                                        ; i32.const
000104c: 800a                                      ; i32 literal
000104e: 0b                                        ; end
000104f: 0b                                        ; data segment size
; data segment data 17
0001050: 5765 6247 4c2d 4465 6d6f 00               ; data segment data
; data segment header 18
000105b: 00                                      
000105c: 41                                        ; i32.const
000105d: 900a                                      ; i32 literal
000105f: 0b                                        ; end
0001060: 46                                        ; data segment size
; data segment data 18
0001061: 6874 7470 733a 2f2f 6769 7468 7562 2e63 
0001071: 6f6d 2f67 7579 6265 6466 6f72 642f 7761 
0001081: 736d 2d64 656d 6f2f 626c 6f62 2f6d 6173 
0001091: 7465 722f 6e61 7469 7665 2f64 656d 6f2d 
00010a1: 6f70 742e 6300                            ; data segment data
; data segment header 19
00010a7: 00                                      
00010a8: 41                                        ; i32.const
00010a9: d80a                                      ; i32 literal
00010ab: 0b                                        ; end
00010ac: 0e                                        ; data segment size
; data segment data 19
00010ad: 7661 6e69 6c6c 6176 622e 6170 7000        ; data segment data
; data segment header 20
00010bb: 00                                      
00010bc: 41                                        ; i32.const
00010bd: e80a                                      ; i32 literal
00010bf: 0b                                        ; end
00010c0: 25                                        ; data segment size
; data segment data 20
00010c1: 3833 6361 3262 3933 2d34 6535 372d 3464 
00010d1: 3434 2d62 3262 632d 3136 3332 3532 6139 
00010e1: 3330 3564 00                              ; data segment data
; data segment header 21
00010e6: 00                                      
00010e7: 41                                        ; i32.const
00010e8: 900b                                      ; i32 literal
00010ea: 0b                                        ; end
00010eb: 08                                        ; data segment size
; data segment data 21
00010ec: 312e 302e 302e 3000                       ; data segment data
; data segment header 22
00010f4: 00                                      
00010f5: 41                                        ; i32.const
00010f6: 980b                                      ; i32 literal
00010f8: 0b                                        ; end
00010f9: 08                                        ; data segment size
; data segment data 22
00010fa: 312e 302e 302e 3000                       ; data segment data
; data segment header 23
0001102: 00                                      
0001103: 41                                        ; i32.const
0001104: 0d                                        ; i32 literal
0001105: 0b                                        ; end
0001106: fd01                                      ; data segment size
; data segment data 23
0001108: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0001118: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0001128: 496b 4e70 636d 4e73 5a56 5969 4c43 4a6a 
0001138: 6247 467a 6331 3970 5a43 4936 4d54 4d73 
0001148: 496d 5a70 5a57 786b 6379 4936 6579 4a32 
0001158: 6543 4936 6579 4a6e 5a57 356c 636d 6c6a 
0001168: 496a 7062 5853 7769 636d 4633 496a 6f69 
0001178: 5a6a 4d79 4969 7769 6448 6c77 5a53 4936 
0001188: 4d33 3073 496e 5a35 496a 7037 496d 646c 
0001198: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
00011a8: 5958 6369 4f69 4a6d 4d7a 4969 4c43 4a30 
00011b8: 6558 426c 496a 6f7a 6658 3073 496d 6c7a 
00011c8: 5533 5279 6457 4e30 496a 706d 5957 787a 
00011d8: 5a53 7769 6257 5630 6147 396b 6379 4936 
00011e8: 6533 3073 496d 3568 6257 567a 6347 466a 
00011f8: 5a53 4936 626e 5673 6248 303d 00          ; data segment data
; data segment header 24
0001205: 00                                      
0001206: 41                                        ; i32.const
0001207: 9002                                      ; i32 literal
0001209: 0b                                        ; end
000120a: a102                                      ; data segment size
; data segment data 24
000120c: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
000121c: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
000122c: 496b 4e6c 6247 7844 6158 4a6a 6247 5569 
000123c: 4c43 4a6a 6247 467a 6331 3970 5a43 4936 
000124c: 4d6a 6379 4c43 4a6d 6157 5673 5a48 4d69 
000125c: 4f6e 7369 626d 5634 6443 4936 6579 4a6e 
000126c: 5a57 356c 636d 6c6a 496a 7062 5853 7769 
000127c: 636d 4633 496a 6f69 577a 4933 4d6c 3144 
000128c: 5a57 7873 5132 6c79 5932 786c 4969 7769 
000129c: 6448 6c77 5a53 4936 4d54 4239 4c43 4a6a 
00012ac: 6158 4a6a 6247 564a 626d 526c 6543 4936 
00012bc: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
00012cc: 5853 7769 636d 4633 496a 6f69 6154 4d79 
00012dc: 4969 7769 6448 6c77 5a53 4936 4d58 3139 
00012ec: 4c43 4a70 6331 4e30 636e 566a 6443 4936 
00012fc: 5a6d 4673 6332 5573 496d 316c 6447 6876 
000130c: 5a48 4d69 4f6e 7439 4c43 4a75 5957 316c 
000131c: 6333 4268 5932 5569 4f6d 3531 6247 7839 
000132c: 00                                        ; data segment data
; data segment header 25
000132d: 00                                      
000132e: 41                                        ; i32.const
000132f: d804                                      ; i32 literal
0001331: 0b                                        ; end
0001332: ad02                                      ; data segment size
; data segment data 25
0001334: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0001344: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0001354: 496b 4e70 636d 4e73 5a53 4973 496d 4e73 
0001364: 5958 4e7a 5832 6c6b 496a 6f32 4d44 4173 
0001374: 496d 5a70 5a57 786b 6379 4936 6579 4a35 
0001384: 496a 7037 496d 646c 626d 5679 6157 4d69 
0001394: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a6d 
00013a4: 4d7a 4969 4c43 4a30 6558 426c 496a 6f7a 
00013b4: 6653 7769 6543 4936 6579 4a6e 5a57 356c 
00013c4: 636d 6c6a 496a 7062 5853 7769 636d 4633 
00013d4: 496a 6f69 5a6a 4d79 4969 7769 6448 6c77 
00013e4: 5a53 4936 4d33 3073 496e 4969 4f6e 7369 
00013f4: 5a32 5675 5a58 4a70 5979 4936 5731 3073 
0001404: 496e 4a68 6479 4936 496d 597a 4d69 4973 
0001414: 496e 5235 6347 5569 4f6a 4e39 6653 7769 
0001424: 6158 4e54 6448 4a31 5933 5169 4f6e 5279 
0001434: 6457 5573 496d 316c 6447 6876 5a48 4d69 
0001444: 4f6e 7439 4c43 4a75 5957 316c 6333 4268 
0001454: 5932 5569 4f6d 3531 6247 7839 00          ; data segment data
; move data: [eb5, 1461) -> [eb6, 1462)
0000eb4: ac0b                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0141 0c60 027c 7c01 
0000010: 7c60 017c 017c 6000 017c 6002 7f7f 0060 
0000020: 017f 0060 037f 7f7f 017f 6002 7f7f 017f 
0000030: 6001 7f01 7f60 0001 7f60 027d 7d00 6000 
0000040: 0060 067d 7d7d 7d7d 7d01 7f02 d501 0f04 
0000050: 4d61 7468 0370 6f77 0000 044d 6174 6804 
0000060: 7371 7274 0001 044d 6174 6803 6578 7000 
0000070: 0104 4d61 7468 0363 6f73 0001 044d 6174 
0000080: 6806 7261 6e64 6f6d 0002 044d 6174 6804 
0000090: 6365 696c 0001 044d 6174 6805 666c 6f6f 
00000a0: 7200 0102 4743 0961 6464 4f62 6a65 6374 
00000b0: 0003 0763 6f6e 736f 6c65 036c 6f67 0004 
00000c0: 0673 7472 696e 6707 7265 706c 6163 6500 
00000d0: 0506 7374 7269 6e67 0361 6464 0006 0673 
00000e0: 7472 696e 6706 6c65 6e67 7468 0007 0673 
00000f0: 7472 696e 6707 696e 6465 784f 6600 0606 
0000100: 7374 7269 6e67 0874 6f53 7472 696e 6700 
0000110: 0703 656e 760a 6279 7465 6368 756e 6b73 
0000120: 0200 0103 1d1c 0608 0808 0808 0809 0a09 
0000130: 0a09 0b08 0808 0808 0808 0808 0a0a 0a0a 
0000140: 0a0a 069b 0112 7f01 41a0 0b0b 7c01 4469 
0000150: 5714 8b0a bf05 400b 7c01 4418 2d44 54fb 
0000160: 2109 400b 7f01 41ff ffff ff07 0b7e 0142 
0000170: ffff ffff ffff ffff ff00 0b7d 0143 ffff 
0000180: 7f7f 0b7c 0144 ffff ffff ffff ef7f 0b7f 
0000190: 0141 8080 8080 780b 7e01 4280 8080 8080 
00001a0: 8080 8080 7f0b 7d01 43ff ff7f ff0b 7c01 
00001b0: 44ff ffff ffff ffef ff0b 7f01 41f8 000b 
00001c0: 7f01 41c6 000b 7f01 41e4 000b 7f01 4100 
00001d0: 0b7f 0141 000b 7f01 4100 0b7f 0141 000b 
00001e0: 07ac 030f 1467 6c6f 6261 6c2e 4765 744d 
00001f0: 656d 6f72 7953 697a 6500 0f18 416c 676f 
0000200: 7269 7468 6d2e 6765 7443 6972 636c 6543 
0000210: 6f75 6e74 0013 1d41 6c67 6f72 6974 686d 
0000220: 2e67 6574 4369 7263 6c65 4461 7461 4f66 
0000230: 6673 6574 0014 0e41 6c67 6f72 6974 686d 
0000240: 2e69 6e69 7400 1512 416c 676f 7269 7468 
0000250: 6d2e 7469 6d65 5374 6570 0019 1a4d 6174 
0000260: 682e 6465 7465 6374 4369 7263 6c65 436f 
0000270: 6c6c 6973 696f 6e00 1a1a 4173 7365 6d62 
0000280: 6c79 496e 666f 2e41 7373 656d 626c 7954 
0000290: 6974 6c65 001b 2041 7373 656d 626c 7949 
00002a0: 6e66 6f2e 4173 7365 6d62 6c79 4465 7363 
00002b0: 7269 7074 696f 6e00 1c1c 4173 7365 6d62 
00002c0: 6c79 496e 666f 2e41 7373 656d 626c 7943 
00002d0: 6f6d 7061 6e79 001d 1c41 7373 656d 626c 
00002e0: 7949 6e66 6f2e 4173 7365 6d62 6c79 5072 
00002f0: 6f64 7563 7400 1e1e 4173 7365 6d62 6c79 
0000300: 496e 666f 2e41 7373 656d 626c 7943 6f70 
0000310: 7972 6967 6874 001f 1e41 7373 656d 626c 
0000320: 7949 6e66 6f2e 4173 7365 6d62 6c79 5472 
0000330: 6164 656d 6172 6b00 2011 4173 7365 6d62 
0000340: 6c79 496e 666f 2e47 7569 6400 211c 4173 
0000350: 7365 6d62 6c79 496e 666f 2e41 7373 656d 
0000360: 626c 7956 6572 7369 6f6e 0022 2041 7373 
0000370: 656d 626c 7949 6e66 6f2e 4173 7365 6d62 
0000380: 6c79 4669 6c65 5665 7273 696f 6e00 2308 
0000390: 0124 0a9e 161c 3a01 027f 2300 2102 2002 
00003a0: 2000 6a24 0023 0041 086f 2103 2003 0440 
00003b0: 4108 2003 6b21 0323 0020 036a 2400 0523 
00003c0: 0041 086a 2400 0b20 0220 0110 0720 020f 
00003d0: 0b05 0023 000f 0b2d 0105 7f41 0823 0b41 
00003e0: 016b 4104 6c6a 4107 100e 2104 2004 4190 
00003f0: 0236 0200 2004 4104 6a23 0b41 016b 3602 
0000400: 0020 040f 0b24 0101 7f41 0841 9002 100e 
0000410: 2100 2000 4100 6a41 0036 0200 2000 4104 
0000420: 6a41 0036 0200 2000 0f0b 2501 017f 4108 
0000430: 410d 100e 2100 2000 4100 6a10 04b6 3802 
0000440: 0020 0041 046a 1004 b638 0200 2000 0f0b 
0000450: 0500 230d 0f0b 0500 230e 0f0b 8e04 0403 
0000460: 7d03 7f03 7d01 7f43 0000 0000 2102 4300 
0000470: 0000 0021 0343 0000 0000 2104 4100 2105 
0000480: 4188 0723 0e10 0d10 0a10 0841 0021 0602 
0000490: 4003 4020 0623 0d41 016b 4a0d 0141 0021 
00004a0: 0743 0000 0000 2108 4300 0000 0021 0943 
00004b0: 0000 0000 210a 0240 0340 4100 2107 2000 
00004c0: bb10 04a2 b621 0820 01bb 1004 a2b6 2109 
00004d0: 1004 4108 b7a2 1002 44ee 5a42 3ee8 4937 
00004e0: 40a3 1005 b621 0a20 0020 0820 0a92 9341 
00004f0: 00b2 5d20 0820 0a93 4100 b25d 6a20 0120 
0000500: 0920 0a92 9341 00b2 5d6a 2009 200a 9341 
0000510: 00b2 5d6a 0440 4101 2107 0541 a007 1008 
0000520: 4100 210b 0240 0340 200b 2006 4101 6b4a 
0000530: 0d01 230e 4108 6a20 0b41 0c6c 6a28 0200 
0000540: 2105 2005 4104 6a2a 0200 2102 2005 4100 
0000550: 6a2a 0200 2103 2005 4108 6a2a 0200 2104 
0000560: 2008 2009 200a 2002 2003 2004 101a 0440 
0000570: 4101 2107 4101 0d05 0b20 0b41 016a 210b 
0000580: 0c00 0b0b 0b20 0745 0d01 0c00 0b0b 230e 
0000590: 4108 6a20 0641 0c6c 6a41 046a 2008 3802 
00005a0: 0023 0e41 086a 2006 410c 6c6a 4100 6a20 
00005b0: 0938 0200 230e 4108 6a20 0641 0c6c 6a41 
00005c0: 086a 200a 3802 0041 d007 2006 100d 100a 
00005d0: 41e0 0710 0a23 0e41 086a 2006 410c 6c6a 
00005e0: 2802 0010 0d10 0a41 e807 100a 1008 41f0 
00005f0: 0723 0f41 086a 2006 4104 6c6a 2802 0010 
0000600: 0d10 0a10 0823 0f41 086a 2006 4104 6c6a 
0000610: 2802 0041 006a 1004 4400 0000 0000 00e0 
0000620: 3fa1 449a 9999 9999 99b9 3fa2 b638 0200 
0000630: 230f 4108 6a20 0641 046c 6a28 0200 4104 
0000640: 6a10 0444 0000 0000 0000 e03f a144 9a99 
0000650: 9999 9999 b93f a2b6 3802 0041 8008 1008 
0000660: 2006 4101 6a21 060c 000b 0b0b 5e01 037f 
0000670: 4100 2100 0240 0340 2000 230c 4101 6b4a 
0000680: 0d01 2311 4108 6a20 0041 046c 6a28 0200 
0000690: 2101 4100 2102 0240 0340 2002 230b 4101 
00006a0: 6b4a 0d01 2001 4108 6a20 0241 046c 6a41 
00006b0: 0036 0200 2002 4101 6a21 020c 000b 0b20 
00006c0: 0041 016a 2100 0c00 0b0b 0bee 0403 027f 
00006d0: 057d 087f 4100 2102 4100 2103 0240 0340 
00006e0: 2003 230d 4101 6b4a 0d01 230e 4108 6a20 
00006f0: 0341 0c6c 6a28 0200 4104 6a2a 0200 2104 
0000700: 230e 4108 6a20 0341 0c6c 6a28 0200 4100 
0000710: 6a2a 0200 2105 230e 4108 6a20 0341 0c6c 
0000720: 6a28 0200 4108 6a2a 0200 2106 230f 4108 
0000730: 6a20 0341 046c 6a28 0200 4100 6a2a 0200 
0000740: 2107 230f 4108 6a20 0341 046c 6a28 0200 
0000750: 4104 6a2a 0200 2108 2008 bb44 2d43 1ceb 
0000760: e236 1a3f a0b6 2108 2000 2004 2006 9293 
0000770: 4100 b25d 2007 4100 b25e 6c20 0420 0693 
0000780: 4100 b25d 2007 4100 b25d 6c6a 0440 4300 
0000790: 0000 0020 0793 2107 0b20 0120 0520 0692 
00007a0: 9341 00b2 5d20 0841 00b2 5e6c 2005 2006 
00007b0: 9341 00b2 5d20 0841 00b2 5d6c 6a04 4043 
00007c0: 0000 0000 2008 9321 080b 230e 4108 6a20 
00007d0: 0341 0c6c 6a41 046a 2004 2007 9238 0200 
00007e0: 230e 4108 6a20 0341 0c6c 6a41 006a 2005 
00007f0: 2008 9238 0200 230f 4108 6a20 0341 046c 
0000800: 6a28 0200 4100 6a20 0738 0200 230f 4108 
0000810: 6a20 0341 046c 6a28 0200 4104 6a20 0838 
0000820: 0200 2004 2006 93bb 2000 bba3 230c b7a2 
0000830: 1006 aa21 0920 0420 0692 bb20 00bb a323 
0000840: 0cb7 a210 06aa 210a 2005 2006 93bb 2001 
0000850: bba3 230b b7a2 1006 aa21 0b20 0520 0692 
0000860: bb20 01bb a323 0bb7 a210 06aa 210c 2009 
0000870: 4100 4804 4041 0021 090b 200a 230c 4e04 
0000880: 4023 0c41 016b 210a 0b20 0b41 0048 0440 
0000890: 4100 210b 0b20 0c23 0b4e 0440 230b 4101 
00008a0: 6b21 0c0b 2009 210d 0240 0340 200d 200a 
00008b0: 4a0d 0123 1141 086a 200d 4104 6c6a 2802 
00008c0: 0021 0e20 0b21 0f02 4003 4020 0f20 0c4a 
00008d0: 0d01 2310 4108 6a20 0241 046c 6a28 0200 
00008e0: 2110 2002 4101 6a21 0220 1041 046a 2003 
00008f0: 3602 0020 1041 006a 200e 4108 6a20 0f41 
0000900: 046c 6a28 0200 3602 0020 0e41 086a 200f 
0000910: 4104 6c6a 2010 3602 0020 0f41 016a 210f 
0000920: 0c00 0b0b 200d 4101 6a21 0d0c 000b 0b20 
0000930: 0341 016a 2103 0c00 0b0b 0bd7 0507 057f 
0000940: 057d 027f 077d 017c 047d 047c 4100 2100 
0000950: 0240 0340 2000 230c 4101 6b4a 0d01 2311 
0000960: 4108 6a20 0041 046c 6a28 0200 2101 4100 
0000970: 2102 0240 0340 2002 230b 4101 6b4a 0d01 
0000980: 2001 4108 6a20 0241 046c 6a28 0200 2103 
0000990: 0240 0340 2003 4100 4645 450d 0120 0341 
00009a0: 046a 2802 0021 0423 0e41 086a 2004 410c 
00009b0: 6c6a 2802 0041 046a 2a02 0021 0523 0e41 
00009c0: 086a 2004 410c 6c6a 2802 0041 006a 2a02 
00009d0: 0021 0623 0e41 086a 2004 410c 6c6a 2802 
00009e0: 0041 086a 2a02 0021 0723 0f41 086a 2004 
00009f0: 4104 6c6a 2802 0041 006a 2a02 0021 0823 
0000a00: 0f41 086a 2004 4104 6c6a 2802 0041 046a 
0000a10: 2a02 0021 0920 0321 0a20 0a41 006a 2802 
0000a20: 0021 0a02 4003 4020 0a41 0046 4545 0d01 
0000a30: 200a 4104 6a28 0200 210b 230e 4108 6a20 
0000a40: 0b41 0c6c 6a28 0200 4104 6a2a 0200 210c 
0000a50: 230e 4108 6a20 0b41 0c6c 6a28 0200 4100 
0000a60: 6a2a 0200 210d 230e 4108 6a20 0b41 0c6c 
0000a70: 6a28 0200 4108 6a2a 0200 210e 2005 2006 
0000a80: 2007 200c 200d 200e 101a 0440 230f 4108 
0000a90: 6a20 0b41 046c 6a28 0200 4100 6a2a 0200 
0000aa0: 210f 230f 4108 6a20 0b41 046c 6a28 0200 
0000ab0: 4104 6a2a 0200 2110 200c 2005 9321 1120 
0000ac0: 0d20 0693 2112 2011 2011 9420 1220 1294 
0000ad0: 92bb 1001 2113 2011 bb20 13a3 b621 1120 
0000ae0: 12bb 2013 a3b6 2112 2011 2008 9420 1220 
0000af0: 0994 9221 1420 1120 0f94 2012 2010 9492 
0000b00: 2115 2014 2015 9341 00b2 5f45 0440 2007 
0000b10: 200e 9221 1620 0720 0e93 2117 2014 2017 
0000b20: 9441 02b2 200e 9420 1594 92bb 2016 bba3 
0000b30: 2118 4102 b220 0794 2014 9420 1520 1794 
0000b40: 93bb 2016 bba3 2119 2018 2014 bba1 211a 
0000b50: 2019 2015 bba1 211b 230f 4108 6a20 0441 
0000b60: 046c 6a28 0200 4100 6a20 08bb 2011 bb20 
0000b70: 1aa2 a0b6 3802 0023 0f41 086a 2004 4104 
0000b80: 6c6a 2802 0041 046a 2009 bb20 12bb 201a 
0000b90: a2a0 b638 0200 230f 4108 6a20 0b41 046c 
0000ba0: 6a28 0200 4100 6a20 0fbb 2011 bb20 1ba2 
0000bb0: a0b6 3802 0023 0f41 086a 200b 4104 6c6a 
0000bc0: 2802 0041 046a 2010 bb20 12bb 201b a2a0 
0000bd0: b638 0200 200a 4100 6a28 0200 210a 0b05 
0000be0: 200a 4100 6a28 0200 210a 0b0c 000b 0b20 
0000bf0: 0341 006a 2802 0021 030c 000b 0b20 0241 
0000c00: 016a 2102 0c00 0b0b 2000 4101 6a21 000c 
0000c10: 000b 0b0b 0c00 1016 2000 2001 1017 1018 
0000c20: 0b5c 0105 7f20 0020 0292 2003 2005 935d 
0000c30: 2000 2002 9320 0320 0592 5e6a 2001 2002 
0000c40: 9220 0420 0593 5d6a 2001 2002 9320 0420 
0000c50: 0592 5e6a 0440 4100 0f0b 2003 2000 93bb 
0000c60: 4102 b2bb 1000 2004 2001 93bb 4102 b2bb 
0000c70: 1000 a010 0120 0220 0592 bb65 0f0b 0600 
0000c80: 4190 090f 0b06 0041 a009 0f0b 0600 41f8 
0000c90: 090f 0b06 0041 800a 0f0b 0600 4190 0a0f 
0000ca0: 0b06 0041 d80a 0f0b 0600 41e8 0a0f 0b06 
0000cb0: 0041 900b 0f0b 0600 4198 0b0f 0b0c 0010 
0000cc0: 2510 2610 2710 2810 290b b101 0104 7f41 
0000cd0: 0823 0d41 016b 410c 6c6a 4107 100e 2100 
0000ce0: 2000 41d8 0436 0200 2000 4104 6a23 0d41 
0000cf0: 016b 3602 0020 0024 0e41 0823 0d41 016b 
0000d00: 4104 6c6a 4107 100e 2101 2001 410d 3602 
0000d10: 0020 0141 046a 230d 4101 6b36 0200 2001 
0000d20: 240f 4108 230d 4104 6c41 016b 4104 6c6a 
0000d30: 4107 100e 2102 2002 4190 0236 0200 2002 
0000d40: 4104 6a23 0d41 046c 4101 6b36 0200 2002 
0000d50: 2410 4108 230c 4101 6b41 046c 6a41 0710 
0000d60: 0e21 0320 0341 9002 3602 0020 0341 046a 
0000d70: 230c 4101 6b36 0200 2003 2411 0b02 000b 
0000d80: ab02 0105 7f41 0021 0041 9808 1008 4100 
0000d90: 2101 0240 0340 2001 2311 4104 6a28 0200 
0000da0: 4101 6b4a 0d01 1010 2100 2311 4108 6a20 
0000db0: 0141 046c 6a20 0036 0200 41b0 0820 0110 
0000dc0: 0d10 0a41 b808 100a 2000 100d 100a 1008 
0000dd0: 4100 2102 0240 0340 2002 2000 4104 6a28 
0000de0: 0200 4101 6b4a 0d01 2000 4108 6a20 0241 
0000df0: 046c 6a10 1136 0200 2002 4101 6a21 020c 
0000e00: 000b 0b20 0141 016a 2101 0c00 0b0b 4100 
0000e10: 2103 0240 0340 2003 230f 4104 6a28 0200 
0000e20: 4101 6b4a 0d01 230f 4108 6a20 0341 046c 
0000e30: 6a10 1236 0200 2003 4101 6a21 030c 000b 
0000e40: 0b41 c008 230f 100d 100a 1008 4100 2104 
0000e50: 0240 0340 2004 2310 4104 6a28 0200 4101 
0000e60: 6b4a 0d01 2310 4108 6a20 0441 046c 6a10 
0000e70: 1136 0200 41d8 0820 0410 0d10 0a41 f008 
0000e80: 100a 2310 4108 6a20 0441 046c 6a28 0200 
0000e90: 100d 100a 1008 2004 4101 6a21 040c 000b 
0000ea0: 0b41 f808 2310 100d 100a 1008 0b02 000b 
0000eb0: 0200 0b0b ac0b 1a00 4188 070b 1561 7272 
0000ec0: 6179 286f 6620 6369 7263 6c65 2920 3d20 
0000ed0: 2600 0041 a007 0b2b 656e 7375 7265 206e 
0000ee0: 6f20 636f 6c6c 6973 696f 6e73 2066 6f72 
0000ef0: 2073 7461 7274 696e 6720 706f 7369 7469 
0000f00: 6f6e 0000 41d0 070b 0b63 6972 636c 6520 
0000f10: 3d20 2300 0041 e007 0b04 2028 2600 0041 
0000f20: e807 0b02 2900 0041 f007 0b0c 6369 7263 
0000f30: 6c65 5620 3d20 2600 0041 8008 0b11 4c6f 
0000f40: 6f70 2066 6f72 206e 6578 742e 2e2e 0000 
0000f50: 4198 080b 1749 6e69 7469 616c 697a 6520 
0000f60: 6170 706c 6963 6174 696f 6e00 0041 b008 
0000f70: 0b06 726f 7720 2300 0041 b808 0b05 203d 
0000f80: 2026 0000 41c0 080b 1163 6972 636c 6576 
0000f90: 6461 7461 203d 3e20 2600 0041 d808 0b16 
0000fa0: 6e65 7720 6365 6c6c 2063 6972 636c 6520 
0000fb0: 666f 7220 2300 0041 f008 0b06 2061 7420 
0000fc0: 2600 0041 f808 0b11 6365 6c6c 6369 7263 
0000fd0: 6c65 7320 3d3e 2026 0000 4190 090b 0b57 
0000fe0: 6562 474c 2d44 656d 6f00 0041 a009 0b51 
0000ff0: 5765 6241 7373 656d 626c 7920 636f 6e76 
0001000: 6572 7369 6f6e 2064 656d 6f6e 7374 7261 
0001010: 7469 6e67 2074 6865 2066 6173 7465 722d 
0001020: 7065 7266 6f72 6d69 6e67 2067 7269 6420 
0001030: 6f66 206c 696e 6b65 642d 6c69 7374 732e 
0001040: 0000 41f8 090b 044d 4954 0000 4180 0a0b 
0001050: 0b57 6562 474c 2d44 656d 6f00 0041 900a 
0001060: 0b46 6874 7470 733a 2f2f 6769 7468 7562 
0001070: 2e63 6f6d 2f67 7579 6265 6466 6f72 642f 
0001080: 7761 736d 2d64 656d 6f2f 626c 6f62 2f6d 
0001090: 6173 7465 722f 6e61 7469 7665 2f64 656d 
00010a0: 6f2d 6f70 742e 6300 0041 d80a 0b0e 7661 
00010b0: 6e69 6c6c 6176 622e 6170 7000 0041 e80a 
00010c0: 0b25 3833 6361 3262 3933 2d34 6535 372d 
00010d0: 3464 3434 2d62 3262 632d 3136 3332 3532 
00010e0: 6139 3330 3564 0000 4190 0b0b 0831 2e30 
00010f0: 2e30 2e30 0000 4198 0b0b 0831 2e30 2e30 
0001100: 2e30 0000 410d 0bfd 0165 794a 6a62 3231 
0001110: 745a 5735 3049 6a70 7564 5778 734c 434a 
0001120: 6a62 4746 7a63 7949 3649 6b4e 7063 6d4e 
0001130: 735a 5659 694c 434a 6a62 4746 7a63 3139 
0001140: 705a 4349 364d 544d 7349 6d5a 705a 5778 
0001150: 6b63 7949 3665 794a 3265 4349 3665 794a 
0001160: 6e5a 5735 6c63 6d6c 6a49 6a70 6258 5377 
0001170: 6963 6d46 3349 6a6f 695a 6a4d 7949 6977 
0001180: 6964 486c 775a 5349 364d 3330 7349 6e5a 
0001190: 3549 6a70 3749 6d64 6c62 6d56 7961 574d 
00011a0: 694f 6c74 644c 434a 7959 5863 694f 694a 
00011b0: 6d4d 7a49 694c 434a 3065 5842 6c49 6a6f 
00011c0: 7a66 5830 7349 6d6c 7a55 3352 7964 574e 
00011d0: 3049 6a70 6d59 5778 7a5a 5377 6962 5756 
00011e0: 3061 4739 6b63 7949 3665 3330 7349 6d35 
00011f0: 6862 5756 7a63 4746 6a5a 5349 3662 6e56 
0001200: 7362 4830 3d00 0041 9002 0ba1 0265 794a 
0001210: 6a62 3231 745a 5735 3049 6a70 7564 5778 
0001220: 734c 434a 6a62 4746 7a63 7949 3649 6b4e 
0001230: 6c62 4778 4461 584a 6a62 4755 694c 434a 
0001240: 6a62 4746 7a63 3139 705a 4349 364d 6a63 
0001250: 794c 434a 6d61 5756 735a 484d 694f 6e73 
0001260: 6962 6d56 3464 4349 3665 794a 6e5a 5735 
0001270: 6c63 6d6c 6a49 6a70 6258 5377 6963 6d46 
0001280: 3349 6a6f 6957 7a49 334d 6c31 445a 5778 
0001290: 7351 326c 7959 3278 6c49 6977 6964 486c 
00012a0: 775a 5349 364d 5442 394c 434a 6a61 584a 
00012b0: 6a62 4756 4a62 6d52 6c65 4349 3665 794a 
00012c0: 6e5a 5735 6c63 6d6c 6a49 6a70 6258 5377 
00012d0: 6963 6d46 3349 6a6f 6961 544d 7949 6977 
00012e0: 6964 486c 775a 5349 364d 5831 394c 434a 
00012f0: 7063 314e 3063 6e56 6a64 4349 365a 6d46 
0001300: 7363 3255 7349 6d31 6c64 4768 765a 484d 
0001310: 694f 6e74 394c 434a 7559 5731 6c63 3342 
0001320: 6859 3255 694f 6d35 3162 4778 3900 0041 
0001330: d804 0bad 0265 794a 6a62 3231 745a 5735 
0001340: 3049 6a70 7564 5778 734c 434a 6a62 4746 
0001350: 7a63 7949 3649 6b4e 7063 6d4e 735a 5349 
0001360: 7349 6d4e 7359 584e 7a58 326c 6b49 6a6f 
0001370: 324d 4441 7349 6d5a 705a 5778 6b63 7949 
0001380: 3665 794a 3549 6a70 3749 6d64 6c62 6d56 
0001390: 7961 574d 694f 6c74 644c 434a 7959 5863 
00013a0: 694f 694a 6d4d 7a49 694c 434a 3065 5842 
00013b0: 6c49 6a6f 7a66 5377 6965 4349 3665 794a 
00013c0: 6e5a 5735 6c63 6d6c 6a49 6a70 6258 5377 
00013d0: 6963 6d46 3349 6a6f 695a 6a4d 7949 6977 
00013e0: 6964 486c 775a 5349 364d 3330 7349 6e49 
00013f0: 694f 6e73 695a 3256 755a 584a 7059 7949 
0001400: 3657 3130 7349 6e4a 6864 7949 3649 6d59 
0001410: 7a4d 6949 7349 6e52 3563 4755 694f 6a4e 
0001420: 3966 5377 6961 584e 5464 484a 3159 3351 
0001430: 694f 6e52 7964 5755 7349 6d31 6c64 4768 
0001440: 765a 484d 694f 6e74 394c 434a 7559 5731 
0001450: 6c63 3342 6859 3255 694f 6d35 3162 4778 
0001460: 3900                                    
