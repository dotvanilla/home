0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 0a                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7c                                        ; f64
000000e: 7c                                        ; f64
000000f: 01                                        ; num results
0000010: 7c                                        ; f64
; type 1
0000011: 60                                        ; func
0000012: 01                                        ; num params
0000013: 7c                                        ; f64
0000014: 01                                        ; num results
0000015: 7c                                        ; f64
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 00                                        ; num results
; type 4
000001f: 60                                        ; func
0000020: 01                                        ; num params
0000021: 7f                                        ; i32
0000022: 01                                        ; num results
0000023: 7f                                        ; i32
; type 5
0000024: 60                                        ; func
0000025: 03                                        ; num params
0000026: 7f                                        ; i32
0000027: 7f                                        ; i32
0000028: 7f                                        ; i32
0000029: 01                                        ; num results
000002a: 7f                                        ; i32
; type 6
000002b: 60                                        ; func
000002c: 02                                        ; num params
000002d: 7f                                        ; i32
000002e: 7f                                        ; i32
000002f: 01                                        ; num results
0000030: 7f                                        ; i32
; type 7
0000031: 60                                        ; func
0000032: 03                                        ; num params
0000033: 7f                                        ; i32
0000034: 7f                                        ; i32
0000035: 7f                                        ; i32
0000036: 00                                        ; num results
; type 8
0000037: 60                                        ; func
0000038: 00                                        ; num params
0000039: 01                                        ; num results
000003a: 7f                                        ; i32
; type 9
000003b: 60                                        ; func
000003c: 00                                        ; num params
000003d: 00                                        ; num results
0000009: 34                                        ; FIXUP section size
; section "Import" (2)
000003e: 02                                        ; section code
000003f: 00                                        ; section size (guess)
0000040: 1b                                        ; num imports
; import header 0
0000041: 04                                        ; string length
0000042: 4d61 7468                                Math  ; import module name
0000046: 03                                        ; string length
0000047: 706f 77                                  pow  ; import field name
000004a: 00                                        ; import kind
000004b: 00                                        ; import signature index
; import header 1
000004c: 04                                        ; string length
000004d: 4d61 7468                                Math  ; import module name
0000051: 04                                        ; string length
0000052: 7371 7274                                sqrt  ; import field name
0000056: 00                                        ; import kind
0000057: 01                                        ; import signature index
; import header 2
0000058: 04                                        ; string length
0000059: 4d61 7468                                Math  ; import module name
000005d: 03                                        ; string length
000005e: 6578 70                                  exp  ; import field name
0000061: 00                                        ; import kind
0000062: 01                                        ; import signature index
; import header 3
0000063: 04                                        ; string length
0000064: 4d61 7468                                Math  ; import module name
0000068: 03                                        ; string length
0000069: 636f 73                                  cos  ; import field name
000006c: 00                                        ; import kind
000006d: 01                                        ; import signature index
; import header 4
000006e: 04                                        ; string length
000006f: 4d61 7468                                Math  ; import module name
0000073: 06                                        ; string length
0000074: 7261 6e64 6f6d                           random  ; import field name
000007a: 00                                        ; import kind
000007b: 02                                        ; import signature index
; import header 5
000007c: 04                                        ; string length
000007d: 4d61 7468                                Math  ; import module name
0000081: 04                                        ; string length
0000082: 6365 696c                                ceil  ; import field name
0000086: 00                                        ; import kind
0000087: 01                                        ; import signature index
; import header 6
0000088: 04                                        ; string length
0000089: 4d61 7468                                Math  ; import module name
000008d: 05                                        ; string length
000008e: 666c 6f6f 72                             floor  ; import field name
0000093: 00                                        ; import kind
0000094: 01                                        ; import signature index
; import header 7
0000095: 02                                        ; string length
0000096: 4743                                     GC  ; import module name
0000098: 09                                        ; string length
0000099: 6164 644f 626a 6563 74                   addObject  ; import field name
00000a2: 00                                        ; import kind
00000a3: 03                                        ; import signature index
; import header 8
00000a4: 04                                        ; string length
00000a5: 4d61 7468                                Math  ; import module name
00000a9: 05                                        ; string length
00000aa: 6973 4e61 4e                             isNaN  ; import field name
00000af: 00                                        ; import kind
00000b0: 04                                        ; import signature index
; import header 9
00000b1: 06                                        ; string length
00000b2: 7374 7269 6e67                           string  ; import module name
00000b8: 07                                        ; string length
00000b9: 7265 706c 6163 65                        replace  ; import field name
00000c0: 00                                        ; import kind
00000c1: 05                                        ; import signature index
; import header 10
00000c2: 06                                        ; string length
00000c3: 7374 7269 6e67                           string  ; import module name
00000c9: 03                                        ; string length
00000ca: 6164 64                                  add  ; import field name
00000cd: 00                                        ; import kind
00000ce: 06                                        ; import signature index
; import header 11
00000cf: 06                                        ; string length
00000d0: 7374 7269 6e67                           string  ; import module name
00000d6: 06                                        ; string length
00000d7: 6c65 6e67 7468                           length  ; import field name
00000dd: 00                                        ; import kind
00000de: 04                                        ; import signature index
; import header 12
00000df: 06                                        ; string length
00000e0: 7374 7269 6e67                           string  ; import module name
00000e6: 07                                        ; string length
00000e7: 696e 6465 784f 66                        indexOf  ; import field name
00000ee: 00                                        ; import kind
00000ef: 06                                        ; import signature index
; import header 13
00000f0: 06                                        ; string length
00000f1: 5265 6745 7870                           RegExp  ; import module name
00000f7: 06                                        ; string length
00000f8: 7265 6765 7870                           regexp  ; import field name
00000fe: 00                                        ; import kind
00000ff: 06                                        ; import signature index
; import header 14
0000100: 06                                        ; string length
0000101: 7374 7269 6e67                           string  ; import module name
0000107: 0c                                        ; string length
0000108: 6672 6f6d 4368 6172 436f 6465            fromCharCode  ; import field name
0000114: 00                                        ; import kind
0000115: 04                                        ; import signature index
; import header 15
0000116: 06                                        ; string length
0000117: 7374 7269 6e67                           string  ; import module name
000011d: 0a                                        ; string length
000011e: 6368 6172 436f 6465 4174                 charCodeAt  ; import field name
0000128: 00                                        ; import kind
0000129: 06                                        ; import signature index
; import header 16
000012a: 06                                        ; string length
000012b: 7374 7269 6e67                           string  ; import module name
0000131: 06                                        ; string length
0000132: 6368 6172 4174                           charAt  ; import field name
0000138: 00                                        ; import kind
0000139: 06                                        ; import signature index
; import header 17
000013a: 06                                        ; string length
000013b: 7374 7269 6e67                           string  ; import module name
0000141: 04                                        ; string length
0000142: 6a6f 696e                                join  ; import field name
0000146: 00                                        ; import kind
0000147: 06                                        ; import signature index
; import header 18
0000148: 05                                        ; string length
0000149: 4172 7261 79                             Array  ; import module name
000014e: 06                                        ; string length
000014f: 6372 6561 7465                           create  ; import field name
0000155: 00                                        ; import kind
0000156: 04                                        ; import signature index
; import header 19
0000157: 05                                        ; string length
0000158: 4172 7261 79                             Array  ; import module name
000015d: 04                                        ; string length
000015e: 7075 7368                                push  ; import field name
0000162: 00                                        ; import kind
0000163: 06                                        ; import signature index
; import header 20
0000164: 05                                        ; string length
0000165: 4172 7261 79                             Array  ; import module name
000016a: 03                                        ; string length
000016b: 6765 74                                  get  ; import field name
000016e: 00                                        ; import kind
000016f: 06                                        ; import signature index
; import header 21
0000170: 05                                        ; string length
0000171: 4172 7261 79                             Array  ; import module name
0000176: 03                                        ; string length
0000177: 7365 74                                  set  ; import field name
000017a: 00                                        ; import kind
000017b: 07                                        ; import signature index
; import header 22
000017c: 05                                        ; string length
000017d: 4172 7261 79                             Array  ; import module name
0000182: 06                                        ; string length
0000183: 6c65 6e67 7468                           length  ; import field name
0000189: 00                                        ; import kind
000018a: 04                                        ; import signature index
; import header 23
000018b: 05                                        ; string length
000018c: 4172 7261 79                             Array  ; import module name
0000191: 04                                        ; string length
0000192: 7075 7368                                push  ; import field name
0000196: 00                                        ; import kind
0000197: 06                                        ; import signature index
; import header 24
0000198: 05                                        ; string length
0000199: 4172 7261 79                             Array  ; import module name
000019e: 03                                        ; string length
000019f: 6765 74                                  get  ; import field name
00001a2: 00                                        ; import kind
00001a3: 06                                        ; import signature index
; import header 25
00001a4: 05                                        ; string length
00001a5: 4172 7261 79                             Array  ; import module name
00001aa: 03                                        ; string length
00001ab: 7365 74                                  set  ; import field name
00001ae: 00                                        ; import kind
00001af: 07                                        ; import signature index
; import header 26
00001b0: 03                                        ; string length
00001b1: 656e 76                                  env  ; import module name
00001b4: 0a                                        ; string length
00001b5: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00001bf: 02                                        ; import kind
00001c0: 00                                        ; limits: flags
00001c1: 01                                        ; limits: initial
; move data: [40, 1c2) -> [41, 1c3)
000003f: 8203                                      ; FIXUP section size
; section "Function" (3)
00001c3: 03                                        ; section code
00001c4: 00                                        ; section size (guess)
00001c5: 14                                        ; num functions
00001c6: 06                                        ; function 0 signature index
00001c7: 08                                        ; function 1 signature index
00001c8: 04                                        ; function 2 signature index
00001c9: 04                                        ; function 3 signature index
00001ca: 04                                        ; function 4 signature index
00001cb: 04                                        ; function 5 signature index
00001cc: 08                                        ; function 6 signature index
00001cd: 08                                        ; function 7 signature index
00001ce: 08                                        ; function 8 signature index
00001cf: 08                                        ; function 9 signature index
00001d0: 08                                        ; function 10 signature index
00001d1: 08                                        ; function 11 signature index
00001d2: 08                                        ; function 12 signature index
00001d3: 08                                        ; function 13 signature index
00001d4: 08                                        ; function 14 signature index
00001d5: 09                                        ; function 15 signature index
00001d6: 09                                        ; function 16 signature index
00001d7: 09                                        ; function 17 signature index
00001d8: 09                                        ; function 18 signature index
00001d9: 09                                        ; function 19 signature index
00001c4: 15                                        ; FIXUP section size
; section "Global" (6)
00001da: 06                                        ; section code
00001db: 00                                        ; section size (guess)
00001dc: 0c                                        ; num globals
00001dd: 7f                                        ; i32
00001de: 01                                        ; global mutability
00001df: 41                                        ; i32.const
00001e0: 8803                                      ; i32 literal
00001e2: 0b                                        ; end
00001e3: 7c                                        ; f64
00001e4: 01                                        ; global mutability
00001e5: 44                                        ; f64.const
00001e6: 6957 148b 0abf 0540                       ; f64 literal
00001ee: 0b                                        ; end
00001ef: 7c                                        ; f64
00001f0: 01                                        ; global mutability
00001f1: 44                                        ; f64.const
00001f2: 182d 4454 fb21 0940                       ; f64 literal
00001fa: 0b                                        ; end
00001fb: 7f                                        ; i32
00001fc: 01                                        ; global mutability
00001fd: 41                                        ; i32.const
00001fe: ffff ffff 07                              ; i32 literal
0000203: 0b                                        ; end
0000204: 7e                                        ; i64
0000205: 01                                        ; global mutability
0000206: 42                                        ; i64.const
0000207: ffff ffff ffff ffff ff00                  ; i64 literal
0000211: 0b                                        ; end
0000212: 7d                                        ; f32
0000213: 01                                        ; global mutability
0000214: 43                                        ; f32.const
0000215: ffff 7f7f                                 ; f32 literal
0000219: 0b                                        ; end
000021a: 7c                                        ; f64
000021b: 01                                        ; global mutability
000021c: 44                                        ; f64.const
000021d: ffff ffff ffff ef7f                       ; f64 literal
0000225: 0b                                        ; end
0000226: 7f                                        ; i32
0000227: 01                                        ; global mutability
0000228: 41                                        ; i32.const
0000229: 8080 8080 78                              ; i32 literal
000022e: 0b                                        ; end
000022f: 7e                                        ; i64
0000230: 01                                        ; global mutability
0000231: 42                                        ; i64.const
0000232: 8080 8080 8080 8080 807f                  ; i64 literal
000023c: 0b                                        ; end
000023d: 7d                                        ; f32
000023e: 01                                        ; global mutability
000023f: 43                                        ; f32.const
0000240: ffff 7fff                                 ; f32 literal
0000244: 0b                                        ; end
0000245: 7c                                        ; f64
0000246: 01                                        ; global mutability
0000247: 44                                        ; f64.const
0000248: ffff ffff ffff efff                       ; f64 literal
0000250: 0b                                        ; end
0000251: 7f                                        ; i32
0000252: 01                                        ; global mutability
0000253: 41                                        ; i32.const
0000254: 0d                                        ; i32 literal
0000255: 0b                                        ; end
00001db: 7a                                        ; FIXUP section size
; section "Export" (7)
0000256: 07                                        ; section code
0000257: 00                                        ; section size (guess)
0000258: 0e                                        ; num exports
0000259: 14                                        ; string length
000025a: 676c 6f62 616c 2e47 6574 4d65 6d6f 7279  global.GetMemory
000026a: 5369 7a65                                Size  ; export name
000026e: 00                                        ; export kind
000026f: 1b                                        ; export func index
0000270: 14                                        ; string length
0000271: 6261 7365 3634 456e 636f 6465 722e 656e  base64Encoder.en
0000281: 636f 6465                                code  ; export name
0000285: 00                                        ; export kind
0000286: 1c                                        ; export func index
0000287: 14                                        ; string length
0000288: 6261 7365 3634 456e 636f 6465 722e 6465  base64Encoder.de
0000298: 636f 6465                                code  ; export name
000029c: 00                                        ; export kind
000029d: 1d                                        ; export func index
000029e: 10                                        ; string length
000029f: 7574 6638 2e75 7466 385f 656e 636f 6465  utf8.utf8_encode  ; export name
00002af: 00                                        ; export kind
00002b0: 1e                                        ; export func index
00002b1: 10                                        ; string length
00002b2: 7574 6638 2e75 7466 385f 6465 636f 6465  utf8.utf8_decode  ; export name
00002c2: 00                                        ; export kind
00002c3: 1f                                        ; export func index
00002c4: 1a                                        ; string length
00002c5: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002d5: 656d 626c 7954 6974 6c65                 emblyTitle  ; export name
00002df: 00                                        ; export kind
00002e0: 20                                        ; export func index
00002e1: 20                                        ; string length
00002e2: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002f2: 656d 626c 7944 6573 6372 6970 7469 6f6e  emblyDescription  ; export name
0000302: 00                                        ; export kind
0000303: 21                                        ; export func index
0000304: 1c                                        ; string length
0000305: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000315: 656d 626c 7943 6f6d 7061 6e79            emblyCompany  ; export name
0000321: 00                                        ; export kind
0000322: 22                                        ; export func index
0000323: 1c                                        ; string length
0000324: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000334: 656d 626c 7950 726f 6475 6374            emblyProduct  ; export name
0000340: 00                                        ; export kind
0000341: 23                                        ; export func index
0000342: 1e                                        ; string length
0000343: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000353: 656d 626c 7943 6f70 7972 6967 6874       emblyCopyright  ; export name
0000361: 00                                        ; export kind
0000362: 24                                        ; export func index
0000363: 1e                                        ; string length
0000364: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000374: 656d 626c 7954 7261 6465 6d61 726b       emblyTrademark  ; export name
0000382: 00                                        ; export kind
0000383: 25                                        ; export func index
0000384: 11                                        ; string length
0000385: 4173 7365 6d62 6c79 496e 666f 2e47 7569  AssemblyInfo.Gui
0000395: 64                                       d  ; export name
0000396: 00                                        ; export kind
0000397: 26                                        ; export func index
0000398: 1c                                        ; string length
0000399: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00003a9: 656d 626c 7956 6572 7369 6f6e            emblyVersion  ; export name
00003b5: 00                                        ; export kind
00003b6: 27                                        ; export func index
00003b7: 20                                        ; string length
00003b8: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00003c8: 656d 626c 7946 696c 6556 6572 7369 6f6e  emblyFileVersion  ; export name
00003d8: 00                                        ; export kind
00003d9: 28                                        ; export func index
; move data: [258, 3da) -> [259, 3db)
0000257: 8203                                      ; FIXUP section size
; section "Start" (8)
00003db: 08                                        ; section code
00003dc: 00                                        ; section size (guess)
00003dd: 29                                        ; start func index
00003dc: 01                                        ; FIXUP section size
; section "Code" (10)
00003de: 0a                                        ; section code
00003df: 00                                        ; section size (guess)
00003e0: 14                                        ; num functions
; function body 0
00003e1: 00                                        ; func body size (guess)
00003e2: 01                                        ; local decl count
00003e3: 01                                        ; local type count
00003e4: 7f                                        ; i32
00003e5: 23                                        ; global.get
00003e6: 00                                        ; global index
00003e7: 21                                        ; local.set
00003e8: 02                                        ; local index
00003e9: 20                                        ; local.get
00003ea: 02                                        ; local index
00003eb: 20                                        ; local.get
00003ec: 00                                        ; local index
00003ed: 6a                                        ; i32.add
00003ee: 24                                        ; global.set
00003ef: 00                                        ; global index
00003f0: 20                                        ; local.get
00003f1: 02                                        ; local index
00003f2: 20                                        ; local.get
00003f3: 01                                        ; local index
00003f4: 10                                        ; call
00003f5: 07                                        ; function index
00003f6: 20                                        ; local.get
00003f7: 02                                        ; local index
00003f8: 0f                                        ; return
00003f9: 0b                                        ; end
00003e1: 18                                        ; FIXUP func body size
; function body 1
00003fa: 00                                        ; func body size (guess)
00003fb: 00                                        ; local decl count
00003fc: 23                                        ; global.get
00003fd: 00                                        ; global index
00003fe: 0f                                        ; return
00003ff: 0b                                        ; end
00003fa: 05                                        ; FIXUP func body size
; function body 2
0000400: 00                                        ; func body size (guess)
0000401: 01                                        ; local decl count
0000402: 0a                                        ; local type count
0000403: 7f                                        ; i32
0000404: 41                                        ; i32.const
0000405: 7f                                        ; i32 literal
0000406: 10                                        ; call
0000407: 12                                        ; function index
0000408: 21                                        ; local.set
0000409: 01                                        ; local index
000040a: 41                                        ; i32.const
000040b: 00                                        ; i32 literal
000040c: 21                                        ; local.set
000040d: 02                                        ; local index
000040e: 41                                        ; i32.const
000040f: 00                                        ; i32 literal
0000410: 21                                        ; local.set
0000411: 03                                        ; local index
0000412: 41                                        ; i32.const
0000413: 00                                        ; i32 literal
0000414: 21                                        ; local.set
0000415: 04                                        ; local index
0000416: 41                                        ; i32.const
0000417: 00                                        ; i32 literal
0000418: 21                                        ; local.set
0000419: 05                                        ; local index
000041a: 41                                        ; i32.const
000041b: 00                                        ; i32 literal
000041c: 21                                        ; local.set
000041d: 06                                        ; local index
000041e: 41                                        ; i32.const
000041f: 00                                        ; i32 literal
0000420: 21                                        ; local.set
0000421: 07                                        ; local index
0000422: 41                                        ; i32.const
0000423: 00                                        ; i32 literal
0000424: 21                                        ; local.set
0000425: 08                                        ; local index
0000426: 41                                        ; i32.const
0000427: 00                                        ; i32 literal
0000428: 21                                        ; local.set
0000429: 09                                        ; local index
000042a: 20                                        ; local.get
000042b: 00                                        ; local index
000042c: 10                                        ; call
000042d: 1e                                        ; function index
000042e: 21                                        ; local.set
000042f: 00                                        ; local index
0000430: 20                                        ; local.get
0000431: 00                                        ; local index
0000432: 10                                        ; call
0000433: 0b                                        ; function index
0000434: 21                                        ; local.set
0000435: 0a                                        ; local index
0000436: 02                                        ; block
0000437: 40                                        ; void
0000438: 03                                        ; loop
0000439: 40                                        ; void
000043a: 20                                        ; local.get
000043b: 09                                        ; local index
000043c: 20                                        ; local.get
000043d: 0a                                        ; local index
000043e: 48                                        ; i32.lt_s
000043f: 45                                        ; i32.eqz
0000440: 0d                                        ; br_if
0000441: 01                                        ; break depth
0000442: 20                                        ; local.get
0000443: 00                                        ; local index
0000444: 20                                        ; local.get
0000445: 09                                        ; local index
0000446: 10                                        ; call
0000447: 0f                                        ; function index
0000448: 21                                        ; local.set
0000449: 02                                        ; local index
000044a: 20                                        ; local.get
000044b: 09                                        ; local index
000044c: 41                                        ; i32.const
000044d: 01                                        ; i32 literal
000044e: 6a                                        ; i32.add
000044f: 21                                        ; local.set
0000450: 09                                        ; local index
0000451: 20                                        ; local.get
0000452: 00                                        ; local index
0000453: 20                                        ; local.get
0000454: 09                                        ; local index
0000455: 10                                        ; call
0000456: 0f                                        ; function index
0000457: 21                                        ; local.set
0000458: 03                                        ; local index
0000459: 20                                        ; local.get
000045a: 09                                        ; local index
000045b: 41                                        ; i32.const
000045c: 01                                        ; i32 literal
000045d: 6a                                        ; i32.add
000045e: 21                                        ; local.set
000045f: 09                                        ; local index
0000460: 20                                        ; local.get
0000461: 00                                        ; local index
0000462: 20                                        ; local.get
0000463: 09                                        ; local index
0000464: 10                                        ; call
0000465: 0f                                        ; function index
0000466: 21                                        ; local.set
0000467: 04                                        ; local index
0000468: 20                                        ; local.get
0000469: 09                                        ; local index
000046a: 41                                        ; i32.const
000046b: 01                                        ; i32 literal
000046c: 6a                                        ; i32.add
000046d: 21                                        ; local.set
000046e: 09                                        ; local index
000046f: 20                                        ; local.get
0000470: 02                                        ; local index
0000471: 41                                        ; i32.const
0000472: 02                                        ; i32 literal
0000473: 75                                        ; i32.shr_s
0000474: 21                                        ; local.set
0000475: 05                                        ; local index
0000476: 20                                        ; local.get
0000477: 02                                        ; local index
0000478: 41                                        ; i32.const
0000479: 03                                        ; i32 literal
000047a: 71                                        ; i32.and
000047b: 41                                        ; i32.const
000047c: 04                                        ; i32 literal
000047d: 74                                        ; i32.shl
000047e: 20                                        ; local.get
000047f: 03                                        ; local index
0000480: 41                                        ; i32.const
0000481: 04                                        ; i32 literal
0000482: 75                                        ; i32.shr_s
0000483: 72                                        ; i32.or
0000484: 21                                        ; local.set
0000485: 06                                        ; local index
0000486: 20                                        ; local.get
0000487: 03                                        ; local index
0000488: 41                                        ; i32.const
0000489: 0f                                        ; i32 literal
000048a: 71                                        ; i32.and
000048b: 41                                        ; i32.const
000048c: 02                                        ; i32 literal
000048d: 74                                        ; i32.shl
000048e: 20                                        ; local.get
000048f: 04                                        ; local index
0000490: 41                                        ; i32.const
0000491: 06                                        ; i32 literal
0000492: 75                                        ; i32.shr_s
0000493: 72                                        ; i32.or
0000494: 21                                        ; local.set
0000495: 07                                        ; local index
0000496: 20                                        ; local.get
0000497: 04                                        ; local index
0000498: 41                                        ; i32.const
0000499: 3f                                        ; i32 literal
000049a: 71                                        ; i32.and
000049b: 21                                        ; local.set
000049c: 08                                        ; local index
000049d: 20                                        ; local.get
000049e: 03                                        ; local index
000049f: 10                                        ; call
00004a0: 08                                        ; function index
00004a1: 04                                        ; if
00004a2: 40                                        ; void
00004a3: 41                                        ; i32.const
00004a4: c000                                      ; i32 literal
00004a6: 21                                        ; local.set
00004a7: 08                                        ; local index
00004a8: 20                                        ; local.get
00004a9: 08                                        ; local index
00004aa: 21                                        ; local.set
00004ab: 07                                        ; local index
00004ac: 0b                                        ; end
00004ad: 20                                        ; local.get
00004ae: 01                                        ; local index
00004af: 23                                        ; global.get
00004b0: 0b                                        ; global index
00004b1: 20                                        ; local.get
00004b2: 05                                        ; local index
00004b3: 10                                        ; call
00004b4: 10                                        ; function index
00004b5: 10                                        ; call
00004b6: 13                                        ; function index
00004b7: 1a                                        ; drop
00004b8: 20                                        ; local.get
00004b9: 01                                        ; local index
00004ba: 23                                        ; global.get
00004bb: 0b                                        ; global index
00004bc: 20                                        ; local.get
00004bd: 06                                        ; local index
00004be: 10                                        ; call
00004bf: 10                                        ; function index
00004c0: 10                                        ; call
00004c1: 13                                        ; function index
00004c2: 1a                                        ; drop
00004c3: 20                                        ; local.get
00004c4: 01                                        ; local index
00004c5: 23                                        ; global.get
00004c6: 0b                                        ; global index
00004c7: 20                                        ; local.get
00004c8: 07                                        ; local index
00004c9: 10                                        ; call
00004ca: 10                                        ; function index
00004cb: 10                                        ; call
00004cc: 13                                        ; function index
00004cd: 1a                                        ; drop
00004ce: 20                                        ; local.get
00004cf: 01                                        ; local index
00004d0: 23                                        ; global.get
00004d1: 0b                                        ; global index
00004d2: 20                                        ; local.get
00004d3: 08                                        ; local index
00004d4: 10                                        ; call
00004d5: 10                                        ; function index
00004d6: 10                                        ; call
00004d7: 13                                        ; function index
00004d8: 1a                                        ; drop
00004d9: 0c                                        ; br
00004da: 00                                        ; break depth
00004db: 0b                                        ; end
00004dc: 0b                                        ; end
00004dd: 20                                        ; local.get
00004de: 01                                        ; local index
00004df: 41                                        ; i32.const
00004e0: d000                                      ; i32 literal
00004e2: 10                                        ; call
00004e3: 11                                        ; function index
00004e4: 0f                                        ; return
00004e5: 0b                                        ; end
; move data: [401, 4e6) -> [402, 4e7)
0000400: e501                                      ; FIXUP func body size
; function body 3
00004e7: 00                                        ; func body size (guess)
00004e8: 01                                        ; local decl count
00004e9: 0a                                        ; local type count
00004ea: 7f                                        ; i32
00004eb: 41                                        ; i32.const
00004ec: d800                                      ; i32 literal
00004ee: 21                                        ; local.set
00004ef: 01                                        ; local index
00004f0: 41                                        ; i32.const
00004f1: 00                                        ; i32 literal
00004f2: 21                                        ; local.set
00004f3: 02                                        ; local index
00004f4: 41                                        ; i32.const
00004f5: 00                                        ; i32 literal
00004f6: 21                                        ; local.set
00004f7: 03                                        ; local index
00004f8: 41                                        ; i32.const
00004f9: 00                                        ; i32 literal
00004fa: 21                                        ; local.set
00004fb: 04                                        ; local index
00004fc: 41                                        ; i32.const
00004fd: 00                                        ; i32 literal
00004fe: 21                                        ; local.set
00004ff: 05                                        ; local index
0000500: 41                                        ; i32.const
0000501: 00                                        ; i32 literal
0000502: 21                                        ; local.set
0000503: 06                                        ; local index
0000504: 41                                        ; i32.const
0000505: 00                                        ; i32 literal
0000506: 21                                        ; local.set
0000507: 07                                        ; local index
0000508: 41                                        ; i32.const
0000509: 00                                        ; i32 literal
000050a: 21                                        ; local.set
000050b: 08                                        ; local index
000050c: 41                                        ; i32.const
000050d: 00                                        ; i32 literal
000050e: 21                                        ; local.set
000050f: 09                                        ; local index
0000510: 41                                        ; i32.const
0000511: e000                                      ; i32 literal
0000513: 41                                        ; i32.const
0000514: f000                                      ; i32 literal
0000516: 10                                        ; call
0000517: 0d                                        ; function index
0000518: 21                                        ; local.set
0000519: 0a                                        ; local index
000051a: 20                                        ; local.get
000051b: 00                                        ; local index
000051c: 20                                        ; local.get
000051d: 0a                                        ; local index
000051e: 41                                        ; i32.const
000051f: f800                                      ; i32 literal
0000521: 10                                        ; call
0000522: 09                                        ; function index
0000523: 21                                        ; local.set
0000524: 00                                        ; local index
0000525: 02                                        ; block
0000526: 40                                        ; void
0000527: 03                                        ; loop
0000528: 40                                        ; void
0000529: 20                                        ; local.get
000052a: 09                                        ; local index
000052b: 20                                        ; local.get
000052c: 00                                        ; local index
000052d: 10                                        ; call
000052e: 0b                                        ; function index
000052f: 48                                        ; i32.lt_s
0000530: 45                                        ; i32.eqz
0000531: 0d                                        ; br_if
0000532: 01                                        ; break depth
0000533: 23                                        ; global.get
0000534: 0b                                        ; global index
0000535: 20                                        ; local.get
0000536: 00                                        ; local index
0000537: 20                                        ; local.get
0000538: 09                                        ; local index
0000539: 10                                        ; call
000053a: 10                                        ; function index
000053b: 10                                        ; call
000053c: 0c                                        ; function index
000053d: 21                                        ; local.set
000053e: 05                                        ; local index
000053f: 20                                        ; local.get
0000540: 09                                        ; local index
0000541: 41                                        ; i32.const
0000542: 01                                        ; i32 literal
0000543: 6a                                        ; i32.add
0000544: 21                                        ; local.set
0000545: 09                                        ; local index
0000546: 23                                        ; global.get
0000547: 0b                                        ; global index
0000548: 20                                        ; local.get
0000549: 00                                        ; local index
000054a: 20                                        ; local.get
000054b: 09                                        ; local index
000054c: 10                                        ; call
000054d: 10                                        ; function index
000054e: 10                                        ; call
000054f: 0c                                        ; function index
0000550: 21                                        ; local.set
0000551: 06                                        ; local index
0000552: 20                                        ; local.get
0000553: 09                                        ; local index
0000554: 41                                        ; i32.const
0000555: 01                                        ; i32 literal
0000556: 6a                                        ; i32.add
0000557: 21                                        ; local.set
0000558: 09                                        ; local index
0000559: 23                                        ; global.get
000055a: 0b                                        ; global index
000055b: 20                                        ; local.get
000055c: 00                                        ; local index
000055d: 20                                        ; local.get
000055e: 09                                        ; local index
000055f: 10                                        ; call
0000560: 10                                        ; function index
0000561: 10                                        ; call
0000562: 0c                                        ; function index
0000563: 21                                        ; local.set
0000564: 07                                        ; local index
0000565: 20                                        ; local.get
0000566: 09                                        ; local index
0000567: 41                                        ; i32.const
0000568: 01                                        ; i32 literal
0000569: 6a                                        ; i32.add
000056a: 21                                        ; local.set
000056b: 09                                        ; local index
000056c: 23                                        ; global.get
000056d: 0b                                        ; global index
000056e: 20                                        ; local.get
000056f: 00                                        ; local index
0000570: 20                                        ; local.get
0000571: 09                                        ; local index
0000572: 10                                        ; call
0000573: 10                                        ; function index
0000574: 10                                        ; call
0000575: 0c                                        ; function index
0000576: 21                                        ; local.set
0000577: 08                                        ; local index
0000578: 20                                        ; local.get
0000579: 09                                        ; local index
000057a: 41                                        ; i32.const
000057b: 01                                        ; i32 literal
000057c: 6a                                        ; i32.add
000057d: 21                                        ; local.set
000057e: 09                                        ; local index
000057f: 20                                        ; local.get
0000580: 05                                        ; local index
0000581: 41                                        ; i32.const
0000582: 02                                        ; i32 literal
0000583: 74                                        ; i32.shl
0000584: 20                                        ; local.get
0000585: 06                                        ; local index
0000586: 41                                        ; i32.const
0000587: 04                                        ; i32 literal
0000588: 75                                        ; i32.shr_s
0000589: 72                                        ; i32.or
000058a: 21                                        ; local.set
000058b: 02                                        ; local index
000058c: 20                                        ; local.get
000058d: 06                                        ; local index
000058e: 41                                        ; i32.const
000058f: 0f                                        ; i32 literal
0000590: 71                                        ; i32.and
0000591: 41                                        ; i32.const
0000592: 04                                        ; i32 literal
0000593: 74                                        ; i32.shl
0000594: 20                                        ; local.get
0000595: 07                                        ; local index
0000596: 41                                        ; i32.const
0000597: 02                                        ; i32 literal
0000598: 75                                        ; i32.shr_s
0000599: 72                                        ; i32.or
000059a: 21                                        ; local.set
000059b: 03                                        ; local index
000059c: 20                                        ; local.get
000059d: 07                                        ; local index
000059e: 41                                        ; i32.const
000059f: 03                                        ; i32 literal
00005a0: 71                                        ; i32.and
00005a1: 41                                        ; i32.const
00005a2: 06                                        ; i32 literal
00005a3: 74                                        ; i32.shl
00005a4: 20                                        ; local.get
00005a5: 08                                        ; local index
00005a6: 72                                        ; i32.or
00005a7: 21                                        ; local.set
00005a8: 04                                        ; local index
00005a9: 20                                        ; local.get
00005aa: 01                                        ; local index
00005ab: 20                                        ; local.get
00005ac: 02                                        ; local index
00005ad: 10                                        ; call
00005ae: 0e                                        ; function index
00005af: 10                                        ; call
00005b0: 0a                                        ; function index
00005b1: 21                                        ; local.set
00005b2: 01                                        ; local index
00005b3: 20                                        ; local.get
00005b4: 07                                        ; local index
00005b5: 41                                        ; i32.const
00005b6: c000                                      ; i32 literal
00005b8: 47                                        ; i32.ne
00005b9: 04                                        ; if
00005ba: 40                                        ; void
00005bb: 20                                        ; local.get
00005bc: 01                                        ; local index
00005bd: 20                                        ; local.get
00005be: 03                                        ; local index
00005bf: 10                                        ; call
00005c0: 0e                                        ; function index
00005c1: 10                                        ; call
00005c2: 0a                                        ; function index
00005c3: 21                                        ; local.set
00005c4: 01                                        ; local index
00005c5: 0b                                        ; end
00005c6: 20                                        ; local.get
00005c7: 08                                        ; local index
00005c8: 41                                        ; i32.const
00005c9: c000                                      ; i32 literal
00005cb: 47                                        ; i32.ne
00005cc: 04                                        ; if
00005cd: 40                                        ; void
00005ce: 20                                        ; local.get
00005cf: 01                                        ; local index
00005d0: 20                                        ; local.get
00005d1: 04                                        ; local index
00005d2: 10                                        ; call
00005d3: 0e                                        ; function index
00005d4: 10                                        ; call
00005d5: 0a                                        ; function index
00005d6: 21                                        ; local.set
00005d7: 01                                        ; local index
00005d8: 0b                                        ; end
00005d9: 0c                                        ; br
00005da: 00                                        ; break depth
00005db: 0b                                        ; end
00005dc: 0b                                        ; end
00005dd: 20                                        ; local.get
00005de: 01                                        ; local index
00005df: 10                                        ; call
00005e0: 1f                                        ; function index
00005e1: 21                                        ; local.set
00005e2: 01                                        ; local index
00005e3: 20                                        ; local.get
00005e4: 01                                        ; local index
00005e5: 0f                                        ; return
00005e6: 0b                                        ; end
; move data: [4e8, 5e7) -> [4e9, 5e8)
00004e7: ff01                                      ; FIXUP func body size
; function body 4
00005e8: 00                                        ; func body size (guess)
00005e9: 01                                        ; local decl count
00005ea: 03                                        ; local type count
00005eb: 7f                                        ; i32
00005ec: 41                                        ; i32.const
00005ed: 7f                                        ; i32 literal
00005ee: 10                                        ; call
00005ef: 12                                        ; function index
00005f0: 21                                        ; local.set
00005f1: 01                                        ; local index
00005f2: 20                                        ; local.get
00005f3: 00                                        ; local index
00005f4: 41                                        ; i32.const
00005f5: 8001                                      ; i32 literal
00005f7: 41                                        ; i32.const
00005f8: 8801                                      ; i32 literal
00005fa: 10                                        ; call
00005fb: 0d                                        ; function index
00005fc: 41                                        ; i32.const
00005fd: 9001                                      ; i32 literal
00005ff: 10                                        ; call
0000600: 09                                        ; function index
0000601: 21                                        ; local.set
0000602: 00                                        ; local index
0000603: 41                                        ; i32.const
0000604: 00                                        ; i32 literal
0000605: 21                                        ; local.set
0000606: 02                                        ; local index
0000607: 02                                        ; block
0000608: 40                                        ; void
0000609: 03                                        ; loop
000060a: 40                                        ; void
000060b: 20                                        ; local.get
000060c: 02                                        ; local index
000060d: 20                                        ; local.get
000060e: 00                                        ; local index
000060f: 10                                        ; call
0000610: 0b                                        ; function index
0000611: 41                                        ; i32.const
0000612: 01                                        ; i32 literal
0000613: 6b                                        ; i32.sub
0000614: 4a                                        ; i32.gt_s
0000615: 0d                                        ; br_if
0000616: 01                                        ; break depth
0000617: 20                                        ; local.get
0000618: 00                                        ; local index
0000619: 20                                        ; local.get
000061a: 02                                        ; local index
000061b: 10                                        ; call
000061c: 0f                                        ; function index
000061d: 21                                        ; local.set
000061e: 03                                        ; local index
000061f: 20                                        ; local.get
0000620: 03                                        ; local index
0000621: 41                                        ; i32.const
0000622: 8001                                      ; i32 literal
0000624: 48                                        ; i32.lt_s
0000625: 04                                        ; if
0000626: 40                                        ; void
0000627: 20                                        ; local.get
0000628: 01                                        ; local index
0000629: 20                                        ; local.get
000062a: 03                                        ; local index
000062b: 10                                        ; call
000062c: 0e                                        ; function index
000062d: 10                                        ; call
000062e: 13                                        ; function index
000062f: 1a                                        ; drop
0000630: 05                                        ; else
0000631: 20                                        ; local.get
0000632: 01                                        ; local index
0000633: 20                                        ; local.get
0000634: 03                                        ; local index
0000635: 41                                        ; i32.const
0000636: 0c                                        ; i32 literal
0000637: 75                                        ; i32.shr_s
0000638: 41                                        ; i32.const
0000639: e001                                      ; i32 literal
000063b: 72                                        ; i32.or
000063c: 10                                        ; call
000063d: 0e                                        ; function index
000063e: 10                                        ; call
000063f: 13                                        ; function index
0000640: 1a                                        ; drop
0000641: 20                                        ; local.get
0000642: 01                                        ; local index
0000643: 20                                        ; local.get
0000644: 03                                        ; local index
0000645: 41                                        ; i32.const
0000646: 06                                        ; i32 literal
0000647: 75                                        ; i32.shr_s
0000648: 41                                        ; i32.const
0000649: 3f                                        ; i32 literal
000064a: 71                                        ; i32.and
000064b: 41                                        ; i32.const
000064c: 8001                                      ; i32 literal
000064e: 72                                        ; i32.or
000064f: 10                                        ; call
0000650: 0e                                        ; function index
0000651: 10                                        ; call
0000652: 13                                        ; function index
0000653: 1a                                        ; drop
0000654: 20                                        ; local.get
0000655: 01                                        ; local index
0000656: 20                                        ; local.get
0000657: 03                                        ; local index
0000658: 41                                        ; i32.const
0000659: 3f                                        ; i32 literal
000065a: 71                                        ; i32.and
000065b: 41                                        ; i32.const
000065c: 8001                                      ; i32 literal
000065e: 72                                        ; i32.or
000065f: 10                                        ; call
0000660: 0e                                        ; function index
0000661: 10                                        ; call
0000662: 13                                        ; function index
0000663: 1a                                        ; drop
0000664: 0b                                        ; end
0000665: 20                                        ; local.get
0000666: 02                                        ; local index
0000667: 41                                        ; i32.const
0000668: 01                                        ; i32 literal
0000669: 6a                                        ; i32.add
000066a: 21                                        ; local.set
000066b: 02                                        ; local index
000066c: 0c                                        ; br
000066d: 00                                        ; break depth
000066e: 0b                                        ; end
000066f: 0b                                        ; end
0000670: 20                                        ; local.get
0000671: 01                                        ; local index
0000672: 41                                        ; i32.const
0000673: 9801                                      ; i32 literal
0000675: 10                                        ; call
0000676: 11                                        ; function index
0000677: 0f                                        ; return
0000678: 0b                                        ; end
; move data: [5e9, 679) -> [5ea, 67a)
00005e8: 9001                                      ; FIXUP func body size
; function body 5
000067a: 00                                        ; func body size (guess)
000067b: 01                                        ; local decl count
000067c: 05                                        ; local type count
000067d: 7f                                        ; i32
000067e: 41                                        ; i32.const
000067f: 7f                                        ; i32 literal
0000680: 10                                        ; call
0000681: 12                                        ; function index
0000682: 21                                        ; local.set
0000683: 01                                        ; local index
0000684: 41                                        ; i32.const
0000685: 00                                        ; i32 literal
0000686: 21                                        ; local.set
0000687: 02                                        ; local index
0000688: 41                                        ; i32.const
0000689: 00                                        ; i32 literal
000068a: 21                                        ; local.set
000068b: 03                                        ; local index
000068c: 41                                        ; i32.const
000068d: 00                                        ; i32 literal
000068e: 21                                        ; local.set
000068f: 04                                        ; local index
0000690: 41                                        ; i32.const
0000691: 00                                        ; i32 literal
0000692: 21                                        ; local.set
0000693: 05                                        ; local index
0000694: 02                                        ; block
0000695: 40                                        ; void
0000696: 03                                        ; loop
0000697: 40                                        ; void
0000698: 20                                        ; local.get
0000699: 02                                        ; local index
000069a: 20                                        ; local.get
000069b: 00                                        ; local index
000069c: 10                                        ; call
000069d: 0b                                        ; function index
000069e: 48                                        ; i32.lt_s
000069f: 45                                        ; i32.eqz
00006a0: 0d                                        ; br_if
00006a1: 01                                        ; break depth
00006a2: 20                                        ; local.get
00006a3: 00                                        ; local index
00006a4: 20                                        ; local.get
00006a5: 02                                        ; local index
00006a6: 10                                        ; call
00006a7: 0f                                        ; function index
00006a8: 21                                        ; local.set
00006a9: 03                                        ; local index
00006aa: 20                                        ; local.get
00006ab: 03                                        ; local index
00006ac: 41                                        ; i32.const
00006ad: 8001                                      ; i32 literal
00006af: 48                                        ; i32.lt_s
00006b0: 04                                        ; if
00006b1: 40                                        ; void
00006b2: 20                                        ; local.get
00006b3: 01                                        ; local index
00006b4: 20                                        ; local.get
00006b5: 03                                        ; local index
00006b6: 10                                        ; call
00006b7: 0e                                        ; function index
00006b8: 10                                        ; call
00006b9: 13                                        ; function index
00006ba: 1a                                        ; drop
00006bb: 20                                        ; local.get
00006bc: 02                                        ; local index
00006bd: 41                                        ; i32.const
00006be: 01                                        ; i32 literal
00006bf: 6a                                        ; i32.add
00006c0: 21                                        ; local.set
00006c1: 02                                        ; local index
00006c2: 05                                        ; else
00006c3: 20                                        ; local.get
00006c4: 00                                        ; local index
00006c5: 20                                        ; local.get
00006c6: 02                                        ; local index
00006c7: 41                                        ; i32.const
00006c8: 01                                        ; i32 literal
00006c9: 6a                                        ; i32.add
00006ca: 10                                        ; call
00006cb: 0f                                        ; function index
00006cc: 21                                        ; local.set
00006cd: 04                                        ; local index
00006ce: 20                                        ; local.get
00006cf: 00                                        ; local index
00006d0: 20                                        ; local.get
00006d1: 02                                        ; local index
00006d2: 41                                        ; i32.const
00006d3: 02                                        ; i32 literal
00006d4: 6a                                        ; i32.add
00006d5: 10                                        ; call
00006d6: 0f                                        ; function index
00006d7: 21                                        ; local.set
00006d8: 05                                        ; local index
00006d9: 20                                        ; local.get
00006da: 01                                        ; local index
00006db: 20                                        ; local.get
00006dc: 03                                        ; local index
00006dd: 41                                        ; i32.const
00006de: 0f                                        ; i32 literal
00006df: 71                                        ; i32.and
00006e0: 41                                        ; i32.const
00006e1: 0c                                        ; i32 literal
00006e2: 74                                        ; i32.shl
00006e3: 20                                        ; local.get
00006e4: 04                                        ; local index
00006e5: 41                                        ; i32.const
00006e6: 3f                                        ; i32 literal
00006e7: 71                                        ; i32.and
00006e8: 41                                        ; i32.const
00006e9: 06                                        ; i32 literal
00006ea: 74                                        ; i32.shl
00006eb: 72                                        ; i32.or
00006ec: 20                                        ; local.get
00006ed: 05                                        ; local index
00006ee: 41                                        ; i32.const
00006ef: 3f                                        ; i32 literal
00006f0: 71                                        ; i32.and
00006f1: 72                                        ; i32.or
00006f2: 10                                        ; call
00006f3: 0e                                        ; function index
00006f4: 10                                        ; call
00006f5: 13                                        ; function index
00006f6: 1a                                        ; drop
00006f7: 20                                        ; local.get
00006f8: 02                                        ; local index
00006f9: 41                                        ; i32.const
00006fa: 03                                        ; i32 literal
00006fb: 6a                                        ; i32.add
00006fc: 21                                        ; local.set
00006fd: 02                                        ; local index
00006fe: 0b                                        ; end
00006ff: 0c                                        ; br
0000700: 00                                        ; break depth
0000701: 0b                                        ; end
0000702: 0b                                        ; end
0000703: 20                                        ; local.get
0000704: 01                                        ; local index
0000705: 41                                        ; i32.const
0000706: a001                                      ; i32 literal
0000708: 10                                        ; call
0000709: 11                                        ; function index
000070a: 0f                                        ; return
000070b: 0b                                        ; end
; move data: [67b, 70c) -> [67c, 70d)
000067a: 9101                                      ; FIXUP func body size
; function body 6
000070d: 00                                        ; func body size (guess)
000070e: 00                                        ; local decl count
000070f: 41                                        ; i32.const
0000710: a801                                      ; i32 literal
0000712: 0f                                        ; return
0000713: 0b                                        ; end
000070d: 06                                        ; FIXUP func body size
; function body 7
0000714: 00                                        ; func body size (guess)
0000715: 00                                        ; local decl count
0000716: 41                                        ; i32.const
0000717: b801                                      ; i32 literal
0000719: 0f                                        ; return
000071a: 0b                                        ; end
0000714: 06                                        ; FIXUP func body size
; function body 8
000071b: 00                                        ; func body size (guess)
000071c: 00                                        ; local decl count
000071d: 41                                        ; i32.const
000071e: f001                                      ; i32 literal
0000720: 0f                                        ; return
0000721: 0b                                        ; end
000071b: 06                                        ; FIXUP func body size
; function body 9
0000722: 00                                        ; func body size (guess)
0000723: 00                                        ; local decl count
0000724: 41                                        ; i32.const
0000725: f801                                      ; i32 literal
0000727: 0f                                        ; return
0000728: 0b                                        ; end
0000722: 06                                        ; FIXUP func body size
; function body 10
0000729: 00                                        ; func body size (guess)
000072a: 00                                        ; local decl count
000072b: 41                                        ; i32.const
000072c: 8002                                      ; i32 literal
000072e: 0f                                        ; return
000072f: 0b                                        ; end
0000729: 06                                        ; FIXUP func body size
; function body 11
0000730: 00                                        ; func body size (guess)
0000731: 00                                        ; local decl count
0000732: 41                                        ; i32.const
0000733: a802                                      ; i32 literal
0000735: 0f                                        ; return
0000736: 0b                                        ; end
0000730: 06                                        ; FIXUP func body size
; function body 12
0000737: 00                                        ; func body size (guess)
0000738: 00                                        ; local decl count
0000739: 41                                        ; i32.const
000073a: c002                                      ; i32 literal
000073c: 0f                                        ; return
000073d: 0b                                        ; end
0000737: 06                                        ; FIXUP func body size
; function body 13
000073e: 00                                        ; func body size (guess)
000073f: 00                                        ; local decl count
0000740: 41                                        ; i32.const
0000741: e802                                      ; i32 literal
0000743: 0f                                        ; return
0000744: 0b                                        ; end
000073e: 06                                        ; FIXUP func body size
; function body 14
0000745: 00                                        ; func body size (guess)
0000746: 00                                        ; local decl count
0000747: 41                                        ; i32.const
0000748: f802                                      ; i32 literal
000074a: 0f                                        ; return
000074b: 0b                                        ; end
0000745: 06                                        ; FIXUP func body size
; function body 15
000074c: 00                                        ; func body size (guess)
000074d: 00                                        ; local decl count
000074e: 10                                        ; call
000074f: 2a                                        ; function index
0000750: 10                                        ; call
0000751: 2b                                        ; function index
0000752: 10                                        ; call
0000753: 2c                                        ; function index
0000754: 10                                        ; call
0000755: 2d                                        ; function index
0000756: 0b                                        ; end
000074c: 0a                                        ; FIXUP func body size
; function body 16
0000757: 00                                        ; func body size (guess)
0000758: 00                                        ; local decl count
0000759: 0b                                        ; end
0000757: 02                                        ; FIXUP func body size
; function body 17
000075a: 00                                        ; func body size (guess)
000075b: 00                                        ; local decl count
000075c: 0b                                        ; end
000075a: 02                                        ; FIXUP func body size
; function body 18
000075d: 00                                        ; func body size (guess)
000075e: 00                                        ; local decl count
000075f: 0b                                        ; end
000075d: 02                                        ; FIXUP func body size
; function body 19
0000760: 00                                        ; func body size (guess)
0000761: 00                                        ; local decl count
0000762: 0b                                        ; end
0000760: 02                                        ; FIXUP func body size
; move data: [3e0, 763) -> [3e1, 764)
00003df: 8307                                      ; FIXUP section size
; section "Data" (11)
0000764: 0b                                        ; section code
0000765: 00                                        ; section size (guess)
0000766: 14                                        ; num data segments
; data segment header 0
0000767: 00                                      
0000768: 41                                        ; i32.const
0000769: 0d                                        ; i32 literal
000076a: 0b                                        ; end
000076b: 42                                        ; data segment size
; data segment data 0
000076c: 4142 4344 4546 4748 494a 4b4c 4d4e 4f50 
000077c: 5152 5354 5556 5758 595a 6162 6364 6566 
000078c: 6768 696a 6b6c 6d6e 6f70 7172 7374 7576 
000079c: 7778 797a 3031 3233 3435 3637 3839 2b2f 
00007ac: 3d00                                      ; data segment data
; data segment header 1
00007ae: 00                                      
00007af: 41                                        ; i32.const
00007b0: d000                                      ; i32 literal
00007b2: 0b                                        ; end
00007b3: 01                                        ; data segment size
; data segment data 1
00007b4: 00                                        ; data segment data
; data segment header 2
00007b5: 00                                      
00007b6: 41                                        ; i32.const
00007b7: d800                                      ; i32 literal
00007b9: 0b                                        ; end
00007ba: 01                                        ; data segment size
; data segment data 2
00007bb: 00                                        ; data segment data
; data segment header 3
00007bc: 00                                      
00007bd: 41                                        ; i32.const
00007be: e000                                      ; i32 literal
00007c0: 0b                                        ; end
00007c1: 10                                        ; data segment size
; data segment data 3
00007c2: 5b5e 412d 5a61 2d7a 302d 392b 2f3d 5d00   ; data segment data
; data segment header 4
00007d2: 00                                      
00007d3: 41                                        ; i32.const
00007d4: f000                                      ; i32 literal
00007d6: 0b                                        ; end
00007d7: 02                                        ; data segment size
; data segment data 4
00007d8: 6700                                      ; data segment data
; data segment header 5
00007da: 00                                      
00007db: 41                                        ; i32.const
00007dc: f800                                      ; i32 literal
00007de: 0b                                        ; end
00007df: 01                                        ; data segment size
; data segment data 5
00007e0: 00                                        ; data segment data
; data segment header 6
00007e1: 00                                      
00007e2: 41                                        ; i32.const
00007e3: 8001                                      ; i32 literal
00007e5: 0b                                        ; end
00007e6: 03                                        ; data segment size
; data segment data 6
00007e7: 726e 00                                   ; data segment data
; data segment header 7
00007ea: 00                                      
00007eb: 41                                        ; i32.const
00007ec: 8801                                      ; i32 literal
00007ee: 0b                                        ; end
00007ef: 02                                        ; data segment size
; data segment data 7
00007f0: 6700                                      ; data segment data
; data segment header 8
00007f2: 00                                      
00007f3: 41                                        ; i32.const
00007f4: 9001                                      ; i32 literal
00007f6: 0b                                        ; end
00007f7: 02                                        ; data segment size
; data segment data 8
00007f8: 6e00                                      ; data segment data
; data segment header 9
00007fa: 00                                      
00007fb: 41                                        ; i32.const
00007fc: 9801                                      ; i32 literal
00007fe: 0b                                        ; end
00007ff: 01                                        ; data segment size
; data segment data 9
0000800: 00                                        ; data segment data
; data segment header 10
0000801: 00                                      
0000802: 41                                        ; i32.const
0000803: a001                                      ; i32 literal
0000805: 0b                                        ; end
0000806: 01                                        ; data segment size
; data segment data 10
0000807: 00                                        ; data segment data
; data segment header 11
0000808: 00                                      
0000809: 41                                        ; i32.const
000080a: a801                                      ; i32 literal
000080c: 0b                                        ; end
000080d: 0f                                        ; data segment size
; data segment data 11
000080e: 6261 7365 3634 2045 6e63 6f64 6572 00     ; data segment data
; data segment header 12
000081d: 00                                      
000081e: 41                                        ; i32.const
000081f: b801                                      ; i32 literal
0000821: 0b                                        ; end
0000822: 36                                        ; data segment size
; data segment data 12
0000823: 6261 7365 3634 2045 6e63 6f64 6572 2077 
0000833: 7269 7474 656e 2069 6e20 5669 7375 616c 
0000843: 4261 7369 632e 4e45 5420 5765 6241 7373 
0000853: 656d 626c 7900                            ; data segment data
; data segment header 13
0000859: 00                                      
000085a: 41                                        ; i32.const
000085b: f001                                      ; i32 literal
000085d: 0b                                        ; end
000085e: 04                                        ; data segment size
; data segment data 13
000085f: 4d49 5400                                 ; data segment data
; data segment header 14
0000863: 00                                      
0000864: 41                                        ; i32.const
0000865: f801                                      ; i32 literal
0000867: 0b                                        ; end
0000868: 07                                        ; data segment size
; data segment data 14
0000869: 6261 7365 3634 00                         ; data segment data
; data segment header 15
0000870: 00                                      
0000871: 41                                        ; i32.const
0000872: 8002                                      ; i32 literal
0000874: 0b                                        ; end
0000875: 23                                        ; data segment size
; data segment data 15
0000876: 436f 7079 7269 6768 7420 2863 2920 4940 
0000886: 7869 6567 7569 6761 6e67 2e6d 6520 3230 
0000896: 3139 00                                   ; data segment data
; data segment header 16
0000899: 00                                      
000089a: 41                                        ; i32.const
000089b: a802                                      ; i32 literal
000089d: 0b                                        ; end
000089e: 14                                        ; data segment size
; data segment data 16
000089f: 5669 7375 616c 4261 7369 632e 7761 736d 
00008af: 2e6a 7300                                 ; data segment data
; data segment header 17
00008b3: 00                                      
00008b4: 41                                        ; i32.const
00008b5: c002                                      ; i32 literal
00008b7: 0b                                        ; end
00008b8: 25                                        ; data segment size
; data segment data 17
00008b9: 6539 6261 3632 3939 2d31 3033 322d 3432 
00008c9: 6162 2d61 3736 302d 3235 6632 3436 3530 
00008d9: 3663 3562 00                              ; data segment data
; data segment header 18
00008de: 00                                      
00008df: 41                                        ; i32.const
00008e0: e802                                      ; i32 literal
00008e2: 0b                                        ; end
00008e3: 0d                                        ; data segment size
; data segment data 18
00008e4: 322e 302e 3334 342e 3434 3434 00          ; data segment data
; data segment header 19
00008f1: 00                                      
00008f2: 41                                        ; i32.const
00008f3: f802                                      ; i32 literal
00008f5: 0b                                        ; end
00008f6: 0b                                        ; data segment size
; data segment data 19
00008f7: 312e 3132 2e30 2e32 3335 00               ; data segment data
; move data: [766, 902) -> [767, 903)
0000765: 9c03                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0134 0a60 027c 7c01 
0000010: 7c60 017c 017c 6000 017c 6002 7f7f 0060 
0000020: 017f 017f 6003 7f7f 7f01 7f60 027f 7f01 
0000030: 7f60 037f 7f7f 0060 0001 7f60 0000 0282 
0000040: 031b 044d 6174 6803 706f 7700 0004 4d61 
0000050: 7468 0473 7172 7400 0104 4d61 7468 0365 
0000060: 7870 0001 044d 6174 6803 636f 7300 0104 
0000070: 4d61 7468 0672 616e 646f 6d00 0204 4d61 
0000080: 7468 0463 6569 6c00 0104 4d61 7468 0566 
0000090: 6c6f 6f72 0001 0247 4309 6164 644f 626a 
00000a0: 6563 7400 0304 4d61 7468 0569 734e 614e 
00000b0: 0004 0673 7472 696e 6707 7265 706c 6163 
00000c0: 6500 0506 7374 7269 6e67 0361 6464 0006 
00000d0: 0673 7472 696e 6706 6c65 6e67 7468 0004 
00000e0: 0673 7472 696e 6707 696e 6465 784f 6600 
00000f0: 0606 5265 6745 7870 0672 6567 6578 7000 
0000100: 0606 7374 7269 6e67 0c66 726f 6d43 6861 
0000110: 7243 6f64 6500 0406 7374 7269 6e67 0a63 
0000120: 6861 7243 6f64 6541 7400 0606 7374 7269 
0000130: 6e67 0663 6861 7241 7400 0606 7374 7269 
0000140: 6e67 046a 6f69 6e00 0605 4172 7261 7906 
0000150: 6372 6561 7465 0004 0541 7272 6179 0470 
0000160: 7573 6800 0605 4172 7261 7903 6765 7400 
0000170: 0605 4172 7261 7903 7365 7400 0705 4172 
0000180: 7261 7906 6c65 6e67 7468 0004 0541 7272 
0000190: 6179 0470 7573 6800 0605 4172 7261 7903 
00001a0: 6765 7400 0605 4172 7261 7903 7365 7400 
00001b0: 0703 656e 760a 6279 7465 6368 756e 6b73 
00001c0: 0200 0103 1514 0608 0404 0404 0808 0808 
00001d0: 0808 0808 0809 0909 0909 067a 0c7f 0141 
00001e0: 8803 0b7c 0144 6957 148b 0abf 0540 0b7c 
00001f0: 0144 182d 4454 fb21 0940 0b7f 0141 ffff 
0000200: ffff 070b 7e01 42ff ffff ffff ffff ffff 
0000210: 000b 7d01 43ff ff7f 7f0b 7c01 44ff ffff 
0000220: ffff ffef 7f0b 7f01 4180 8080 8078 0b7e 
0000230: 0142 8080 8080 8080 8080 807f 0b7d 0143 
0000240: ffff 7fff 0b7c 0144 ffff ffff ffff efff 
0000250: 0b7f 0141 0d0b 0782 030e 1467 6c6f 6261 
0000260: 6c2e 4765 744d 656d 6f72 7953 697a 6500 
0000270: 1b14 6261 7365 3634 456e 636f 6465 722e 
0000280: 656e 636f 6465 001c 1462 6173 6536 3445 
0000290: 6e63 6f64 6572 2e64 6563 6f64 6500 1d10 
00002a0: 7574 6638 2e75 7466 385f 656e 636f 6465 
00002b0: 001e 1075 7466 382e 7574 6638 5f64 6563 
00002c0: 6f64 6500 1f1a 4173 7365 6d62 6c79 496e 
00002d0: 666f 2e41 7373 656d 626c 7954 6974 6c65 
00002e0: 0020 2041 7373 656d 626c 7949 6e66 6f2e 
00002f0: 4173 7365 6d62 6c79 4465 7363 7269 7074 
0000300: 696f 6e00 211c 4173 7365 6d62 6c79 496e 
0000310: 666f 2e41 7373 656d 626c 7943 6f6d 7061 
0000320: 6e79 0022 1c41 7373 656d 626c 7949 6e66 
0000330: 6f2e 4173 7365 6d62 6c79 5072 6f64 7563 
0000340: 7400 231e 4173 7365 6d62 6c79 496e 666f 
0000350: 2e41 7373 656d 626c 7943 6f70 7972 6967 
0000360: 6874 0024 1e41 7373 656d 626c 7949 6e66 
0000370: 6f2e 4173 7365 6d62 6c79 5472 6164 656d 
0000380: 6172 6b00 2511 4173 7365 6d62 6c79 496e 
0000390: 666f 2e47 7569 6400 261c 4173 7365 6d62 
00003a0: 6c79 496e 666f 2e41 7373 656d 626c 7956 
00003b0: 6572 7369 6f6e 0027 2041 7373 656d 626c 
00003c0: 7949 6e66 6f2e 4173 7365 6d62 6c79 4669 
00003d0: 6c65 5665 7273 696f 6e00 2808 0129 0a83 
00003e0: 0714 1801 017f 2300 2102 2002 2000 6a24 
00003f0: 0020 0220 0110 0720 020f 0b05 0023 000f 
0000400: 0be5 0101 0a7f 417f 1012 2101 4100 2102 
0000410: 4100 2103 4100 2104 4100 2105 4100 2106 
0000420: 4100 2107 4100 2108 4100 2109 2000 101e 
0000430: 2100 2000 100b 210a 0240 0340 2009 200a 
0000440: 4845 0d01 2000 2009 100f 2102 2009 4101 
0000450: 6a21 0920 0020 0910 0f21 0320 0941 016a 
0000460: 2109 2000 2009 100f 2104 2009 4101 6a21 
0000470: 0920 0241 0275 2105 2002 4103 7141 0474 
0000480: 2003 4104 7572 2106 2003 410f 7141 0274 
0000490: 2004 4106 7572 2107 2004 413f 7121 0820 
00004a0: 0310 0804 4041 c000 2108 2008 2107 0b20 
00004b0: 0123 0b20 0510 1010 131a 2001 230b 2006 
00004c0: 1010 1013 1a20 0123 0b20 0710 1010 131a 
00004d0: 2001 230b 2008 1010 1013 1a0c 000b 0b20 
00004e0: 0141 d000 1011 0f0b ff01 010a 7f41 d800 
00004f0: 2101 4100 2102 4100 2103 4100 2104 4100 
0000500: 2105 4100 2106 4100 2107 4100 2108 4100 
0000510: 2109 41e0 0041 f000 100d 210a 2000 200a 
0000520: 41f8 0010 0921 0002 4003 4020 0920 0010 
0000530: 0b48 450d 0123 0b20 0020 0910 1010 0c21 
0000540: 0520 0941 016a 2109 230b 2000 2009 1010 
0000550: 100c 2106 2009 4101 6a21 0923 0b20 0020 
0000560: 0910 1010 0c21 0720 0941 016a 2109 230b 
0000570: 2000 2009 1010 100c 2108 2009 4101 6a21 
0000580: 0920 0541 0274 2006 4104 7572 2102 2006 
0000590: 410f 7141 0474 2007 4102 7572 2103 2007 
00005a0: 4103 7141 0674 2008 7221 0420 0120 0210 
00005b0: 0e10 0a21 0120 0741 c000 4704 4020 0120 
00005c0: 0310 0e10 0a21 010b 2008 41c0 0047 0440 
00005d0: 2001 2004 100e 100a 2101 0b0c 000b 0b20 
00005e0: 0110 1f21 0120 010f 0b90 0101 037f 417f 
00005f0: 1012 2101 2000 4180 0141 8801 100d 4190 
0000600: 0110 0921 0041 0021 0202 4003 4020 0220 
0000610: 0010 0b41 016b 4a0d 0120 0020 0210 0f21 
0000620: 0320 0341 8001 4804 4020 0120 0310 0e10 
0000630: 131a 0520 0120 0341 0c75 41e0 0172 100e 
0000640: 1013 1a20 0120 0341 0675 413f 7141 8001 
0000650: 7210 0e10 131a 2001 2003 413f 7141 8001 
0000660: 7210 0e10 131a 0b20 0241 016a 2102 0c00 
0000670: 0b0b 2001 4198 0110 110f 0b91 0101 057f 
0000680: 417f 1012 2101 4100 2102 4100 2103 4100 
0000690: 2104 4100 2105 0240 0340 2002 2000 100b 
00006a0: 4845 0d01 2000 2002 100f 2103 2003 4180 
00006b0: 0148 0440 2001 2003 100e 1013 1a20 0241 
00006c0: 016a 2102 0520 0020 0241 016a 100f 2104 
00006d0: 2000 2002 4102 6a10 0f21 0520 0120 0341 
00006e0: 0f71 410c 7420 0441 3f71 4106 7472 2005 
00006f0: 413f 7172 100e 1013 1a20 0241 036a 2102 
0000700: 0b0c 000b 0b20 0141 a001 1011 0f0b 0600 
0000710: 41a8 010f 0b06 0041 b801 0f0b 0600 41f0 
0000720: 010f 0b06 0041 f801 0f0b 0600 4180 020f 
0000730: 0b06 0041 a802 0f0b 0600 41c0 020f 0b06 
0000740: 0041 e802 0f0b 0600 41f8 020f 0b0a 0010 
0000750: 2a10 2b10 2c10 2d0b 0200 0b02 000b 0200 
0000760: 0b02 000b 0b9c 0314 0041 0d0b 4241 4243 
0000770: 4445 4647 4849 4a4b 4c4d 4e4f 5051 5253 
0000780: 5455 5657 5859 5a61 6263 6465 6667 6869 
0000790: 6a6b 6c6d 6e6f 7071 7273 7475 7677 7879 
00007a0: 7a30 3132 3334 3536 3738 392b 2f3d 0000 
00007b0: 41d0 000b 0100 0041 d800 0b01 0000 41e0 
00007c0: 000b 105b 5e41 2d5a 612d 7a30 2d39 2b2f 
00007d0: 3d5d 0000 41f0 000b 0267 0000 41f8 000b 
00007e0: 0100 0041 8001 0b03 726e 0000 4188 010b 
00007f0: 0267 0000 4190 010b 026e 0000 4198 010b 
0000800: 0100 0041 a001 0b01 0000 41a8 010b 0f62 
0000810: 6173 6536 3420 456e 636f 6465 7200 0041 
0000820: b801 0b36 6261 7365 3634 2045 6e63 6f64 
0000830: 6572 2077 7269 7474 656e 2069 6e20 5669 
0000840: 7375 616c 4261 7369 632e 4e45 5420 5765 
0000850: 6241 7373 656d 626c 7900 0041 f001 0b04 
0000860: 4d49 5400 0041 f801 0b07 6261 7365 3634 
0000870: 0000 4180 020b 2343 6f70 7972 6967 6874 
0000880: 2028 6329 2049 4078 6965 6775 6967 616e 
0000890: 672e 6d65 2032 3031 3900 0041 a802 0b14 
00008a0: 5669 7375 616c 4261 7369 632e 7761 736d 
00008b0: 2e6a 7300 0041 c002 0b25 6539 6261 3632 
00008c0: 3939 2d31 3033 322d 3432 6162 2d61 3736 
00008d0: 302d 3235 6632 3436 3530 3663 3562 0000 
00008e0: 41e8 020b 0d32 2e30 2e33 3434 2e34 3434 
00008f0: 3400 0041 f802 0b0b 312e 3132 2e30 2e32 
0000900: 3335 00                                 
